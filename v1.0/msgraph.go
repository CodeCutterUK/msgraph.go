// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"net/url"
	"strconv"
	"time"
)

const (
	defaultBaseURL = "https://graph.microsoft.com/v1.0"
)

// Binary undocumented
type Binary []byte

// Stream undocumented
type Stream []byte

// UUID undocumented
type UUID string

// Paging undocumented
type Paging struct {
	NextLink string          `json:"@odata.nextLink"`
	Value    json.RawMessage `json:"value"`
}

// BaseRequestBuilder
type BaseRequestBuilder struct {
	baseURL       string
	client        *http.Client
	requestObject interface{}
}

// BaseRequest
type BaseRequest struct {
	baseURL       string
	client        *http.Client
	requestObject interface{}
	query         url.Values
}

// URL undocumented
func (r *BaseRequest) URL() string {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.baseURL + query
}

// Client undocumented
func (r *BaseRequest) Client() *http.Client {
	return r.client
}

// Query
func (r *BaseRequest) Query() url.Values {
	return r.query
}

func (r *BaseRequest) Expand(value string) {
	if r.query == nil {
		r.query = url.Values{}
	}
	r.query.Add("$expand", value)
}

func (r *BaseRequest) Select(value string) {
	if r.query == nil {
		r.query = url.Values{}
	}
	r.query.Add("$select", value)
}

func (r *BaseRequest) Top(value int) {
	if r.query == nil {
		r.query = url.Values{}
	}
	r.query.Add("$top", strconv.Itoa(value))
}

func (r *BaseRequest) Filter(value string) {
	if r.query == nil {
		r.query = url.Values{}
	}
	r.query.Add("$filter", value)
}

func (r *BaseRequest) Skip(value int) {
	if r.query == nil {
		r.query = url.Values{}
	}
	r.query.Add("$skip", strconv.Itoa(value))
}

func (r *BaseRequest) OrderBy(value string) {
	if r.query == nil {
		r.query = url.Values{}
	}
	r.query.Add("$orderby", value)
}

// NewRequest returns a new http.Request
func (r *BaseRequest) NewRequest(method string, body io.Reader) (*http.Request, error) {
	return http.NewRequest(method, r.baseURL, body)
}

// NewRequestWithPath returns a new http.Request with path
func (r *BaseRequest) NewRequestWithPath(method, path string, body io.Reader) (*http.Request, error) {
	return http.NewRequest(method, r.baseURL+path, body)
}

// NewJSONRequestWithPath returns a new http.Request with path and JSON payload
func (r *BaseRequest) NewJSONRequestWithPath(method, path string, obj interface{}) (*http.Request, error) {
	buf := &bytes.Buffer{}
	if obj != nil {
		err := json.NewEncoder(buf).Encode(obj)
		if err != nil {
			return nil, err
		}
	}
	req, err := http.NewRequest(method, r.baseURL+path, buf)
	if err != nil {
		return nil, err
	}
	if obj != nil {
		req.Header.Add("Content-Type", "application/json")
	}
	return req, nil
}

// DecodeJSONResponse decodes a http.Response with JSON payload
func (r *BaseRequest) DecodeJSONResponse(res *http.Response, obj interface{}) error {
	switch res.StatusCode {
	case http.StatusOK:
		if obj != nil {
			err := json.NewDecoder(res.Body).Decode(obj)
			if err != nil {
				return err
			}
		}
		return nil
	case http.StatusNoContent:
		return nil
	default:
		b, _ := ioutil.ReadAll(res.Body)
		return fmt.Errorf("%s: %s", res.Status, string(b))
	}
}

// JSONRequestWithPath issues a JSON HTTP Request
func (r *BaseRequest) JSONRequestWithPath(method, path string, reqObj, resObj interface{}) error {
	req, err := r.NewJSONRequestWithPath(method, path, reqObj)
	if err != nil {
		return err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return err
	}
	defer res.Body.Close()
	return r.DecodeJSONResponse(res, resObj)
}

//
type GraphServiceRequestBuilder struct {
	BaseRequestBuilder
}

//
func NewClient(cli *http.Client) *GraphServiceRequestBuilder {
	return &GraphServiceRequestBuilder{
		BaseRequestBuilder: BaseRequestBuilder{baseURL: defaultBaseURL, client: cli},
	}
}

// ActionState undocumented
type ActionState int

const (
	// ActionState_None undocumented
	ActionState_None ActionState = 0
	// ActionState_Pending undocumented
	ActionState_Pending ActionState = 1
	// ActionState_Canceled undocumented
	ActionState_Canceled ActionState = 2
	// ActionState_Active undocumented
	ActionState_Active ActionState = 3
	// ActionState_Done undocumented
	ActionState_Done ActionState = 4
	// ActionState_Failed undocumented
	ActionState_Failed ActionState = 5
	// ActionState_NotSupported undocumented
	ActionState_NotSupported ActionState = 6
)

// ActivityDomain undocumented
type ActivityDomain int

const (
	// ActivityDomain_Unknown undocumented
	ActivityDomain_Unknown ActivityDomain = 0
	// ActivityDomain_Work undocumented
	ActivityDomain_Work ActivityDomain = 1
	// ActivityDomain_Personal undocumented
	ActivityDomain_Personal ActivityDomain = 2
	// ActivityDomain_Unrestricted undocumented
	ActivityDomain_Unrestricted ActivityDomain = 3
)

// AlertFeedback undocumented
type AlertFeedback int

const (
	// AlertFeedback_Unknown undocumented
	AlertFeedback_Unknown AlertFeedback = 0
	// AlertFeedback_TruePositive undocumented
	AlertFeedback_TruePositive AlertFeedback = 1
	// AlertFeedback_FalsePositive undocumented
	AlertFeedback_FalsePositive AlertFeedback = 2
	// AlertFeedback_BenignPositive undocumented
	AlertFeedback_BenignPositive AlertFeedback = 3
	// AlertFeedback_UnknownFutureValue undocumented
	AlertFeedback_UnknownFutureValue AlertFeedback = 127
)

// AlertSeverity undocumented
type AlertSeverity int

const (
	// AlertSeverity_Unknown undocumented
	AlertSeverity_Unknown AlertSeverity = 0
	// AlertSeverity_Informational undocumented
	AlertSeverity_Informational AlertSeverity = 1
	// AlertSeverity_Low undocumented
	AlertSeverity_Low AlertSeverity = 2
	// AlertSeverity_Medium undocumented
	AlertSeverity_Medium AlertSeverity = 3
	// AlertSeverity_High undocumented
	AlertSeverity_High AlertSeverity = 4
	// AlertSeverity_UnknownFutureValue undocumented
	AlertSeverity_UnknownFutureValue AlertSeverity = 127
)

// AlertStatus undocumented
type AlertStatus int

const (
	// AlertStatus_Unknown undocumented
	AlertStatus_Unknown AlertStatus = 0
	// AlertStatus_NewAlert undocumented
	AlertStatus_NewAlert AlertStatus = 1
	// AlertStatus_InProgress undocumented
	AlertStatus_InProgress AlertStatus = 2
	// AlertStatus_Resolved undocumented
	AlertStatus_Resolved AlertStatus = 3
	// AlertStatus_Dismissed undocumented
	AlertStatus_Dismissed AlertStatus = 4
	// AlertStatus_UnknownFutureValue undocumented
	AlertStatus_UnknownFutureValue AlertStatus = 127
)

// AndroidRequiredPasswordType undocumented
type AndroidRequiredPasswordType int

const (
	// AndroidRequiredPasswordType_DeviceDefault undocumented
	AndroidRequiredPasswordType_DeviceDefault AndroidRequiredPasswordType = 0
	// AndroidRequiredPasswordType_Alphabetic undocumented
	AndroidRequiredPasswordType_Alphabetic AndroidRequiredPasswordType = 1
	// AndroidRequiredPasswordType_Alphanumeric undocumented
	AndroidRequiredPasswordType_Alphanumeric AndroidRequiredPasswordType = 2
	// AndroidRequiredPasswordType_AlphanumericWithSymbols undocumented
	AndroidRequiredPasswordType_AlphanumericWithSymbols AndroidRequiredPasswordType = 3
	// AndroidRequiredPasswordType_LowSecurityBiometric undocumented
	AndroidRequiredPasswordType_LowSecurityBiometric AndroidRequiredPasswordType = 4
	// AndroidRequiredPasswordType_Numeric undocumented
	AndroidRequiredPasswordType_Numeric AndroidRequiredPasswordType = 5
	// AndroidRequiredPasswordType_NumericComplex undocumented
	AndroidRequiredPasswordType_NumericComplex AndroidRequiredPasswordType = 6
	// AndroidRequiredPasswordType_Any undocumented
	AndroidRequiredPasswordType_Any AndroidRequiredPasswordType = 7
)

// AndroidWorkProfileCrossProfileDataSharingType undocumented
type AndroidWorkProfileCrossProfileDataSharingType int

const (
	// AndroidWorkProfileCrossProfileDataSharingType_DeviceDefault undocumented
	AndroidWorkProfileCrossProfileDataSharingType_DeviceDefault AndroidWorkProfileCrossProfileDataSharingType = 0
	// AndroidWorkProfileCrossProfileDataSharingType_PreventAny undocumented
	AndroidWorkProfileCrossProfileDataSharingType_PreventAny AndroidWorkProfileCrossProfileDataSharingType = 1
	// AndroidWorkProfileCrossProfileDataSharingType_AllowPersonalToWork undocumented
	AndroidWorkProfileCrossProfileDataSharingType_AllowPersonalToWork AndroidWorkProfileCrossProfileDataSharingType = 2
	// AndroidWorkProfileCrossProfileDataSharingType_NoRestrictions undocumented
	AndroidWorkProfileCrossProfileDataSharingType_NoRestrictions AndroidWorkProfileCrossProfileDataSharingType = 3
)

// AndroidWorkProfileDefaultAppPermissionPolicyType undocumented
type AndroidWorkProfileDefaultAppPermissionPolicyType int

const (
	// AndroidWorkProfileDefaultAppPermissionPolicyType_DeviceDefault undocumented
	AndroidWorkProfileDefaultAppPermissionPolicyType_DeviceDefault AndroidWorkProfileDefaultAppPermissionPolicyType = 0
	// AndroidWorkProfileDefaultAppPermissionPolicyType_Prompt undocumented
	AndroidWorkProfileDefaultAppPermissionPolicyType_Prompt AndroidWorkProfileDefaultAppPermissionPolicyType = 1
	// AndroidWorkProfileDefaultAppPermissionPolicyType_AutoGrant undocumented
	AndroidWorkProfileDefaultAppPermissionPolicyType_AutoGrant AndroidWorkProfileDefaultAppPermissionPolicyType = 2
	// AndroidWorkProfileDefaultAppPermissionPolicyType_AutoDeny undocumented
	AndroidWorkProfileDefaultAppPermissionPolicyType_AutoDeny AndroidWorkProfileDefaultAppPermissionPolicyType = 3
)

// AndroidWorkProfileRequiredPasswordType undocumented
type AndroidWorkProfileRequiredPasswordType int

const (
	// AndroidWorkProfileRequiredPasswordType_DeviceDefault undocumented
	AndroidWorkProfileRequiredPasswordType_DeviceDefault AndroidWorkProfileRequiredPasswordType = 0
	// AndroidWorkProfileRequiredPasswordType_LowSecurityBiometric undocumented
	AndroidWorkProfileRequiredPasswordType_LowSecurityBiometric AndroidWorkProfileRequiredPasswordType = 1
	// AndroidWorkProfileRequiredPasswordType_Required undocumented
	AndroidWorkProfileRequiredPasswordType_Required AndroidWorkProfileRequiredPasswordType = 2
	// AndroidWorkProfileRequiredPasswordType_AtLeastNumeric undocumented
	AndroidWorkProfileRequiredPasswordType_AtLeastNumeric AndroidWorkProfileRequiredPasswordType = 3
	// AndroidWorkProfileRequiredPasswordType_NumericComplex undocumented
	AndroidWorkProfileRequiredPasswordType_NumericComplex AndroidWorkProfileRequiredPasswordType = 4
	// AndroidWorkProfileRequiredPasswordType_AtLeastAlphabetic undocumented
	AndroidWorkProfileRequiredPasswordType_AtLeastAlphabetic AndroidWorkProfileRequiredPasswordType = 5
	// AndroidWorkProfileRequiredPasswordType_AtLeastAlphanumeric undocumented
	AndroidWorkProfileRequiredPasswordType_AtLeastAlphanumeric AndroidWorkProfileRequiredPasswordType = 6
	// AndroidWorkProfileRequiredPasswordType_AlphanumericWithSymbols undocumented
	AndroidWorkProfileRequiredPasswordType_AlphanumericWithSymbols AndroidWorkProfileRequiredPasswordType = 7
)

// AppListType undocumented
type AppListType int

const (
	// AppListType_None undocumented
	AppListType_None AppListType = 0
	// AppListType_AppsInListCompliant undocumented
	AppListType_AppsInListCompliant AppListType = 1
	// AppListType_AppsNotInListCompliant undocumented
	AppListType_AppsNotInListCompliant AppListType = 2
)

// AppLockerApplicationControlType undocumented
type AppLockerApplicationControlType int

const (
	// AppLockerApplicationControlType_NotConfigured undocumented
	AppLockerApplicationControlType_NotConfigured AppLockerApplicationControlType = 0
	// AppLockerApplicationControlType_EnforceComponentsAndStoreApps undocumented
	AppLockerApplicationControlType_EnforceComponentsAndStoreApps AppLockerApplicationControlType = 1
	// AppLockerApplicationControlType_AuditComponentsAndStoreApps undocumented
	AppLockerApplicationControlType_AuditComponentsAndStoreApps AppLockerApplicationControlType = 2
	// AppLockerApplicationControlType_EnforceComponentsStoreAppsAndSmartlocker undocumented
	AppLockerApplicationControlType_EnforceComponentsStoreAppsAndSmartlocker AppLockerApplicationControlType = 3
	// AppLockerApplicationControlType_AuditComponentsStoreAppsAndSmartlocker undocumented
	AppLockerApplicationControlType_AuditComponentsStoreAppsAndSmartlocker AppLockerApplicationControlType = 4
)

// ApplicationGuardBlockClipboardSharingType undocumented
type ApplicationGuardBlockClipboardSharingType int

const (
	// ApplicationGuardBlockClipboardSharingType_NotConfigured undocumented
	ApplicationGuardBlockClipboardSharingType_NotConfigured ApplicationGuardBlockClipboardSharingType = 0
	// ApplicationGuardBlockClipboardSharingType_BlockBoth undocumented
	ApplicationGuardBlockClipboardSharingType_BlockBoth ApplicationGuardBlockClipboardSharingType = 1
	// ApplicationGuardBlockClipboardSharingType_BlockHostToContainer undocumented
	ApplicationGuardBlockClipboardSharingType_BlockHostToContainer ApplicationGuardBlockClipboardSharingType = 2
	// ApplicationGuardBlockClipboardSharingType_BlockContainerToHost undocumented
	ApplicationGuardBlockClipboardSharingType_BlockContainerToHost ApplicationGuardBlockClipboardSharingType = 3
	// ApplicationGuardBlockClipboardSharingType_BlockNone undocumented
	ApplicationGuardBlockClipboardSharingType_BlockNone ApplicationGuardBlockClipboardSharingType = 4
)

// ApplicationGuardBlockFileTransferType undocumented
type ApplicationGuardBlockFileTransferType int

const (
	// ApplicationGuardBlockFileTransferType_NotConfigured undocumented
	ApplicationGuardBlockFileTransferType_NotConfigured ApplicationGuardBlockFileTransferType = 0
	// ApplicationGuardBlockFileTransferType_BlockImageAndTextFile undocumented
	ApplicationGuardBlockFileTransferType_BlockImageAndTextFile ApplicationGuardBlockFileTransferType = 1
	// ApplicationGuardBlockFileTransferType_BlockImageFile undocumented
	ApplicationGuardBlockFileTransferType_BlockImageFile ApplicationGuardBlockFileTransferType = 2
	// ApplicationGuardBlockFileTransferType_BlockNone undocumented
	ApplicationGuardBlockFileTransferType_BlockNone ApplicationGuardBlockFileTransferType = 3
	// ApplicationGuardBlockFileTransferType_BlockTextFile undocumented
	ApplicationGuardBlockFileTransferType_BlockTextFile ApplicationGuardBlockFileTransferType = 4
)

// ApplicationType undocumented
type ApplicationType int

const (
	// ApplicationType_Universal undocumented
	ApplicationType_Universal ApplicationType = 1
	// ApplicationType_Desktop undocumented
	ApplicationType_Desktop ApplicationType = 2
)

// AppliedConditionalAccessPolicyResult undocumented
type AppliedConditionalAccessPolicyResult int

const (
	// AppliedConditionalAccessPolicyResult_Success undocumented
	AppliedConditionalAccessPolicyResult_Success AppliedConditionalAccessPolicyResult = 0
	// AppliedConditionalAccessPolicyResult_Failure undocumented
	AppliedConditionalAccessPolicyResult_Failure AppliedConditionalAccessPolicyResult = 1
	// AppliedConditionalAccessPolicyResult_NotApplied undocumented
	AppliedConditionalAccessPolicyResult_NotApplied AppliedConditionalAccessPolicyResult = 2
	// AppliedConditionalAccessPolicyResult_NotEnabled undocumented
	AppliedConditionalAccessPolicyResult_NotEnabled AppliedConditionalAccessPolicyResult = 3
	// AppliedConditionalAccessPolicyResult_Unknown undocumented
	AppliedConditionalAccessPolicyResult_Unknown AppliedConditionalAccessPolicyResult = 4
	// AppliedConditionalAccessPolicyResult_UnknownFutureValue undocumented
	AppliedConditionalAccessPolicyResult_UnknownFutureValue AppliedConditionalAccessPolicyResult = 5
)

// AttendeeType undocumented
type AttendeeType int

const (
	// AttendeeType_Required undocumented
	AttendeeType_Required AttendeeType = 0
	// AttendeeType_Optional undocumented
	AttendeeType_Optional AttendeeType = 1
	// AttendeeType_Resource undocumented
	AttendeeType_Resource AttendeeType = 2
)

// AutomaticRepliesStatus undocumented
type AutomaticRepliesStatus int

const (
	// AutomaticRepliesStatus_Disabled undocumented
	AutomaticRepliesStatus_Disabled AutomaticRepliesStatus = 0
	// AutomaticRepliesStatus_AlwaysEnabled undocumented
	AutomaticRepliesStatus_AlwaysEnabled AutomaticRepliesStatus = 1
	// AutomaticRepliesStatus_Scheduled undocumented
	AutomaticRepliesStatus_Scheduled AutomaticRepliesStatus = 2
)

// AutomaticUpdateMode undocumented
type AutomaticUpdateMode int

const (
	// AutomaticUpdateMode_UserDefined undocumented
	AutomaticUpdateMode_UserDefined AutomaticUpdateMode = 0
	// AutomaticUpdateMode_NotifyDownload undocumented
	AutomaticUpdateMode_NotifyDownload AutomaticUpdateMode = 1
	// AutomaticUpdateMode_AutoInstallAtMaintenanceTime undocumented
	AutomaticUpdateMode_AutoInstallAtMaintenanceTime AutomaticUpdateMode = 2
	// AutomaticUpdateMode_AutoInstallAndRebootAtMaintenanceTime undocumented
	AutomaticUpdateMode_AutoInstallAndRebootAtMaintenanceTime AutomaticUpdateMode = 3
	// AutomaticUpdateMode_AutoInstallAndRebootAtScheduledTime undocumented
	AutomaticUpdateMode_AutoInstallAndRebootAtScheduledTime AutomaticUpdateMode = 4
	// AutomaticUpdateMode_AutoInstallAndRebootWithoutEndUserControl undocumented
	AutomaticUpdateMode_AutoInstallAndRebootWithoutEndUserControl AutomaticUpdateMode = 5
)

// BitLockerEncryptionMethod undocumented
type BitLockerEncryptionMethod int

const (
	// BitLockerEncryptionMethod_AesCbc128 undocumented
	BitLockerEncryptionMethod_AesCbc128 BitLockerEncryptionMethod = 3
	// BitLockerEncryptionMethod_AesCbc256 undocumented
	BitLockerEncryptionMethod_AesCbc256 BitLockerEncryptionMethod = 4
	// BitLockerEncryptionMethod_XtsAes128 undocumented
	BitLockerEncryptionMethod_XtsAes128 BitLockerEncryptionMethod = 6
	// BitLockerEncryptionMethod_XtsAes256 undocumented
	BitLockerEncryptionMethod_XtsAes256 BitLockerEncryptionMethod = 7
)

// BodyType undocumented
type BodyType int

const (
	// BodyType_Text undocumented
	BodyType_Text BodyType = 0
	// BodyType_Html undocumented
	BodyType_Html BodyType = 1
)

// CalendarColor undocumented
type CalendarColor int

const (
	// CalendarColor_LightBlue undocumented
	CalendarColor_LightBlue CalendarColor = 0
	// CalendarColor_LightGreen undocumented
	CalendarColor_LightGreen CalendarColor = 1
	// CalendarColor_LightOrange undocumented
	CalendarColor_LightOrange CalendarColor = 2
	// CalendarColor_LightGray undocumented
	CalendarColor_LightGray CalendarColor = 3
	// CalendarColor_LightYellow undocumented
	CalendarColor_LightYellow CalendarColor = 4
	// CalendarColor_LightTeal undocumented
	CalendarColor_LightTeal CalendarColor = 5
	// CalendarColor_LightPink undocumented
	CalendarColor_LightPink CalendarColor = 6
	// CalendarColor_LightBrown undocumented
	CalendarColor_LightBrown CalendarColor = 7
	// CalendarColor_LightRed undocumented
	CalendarColor_LightRed CalendarColor = 8
	// CalendarColor_MaxColor undocumented
	CalendarColor_MaxColor CalendarColor = 9
	// CalendarColor_Auto undocumented
	CalendarColor_Auto CalendarColor = -1
)

// CallDirection undocumented
type CallDirection int

const (
	// CallDirection_Incoming undocumented
	CallDirection_Incoming CallDirection = 0
	// CallDirection_Outgoing undocumented
	CallDirection_Outgoing CallDirection = 1
)

// CallState undocumented
type CallState int

const (
	// CallState_Incoming undocumented
	CallState_Incoming CallState = 0
	// CallState_Establishing undocumented
	CallState_Establishing CallState = 1
	// CallState_Established undocumented
	CallState_Established CallState = 3
	// CallState_Hold undocumented
	CallState_Hold CallState = 4
	// CallState_Transferring undocumented
	CallState_Transferring CallState = 5
	// CallState_TransferAccepted undocumented
	CallState_TransferAccepted CallState = 6
	// CallState_Redirecting undocumented
	CallState_Redirecting CallState = 7
	// CallState_Terminating undocumented
	CallState_Terminating CallState = 8
	// CallState_Terminated undocumented
	CallState_Terminated CallState = 9
	// CallState_UnknownFutureValue undocumented
	CallState_UnknownFutureValue CallState = 10
)

// CategoryColor undocumented
type CategoryColor int

const (
	// CategoryColor_Preset0 undocumented
	CategoryColor_Preset0 CategoryColor = 0
	// CategoryColor_Preset1 undocumented
	CategoryColor_Preset1 CategoryColor = 1
	// CategoryColor_Preset2 undocumented
	CategoryColor_Preset2 CategoryColor = 2
	// CategoryColor_Preset3 undocumented
	CategoryColor_Preset3 CategoryColor = 3
	// CategoryColor_Preset4 undocumented
	CategoryColor_Preset4 CategoryColor = 4
	// CategoryColor_Preset5 undocumented
	CategoryColor_Preset5 CategoryColor = 5
	// CategoryColor_Preset6 undocumented
	CategoryColor_Preset6 CategoryColor = 6
	// CategoryColor_Preset7 undocumented
	CategoryColor_Preset7 CategoryColor = 7
	// CategoryColor_Preset8 undocumented
	CategoryColor_Preset8 CategoryColor = 8
	// CategoryColor_Preset9 undocumented
	CategoryColor_Preset9 CategoryColor = 9
	// CategoryColor_Preset10 undocumented
	CategoryColor_Preset10 CategoryColor = 10
	// CategoryColor_Preset11 undocumented
	CategoryColor_Preset11 CategoryColor = 11
	// CategoryColor_Preset12 undocumented
	CategoryColor_Preset12 CategoryColor = 12
	// CategoryColor_Preset13 undocumented
	CategoryColor_Preset13 CategoryColor = 13
	// CategoryColor_Preset14 undocumented
	CategoryColor_Preset14 CategoryColor = 14
	// CategoryColor_Preset15 undocumented
	CategoryColor_Preset15 CategoryColor = 15
	// CategoryColor_Preset16 undocumented
	CategoryColor_Preset16 CategoryColor = 16
	// CategoryColor_Preset17 undocumented
	CategoryColor_Preset17 CategoryColor = 17
	// CategoryColor_Preset18 undocumented
	CategoryColor_Preset18 CategoryColor = 18
	// CategoryColor_Preset19 undocumented
	CategoryColor_Preset19 CategoryColor = 19
	// CategoryColor_Preset20 undocumented
	CategoryColor_Preset20 CategoryColor = 20
	// CategoryColor_Preset21 undocumented
	CategoryColor_Preset21 CategoryColor = 21
	// CategoryColor_Preset22 undocumented
	CategoryColor_Preset22 CategoryColor = 22
	// CategoryColor_Preset23 undocumented
	CategoryColor_Preset23 CategoryColor = 23
	// CategoryColor_Preset24 undocumented
	CategoryColor_Preset24 CategoryColor = 24
	// CategoryColor_None undocumented
	CategoryColor_None CategoryColor = -1
)

// ChangeType undocumented
type ChangeType int

const (
	// ChangeType_Created undocumented
	ChangeType_Created ChangeType = 0
	// ChangeType_Updated undocumented
	ChangeType_Updated ChangeType = 1
	// ChangeType_Deleted undocumented
	ChangeType_Deleted ChangeType = 2
)

// ClonableTeamParts undocumented
type ClonableTeamParts int

const (
	// ClonableTeamParts_Apps undocumented
	ClonableTeamParts_Apps ClonableTeamParts = 1
	// ClonableTeamParts_Tabs undocumented
	ClonableTeamParts_Tabs ClonableTeamParts = 2
	// ClonableTeamParts_Settings undocumented
	ClonableTeamParts_Settings ClonableTeamParts = 4
	// ClonableTeamParts_Channels undocumented
	ClonableTeamParts_Channels ClonableTeamParts = 8
	// ClonableTeamParts_Members undocumented
	ClonableTeamParts_Members ClonableTeamParts = 16
)

// ComplianceState undocumented
type ComplianceState int

const (
	// ComplianceState_Unknown undocumented
	ComplianceState_Unknown ComplianceState = 0
	// ComplianceState_Compliant undocumented
	ComplianceState_Compliant ComplianceState = 1
	// ComplianceState_Noncompliant undocumented
	ComplianceState_Noncompliant ComplianceState = 2
	// ComplianceState_Conflict undocumented
	ComplianceState_Conflict ComplianceState = 3
	// ComplianceState_Error undocumented
	ComplianceState_Error ComplianceState = 4
	// ComplianceState_InGracePeriod undocumented
	ComplianceState_InGracePeriod ComplianceState = 254
	// ComplianceState_ConfigManager undocumented
	ComplianceState_ConfigManager ComplianceState = 255
)

// ComplianceStatus undocumented
type ComplianceStatus int

const (
	// ComplianceStatus_Unknown undocumented
	ComplianceStatus_Unknown ComplianceStatus = 0
	// ComplianceStatus_NotApplicable undocumented
	ComplianceStatus_NotApplicable ComplianceStatus = 1
	// ComplianceStatus_Compliant undocumented
	ComplianceStatus_Compliant ComplianceStatus = 2
	// ComplianceStatus_Remediated undocumented
	ComplianceStatus_Remediated ComplianceStatus = 3
	// ComplianceStatus_NonCompliant undocumented
	ComplianceStatus_NonCompliant ComplianceStatus = 4
	// ComplianceStatus_Error undocumented
	ComplianceStatus_Error ComplianceStatus = 5
	// ComplianceStatus_Conflict undocumented
	ComplianceStatus_Conflict ComplianceStatus = 6
	// ComplianceStatus_NotAssigned undocumented
	ComplianceStatus_NotAssigned ComplianceStatus = 7
)

// ConditionalAccessStatus undocumented
type ConditionalAccessStatus int

const (
	// ConditionalAccessStatus_Success undocumented
	ConditionalAccessStatus_Success ConditionalAccessStatus = 0
	// ConditionalAccessStatus_Failure undocumented
	ConditionalAccessStatus_Failure ConditionalAccessStatus = 1
	// ConditionalAccessStatus_NotApplied undocumented
	ConditionalAccessStatus_NotApplied ConditionalAccessStatus = 2
	// ConditionalAccessStatus_UnknownFutureValue undocumented
	ConditionalAccessStatus_UnknownFutureValue ConditionalAccessStatus = 3
)

// ConnectionDirection undocumented
type ConnectionDirection int

const (
	// ConnectionDirection_Unknown undocumented
	ConnectionDirection_Unknown ConnectionDirection = 0
	// ConnectionDirection_Inbound undocumented
	ConnectionDirection_Inbound ConnectionDirection = 1
	// ConnectionDirection_Outbound undocumented
	ConnectionDirection_Outbound ConnectionDirection = 2
	// ConnectionDirection_UnknownFutureValue undocumented
	ConnectionDirection_UnknownFutureValue ConnectionDirection = 127
)

// ConnectionStatus undocumented
type ConnectionStatus int

const (
	// ConnectionStatus_Unknown undocumented
	ConnectionStatus_Unknown ConnectionStatus = 0
	// ConnectionStatus_Attempted undocumented
	ConnectionStatus_Attempted ConnectionStatus = 1
	// ConnectionStatus_Succeeded undocumented
	ConnectionStatus_Succeeded ConnectionStatus = 2
	// ConnectionStatus_Blocked undocumented
	ConnectionStatus_Blocked ConnectionStatus = 3
	// ConnectionStatus_Failed undocumented
	ConnectionStatus_Failed ConnectionStatus = 4
	// ConnectionStatus_UnknownFutureValue undocumented
	ConnectionStatus_UnknownFutureValue ConnectionStatus = 127
)

// DataPolicyOperationStatus undocumented
type DataPolicyOperationStatus int

const (
	// DataPolicyOperationStatus_NotStarted undocumented
	DataPolicyOperationStatus_NotStarted DataPolicyOperationStatus = 0
	// DataPolicyOperationStatus_Running undocumented
	DataPolicyOperationStatus_Running DataPolicyOperationStatus = 1
	// DataPolicyOperationStatus_Complete undocumented
	DataPolicyOperationStatus_Complete DataPolicyOperationStatus = 2
	// DataPolicyOperationStatus_Failed undocumented
	DataPolicyOperationStatus_Failed DataPolicyOperationStatus = 3
	// DataPolicyOperationStatus_UnknownFutureValue undocumented
	DataPolicyOperationStatus_UnknownFutureValue DataPolicyOperationStatus = 4
)

// DayOfWeek undocumented
type DayOfWeek int

const (
	// DayOfWeek_Sunday undocumented
	DayOfWeek_Sunday DayOfWeek = 0
	// DayOfWeek_Monday undocumented
	DayOfWeek_Monday DayOfWeek = 1
	// DayOfWeek_Tuesday undocumented
	DayOfWeek_Tuesday DayOfWeek = 2
	// DayOfWeek_Wednesday undocumented
	DayOfWeek_Wednesday DayOfWeek = 3
	// DayOfWeek_Thursday undocumented
	DayOfWeek_Thursday DayOfWeek = 4
	// DayOfWeek_Friday undocumented
	DayOfWeek_Friday DayOfWeek = 5
	// DayOfWeek_Saturday undocumented
	DayOfWeek_Saturday DayOfWeek = 6
)

// DefenderCloudBlockLevelType undocumented
type DefenderCloudBlockLevelType int

const (
	// DefenderCloudBlockLevelType_NotConfigured undocumented
	DefenderCloudBlockLevelType_NotConfigured DefenderCloudBlockLevelType = 0
	// DefenderCloudBlockLevelType_High undocumented
	DefenderCloudBlockLevelType_High DefenderCloudBlockLevelType = 1
	// DefenderCloudBlockLevelType_HighPlus undocumented
	DefenderCloudBlockLevelType_HighPlus DefenderCloudBlockLevelType = 2
	// DefenderCloudBlockLevelType_ZeroTolerance undocumented
	DefenderCloudBlockLevelType_ZeroTolerance DefenderCloudBlockLevelType = 3
)

// DefenderMonitorFileActivity undocumented
type DefenderMonitorFileActivity int

const (
	// DefenderMonitorFileActivity_UserDefined undocumented
	DefenderMonitorFileActivity_UserDefined DefenderMonitorFileActivity = 0
	// DefenderMonitorFileActivity_Disable undocumented
	DefenderMonitorFileActivity_Disable DefenderMonitorFileActivity = 1
	// DefenderMonitorFileActivity_MonitorAllFiles undocumented
	DefenderMonitorFileActivity_MonitorAllFiles DefenderMonitorFileActivity = 2
	// DefenderMonitorFileActivity_MonitorIncomingFilesOnly undocumented
	DefenderMonitorFileActivity_MonitorIncomingFilesOnly DefenderMonitorFileActivity = 3
	// DefenderMonitorFileActivity_MonitorOutgoingFilesOnly undocumented
	DefenderMonitorFileActivity_MonitorOutgoingFilesOnly DefenderMonitorFileActivity = 4
)

// DefenderPromptForSampleSubmission undocumented
type DefenderPromptForSampleSubmission int

const (
	// DefenderPromptForSampleSubmission_UserDefined undocumented
	DefenderPromptForSampleSubmission_UserDefined DefenderPromptForSampleSubmission = 0
	// DefenderPromptForSampleSubmission_AlwaysPrompt undocumented
	DefenderPromptForSampleSubmission_AlwaysPrompt DefenderPromptForSampleSubmission = 1
	// DefenderPromptForSampleSubmission_PromptBeforeSendingPersonalData undocumented
	DefenderPromptForSampleSubmission_PromptBeforeSendingPersonalData DefenderPromptForSampleSubmission = 2
	// DefenderPromptForSampleSubmission_NeverSendData undocumented
	DefenderPromptForSampleSubmission_NeverSendData DefenderPromptForSampleSubmission = 3
	// DefenderPromptForSampleSubmission_SendAllDataWithoutPrompting undocumented
	DefenderPromptForSampleSubmission_SendAllDataWithoutPrompting DefenderPromptForSampleSubmission = 4
)

// DefenderScanType undocumented
type DefenderScanType int

const (
	// DefenderScanType_UserDefined undocumented
	DefenderScanType_UserDefined DefenderScanType = 0
	// DefenderScanType_Disabled undocumented
	DefenderScanType_Disabled DefenderScanType = 1
	// DefenderScanType_Quick undocumented
	DefenderScanType_Quick DefenderScanType = 2
	// DefenderScanType_Full undocumented
	DefenderScanType_Full DefenderScanType = 3
)

// DefenderThreatAction undocumented
type DefenderThreatAction int

const (
	// DefenderThreatAction_DeviceDefault undocumented
	DefenderThreatAction_DeviceDefault DefenderThreatAction = 0
	// DefenderThreatAction_Clean undocumented
	DefenderThreatAction_Clean DefenderThreatAction = 1
	// DefenderThreatAction_Quarantine undocumented
	DefenderThreatAction_Quarantine DefenderThreatAction = 2
	// DefenderThreatAction_Remove undocumented
	DefenderThreatAction_Remove DefenderThreatAction = 3
	// DefenderThreatAction_Allow undocumented
	DefenderThreatAction_Allow DefenderThreatAction = 4
	// DefenderThreatAction_UserDefined undocumented
	DefenderThreatAction_UserDefined DefenderThreatAction = 5
	// DefenderThreatAction_Block undocumented
	DefenderThreatAction_Block DefenderThreatAction = 6
)

// DeviceComplianceActionType undocumented
type DeviceComplianceActionType int

const (
	// DeviceComplianceActionType_NoAction undocumented
	DeviceComplianceActionType_NoAction DeviceComplianceActionType = 0
	// DeviceComplianceActionType_Notification undocumented
	DeviceComplianceActionType_Notification DeviceComplianceActionType = 1
	// DeviceComplianceActionType_Block undocumented
	DeviceComplianceActionType_Block DeviceComplianceActionType = 2
	// DeviceComplianceActionType_Retire undocumented
	DeviceComplianceActionType_Retire DeviceComplianceActionType = 3
	// DeviceComplianceActionType_Wipe undocumented
	DeviceComplianceActionType_Wipe DeviceComplianceActionType = 4
	// DeviceComplianceActionType_RemoveResourceAccessProfiles undocumented
	DeviceComplianceActionType_RemoveResourceAccessProfiles DeviceComplianceActionType = 5
	// DeviceComplianceActionType_PushNotification undocumented
	DeviceComplianceActionType_PushNotification DeviceComplianceActionType = 9
)

// DeviceEnrollmentFailureReason undocumented
type DeviceEnrollmentFailureReason int

const (
	// DeviceEnrollmentFailureReason_Unknown undocumented
	DeviceEnrollmentFailureReason_Unknown DeviceEnrollmentFailureReason = 0
	// DeviceEnrollmentFailureReason_Authentication undocumented
	DeviceEnrollmentFailureReason_Authentication DeviceEnrollmentFailureReason = 1
	// DeviceEnrollmentFailureReason_Authorization undocumented
	DeviceEnrollmentFailureReason_Authorization DeviceEnrollmentFailureReason = 2
	// DeviceEnrollmentFailureReason_AccountValidation undocumented
	DeviceEnrollmentFailureReason_AccountValidation DeviceEnrollmentFailureReason = 3
	// DeviceEnrollmentFailureReason_UserValidation undocumented
	DeviceEnrollmentFailureReason_UserValidation DeviceEnrollmentFailureReason = 4
	// DeviceEnrollmentFailureReason_DeviceNotSupported undocumented
	DeviceEnrollmentFailureReason_DeviceNotSupported DeviceEnrollmentFailureReason = 5
	// DeviceEnrollmentFailureReason_InMaintenance undocumented
	DeviceEnrollmentFailureReason_InMaintenance DeviceEnrollmentFailureReason = 6
	// DeviceEnrollmentFailureReason_BadRequest undocumented
	DeviceEnrollmentFailureReason_BadRequest DeviceEnrollmentFailureReason = 7
	// DeviceEnrollmentFailureReason_FeatureNotSupported undocumented
	DeviceEnrollmentFailureReason_FeatureNotSupported DeviceEnrollmentFailureReason = 8
	// DeviceEnrollmentFailureReason_EnrollmentRestrictionsEnforced undocumented
	DeviceEnrollmentFailureReason_EnrollmentRestrictionsEnforced DeviceEnrollmentFailureReason = 9
	// DeviceEnrollmentFailureReason_ClientDisconnected undocumented
	DeviceEnrollmentFailureReason_ClientDisconnected DeviceEnrollmentFailureReason = 10
	// DeviceEnrollmentFailureReason_UserAbandonment undocumented
	DeviceEnrollmentFailureReason_UserAbandonment DeviceEnrollmentFailureReason = 11
)

// DeviceEnrollmentType undocumented
type DeviceEnrollmentType int

const (
	// DeviceEnrollmentType_Unknown undocumented
	DeviceEnrollmentType_Unknown DeviceEnrollmentType = 0
	// DeviceEnrollmentType_UserEnrollment undocumented
	DeviceEnrollmentType_UserEnrollment DeviceEnrollmentType = 1
	// DeviceEnrollmentType_DeviceEnrollmentManager undocumented
	DeviceEnrollmentType_DeviceEnrollmentManager DeviceEnrollmentType = 2
	// DeviceEnrollmentType_AppleBulkWithUser undocumented
	DeviceEnrollmentType_AppleBulkWithUser DeviceEnrollmentType = 3
	// DeviceEnrollmentType_AppleBulkWithoutUser undocumented
	DeviceEnrollmentType_AppleBulkWithoutUser DeviceEnrollmentType = 4
	// DeviceEnrollmentType_WindowsAzureADJoin undocumented
	DeviceEnrollmentType_WindowsAzureADJoin DeviceEnrollmentType = 5
	// DeviceEnrollmentType_WindowsBulkUserless undocumented
	DeviceEnrollmentType_WindowsBulkUserless DeviceEnrollmentType = 6
	// DeviceEnrollmentType_WindowsAutoEnrollment undocumented
	DeviceEnrollmentType_WindowsAutoEnrollment DeviceEnrollmentType = 7
	// DeviceEnrollmentType_WindowsBulkAzureDomainJoin undocumented
	DeviceEnrollmentType_WindowsBulkAzureDomainJoin DeviceEnrollmentType = 8
	// DeviceEnrollmentType_WindowsCoManagement undocumented
	DeviceEnrollmentType_WindowsCoManagement DeviceEnrollmentType = 9
)

// DeviceManagementExchangeAccessState undocumented
type DeviceManagementExchangeAccessState int

const (
	// DeviceManagementExchangeAccessState_None undocumented
	DeviceManagementExchangeAccessState_None DeviceManagementExchangeAccessState = 0
	// DeviceManagementExchangeAccessState_Unknown undocumented
	DeviceManagementExchangeAccessState_Unknown DeviceManagementExchangeAccessState = 1
	// DeviceManagementExchangeAccessState_Allowed undocumented
	DeviceManagementExchangeAccessState_Allowed DeviceManagementExchangeAccessState = 2
	// DeviceManagementExchangeAccessState_Blocked undocumented
	DeviceManagementExchangeAccessState_Blocked DeviceManagementExchangeAccessState = 3
	// DeviceManagementExchangeAccessState_Quarantined undocumented
	DeviceManagementExchangeAccessState_Quarantined DeviceManagementExchangeAccessState = 4
)

// DeviceManagementExchangeAccessStateReason undocumented
type DeviceManagementExchangeAccessStateReason int

const (
	// DeviceManagementExchangeAccessStateReason_None undocumented
	DeviceManagementExchangeAccessStateReason_None DeviceManagementExchangeAccessStateReason = 0
	// DeviceManagementExchangeAccessStateReason_Unknown undocumented
	DeviceManagementExchangeAccessStateReason_Unknown DeviceManagementExchangeAccessStateReason = 1
	// DeviceManagementExchangeAccessStateReason_ExchangeGlobalRule undocumented
	DeviceManagementExchangeAccessStateReason_ExchangeGlobalRule DeviceManagementExchangeAccessStateReason = 2
	// DeviceManagementExchangeAccessStateReason_ExchangeIndividualRule undocumented
	DeviceManagementExchangeAccessStateReason_ExchangeIndividualRule DeviceManagementExchangeAccessStateReason = 3
	// DeviceManagementExchangeAccessStateReason_ExchangeDeviceRule undocumented
	DeviceManagementExchangeAccessStateReason_ExchangeDeviceRule DeviceManagementExchangeAccessStateReason = 4
	// DeviceManagementExchangeAccessStateReason_ExchangeUpgrade undocumented
	DeviceManagementExchangeAccessStateReason_ExchangeUpgrade DeviceManagementExchangeAccessStateReason = 5
	// DeviceManagementExchangeAccessStateReason_ExchangeMailboxPolicy undocumented
	DeviceManagementExchangeAccessStateReason_ExchangeMailboxPolicy DeviceManagementExchangeAccessStateReason = 6
	// DeviceManagementExchangeAccessStateReason_Other undocumented
	DeviceManagementExchangeAccessStateReason_Other DeviceManagementExchangeAccessStateReason = 7
	// DeviceManagementExchangeAccessStateReason_Compliant undocumented
	DeviceManagementExchangeAccessStateReason_Compliant DeviceManagementExchangeAccessStateReason = 8
	// DeviceManagementExchangeAccessStateReason_NotCompliant undocumented
	DeviceManagementExchangeAccessStateReason_NotCompliant DeviceManagementExchangeAccessStateReason = 9
	// DeviceManagementExchangeAccessStateReason_NotEnrolled undocumented
	DeviceManagementExchangeAccessStateReason_NotEnrolled DeviceManagementExchangeAccessStateReason = 10
	// DeviceManagementExchangeAccessStateReason_UnknownLocation undocumented
	DeviceManagementExchangeAccessStateReason_UnknownLocation DeviceManagementExchangeAccessStateReason = 12
	// DeviceManagementExchangeAccessStateReason_MfaRequired undocumented
	DeviceManagementExchangeAccessStateReason_MfaRequired DeviceManagementExchangeAccessStateReason = 13
	// DeviceManagementExchangeAccessStateReason_AzureADBlockDueToAccessPolicy undocumented
	DeviceManagementExchangeAccessStateReason_AzureADBlockDueToAccessPolicy DeviceManagementExchangeAccessStateReason = 14
	// DeviceManagementExchangeAccessStateReason_CompromisedPassword undocumented
	DeviceManagementExchangeAccessStateReason_CompromisedPassword DeviceManagementExchangeAccessStateReason = 15
	// DeviceManagementExchangeAccessStateReason_DeviceNotKnownWithManagedApp undocumented
	DeviceManagementExchangeAccessStateReason_DeviceNotKnownWithManagedApp DeviceManagementExchangeAccessStateReason = 16
)

// DeviceManagementExchangeConnectorStatus undocumented
type DeviceManagementExchangeConnectorStatus int

const (
	// DeviceManagementExchangeConnectorStatus_None undocumented
	DeviceManagementExchangeConnectorStatus_None DeviceManagementExchangeConnectorStatus = 0
	// DeviceManagementExchangeConnectorStatus_ConnectionPending undocumented
	DeviceManagementExchangeConnectorStatus_ConnectionPending DeviceManagementExchangeConnectorStatus = 1
	// DeviceManagementExchangeConnectorStatus_Connected undocumented
	DeviceManagementExchangeConnectorStatus_Connected DeviceManagementExchangeConnectorStatus = 2
	// DeviceManagementExchangeConnectorStatus_Disconnected undocumented
	DeviceManagementExchangeConnectorStatus_Disconnected DeviceManagementExchangeConnectorStatus = 3
)

// DeviceManagementExchangeConnectorSyncType undocumented
type DeviceManagementExchangeConnectorSyncType int

const (
	// DeviceManagementExchangeConnectorSyncType_FullSync undocumented
	DeviceManagementExchangeConnectorSyncType_FullSync DeviceManagementExchangeConnectorSyncType = 0
	// DeviceManagementExchangeConnectorSyncType_DeltaSync undocumented
	DeviceManagementExchangeConnectorSyncType_DeltaSync DeviceManagementExchangeConnectorSyncType = 1
)

// DeviceManagementExchangeConnectorType undocumented
type DeviceManagementExchangeConnectorType int

const (
	// DeviceManagementExchangeConnectorType_OnPremises undocumented
	DeviceManagementExchangeConnectorType_OnPremises DeviceManagementExchangeConnectorType = 0
	// DeviceManagementExchangeConnectorType_Hosted undocumented
	DeviceManagementExchangeConnectorType_Hosted DeviceManagementExchangeConnectorType = 1
	// DeviceManagementExchangeConnectorType_ServiceToService undocumented
	DeviceManagementExchangeConnectorType_ServiceToService DeviceManagementExchangeConnectorType = 2
	// DeviceManagementExchangeConnectorType_Dedicated undocumented
	DeviceManagementExchangeConnectorType_Dedicated DeviceManagementExchangeConnectorType = 3
)

// DeviceManagementPartnerAppType undocumented
type DeviceManagementPartnerAppType int

const (
	// DeviceManagementPartnerAppType_Unknown undocumented
	DeviceManagementPartnerAppType_Unknown DeviceManagementPartnerAppType = 0
	// DeviceManagementPartnerAppType_SingleTenantApp undocumented
	DeviceManagementPartnerAppType_SingleTenantApp DeviceManagementPartnerAppType = 1
	// DeviceManagementPartnerAppType_MultiTenantApp undocumented
	DeviceManagementPartnerAppType_MultiTenantApp DeviceManagementPartnerAppType = 2
)

// DeviceManagementPartnerTenantState undocumented
type DeviceManagementPartnerTenantState int

const (
	// DeviceManagementPartnerTenantState_Unknown undocumented
	DeviceManagementPartnerTenantState_Unknown DeviceManagementPartnerTenantState = 0
	// DeviceManagementPartnerTenantState_Unavailable undocumented
	DeviceManagementPartnerTenantState_Unavailable DeviceManagementPartnerTenantState = 1
	// DeviceManagementPartnerTenantState_Enabled undocumented
	DeviceManagementPartnerTenantState_Enabled DeviceManagementPartnerTenantState = 2
	// DeviceManagementPartnerTenantState_Terminated undocumented
	DeviceManagementPartnerTenantState_Terminated DeviceManagementPartnerTenantState = 3
	// DeviceManagementPartnerTenantState_Rejected undocumented
	DeviceManagementPartnerTenantState_Rejected DeviceManagementPartnerTenantState = 4
	// DeviceManagementPartnerTenantState_Unresponsive undocumented
	DeviceManagementPartnerTenantState_Unresponsive DeviceManagementPartnerTenantState = 5
)

// DeviceManagementSubscriptionState undocumented
type DeviceManagementSubscriptionState int

const (
	// DeviceManagementSubscriptionState_Pending undocumented
	DeviceManagementSubscriptionState_Pending DeviceManagementSubscriptionState = 0
	// DeviceManagementSubscriptionState_Active undocumented
	DeviceManagementSubscriptionState_Active DeviceManagementSubscriptionState = 1
	// DeviceManagementSubscriptionState_Warning undocumented
	DeviceManagementSubscriptionState_Warning DeviceManagementSubscriptionState = 2
	// DeviceManagementSubscriptionState_Disabled undocumented
	DeviceManagementSubscriptionState_Disabled DeviceManagementSubscriptionState = 3
	// DeviceManagementSubscriptionState_Deleted undocumented
	DeviceManagementSubscriptionState_Deleted DeviceManagementSubscriptionState = 4
	// DeviceManagementSubscriptionState_Blocked undocumented
	DeviceManagementSubscriptionState_Blocked DeviceManagementSubscriptionState = 5
	// DeviceManagementSubscriptionState_LockedOut undocumented
	DeviceManagementSubscriptionState_LockedOut DeviceManagementSubscriptionState = 8
)

// DeviceRegistrationState undocumented
type DeviceRegistrationState int

const (
	// DeviceRegistrationState_NotRegistered undocumented
	DeviceRegistrationState_NotRegistered DeviceRegistrationState = 0
	// DeviceRegistrationState_Registered undocumented
	DeviceRegistrationState_Registered DeviceRegistrationState = 2
	// DeviceRegistrationState_Revoked undocumented
	DeviceRegistrationState_Revoked DeviceRegistrationState = 3
	// DeviceRegistrationState_KeyConflict undocumented
	DeviceRegistrationState_KeyConflict DeviceRegistrationState = 4
	// DeviceRegistrationState_ApprovalPending undocumented
	DeviceRegistrationState_ApprovalPending DeviceRegistrationState = 5
	// DeviceRegistrationState_CertificateReset undocumented
	DeviceRegistrationState_CertificateReset DeviceRegistrationState = 6
	// DeviceRegistrationState_NotRegisteredPendingEnrollment undocumented
	DeviceRegistrationState_NotRegisteredPendingEnrollment DeviceRegistrationState = 7
	// DeviceRegistrationState_Unknown undocumented
	DeviceRegistrationState_Unknown DeviceRegistrationState = 8
)

// DeviceThreatProtectionLevel undocumented
type DeviceThreatProtectionLevel int

const (
	// DeviceThreatProtectionLevel_Unavailable undocumented
	DeviceThreatProtectionLevel_Unavailable DeviceThreatProtectionLevel = 0
	// DeviceThreatProtectionLevel_Secured undocumented
	DeviceThreatProtectionLevel_Secured DeviceThreatProtectionLevel = 1
	// DeviceThreatProtectionLevel_Low undocumented
	DeviceThreatProtectionLevel_Low DeviceThreatProtectionLevel = 2
	// DeviceThreatProtectionLevel_Medium undocumented
	DeviceThreatProtectionLevel_Medium DeviceThreatProtectionLevel = 3
	// DeviceThreatProtectionLevel_High undocumented
	DeviceThreatProtectionLevel_High DeviceThreatProtectionLevel = 4
	// DeviceThreatProtectionLevel_NotSet undocumented
	DeviceThreatProtectionLevel_NotSet DeviceThreatProtectionLevel = 10
)

// DiagnosticDataSubmissionMode undocumented
type DiagnosticDataSubmissionMode int

const (
	// DiagnosticDataSubmissionMode_UserDefined undocumented
	DiagnosticDataSubmissionMode_UserDefined DiagnosticDataSubmissionMode = 0
	// DiagnosticDataSubmissionMode_None undocumented
	DiagnosticDataSubmissionMode_None DiagnosticDataSubmissionMode = 1
	// DiagnosticDataSubmissionMode_Basic undocumented
	DiagnosticDataSubmissionMode_Basic DiagnosticDataSubmissionMode = 2
	// DiagnosticDataSubmissionMode_Enhanced undocumented
	DiagnosticDataSubmissionMode_Enhanced DiagnosticDataSubmissionMode = 3
	// DiagnosticDataSubmissionMode_Full undocumented
	DiagnosticDataSubmissionMode_Full DiagnosticDataSubmissionMode = 4
)

// EdgeCookiePolicy undocumented
type EdgeCookiePolicy int

const (
	// EdgeCookiePolicy_UserDefined undocumented
	EdgeCookiePolicy_UserDefined EdgeCookiePolicy = 0
	// EdgeCookiePolicy_Allow undocumented
	EdgeCookiePolicy_Allow EdgeCookiePolicy = 1
	// EdgeCookiePolicy_BlockThirdParty undocumented
	EdgeCookiePolicy_BlockThirdParty EdgeCookiePolicy = 2
	// EdgeCookiePolicy_BlockAll undocumented
	EdgeCookiePolicy_BlockAll EdgeCookiePolicy = 3
)

// EdgeSearchEngineType undocumented
type EdgeSearchEngineType int

const (
	// EdgeSearchEngineType_Default undocumented
	EdgeSearchEngineType_Default EdgeSearchEngineType = 0
	// EdgeSearchEngineType_Bing undocumented
	EdgeSearchEngineType_Bing EdgeSearchEngineType = 1
)

// EditionUpgradeLicenseType undocumented
type EditionUpgradeLicenseType int

const (
	// EditionUpgradeLicenseType_ProductKey undocumented
	EditionUpgradeLicenseType_ProductKey EditionUpgradeLicenseType = 0
	// EditionUpgradeLicenseType_LicenseFile undocumented
	EditionUpgradeLicenseType_LicenseFile EditionUpgradeLicenseType = 1
)

// EducationExternalSource undocumented
type EducationExternalSource int

const (
	// EducationExternalSource_Sis undocumented
	EducationExternalSource_Sis EducationExternalSource = 0
	// EducationExternalSource_Manual undocumented
	EducationExternalSource_Manual EducationExternalSource = 1
	// EducationExternalSource_UnknownFutureValue undocumented
	EducationExternalSource_UnknownFutureValue EducationExternalSource = 2
)

// EducationGender undocumented
type EducationGender int

const (
	// EducationGender_Female undocumented
	EducationGender_Female EducationGender = 0
	// EducationGender_Male undocumented
	EducationGender_Male EducationGender = 1
	// EducationGender_Other undocumented
	EducationGender_Other EducationGender = 2
	// EducationGender_UnknownFutureValue undocumented
	EducationGender_UnknownFutureValue EducationGender = 3
)

// EducationUserRole undocumented
type EducationUserRole int

const (
	// EducationUserRole_Student undocumented
	EducationUserRole_Student EducationUserRole = 0
	// EducationUserRole_Teacher undocumented
	EducationUserRole_Teacher EducationUserRole = 1
	// EducationUserRole_None undocumented
	EducationUserRole_None EducationUserRole = 2
	// EducationUserRole_UnknownFutureValue undocumented
	EducationUserRole_UnknownFutureValue EducationUserRole = 3
)

// EmailRole undocumented
type EmailRole int

const (
	// EmailRole_Unknown undocumented
	EmailRole_Unknown EmailRole = 0
	// EmailRole_Sender undocumented
	EmailRole_Sender EmailRole = 1
	// EmailRole_Recipient undocumented
	EmailRole_Recipient EmailRole = 2
	// EmailRole_UnknownFutureValue undocumented
	EmailRole_UnknownFutureValue EmailRole = 127
)

// Enablement undocumented
type Enablement int

const (
	// Enablement_NotConfigured undocumented
	Enablement_NotConfigured Enablement = 0
	// Enablement_Enabled undocumented
	Enablement_Enabled Enablement = 1
	// Enablement_Disabled undocumented
	Enablement_Disabled Enablement = 2
)

// EventType undocumented
type EventType int

const (
	// EventType_SingleInstance undocumented
	EventType_SingleInstance EventType = 0
	// EventType_Occurrence undocumented
	EventType_Occurrence EventType = 1
	// EventType_Exception undocumented
	EventType_Exception EventType = 2
	// EventType_SeriesMaster undocumented
	EventType_SeriesMaster EventType = 3
)

// ExchangeIdFormat undocumented
type ExchangeIdFormat int

const (
	// ExchangeIdFormat_EntryId undocumented
	ExchangeIdFormat_EntryId ExchangeIdFormat = 0
	// ExchangeIdFormat_EwsId undocumented
	ExchangeIdFormat_EwsId ExchangeIdFormat = 1
	// ExchangeIdFormat_ImmutableEntryId undocumented
	ExchangeIdFormat_ImmutableEntryId ExchangeIdFormat = 2
	// ExchangeIdFormat_RestId undocumented
	ExchangeIdFormat_RestId ExchangeIdFormat = 3
	// ExchangeIdFormat_RestImmutableEntryId undocumented
	ExchangeIdFormat_RestImmutableEntryId ExchangeIdFormat = 4
)

// ExternalAudienceScope undocumented
type ExternalAudienceScope int

const (
	// ExternalAudienceScope_None undocumented
	ExternalAudienceScope_None ExternalAudienceScope = 0
	// ExternalAudienceScope_ContactsOnly undocumented
	ExternalAudienceScope_ContactsOnly ExternalAudienceScope = 1
	// ExternalAudienceScope_All undocumented
	ExternalAudienceScope_All ExternalAudienceScope = 2
)

// FileHashType undocumented
type FileHashType int

const (
	// FileHashType_Unknown undocumented
	FileHashType_Unknown FileHashType = 0
	// FileHashType_Sha1 undocumented
	FileHashType_Sha1 FileHashType = 1
	// FileHashType_Sha256 undocumented
	FileHashType_Sha256 FileHashType = 2
	// FileHashType_Md5 undocumented
	FileHashType_Md5 FileHashType = 3
	// FileHashType_AuthenticodeHash256 undocumented
	FileHashType_AuthenticodeHash256 FileHashType = 4
	// FileHashType_LsHash undocumented
	FileHashType_LsHash FileHashType = 5
	// FileHashType_Ctph undocumented
	FileHashType_Ctph FileHashType = 6
	// FileHashType_UnknownFutureValue undocumented
	FileHashType_UnknownFutureValue FileHashType = 127
)

// FirewallCertificateRevocationListCheckMethodType undocumented
type FirewallCertificateRevocationListCheckMethodType int

const (
	// FirewallCertificateRevocationListCheckMethodType_DeviceDefault undocumented
	FirewallCertificateRevocationListCheckMethodType_DeviceDefault FirewallCertificateRevocationListCheckMethodType = 0
	// FirewallCertificateRevocationListCheckMethodType_None undocumented
	FirewallCertificateRevocationListCheckMethodType_None FirewallCertificateRevocationListCheckMethodType = 1
	// FirewallCertificateRevocationListCheckMethodType_Attempt undocumented
	FirewallCertificateRevocationListCheckMethodType_Attempt FirewallCertificateRevocationListCheckMethodType = 2
	// FirewallCertificateRevocationListCheckMethodType_Require undocumented
	FirewallCertificateRevocationListCheckMethodType_Require FirewallCertificateRevocationListCheckMethodType = 3
)

// FirewallPacketQueueingMethodType undocumented
type FirewallPacketQueueingMethodType int

const (
	// FirewallPacketQueueingMethodType_DeviceDefault undocumented
	FirewallPacketQueueingMethodType_DeviceDefault FirewallPacketQueueingMethodType = 0
	// FirewallPacketQueueingMethodType_Disabled undocumented
	FirewallPacketQueueingMethodType_Disabled FirewallPacketQueueingMethodType = 1
	// FirewallPacketQueueingMethodType_QueueInbound undocumented
	FirewallPacketQueueingMethodType_QueueInbound FirewallPacketQueueingMethodType = 2
	// FirewallPacketQueueingMethodType_QueueOutbound undocumented
	FirewallPacketQueueingMethodType_QueueOutbound FirewallPacketQueueingMethodType = 3
	// FirewallPacketQueueingMethodType_QueueBoth undocumented
	FirewallPacketQueueingMethodType_QueueBoth FirewallPacketQueueingMethodType = 4
)

// FirewallPreSharedKeyEncodingMethodType undocumented
type FirewallPreSharedKeyEncodingMethodType int

const (
	// FirewallPreSharedKeyEncodingMethodType_DeviceDefault undocumented
	FirewallPreSharedKeyEncodingMethodType_DeviceDefault FirewallPreSharedKeyEncodingMethodType = 0
	// FirewallPreSharedKeyEncodingMethodType_None undocumented
	FirewallPreSharedKeyEncodingMethodType_None FirewallPreSharedKeyEncodingMethodType = 1
	// FirewallPreSharedKeyEncodingMethodType_UtF8 undocumented
	FirewallPreSharedKeyEncodingMethodType_UtF8 FirewallPreSharedKeyEncodingMethodType = 2
)

// FollowupFlagStatus undocumented
type FollowupFlagStatus int

const (
	// FollowupFlagStatus_NotFlagged undocumented
	FollowupFlagStatus_NotFlagged FollowupFlagStatus = 0
	// FollowupFlagStatus_Complete undocumented
	FollowupFlagStatus_Complete FollowupFlagStatus = 1
	// FollowupFlagStatus_Flagged undocumented
	FollowupFlagStatus_Flagged FollowupFlagStatus = 2
)

// FreeBusyStatus undocumented
type FreeBusyStatus int

const (
	// FreeBusyStatus_Free undocumented
	FreeBusyStatus_Free FreeBusyStatus = 0
	// FreeBusyStatus_Tentative undocumented
	FreeBusyStatus_Tentative FreeBusyStatus = 1
	// FreeBusyStatus_Busy undocumented
	FreeBusyStatus_Busy FreeBusyStatus = 2
	// FreeBusyStatus_Oof undocumented
	FreeBusyStatus_Oof FreeBusyStatus = 3
	// FreeBusyStatus_WorkingElsewhere undocumented
	FreeBusyStatus_WorkingElsewhere FreeBusyStatus = 4
	// FreeBusyStatus_Unknown undocumented
	FreeBusyStatus_Unknown FreeBusyStatus = -1
)

// GiphyRatingType undocumented
type GiphyRatingType int

const (
	// GiphyRatingType_Moderate undocumented
	GiphyRatingType_Moderate GiphyRatingType = 0
	// GiphyRatingType_Strict undocumented
	GiphyRatingType_Strict GiphyRatingType = 1
	// GiphyRatingType_UnknownFutureValue undocumented
	GiphyRatingType_UnknownFutureValue GiphyRatingType = 2
)

// GroupType undocumented
type GroupType int

const (
	// GroupType_UnifiedGroups undocumented
	GroupType_UnifiedGroups GroupType = 0
	// GroupType_AzureAD undocumented
	GroupType_AzureAD GroupType = 1
	// GroupType_UnknownFutureValue undocumented
	GroupType_UnknownFutureValue GroupType = 2
)

// Importance undocumented
type Importance int

const (
	// Importance_Low undocumented
	Importance_Low Importance = 0
	// Importance_Normal undocumented
	Importance_Normal Importance = 1
	// Importance_High undocumented
	Importance_High Importance = 2
)

// InferenceClassificationType undocumented
type InferenceClassificationType int

const (
	// InferenceClassificationType_Focused undocumented
	InferenceClassificationType_Focused InferenceClassificationType = 0
	// InferenceClassificationType_Other undocumented
	InferenceClassificationType_Other InferenceClassificationType = 1
)

// InstallIntent undocumented
type InstallIntent int

const (
	// InstallIntent_Available undocumented
	InstallIntent_Available InstallIntent = 0
	// InstallIntent_Required undocumented
	InstallIntent_Required InstallIntent = 1
	// InstallIntent_Uninstall undocumented
	InstallIntent_Uninstall InstallIntent = 2
	// InstallIntent_AvailableWithoutEnrollment undocumented
	InstallIntent_AvailableWithoutEnrollment InstallIntent = 3
)

// InstallState undocumented
type InstallState int

const (
	// InstallState_NotApplicable undocumented
	InstallState_NotApplicable InstallState = 0
	// InstallState_Installed undocumented
	InstallState_Installed InstallState = 1
	// InstallState_Failed undocumented
	InstallState_Failed InstallState = 2
	// InstallState_NotInstalled undocumented
	InstallState_NotInstalled InstallState = 3
	// InstallState_UninstallFailed undocumented
	InstallState_UninstallFailed InstallState = 4
	// InstallState_Unknown undocumented
	InstallState_Unknown InstallState = 5
)

// InternetSiteSecurityLevel undocumented
type InternetSiteSecurityLevel int

const (
	// InternetSiteSecurityLevel_UserDefined undocumented
	InternetSiteSecurityLevel_UserDefined InternetSiteSecurityLevel = 0
	// InternetSiteSecurityLevel_Medium undocumented
	InternetSiteSecurityLevel_Medium InternetSiteSecurityLevel = 1
	// InternetSiteSecurityLevel_MediumHigh undocumented
	InternetSiteSecurityLevel_MediumHigh InternetSiteSecurityLevel = 2
	// InternetSiteSecurityLevel_High undocumented
	InternetSiteSecurityLevel_High InternetSiteSecurityLevel = 3
)

// IosNotificationAlertType undocumented
type IosNotificationAlertType int

const (
	// IosNotificationAlertType_DeviceDefault undocumented
	IosNotificationAlertType_DeviceDefault IosNotificationAlertType = 0
	// IosNotificationAlertType_Banner undocumented
	IosNotificationAlertType_Banner IosNotificationAlertType = 1
	// IosNotificationAlertType_Modal undocumented
	IosNotificationAlertType_Modal IosNotificationAlertType = 2
	// IosNotificationAlertType_None undocumented
	IosNotificationAlertType_None IosNotificationAlertType = 3
)

// IosUpdatesInstallStatus undocumented
type IosUpdatesInstallStatus int

const (
	// IosUpdatesInstallStatus_Success undocumented
	IosUpdatesInstallStatus_Success IosUpdatesInstallStatus = 0
	// IosUpdatesInstallStatus_Available undocumented
	IosUpdatesInstallStatus_Available IosUpdatesInstallStatus = 1
	// IosUpdatesInstallStatus_Idle undocumented
	IosUpdatesInstallStatus_Idle IosUpdatesInstallStatus = 2
	// IosUpdatesInstallStatus_Unknown undocumented
	IosUpdatesInstallStatus_Unknown IosUpdatesInstallStatus = 3
	// IosUpdatesInstallStatus_Downloading undocumented
	IosUpdatesInstallStatus_Downloading IosUpdatesInstallStatus = -2016330712
	// IosUpdatesInstallStatus_DownloadFailed undocumented
	IosUpdatesInstallStatus_DownloadFailed IosUpdatesInstallStatus = -2016330711
	// IosUpdatesInstallStatus_DownloadRequiresComputer undocumented
	IosUpdatesInstallStatus_DownloadRequiresComputer IosUpdatesInstallStatus = -2016330710
	// IosUpdatesInstallStatus_DownloadInsufficientSpace undocumented
	IosUpdatesInstallStatus_DownloadInsufficientSpace IosUpdatesInstallStatus = -2016330709
	// IosUpdatesInstallStatus_DownloadInsufficientPower undocumented
	IosUpdatesInstallStatus_DownloadInsufficientPower IosUpdatesInstallStatus = -2016330708
	// IosUpdatesInstallStatus_DownloadInsufficientNetwork undocumented
	IosUpdatesInstallStatus_DownloadInsufficientNetwork IosUpdatesInstallStatus = -2016330707
	// IosUpdatesInstallStatus_Installing undocumented
	IosUpdatesInstallStatus_Installing IosUpdatesInstallStatus = -2016330706
	// IosUpdatesInstallStatus_InstallInsufficientSpace undocumented
	IosUpdatesInstallStatus_InstallInsufficientSpace IosUpdatesInstallStatus = -2016330705
	// IosUpdatesInstallStatus_InstallInsufficientPower undocumented
	IosUpdatesInstallStatus_InstallInsufficientPower IosUpdatesInstallStatus = -2016330704
	// IosUpdatesInstallStatus_InstallPhoneCallInProgress undocumented
	IosUpdatesInstallStatus_InstallPhoneCallInProgress IosUpdatesInstallStatus = -2016330703
	// IosUpdatesInstallStatus_InstallFailed undocumented
	IosUpdatesInstallStatus_InstallFailed IosUpdatesInstallStatus = -2016330702
	// IosUpdatesInstallStatus_NotSupportedOperation undocumented
	IosUpdatesInstallStatus_NotSupportedOperation IosUpdatesInstallStatus = -2016330701
	// IosUpdatesInstallStatus_SharedDeviceUserLoggedInError undocumented
	IosUpdatesInstallStatus_SharedDeviceUserLoggedInError IosUpdatesInstallStatus = -2016330699
)

// LocationType undocumented
type LocationType int

const (
	// LocationType_Default undocumented
	LocationType_Default LocationType = 0
	// LocationType_ConferenceRoom undocumented
	LocationType_ConferenceRoom LocationType = 1
	// LocationType_HomeAddress undocumented
	LocationType_HomeAddress LocationType = 2
	// LocationType_BusinessAddress undocumented
	LocationType_BusinessAddress LocationType = 3
	// LocationType_GeoCoordinates undocumented
	LocationType_GeoCoordinates LocationType = 4
	// LocationType_StreetAddress undocumented
	LocationType_StreetAddress LocationType = 5
	// LocationType_Hotel undocumented
	LocationType_Hotel LocationType = 6
	// LocationType_Restaurant undocumented
	LocationType_Restaurant LocationType = 7
	// LocationType_LocalBusiness undocumented
	LocationType_LocalBusiness LocationType = 8
	// LocationType_PostalAddress undocumented
	LocationType_PostalAddress LocationType = 9
)

// LocationUniqueIdType undocumented
type LocationUniqueIdType int

const (
	// LocationUniqueIdType_Unknown undocumented
	LocationUniqueIdType_Unknown LocationUniqueIdType = 0
	// LocationUniqueIdType_LocationStore undocumented
	LocationUniqueIdType_LocationStore LocationUniqueIdType = 1
	// LocationUniqueIdType_Directory undocumented
	LocationUniqueIdType_Directory LocationUniqueIdType = 2
	// LocationUniqueIdType_Private undocumented
	LocationUniqueIdType_Private LocationUniqueIdType = 3
	// LocationUniqueIdType_Bing undocumented
	LocationUniqueIdType_Bing LocationUniqueIdType = 4
)

// LogonType undocumented
type LogonType int

const (
	// LogonType_Unknown undocumented
	LogonType_Unknown LogonType = 0
	// LogonType_Interactive undocumented
	LogonType_Interactive LogonType = 1
	// LogonType_RemoteInteractive undocumented
	LogonType_RemoteInteractive LogonType = 2
	// LogonType_Network undocumented
	LogonType_Network LogonType = 3
	// LogonType_Batch undocumented
	LogonType_Batch LogonType = 4
	// LogonType_Service undocumented
	LogonType_Service LogonType = 5
	// LogonType_UnknownFutureValue undocumented
	LogonType_UnknownFutureValue LogonType = 127
)

// MailTipsType undocumented
type MailTipsType int

const (
	// MailTipsType_AutomaticReplies undocumented
	MailTipsType_AutomaticReplies MailTipsType = 1
	// MailTipsType_MailboxFullStatus undocumented
	MailTipsType_MailboxFullStatus MailTipsType = 2
	// MailTipsType_CustomMailTip undocumented
	MailTipsType_CustomMailTip MailTipsType = 4
	// MailTipsType_ExternalMemberCount undocumented
	MailTipsType_ExternalMemberCount MailTipsType = 8
	// MailTipsType_TotalMemberCount undocumented
	MailTipsType_TotalMemberCount MailTipsType = 16
	// MailTipsType_MaxMessageSize undocumented
	MailTipsType_MaxMessageSize MailTipsType = 32
	// MailTipsType_DeliveryRestriction undocumented
	MailTipsType_DeliveryRestriction MailTipsType = 64
	// MailTipsType_ModerationStatus undocumented
	MailTipsType_ModerationStatus MailTipsType = 128
	// MailTipsType_RecipientScope undocumented
	MailTipsType_RecipientScope MailTipsType = 256
	// MailTipsType_RecipientSuggestions undocumented
	MailTipsType_RecipientSuggestions MailTipsType = 512
)

// ManagedAppAvailability undocumented
type ManagedAppAvailability int

const (
	// ManagedAppAvailability_Global undocumented
	ManagedAppAvailability_Global ManagedAppAvailability = 0
	// ManagedAppAvailability_LineOfBusiness undocumented
	ManagedAppAvailability_LineOfBusiness ManagedAppAvailability = 1
)

// ManagedAppClipboardSharingLevel undocumented
type ManagedAppClipboardSharingLevel int

const (
	// ManagedAppClipboardSharingLevel_AllApps undocumented
	ManagedAppClipboardSharingLevel_AllApps ManagedAppClipboardSharingLevel = 0
	// ManagedAppClipboardSharingLevel_ManagedAppsWithPasteIn undocumented
	ManagedAppClipboardSharingLevel_ManagedAppsWithPasteIn ManagedAppClipboardSharingLevel = 1
	// ManagedAppClipboardSharingLevel_ManagedApps undocumented
	ManagedAppClipboardSharingLevel_ManagedApps ManagedAppClipboardSharingLevel = 2
	// ManagedAppClipboardSharingLevel_Blocked undocumented
	ManagedAppClipboardSharingLevel_Blocked ManagedAppClipboardSharingLevel = 3
)

// ManagedAppDataEncryptionType undocumented
type ManagedAppDataEncryptionType int

const (
	// ManagedAppDataEncryptionType_UseDeviceSettings undocumented
	ManagedAppDataEncryptionType_UseDeviceSettings ManagedAppDataEncryptionType = 0
	// ManagedAppDataEncryptionType_AfterDeviceRestart undocumented
	ManagedAppDataEncryptionType_AfterDeviceRestart ManagedAppDataEncryptionType = 1
	// ManagedAppDataEncryptionType_WhenDeviceLockedExceptOpenFiles undocumented
	ManagedAppDataEncryptionType_WhenDeviceLockedExceptOpenFiles ManagedAppDataEncryptionType = 2
	// ManagedAppDataEncryptionType_WhenDeviceLocked undocumented
	ManagedAppDataEncryptionType_WhenDeviceLocked ManagedAppDataEncryptionType = 3
)

// ManagedAppDataStorageLocation undocumented
type ManagedAppDataStorageLocation int

const (
	// ManagedAppDataStorageLocation_OneDriveForBusiness undocumented
	ManagedAppDataStorageLocation_OneDriveForBusiness ManagedAppDataStorageLocation = 1
	// ManagedAppDataStorageLocation_SharePoint undocumented
	ManagedAppDataStorageLocation_SharePoint ManagedAppDataStorageLocation = 2
	// ManagedAppDataStorageLocation_LocalStorage undocumented
	ManagedAppDataStorageLocation_LocalStorage ManagedAppDataStorageLocation = 6
)

// ManagedAppDataTransferLevel undocumented
type ManagedAppDataTransferLevel int

const (
	// ManagedAppDataTransferLevel_AllApps undocumented
	ManagedAppDataTransferLevel_AllApps ManagedAppDataTransferLevel = 0
	// ManagedAppDataTransferLevel_ManagedApps undocumented
	ManagedAppDataTransferLevel_ManagedApps ManagedAppDataTransferLevel = 1
	// ManagedAppDataTransferLevel_None undocumented
	ManagedAppDataTransferLevel_None ManagedAppDataTransferLevel = 2
)

// ManagedAppFlaggedReason undocumented
type ManagedAppFlaggedReason int

const (
	// ManagedAppFlaggedReason_None undocumented
	ManagedAppFlaggedReason_None ManagedAppFlaggedReason = 0
	// ManagedAppFlaggedReason_RootedDevice undocumented
	ManagedAppFlaggedReason_RootedDevice ManagedAppFlaggedReason = 1
)

// ManagedAppPinCharacterSet undocumented
type ManagedAppPinCharacterSet int

const (
	// ManagedAppPinCharacterSet_Numeric undocumented
	ManagedAppPinCharacterSet_Numeric ManagedAppPinCharacterSet = 0
	// ManagedAppPinCharacterSet_AlphanumericAndSymbol undocumented
	ManagedAppPinCharacterSet_AlphanumericAndSymbol ManagedAppPinCharacterSet = 1
)

// ManagedDeviceOwnerType undocumented
type ManagedDeviceOwnerType int

const (
	// ManagedDeviceOwnerType_Unknown undocumented
	ManagedDeviceOwnerType_Unknown ManagedDeviceOwnerType = 0
	// ManagedDeviceOwnerType_Company undocumented
	ManagedDeviceOwnerType_Company ManagedDeviceOwnerType = 1
	// ManagedDeviceOwnerType_Personal undocumented
	ManagedDeviceOwnerType_Personal ManagedDeviceOwnerType = 2
)

// ManagedDevicePartnerReportedHealthState undocumented
type ManagedDevicePartnerReportedHealthState int

const (
	// ManagedDevicePartnerReportedHealthState_Unknown undocumented
	ManagedDevicePartnerReportedHealthState_Unknown ManagedDevicePartnerReportedHealthState = 0
	// ManagedDevicePartnerReportedHealthState_Activated undocumented
	ManagedDevicePartnerReportedHealthState_Activated ManagedDevicePartnerReportedHealthState = 1
	// ManagedDevicePartnerReportedHealthState_Deactivated undocumented
	ManagedDevicePartnerReportedHealthState_Deactivated ManagedDevicePartnerReportedHealthState = 2
	// ManagedDevicePartnerReportedHealthState_Secured undocumented
	ManagedDevicePartnerReportedHealthState_Secured ManagedDevicePartnerReportedHealthState = 3
	// ManagedDevicePartnerReportedHealthState_LowSeverity undocumented
	ManagedDevicePartnerReportedHealthState_LowSeverity ManagedDevicePartnerReportedHealthState = 4
	// ManagedDevicePartnerReportedHealthState_MediumSeverity undocumented
	ManagedDevicePartnerReportedHealthState_MediumSeverity ManagedDevicePartnerReportedHealthState = 5
	// ManagedDevicePartnerReportedHealthState_HighSeverity undocumented
	ManagedDevicePartnerReportedHealthState_HighSeverity ManagedDevicePartnerReportedHealthState = 6
	// ManagedDevicePartnerReportedHealthState_Unresponsive undocumented
	ManagedDevicePartnerReportedHealthState_Unresponsive ManagedDevicePartnerReportedHealthState = 7
	// ManagedDevicePartnerReportedHealthState_Compromised undocumented
	ManagedDevicePartnerReportedHealthState_Compromised ManagedDevicePartnerReportedHealthState = 8
	// ManagedDevicePartnerReportedHealthState_Misconfigured undocumented
	ManagedDevicePartnerReportedHealthState_Misconfigured ManagedDevicePartnerReportedHealthState = 9
)

// ManagementAgentType undocumented
type ManagementAgentType int

const (
	// ManagementAgentType_Eas undocumented
	ManagementAgentType_Eas ManagementAgentType = 1
	// ManagementAgentType_Mdm undocumented
	ManagementAgentType_Mdm ManagementAgentType = 2
	// ManagementAgentType_EasMdm undocumented
	ManagementAgentType_EasMdm ManagementAgentType = 3
	// ManagementAgentType_IntuneClient undocumented
	ManagementAgentType_IntuneClient ManagementAgentType = 4
	// ManagementAgentType_EasIntuneClient undocumented
	ManagementAgentType_EasIntuneClient ManagementAgentType = 5
	// ManagementAgentType_ConfigurationManagerClient undocumented
	ManagementAgentType_ConfigurationManagerClient ManagementAgentType = 8
	// ManagementAgentType_ConfigurationManagerClientMdm undocumented
	ManagementAgentType_ConfigurationManagerClientMdm ManagementAgentType = 10
	// ManagementAgentType_ConfigurationManagerClientMdmEas undocumented
	ManagementAgentType_ConfigurationManagerClientMdmEas ManagementAgentType = 11
	// ManagementAgentType_Unknown undocumented
	ManagementAgentType_Unknown ManagementAgentType = 16
	// ManagementAgentType_Jamf undocumented
	ManagementAgentType_Jamf ManagementAgentType = 32
	// ManagementAgentType_GoogleCloudDevicePolicyController undocumented
	ManagementAgentType_GoogleCloudDevicePolicyController ManagementAgentType = 64
)

// MdmAppConfigKeyType undocumented
type MdmAppConfigKeyType int

const (
	// MdmAppConfigKeyType_StringType undocumented
	MdmAppConfigKeyType_StringType MdmAppConfigKeyType = 0
	// MdmAppConfigKeyType_IntegerType undocumented
	MdmAppConfigKeyType_IntegerType MdmAppConfigKeyType = 1
	// MdmAppConfigKeyType_RealType undocumented
	MdmAppConfigKeyType_RealType MdmAppConfigKeyType = 2
	// MdmAppConfigKeyType_BooleanType undocumented
	MdmAppConfigKeyType_BooleanType MdmAppConfigKeyType = 3
	// MdmAppConfigKeyType_TokenType undocumented
	MdmAppConfigKeyType_TokenType MdmAppConfigKeyType = 4
)

// MdmAuthority undocumented
type MdmAuthority int

const (
	// MdmAuthority_Unknown undocumented
	MdmAuthority_Unknown MdmAuthority = 0
	// MdmAuthority_Intune undocumented
	MdmAuthority_Intune MdmAuthority = 1
	// MdmAuthority_Sccm undocumented
	MdmAuthority_Sccm MdmAuthority = 2
	// MdmAuthority_Office365 undocumented
	MdmAuthority_Office365 MdmAuthority = 3
)

// MediaDirection undocumented
type MediaDirection int

const (
	// MediaDirection_Inactive undocumented
	MediaDirection_Inactive MediaDirection = 0
	// MediaDirection_SendOnly undocumented
	MediaDirection_SendOnly MediaDirection = 1
	// MediaDirection_ReceiveOnly undocumented
	MediaDirection_ReceiveOnly MediaDirection = 2
	// MediaDirection_SendReceive undocumented
	MediaDirection_SendReceive MediaDirection = 3
)

// MediaState undocumented
type MediaState int

const (
	// MediaState_Active undocumented
	MediaState_Active MediaState = 0
	// MediaState_Inactive undocumented
	MediaState_Inactive MediaState = 1
	// MediaState_UnknownFutureValue undocumented
	MediaState_UnknownFutureValue MediaState = 2
)

// MeetingMessageType undocumented
type MeetingMessageType int

const (
	// MeetingMessageType_None undocumented
	MeetingMessageType_None MeetingMessageType = 0
	// MeetingMessageType_MeetingRequest undocumented
	MeetingMessageType_MeetingRequest MeetingMessageType = 1
	// MeetingMessageType_MeetingCancelled undocumented
	MeetingMessageType_MeetingCancelled MeetingMessageType = 2
	// MeetingMessageType_MeetingAccepted undocumented
	MeetingMessageType_MeetingAccepted MeetingMessageType = 3
	// MeetingMessageType_MeetingTenativelyAccepted undocumented
	MeetingMessageType_MeetingTenativelyAccepted MeetingMessageType = 4
	// MeetingMessageType_MeetingDeclined undocumented
	MeetingMessageType_MeetingDeclined MeetingMessageType = 5
)

// MessageActionFlag undocumented
type MessageActionFlag int

const (
	// MessageActionFlag_Any undocumented
	MessageActionFlag_Any MessageActionFlag = 0
	// MessageActionFlag_Call undocumented
	MessageActionFlag_Call MessageActionFlag = 1
	// MessageActionFlag_DoNotForward undocumented
	MessageActionFlag_DoNotForward MessageActionFlag = 2
	// MessageActionFlag_FollowUp undocumented
	MessageActionFlag_FollowUp MessageActionFlag = 3
	// MessageActionFlag_Fyi undocumented
	MessageActionFlag_Fyi MessageActionFlag = 4
	// MessageActionFlag_Forward undocumented
	MessageActionFlag_Forward MessageActionFlag = 5
	// MessageActionFlag_NoResponseNecessary undocumented
	MessageActionFlag_NoResponseNecessary MessageActionFlag = 6
	// MessageActionFlag_Read undocumented
	MessageActionFlag_Read MessageActionFlag = 7
	// MessageActionFlag_Reply undocumented
	MessageActionFlag_Reply MessageActionFlag = 8
	// MessageActionFlag_ReplyToAll undocumented
	MessageActionFlag_ReplyToAll MessageActionFlag = 9
	// MessageActionFlag_Review undocumented
	MessageActionFlag_Review MessageActionFlag = 10
)

// MicrosoftStoreForBusinessLicenseType undocumented
type MicrosoftStoreForBusinessLicenseType int

const (
	// MicrosoftStoreForBusinessLicenseType_Offline undocumented
	MicrosoftStoreForBusinessLicenseType_Offline MicrosoftStoreForBusinessLicenseType = 0
	// MicrosoftStoreForBusinessLicenseType_Online undocumented
	MicrosoftStoreForBusinessLicenseType_Online MicrosoftStoreForBusinessLicenseType = 1
)

// MiracastChannel undocumented
type MiracastChannel int

const (
	// MiracastChannel_UserDefined undocumented
	MiracastChannel_UserDefined MiracastChannel = 0
	// MiracastChannel_One undocumented
	MiracastChannel_One MiracastChannel = 1
	// MiracastChannel_Two undocumented
	MiracastChannel_Two MiracastChannel = 2
	// MiracastChannel_Three undocumented
	MiracastChannel_Three MiracastChannel = 3
	// MiracastChannel_Four undocumented
	MiracastChannel_Four MiracastChannel = 4
	// MiracastChannel_Five undocumented
	MiracastChannel_Five MiracastChannel = 5
	// MiracastChannel_Six undocumented
	MiracastChannel_Six MiracastChannel = 6
	// MiracastChannel_Seven undocumented
	MiracastChannel_Seven MiracastChannel = 7
	// MiracastChannel_Eight undocumented
	MiracastChannel_Eight MiracastChannel = 8
	// MiracastChannel_Nine undocumented
	MiracastChannel_Nine MiracastChannel = 9
	// MiracastChannel_Ten undocumented
	MiracastChannel_Ten MiracastChannel = 10
	// MiracastChannel_Eleven undocumented
	MiracastChannel_Eleven MiracastChannel = 11
	// MiracastChannel_ThirtySix undocumented
	MiracastChannel_ThirtySix MiracastChannel = 36
	// MiracastChannel_Forty undocumented
	MiracastChannel_Forty MiracastChannel = 40
	// MiracastChannel_FortyFour undocumented
	MiracastChannel_FortyFour MiracastChannel = 44
	// MiracastChannel_FortyEight undocumented
	MiracastChannel_FortyEight MiracastChannel = 48
	// MiracastChannel_OneHundredFortyNine undocumented
	MiracastChannel_OneHundredFortyNine MiracastChannel = 149
	// MiracastChannel_OneHundredFiftyThree undocumented
	MiracastChannel_OneHundredFiftyThree MiracastChannel = 153
	// MiracastChannel_OneHundredFiftySeven undocumented
	MiracastChannel_OneHundredFiftySeven MiracastChannel = 157
	// MiracastChannel_OneHundredSixtyOne undocumented
	MiracastChannel_OneHundredSixtyOne MiracastChannel = 161
	// MiracastChannel_OneHundredSixtyFive undocumented
	MiracastChannel_OneHundredSixtyFive MiracastChannel = 165
)

// MobileAppContentFileUploadState undocumented
type MobileAppContentFileUploadState int

const (
	// MobileAppContentFileUploadState_Success undocumented
	MobileAppContentFileUploadState_Success MobileAppContentFileUploadState = 0
	// MobileAppContentFileUploadState_TransientError undocumented
	MobileAppContentFileUploadState_TransientError MobileAppContentFileUploadState = 1
	// MobileAppContentFileUploadState_Error undocumented
	MobileAppContentFileUploadState_Error MobileAppContentFileUploadState = 2
	// MobileAppContentFileUploadState_Unknown undocumented
	MobileAppContentFileUploadState_Unknown MobileAppContentFileUploadState = 3
	// MobileAppContentFileUploadState_AzureStorageUriRequestSuccess undocumented
	MobileAppContentFileUploadState_AzureStorageUriRequestSuccess MobileAppContentFileUploadState = 100
	// MobileAppContentFileUploadState_AzureStorageUriRequestPending undocumented
	MobileAppContentFileUploadState_AzureStorageUriRequestPending MobileAppContentFileUploadState = 101
	// MobileAppContentFileUploadState_AzureStorageUriRequestFailed undocumented
	MobileAppContentFileUploadState_AzureStorageUriRequestFailed MobileAppContentFileUploadState = 102
	// MobileAppContentFileUploadState_AzureStorageUriRequestTimedOut undocumented
	MobileAppContentFileUploadState_AzureStorageUriRequestTimedOut MobileAppContentFileUploadState = 103
	// MobileAppContentFileUploadState_AzureStorageUriRenewalSuccess undocumented
	MobileAppContentFileUploadState_AzureStorageUriRenewalSuccess MobileAppContentFileUploadState = 200
	// MobileAppContentFileUploadState_AzureStorageUriRenewalPending undocumented
	MobileAppContentFileUploadState_AzureStorageUriRenewalPending MobileAppContentFileUploadState = 201
	// MobileAppContentFileUploadState_AzureStorageUriRenewalFailed undocumented
	MobileAppContentFileUploadState_AzureStorageUriRenewalFailed MobileAppContentFileUploadState = 202
	// MobileAppContentFileUploadState_AzureStorageUriRenewalTimedOut undocumented
	MobileAppContentFileUploadState_AzureStorageUriRenewalTimedOut MobileAppContentFileUploadState = 203
	// MobileAppContentFileUploadState_CommitFileSuccess undocumented
	MobileAppContentFileUploadState_CommitFileSuccess MobileAppContentFileUploadState = 300
	// MobileAppContentFileUploadState_CommitFilePending undocumented
	MobileAppContentFileUploadState_CommitFilePending MobileAppContentFileUploadState = 301
	// MobileAppContentFileUploadState_CommitFileFailed undocumented
	MobileAppContentFileUploadState_CommitFileFailed MobileAppContentFileUploadState = 302
	// MobileAppContentFileUploadState_CommitFileTimedOut undocumented
	MobileAppContentFileUploadState_CommitFileTimedOut MobileAppContentFileUploadState = 303
)

// MobileAppPublishingState undocumented
type MobileAppPublishingState int

const (
	// MobileAppPublishingState_NotPublished undocumented
	MobileAppPublishingState_NotPublished MobileAppPublishingState = 0
	// MobileAppPublishingState_Processing undocumented
	MobileAppPublishingState_Processing MobileAppPublishingState = 1
	// MobileAppPublishingState_Published undocumented
	MobileAppPublishingState_Published MobileAppPublishingState = 2
)

// MobileThreatPartnerTenantState undocumented
type MobileThreatPartnerTenantState int

const (
	// MobileThreatPartnerTenantState_Unavailable undocumented
	MobileThreatPartnerTenantState_Unavailable MobileThreatPartnerTenantState = 0
	// MobileThreatPartnerTenantState_Available undocumented
	MobileThreatPartnerTenantState_Available MobileThreatPartnerTenantState = 1
	// MobileThreatPartnerTenantState_Enabled undocumented
	MobileThreatPartnerTenantState_Enabled MobileThreatPartnerTenantState = 2
	// MobileThreatPartnerTenantState_Unresponsive undocumented
	MobileThreatPartnerTenantState_Unresponsive MobileThreatPartnerTenantState = 3
)

// Modality undocumented
type Modality int

const (
	// Modality_Audio undocumented
	Modality_Audio Modality = 1
	// Modality_Video undocumented
	Modality_Video Modality = 2
	// Modality_VideoBasedScreenSharing undocumented
	Modality_VideoBasedScreenSharing Modality = 3
	// Modality_Data undocumented
	Modality_Data Modality = 4
	// Modality_UnknownFutureValue undocumented
	Modality_UnknownFutureValue Modality = 5
)

// NotificationTemplateBrandingOptions undocumented
type NotificationTemplateBrandingOptions int

const (
	// NotificationTemplateBrandingOptions_None undocumented
	NotificationTemplateBrandingOptions_None NotificationTemplateBrandingOptions = 0
	// NotificationTemplateBrandingOptions_IncludeCompanyLogo undocumented
	NotificationTemplateBrandingOptions_IncludeCompanyLogo NotificationTemplateBrandingOptions = 1
	// NotificationTemplateBrandingOptions_IncludeCompanyName undocumented
	NotificationTemplateBrandingOptions_IncludeCompanyName NotificationTemplateBrandingOptions = 2
	// NotificationTemplateBrandingOptions_IncludeContactInformation undocumented
	NotificationTemplateBrandingOptions_IncludeContactInformation NotificationTemplateBrandingOptions = 4
)

// OnenotePatchActionType undocumented
type OnenotePatchActionType int

const (
	// OnenotePatchActionType_Replace undocumented
	OnenotePatchActionType_Replace OnenotePatchActionType = 0
	// OnenotePatchActionType_Append undocumented
	OnenotePatchActionType_Append OnenotePatchActionType = 1
	// OnenotePatchActionType_Delete undocumented
	OnenotePatchActionType_Delete OnenotePatchActionType = 2
	// OnenotePatchActionType_Insert undocumented
	OnenotePatchActionType_Insert OnenotePatchActionType = 3
	// OnenotePatchActionType_Prepend undocumented
	OnenotePatchActionType_Prepend OnenotePatchActionType = 4
)

// OnenotePatchInsertPosition undocumented
type OnenotePatchInsertPosition int

const (
	// OnenotePatchInsertPosition_After undocumented
	OnenotePatchInsertPosition_After OnenotePatchInsertPosition = 0
	// OnenotePatchInsertPosition_Before undocumented
	OnenotePatchInsertPosition_Before OnenotePatchInsertPosition = 1
)

// OnenoteSourceService undocumented
type OnenoteSourceService int

const (
	// OnenoteSourceService_Unknown undocumented
	OnenoteSourceService_Unknown OnenoteSourceService = 0
	// OnenoteSourceService_OneDrive undocumented
	OnenoteSourceService_OneDrive OnenoteSourceService = 1
	// OnenoteSourceService_OneDriveForBusiness undocumented
	OnenoteSourceService_OneDriveForBusiness OnenoteSourceService = 2
	// OnenoteSourceService_OnPremOneDriveForBusiness undocumented
	OnenoteSourceService_OnPremOneDriveForBusiness OnenoteSourceService = 3
)

// OnenoteUserRole undocumented
type OnenoteUserRole int

const (
	// OnenoteUserRole_Owner undocumented
	OnenoteUserRole_Owner OnenoteUserRole = 0
	// OnenoteUserRole_Contributor undocumented
	OnenoteUserRole_Contributor OnenoteUserRole = 1
	// OnenoteUserRole_Reader undocumented
	OnenoteUserRole_Reader OnenoteUserRole = 2
	// OnenoteUserRole_None undocumented
	OnenoteUserRole_None OnenoteUserRole = -1
)

// OperationResult undocumented
type OperationResult int

const (
	// OperationResult_Success undocumented
	OperationResult_Success OperationResult = 0
	// OperationResult_Failure undocumented
	OperationResult_Failure OperationResult = 1
	// OperationResult_Timeout undocumented
	OperationResult_Timeout OperationResult = 2
	// OperationResult_UnknownFutureValue undocumented
	OperationResult_UnknownFutureValue OperationResult = 3
)

// OperationStatus undocumented
type OperationStatus int

const (
	// OperationStatus_NotStarted undocumented
	OperationStatus_NotStarted OperationStatus = 0
	// OperationStatus_Running undocumented
	OperationStatus_Running OperationStatus = 1
	// OperationStatus_Completed undocumented
	OperationStatus_Completed OperationStatus = 2
	// OperationStatus_Failed undocumented
	OperationStatus_Failed OperationStatus = 3
)

// PhoneType undocumented
type PhoneType int

const (
	// PhoneType_Home undocumented
	PhoneType_Home PhoneType = 0
	// PhoneType_Business undocumented
	PhoneType_Business PhoneType = 1
	// PhoneType_Mobile undocumented
	PhoneType_Mobile PhoneType = 2
	// PhoneType_Other undocumented
	PhoneType_Other PhoneType = 3
	// PhoneType_Assistant undocumented
	PhoneType_Assistant PhoneType = 4
	// PhoneType_HomeFax undocumented
	PhoneType_HomeFax PhoneType = 5
	// PhoneType_BusinessFax undocumented
	PhoneType_BusinessFax PhoneType = 6
	// PhoneType_OtherFax undocumented
	PhoneType_OtherFax PhoneType = 7
	// PhoneType_Pager undocumented
	PhoneType_Pager PhoneType = 8
	// PhoneType_Radio undocumented
	PhoneType_Radio PhoneType = 9
)

// PhysicalAddressType undocumented
type PhysicalAddressType int

const (
	// PhysicalAddressType_Unknown undocumented
	PhysicalAddressType_Unknown PhysicalAddressType = 0
	// PhysicalAddressType_Home undocumented
	PhysicalAddressType_Home PhysicalAddressType = 1
	// PhysicalAddressType_Business undocumented
	PhysicalAddressType_Business PhysicalAddressType = 2
	// PhysicalAddressType_Other undocumented
	PhysicalAddressType_Other PhysicalAddressType = 3
)

// PlannerPreviewType undocumented
type PlannerPreviewType int

const (
	// PlannerPreviewType_Automatic undocumented
	PlannerPreviewType_Automatic PlannerPreviewType = 0
	// PlannerPreviewType_NoPreview undocumented
	PlannerPreviewType_NoPreview PlannerPreviewType = 1
	// PlannerPreviewType_Checklist undocumented
	PlannerPreviewType_Checklist PlannerPreviewType = 2
	// PlannerPreviewType_Description undocumented
	PlannerPreviewType_Description PlannerPreviewType = 3
	// PlannerPreviewType_Reference undocumented
	PlannerPreviewType_Reference PlannerPreviewType = 4
)

// PolicyPlatformType undocumented
type PolicyPlatformType int

const (
	// PolicyPlatformType_Android undocumented
	PolicyPlatformType_Android PolicyPlatformType = 0
	// PolicyPlatformType_IOS undocumented
	PolicyPlatformType_IOS PolicyPlatformType = 2
	// PolicyPlatformType_MacOS undocumented
	PolicyPlatformType_MacOS PolicyPlatformType = 3
	// PolicyPlatformType_WindowsPhone81 undocumented
	PolicyPlatformType_WindowsPhone81 PolicyPlatformType = 4
	// PolicyPlatformType_Windows81AndLater undocumented
	PolicyPlatformType_Windows81AndLater PolicyPlatformType = 5
	// PolicyPlatformType_Windows10AndLater undocumented
	PolicyPlatformType_Windows10AndLater PolicyPlatformType = 6
	// PolicyPlatformType_AndroidWorkProfile undocumented
	PolicyPlatformType_AndroidWorkProfile PolicyPlatformType = 7
	// PolicyPlatformType_All undocumented
	PolicyPlatformType_All PolicyPlatformType = 100
)

// PrereleaseFeatures undocumented
type PrereleaseFeatures int

const (
	// PrereleaseFeatures_UserDefined undocumented
	PrereleaseFeatures_UserDefined PrereleaseFeatures = 0
	// PrereleaseFeatures_SettingsOnly undocumented
	PrereleaseFeatures_SettingsOnly PrereleaseFeatures = 1
	// PrereleaseFeatures_SettingsAndExperimentations undocumented
	PrereleaseFeatures_SettingsAndExperimentations PrereleaseFeatures = 2
	// PrereleaseFeatures_NotAllowed undocumented
	PrereleaseFeatures_NotAllowed PrereleaseFeatures = 3
)

// ProcessIntegrityLevel undocumented
type ProcessIntegrityLevel int

const (
	// ProcessIntegrityLevel_Unknown undocumented
	ProcessIntegrityLevel_Unknown ProcessIntegrityLevel = 0
	// ProcessIntegrityLevel_Untrusted undocumented
	ProcessIntegrityLevel_Untrusted ProcessIntegrityLevel = 1
	// ProcessIntegrityLevel_Low undocumented
	ProcessIntegrityLevel_Low ProcessIntegrityLevel = 2
	// ProcessIntegrityLevel_Medium undocumented
	ProcessIntegrityLevel_Medium ProcessIntegrityLevel = 3
	// ProcessIntegrityLevel_High undocumented
	ProcessIntegrityLevel_High ProcessIntegrityLevel = 4
	// ProcessIntegrityLevel_System undocumented
	ProcessIntegrityLevel_System ProcessIntegrityLevel = 5
	// ProcessIntegrityLevel_UnknownFutureValue undocumented
	ProcessIntegrityLevel_UnknownFutureValue ProcessIntegrityLevel = 127
)

// RatingAppsType undocumented
type RatingAppsType int

const (
	// RatingAppsType_AllAllowed undocumented
	RatingAppsType_AllAllowed RatingAppsType = 0
	// RatingAppsType_AllBlocked undocumented
	RatingAppsType_AllBlocked RatingAppsType = 1
	// RatingAppsType_AgesAbove4 undocumented
	RatingAppsType_AgesAbove4 RatingAppsType = 2
	// RatingAppsType_AgesAbove9 undocumented
	RatingAppsType_AgesAbove9 RatingAppsType = 3
	// RatingAppsType_AgesAbove12 undocumented
	RatingAppsType_AgesAbove12 RatingAppsType = 4
	// RatingAppsType_AgesAbove17 undocumented
	RatingAppsType_AgesAbove17 RatingAppsType = 5
)

// RatingAustraliaMoviesType undocumented
type RatingAustraliaMoviesType int

const (
	// RatingAustraliaMoviesType_AllAllowed undocumented
	RatingAustraliaMoviesType_AllAllowed RatingAustraliaMoviesType = 0
	// RatingAustraliaMoviesType_AllBlocked undocumented
	RatingAustraliaMoviesType_AllBlocked RatingAustraliaMoviesType = 1
	// RatingAustraliaMoviesType_General undocumented
	RatingAustraliaMoviesType_General RatingAustraliaMoviesType = 2
	// RatingAustraliaMoviesType_ParentalGuidance undocumented
	RatingAustraliaMoviesType_ParentalGuidance RatingAustraliaMoviesType = 3
	// RatingAustraliaMoviesType_Mature undocumented
	RatingAustraliaMoviesType_Mature RatingAustraliaMoviesType = 4
	// RatingAustraliaMoviesType_AgesAbove15 undocumented
	RatingAustraliaMoviesType_AgesAbove15 RatingAustraliaMoviesType = 5
	// RatingAustraliaMoviesType_AgesAbove18 undocumented
	RatingAustraliaMoviesType_AgesAbove18 RatingAustraliaMoviesType = 6
)

// RatingAustraliaTelevisionType undocumented
type RatingAustraliaTelevisionType int

const (
	// RatingAustraliaTelevisionType_AllAllowed undocumented
	RatingAustraliaTelevisionType_AllAllowed RatingAustraliaTelevisionType = 0
	// RatingAustraliaTelevisionType_AllBlocked undocumented
	RatingAustraliaTelevisionType_AllBlocked RatingAustraliaTelevisionType = 1
	// RatingAustraliaTelevisionType_Preschoolers undocumented
	RatingAustraliaTelevisionType_Preschoolers RatingAustraliaTelevisionType = 2
	// RatingAustraliaTelevisionType_Children undocumented
	RatingAustraliaTelevisionType_Children RatingAustraliaTelevisionType = 3
	// RatingAustraliaTelevisionType_General undocumented
	RatingAustraliaTelevisionType_General RatingAustraliaTelevisionType = 4
	// RatingAustraliaTelevisionType_ParentalGuidance undocumented
	RatingAustraliaTelevisionType_ParentalGuidance RatingAustraliaTelevisionType = 5
	// RatingAustraliaTelevisionType_Mature undocumented
	RatingAustraliaTelevisionType_Mature RatingAustraliaTelevisionType = 6
	// RatingAustraliaTelevisionType_AgesAbove15 undocumented
	RatingAustraliaTelevisionType_AgesAbove15 RatingAustraliaTelevisionType = 7
	// RatingAustraliaTelevisionType_AgesAbove15AdultViolence undocumented
	RatingAustraliaTelevisionType_AgesAbove15AdultViolence RatingAustraliaTelevisionType = 8
)

// RatingCanadaMoviesType undocumented
type RatingCanadaMoviesType int

const (
	// RatingCanadaMoviesType_AllAllowed undocumented
	RatingCanadaMoviesType_AllAllowed RatingCanadaMoviesType = 0
	// RatingCanadaMoviesType_AllBlocked undocumented
	RatingCanadaMoviesType_AllBlocked RatingCanadaMoviesType = 1
	// RatingCanadaMoviesType_General undocumented
	RatingCanadaMoviesType_General RatingCanadaMoviesType = 2
	// RatingCanadaMoviesType_ParentalGuidance undocumented
	RatingCanadaMoviesType_ParentalGuidance RatingCanadaMoviesType = 3
	// RatingCanadaMoviesType_AgesAbove14 undocumented
	RatingCanadaMoviesType_AgesAbove14 RatingCanadaMoviesType = 4
	// RatingCanadaMoviesType_AgesAbove18 undocumented
	RatingCanadaMoviesType_AgesAbove18 RatingCanadaMoviesType = 5
	// RatingCanadaMoviesType_Restricted undocumented
	RatingCanadaMoviesType_Restricted RatingCanadaMoviesType = 6
)

// RatingCanadaTelevisionType undocumented
type RatingCanadaTelevisionType int

const (
	// RatingCanadaTelevisionType_AllAllowed undocumented
	RatingCanadaTelevisionType_AllAllowed RatingCanadaTelevisionType = 0
	// RatingCanadaTelevisionType_AllBlocked undocumented
	RatingCanadaTelevisionType_AllBlocked RatingCanadaTelevisionType = 1
	// RatingCanadaTelevisionType_Children undocumented
	RatingCanadaTelevisionType_Children RatingCanadaTelevisionType = 2
	// RatingCanadaTelevisionType_ChildrenAbove8 undocumented
	RatingCanadaTelevisionType_ChildrenAbove8 RatingCanadaTelevisionType = 3
	// RatingCanadaTelevisionType_General undocumented
	RatingCanadaTelevisionType_General RatingCanadaTelevisionType = 4
	// RatingCanadaTelevisionType_ParentalGuidance undocumented
	RatingCanadaTelevisionType_ParentalGuidance RatingCanadaTelevisionType = 5
	// RatingCanadaTelevisionType_AgesAbove14 undocumented
	RatingCanadaTelevisionType_AgesAbove14 RatingCanadaTelevisionType = 6
	// RatingCanadaTelevisionType_AgesAbove18 undocumented
	RatingCanadaTelevisionType_AgesAbove18 RatingCanadaTelevisionType = 7
)

// RatingFranceMoviesType undocumented
type RatingFranceMoviesType int

const (
	// RatingFranceMoviesType_AllAllowed undocumented
	RatingFranceMoviesType_AllAllowed RatingFranceMoviesType = 0
	// RatingFranceMoviesType_AllBlocked undocumented
	RatingFranceMoviesType_AllBlocked RatingFranceMoviesType = 1
	// RatingFranceMoviesType_AgesAbove10 undocumented
	RatingFranceMoviesType_AgesAbove10 RatingFranceMoviesType = 2
	// RatingFranceMoviesType_AgesAbove12 undocumented
	RatingFranceMoviesType_AgesAbove12 RatingFranceMoviesType = 3
	// RatingFranceMoviesType_AgesAbove16 undocumented
	RatingFranceMoviesType_AgesAbove16 RatingFranceMoviesType = 4
	// RatingFranceMoviesType_AgesAbove18 undocumented
	RatingFranceMoviesType_AgesAbove18 RatingFranceMoviesType = 5
)

// RatingFranceTelevisionType undocumented
type RatingFranceTelevisionType int

const (
	// RatingFranceTelevisionType_AllAllowed undocumented
	RatingFranceTelevisionType_AllAllowed RatingFranceTelevisionType = 0
	// RatingFranceTelevisionType_AllBlocked undocumented
	RatingFranceTelevisionType_AllBlocked RatingFranceTelevisionType = 1
	// RatingFranceTelevisionType_AgesAbove10 undocumented
	RatingFranceTelevisionType_AgesAbove10 RatingFranceTelevisionType = 2
	// RatingFranceTelevisionType_AgesAbove12 undocumented
	RatingFranceTelevisionType_AgesAbove12 RatingFranceTelevisionType = 3
	// RatingFranceTelevisionType_AgesAbove16 undocumented
	RatingFranceTelevisionType_AgesAbove16 RatingFranceTelevisionType = 4
	// RatingFranceTelevisionType_AgesAbove18 undocumented
	RatingFranceTelevisionType_AgesAbove18 RatingFranceTelevisionType = 5
)

// RatingGermanyMoviesType undocumented
type RatingGermanyMoviesType int

const (
	// RatingGermanyMoviesType_AllAllowed undocumented
	RatingGermanyMoviesType_AllAllowed RatingGermanyMoviesType = 0
	// RatingGermanyMoviesType_AllBlocked undocumented
	RatingGermanyMoviesType_AllBlocked RatingGermanyMoviesType = 1
	// RatingGermanyMoviesType_General undocumented
	RatingGermanyMoviesType_General RatingGermanyMoviesType = 2
	// RatingGermanyMoviesType_AgesAbove6 undocumented
	RatingGermanyMoviesType_AgesAbove6 RatingGermanyMoviesType = 3
	// RatingGermanyMoviesType_AgesAbove12 undocumented
	RatingGermanyMoviesType_AgesAbove12 RatingGermanyMoviesType = 4
	// RatingGermanyMoviesType_AgesAbove16 undocumented
	RatingGermanyMoviesType_AgesAbove16 RatingGermanyMoviesType = 5
	// RatingGermanyMoviesType_Adults undocumented
	RatingGermanyMoviesType_Adults RatingGermanyMoviesType = 6
)

// RatingGermanyTelevisionType undocumented
type RatingGermanyTelevisionType int

const (
	// RatingGermanyTelevisionType_AllAllowed undocumented
	RatingGermanyTelevisionType_AllAllowed RatingGermanyTelevisionType = 0
	// RatingGermanyTelevisionType_AllBlocked undocumented
	RatingGermanyTelevisionType_AllBlocked RatingGermanyTelevisionType = 1
	// RatingGermanyTelevisionType_General undocumented
	RatingGermanyTelevisionType_General RatingGermanyTelevisionType = 2
	// RatingGermanyTelevisionType_AgesAbove6 undocumented
	RatingGermanyTelevisionType_AgesAbove6 RatingGermanyTelevisionType = 3
	// RatingGermanyTelevisionType_AgesAbove12 undocumented
	RatingGermanyTelevisionType_AgesAbove12 RatingGermanyTelevisionType = 4
	// RatingGermanyTelevisionType_AgesAbove16 undocumented
	RatingGermanyTelevisionType_AgesAbove16 RatingGermanyTelevisionType = 5
	// RatingGermanyTelevisionType_Adults undocumented
	RatingGermanyTelevisionType_Adults RatingGermanyTelevisionType = 6
)

// RatingIrelandMoviesType undocumented
type RatingIrelandMoviesType int

const (
	// RatingIrelandMoviesType_AllAllowed undocumented
	RatingIrelandMoviesType_AllAllowed RatingIrelandMoviesType = 0
	// RatingIrelandMoviesType_AllBlocked undocumented
	RatingIrelandMoviesType_AllBlocked RatingIrelandMoviesType = 1
	// RatingIrelandMoviesType_General undocumented
	RatingIrelandMoviesType_General RatingIrelandMoviesType = 2
	// RatingIrelandMoviesType_ParentalGuidance undocumented
	RatingIrelandMoviesType_ParentalGuidance RatingIrelandMoviesType = 3
	// RatingIrelandMoviesType_AgesAbove12 undocumented
	RatingIrelandMoviesType_AgesAbove12 RatingIrelandMoviesType = 4
	// RatingIrelandMoviesType_AgesAbove15 undocumented
	RatingIrelandMoviesType_AgesAbove15 RatingIrelandMoviesType = 5
	// RatingIrelandMoviesType_AgesAbove16 undocumented
	RatingIrelandMoviesType_AgesAbove16 RatingIrelandMoviesType = 6
	// RatingIrelandMoviesType_Adults undocumented
	RatingIrelandMoviesType_Adults RatingIrelandMoviesType = 7
)

// RatingIrelandTelevisionType undocumented
type RatingIrelandTelevisionType int

const (
	// RatingIrelandTelevisionType_AllAllowed undocumented
	RatingIrelandTelevisionType_AllAllowed RatingIrelandTelevisionType = 0
	// RatingIrelandTelevisionType_AllBlocked undocumented
	RatingIrelandTelevisionType_AllBlocked RatingIrelandTelevisionType = 1
	// RatingIrelandTelevisionType_General undocumented
	RatingIrelandTelevisionType_General RatingIrelandTelevisionType = 2
	// RatingIrelandTelevisionType_Children undocumented
	RatingIrelandTelevisionType_Children RatingIrelandTelevisionType = 3
	// RatingIrelandTelevisionType_YoungAdults undocumented
	RatingIrelandTelevisionType_YoungAdults RatingIrelandTelevisionType = 4
	// RatingIrelandTelevisionType_ParentalSupervision undocumented
	RatingIrelandTelevisionType_ParentalSupervision RatingIrelandTelevisionType = 5
	// RatingIrelandTelevisionType_Mature undocumented
	RatingIrelandTelevisionType_Mature RatingIrelandTelevisionType = 6
)

// RatingJapanMoviesType undocumented
type RatingJapanMoviesType int

const (
	// RatingJapanMoviesType_AllAllowed undocumented
	RatingJapanMoviesType_AllAllowed RatingJapanMoviesType = 0
	// RatingJapanMoviesType_AllBlocked undocumented
	RatingJapanMoviesType_AllBlocked RatingJapanMoviesType = 1
	// RatingJapanMoviesType_General undocumented
	RatingJapanMoviesType_General RatingJapanMoviesType = 2
	// RatingJapanMoviesType_ParentalGuidance undocumented
	RatingJapanMoviesType_ParentalGuidance RatingJapanMoviesType = 3
	// RatingJapanMoviesType_AgesAbove15 undocumented
	RatingJapanMoviesType_AgesAbove15 RatingJapanMoviesType = 4
	// RatingJapanMoviesType_AgesAbove18 undocumented
	RatingJapanMoviesType_AgesAbove18 RatingJapanMoviesType = 5
)

// RatingJapanTelevisionType undocumented
type RatingJapanTelevisionType int

const (
	// RatingJapanTelevisionType_AllAllowed undocumented
	RatingJapanTelevisionType_AllAllowed RatingJapanTelevisionType = 0
	// RatingJapanTelevisionType_AllBlocked undocumented
	RatingJapanTelevisionType_AllBlocked RatingJapanTelevisionType = 1
	// RatingJapanTelevisionType_ExplicitAllowed undocumented
	RatingJapanTelevisionType_ExplicitAllowed RatingJapanTelevisionType = 2
)

// RatingNewZealandMoviesType undocumented
type RatingNewZealandMoviesType int

const (
	// RatingNewZealandMoviesType_AllAllowed undocumented
	RatingNewZealandMoviesType_AllAllowed RatingNewZealandMoviesType = 0
	// RatingNewZealandMoviesType_AllBlocked undocumented
	RatingNewZealandMoviesType_AllBlocked RatingNewZealandMoviesType = 1
	// RatingNewZealandMoviesType_General undocumented
	RatingNewZealandMoviesType_General RatingNewZealandMoviesType = 2
	// RatingNewZealandMoviesType_ParentalGuidance undocumented
	RatingNewZealandMoviesType_ParentalGuidance RatingNewZealandMoviesType = 3
	// RatingNewZealandMoviesType_Mature undocumented
	RatingNewZealandMoviesType_Mature RatingNewZealandMoviesType = 4
	// RatingNewZealandMoviesType_AgesAbove13 undocumented
	RatingNewZealandMoviesType_AgesAbove13 RatingNewZealandMoviesType = 5
	// RatingNewZealandMoviesType_AgesAbove15 undocumented
	RatingNewZealandMoviesType_AgesAbove15 RatingNewZealandMoviesType = 6
	// RatingNewZealandMoviesType_AgesAbove16 undocumented
	RatingNewZealandMoviesType_AgesAbove16 RatingNewZealandMoviesType = 7
	// RatingNewZealandMoviesType_AgesAbove18 undocumented
	RatingNewZealandMoviesType_AgesAbove18 RatingNewZealandMoviesType = 8
	// RatingNewZealandMoviesType_Restricted undocumented
	RatingNewZealandMoviesType_Restricted RatingNewZealandMoviesType = 9
	// RatingNewZealandMoviesType_AgesAbove16Restricted undocumented
	RatingNewZealandMoviesType_AgesAbove16Restricted RatingNewZealandMoviesType = 10
)

// RatingNewZealandTelevisionType undocumented
type RatingNewZealandTelevisionType int

const (
	// RatingNewZealandTelevisionType_AllAllowed undocumented
	RatingNewZealandTelevisionType_AllAllowed RatingNewZealandTelevisionType = 0
	// RatingNewZealandTelevisionType_AllBlocked undocumented
	RatingNewZealandTelevisionType_AllBlocked RatingNewZealandTelevisionType = 1
	// RatingNewZealandTelevisionType_General undocumented
	RatingNewZealandTelevisionType_General RatingNewZealandTelevisionType = 2
	// RatingNewZealandTelevisionType_ParentalGuidance undocumented
	RatingNewZealandTelevisionType_ParentalGuidance RatingNewZealandTelevisionType = 3
	// RatingNewZealandTelevisionType_Adults undocumented
	RatingNewZealandTelevisionType_Adults RatingNewZealandTelevisionType = 4
)

// RatingUnitedKingdomMoviesType undocumented
type RatingUnitedKingdomMoviesType int

const (
	// RatingUnitedKingdomMoviesType_AllAllowed undocumented
	RatingUnitedKingdomMoviesType_AllAllowed RatingUnitedKingdomMoviesType = 0
	// RatingUnitedKingdomMoviesType_AllBlocked undocumented
	RatingUnitedKingdomMoviesType_AllBlocked RatingUnitedKingdomMoviesType = 1
	// RatingUnitedKingdomMoviesType_General undocumented
	RatingUnitedKingdomMoviesType_General RatingUnitedKingdomMoviesType = 2
	// RatingUnitedKingdomMoviesType_UniversalChildren undocumented
	RatingUnitedKingdomMoviesType_UniversalChildren RatingUnitedKingdomMoviesType = 3
	// RatingUnitedKingdomMoviesType_ParentalGuidance undocumented
	RatingUnitedKingdomMoviesType_ParentalGuidance RatingUnitedKingdomMoviesType = 4
	// RatingUnitedKingdomMoviesType_AgesAbove12Video undocumented
	RatingUnitedKingdomMoviesType_AgesAbove12Video RatingUnitedKingdomMoviesType = 5
	// RatingUnitedKingdomMoviesType_AgesAbove12Cinema undocumented
	RatingUnitedKingdomMoviesType_AgesAbove12Cinema RatingUnitedKingdomMoviesType = 6
	// RatingUnitedKingdomMoviesType_AgesAbove15 undocumented
	RatingUnitedKingdomMoviesType_AgesAbove15 RatingUnitedKingdomMoviesType = 7
	// RatingUnitedKingdomMoviesType_Adults undocumented
	RatingUnitedKingdomMoviesType_Adults RatingUnitedKingdomMoviesType = 8
)

// RatingUnitedKingdomTelevisionType undocumented
type RatingUnitedKingdomTelevisionType int

const (
	// RatingUnitedKingdomTelevisionType_AllAllowed undocumented
	RatingUnitedKingdomTelevisionType_AllAllowed RatingUnitedKingdomTelevisionType = 0
	// RatingUnitedKingdomTelevisionType_AllBlocked undocumented
	RatingUnitedKingdomTelevisionType_AllBlocked RatingUnitedKingdomTelevisionType = 1
	// RatingUnitedKingdomTelevisionType_Caution undocumented
	RatingUnitedKingdomTelevisionType_Caution RatingUnitedKingdomTelevisionType = 2
)

// RatingUnitedStatesMoviesType undocumented
type RatingUnitedStatesMoviesType int

const (
	// RatingUnitedStatesMoviesType_AllAllowed undocumented
	RatingUnitedStatesMoviesType_AllAllowed RatingUnitedStatesMoviesType = 0
	// RatingUnitedStatesMoviesType_AllBlocked undocumented
	RatingUnitedStatesMoviesType_AllBlocked RatingUnitedStatesMoviesType = 1
	// RatingUnitedStatesMoviesType_General undocumented
	RatingUnitedStatesMoviesType_General RatingUnitedStatesMoviesType = 2
	// RatingUnitedStatesMoviesType_ParentalGuidance undocumented
	RatingUnitedStatesMoviesType_ParentalGuidance RatingUnitedStatesMoviesType = 3
	// RatingUnitedStatesMoviesType_ParentalGuidance13 undocumented
	RatingUnitedStatesMoviesType_ParentalGuidance13 RatingUnitedStatesMoviesType = 4
	// RatingUnitedStatesMoviesType_Restricted undocumented
	RatingUnitedStatesMoviesType_Restricted RatingUnitedStatesMoviesType = 5
	// RatingUnitedStatesMoviesType_Adults undocumented
	RatingUnitedStatesMoviesType_Adults RatingUnitedStatesMoviesType = 6
)

// RatingUnitedStatesTelevisionType undocumented
type RatingUnitedStatesTelevisionType int

const (
	// RatingUnitedStatesTelevisionType_AllAllowed undocumented
	RatingUnitedStatesTelevisionType_AllAllowed RatingUnitedStatesTelevisionType = 0
	// RatingUnitedStatesTelevisionType_AllBlocked undocumented
	RatingUnitedStatesTelevisionType_AllBlocked RatingUnitedStatesTelevisionType = 1
	// RatingUnitedStatesTelevisionType_ChildrenAll undocumented
	RatingUnitedStatesTelevisionType_ChildrenAll RatingUnitedStatesTelevisionType = 2
	// RatingUnitedStatesTelevisionType_ChildrenAbove7 undocumented
	RatingUnitedStatesTelevisionType_ChildrenAbove7 RatingUnitedStatesTelevisionType = 3
	// RatingUnitedStatesTelevisionType_General undocumented
	RatingUnitedStatesTelevisionType_General RatingUnitedStatesTelevisionType = 4
	// RatingUnitedStatesTelevisionType_ParentalGuidance undocumented
	RatingUnitedStatesTelevisionType_ParentalGuidance RatingUnitedStatesTelevisionType = 5
	// RatingUnitedStatesTelevisionType_ChildrenAbove14 undocumented
	RatingUnitedStatesTelevisionType_ChildrenAbove14 RatingUnitedStatesTelevisionType = 6
	// RatingUnitedStatesTelevisionType_Adults undocumented
	RatingUnitedStatesTelevisionType_Adults RatingUnitedStatesTelevisionType = 7
)

// RecipientScopeType undocumented
type RecipientScopeType int

const (
	// RecipientScopeType_None undocumented
	RecipientScopeType_None RecipientScopeType = 0
	// RecipientScopeType_Internal undocumented
	RecipientScopeType_Internal RecipientScopeType = 1
	// RecipientScopeType_External undocumented
	RecipientScopeType_External RecipientScopeType = 2
	// RecipientScopeType_ExternalPartner undocumented
	RecipientScopeType_ExternalPartner RecipientScopeType = 4
	// RecipientScopeType_ExternalNonPartner undocumented
	RecipientScopeType_ExternalNonPartner RecipientScopeType = 8
)

// RecurrencePatternType undocumented
type RecurrencePatternType int

const (
	// RecurrencePatternType_Daily undocumented
	RecurrencePatternType_Daily RecurrencePatternType = 0
	// RecurrencePatternType_Weekly undocumented
	RecurrencePatternType_Weekly RecurrencePatternType = 1
	// RecurrencePatternType_AbsoluteMonthly undocumented
	RecurrencePatternType_AbsoluteMonthly RecurrencePatternType = 2
	// RecurrencePatternType_RelativeMonthly undocumented
	RecurrencePatternType_RelativeMonthly RecurrencePatternType = 3
	// RecurrencePatternType_AbsoluteYearly undocumented
	RecurrencePatternType_AbsoluteYearly RecurrencePatternType = 4
	// RecurrencePatternType_RelativeYearly undocumented
	RecurrencePatternType_RelativeYearly RecurrencePatternType = 5
)

// RecurrenceRangeType undocumented
type RecurrenceRangeType int

const (
	// RecurrenceRangeType_EndDate undocumented
	RecurrenceRangeType_EndDate RecurrenceRangeType = 0
	// RecurrenceRangeType_NoEnd undocumented
	RecurrenceRangeType_NoEnd RecurrenceRangeType = 1
	// RecurrenceRangeType_Numbered undocumented
	RecurrenceRangeType_Numbered RecurrenceRangeType = 2
)

// RegistryHive undocumented
type RegistryHive int

const (
	// RegistryHive_Unknown undocumented
	RegistryHive_Unknown RegistryHive = 0
	// RegistryHive_CurrentConfig undocumented
	RegistryHive_CurrentConfig RegistryHive = 1
	// RegistryHive_CurrentUser undocumented
	RegistryHive_CurrentUser RegistryHive = 2
	// RegistryHive_LocalMachineSam undocumented
	RegistryHive_LocalMachineSam RegistryHive = 3
	// RegistryHive_LocalMachineSecurity undocumented
	RegistryHive_LocalMachineSecurity RegistryHive = 4
	// RegistryHive_LocalMachineSoftware undocumented
	RegistryHive_LocalMachineSoftware RegistryHive = 5
	// RegistryHive_LocalMachineSystem undocumented
	RegistryHive_LocalMachineSystem RegistryHive = 6
	// RegistryHive_UsersDefault undocumented
	RegistryHive_UsersDefault RegistryHive = 7
	// RegistryHive_UnknownFutureValue undocumented
	RegistryHive_UnknownFutureValue RegistryHive = 127
)

// RegistryOperation undocumented
type RegistryOperation int

const (
	// RegistryOperation_Unknown undocumented
	RegistryOperation_Unknown RegistryOperation = 0
	// RegistryOperation_Create undocumented
	RegistryOperation_Create RegistryOperation = 1
	// RegistryOperation_Modify undocumented
	RegistryOperation_Modify RegistryOperation = 2
	// RegistryOperation_Delete undocumented
	RegistryOperation_Delete RegistryOperation = 3
	// RegistryOperation_UnknownFutureValue undocumented
	RegistryOperation_UnknownFutureValue RegistryOperation = 127
)

// RegistryValueType undocumented
type RegistryValueType int

const (
	// RegistryValueType_Unknown undocumented
	RegistryValueType_Unknown RegistryValueType = 0
	// RegistryValueType_Binary undocumented
	RegistryValueType_Binary RegistryValueType = 1
	// RegistryValueType_Dword undocumented
	RegistryValueType_Dword RegistryValueType = 2
	// RegistryValueType_DwordLittleEndian undocumented
	RegistryValueType_DwordLittleEndian RegistryValueType = 3
	// RegistryValueType_DwordBigEndian undocumented
	RegistryValueType_DwordBigEndian RegistryValueType = 4
	// RegistryValueType_ExpandSz undocumented
	RegistryValueType_ExpandSz RegistryValueType = 5
	// RegistryValueType_Link undocumented
	RegistryValueType_Link RegistryValueType = 6
	// RegistryValueType_MultiSz undocumented
	RegistryValueType_MultiSz RegistryValueType = 7
	// RegistryValueType_None undocumented
	RegistryValueType_None RegistryValueType = 8
	// RegistryValueType_Qword undocumented
	RegistryValueType_Qword RegistryValueType = 9
	// RegistryValueType_QwordlittleEndian undocumented
	RegistryValueType_QwordlittleEndian RegistryValueType = 10
	// RegistryValueType_Sz undocumented
	RegistryValueType_Sz RegistryValueType = 11
	// RegistryValueType_UnknownFutureValue undocumented
	RegistryValueType_UnknownFutureValue RegistryValueType = 127
)

// RejectReason undocumented
type RejectReason int

const (
	// RejectReason_None undocumented
	RejectReason_None RejectReason = 0
	// RejectReason_Busy undocumented
	RejectReason_Busy RejectReason = 1
	// RejectReason_Forbidden undocumented
	RejectReason_Forbidden RejectReason = 2
	// RejectReason_UnknownFutureValue undocumented
	RejectReason_UnknownFutureValue RejectReason = 3
)

// RemoteAssistanceOnboardingStatus undocumented
type RemoteAssistanceOnboardingStatus int

const (
	// RemoteAssistanceOnboardingStatus_NotOnboarded undocumented
	RemoteAssistanceOnboardingStatus_NotOnboarded RemoteAssistanceOnboardingStatus = 0
	// RemoteAssistanceOnboardingStatus_Onboarding undocumented
	RemoteAssistanceOnboardingStatus_Onboarding RemoteAssistanceOnboardingStatus = 1
	// RemoteAssistanceOnboardingStatus_Onboarded undocumented
	RemoteAssistanceOnboardingStatus_Onboarded RemoteAssistanceOnboardingStatus = 2
)

// RequiredPasswordType undocumented
type RequiredPasswordType int

const (
	// RequiredPasswordType_DeviceDefault undocumented
	RequiredPasswordType_DeviceDefault RequiredPasswordType = 0
	// RequiredPasswordType_Alphanumeric undocumented
	RequiredPasswordType_Alphanumeric RequiredPasswordType = 1
	// RequiredPasswordType_Numeric undocumented
	RequiredPasswordType_Numeric RequiredPasswordType = 2
)

// ResponseType undocumented
type ResponseType int

const (
	// ResponseType_None undocumented
	ResponseType_None ResponseType = 0
	// ResponseType_Organizer undocumented
	ResponseType_Organizer ResponseType = 1
	// ResponseType_TentativelyAccepted undocumented
	ResponseType_TentativelyAccepted ResponseType = 2
	// ResponseType_Accepted undocumented
	ResponseType_Accepted ResponseType = 3
	// ResponseType_Declined undocumented
	ResponseType_Declined ResponseType = 4
	// ResponseType_NotResponded undocumented
	ResponseType_NotResponded ResponseType = 5
)

// RiskDetail undocumented
type RiskDetail int

const (
	// RiskDetail_None undocumented
	RiskDetail_None RiskDetail = 0
	// RiskDetail_AdminGeneratedTemporaryPassword undocumented
	RiskDetail_AdminGeneratedTemporaryPassword RiskDetail = 1
	// RiskDetail_UserPerformedSecuredPasswordChange undocumented
	RiskDetail_UserPerformedSecuredPasswordChange RiskDetail = 2
	// RiskDetail_UserPerformedSecuredPasswordReset undocumented
	RiskDetail_UserPerformedSecuredPasswordReset RiskDetail = 3
	// RiskDetail_AdminConfirmedSigninSafe undocumented
	RiskDetail_AdminConfirmedSigninSafe RiskDetail = 4
	// RiskDetail_AiConfirmedSigninSafe undocumented
	RiskDetail_AiConfirmedSigninSafe RiskDetail = 5
	// RiskDetail_UserPassedMFADrivenByRiskBasedPolicy undocumented
	RiskDetail_UserPassedMFADrivenByRiskBasedPolicy RiskDetail = 6
	// RiskDetail_AdminDismissedAllRiskForUser undocumented
	RiskDetail_AdminDismissedAllRiskForUser RiskDetail = 7
	// RiskDetail_AdminConfirmedSigninCompromised undocumented
	RiskDetail_AdminConfirmedSigninCompromised RiskDetail = 8
	// RiskDetail_Hidden undocumented
	RiskDetail_Hidden RiskDetail = 9
	// RiskDetail_AdminConfirmedUserCompromised undocumented
	RiskDetail_AdminConfirmedUserCompromised RiskDetail = 10
	// RiskDetail_UnknownFutureValue undocumented
	RiskDetail_UnknownFutureValue RiskDetail = 11
)

// RiskEventType undocumented
type RiskEventType int

const (
	// RiskEventType_UnlikelyTravel undocumented
	RiskEventType_UnlikelyTravel RiskEventType = 0
	// RiskEventType_AnonymizedIPAddress undocumented
	RiskEventType_AnonymizedIPAddress RiskEventType = 1
	// RiskEventType_MaliciousIPAddress undocumented
	RiskEventType_MaliciousIPAddress RiskEventType = 2
	// RiskEventType_UnfamiliarFeatures undocumented
	RiskEventType_UnfamiliarFeatures RiskEventType = 3
	// RiskEventType_MalwareInfectedIPAddress undocumented
	RiskEventType_MalwareInfectedIPAddress RiskEventType = 4
	// RiskEventType_SuspiciousIPAddress undocumented
	RiskEventType_SuspiciousIPAddress RiskEventType = 5
	// RiskEventType_LeakedCredentials undocumented
	RiskEventType_LeakedCredentials RiskEventType = 6
	// RiskEventType_InvestigationsThreatIntelligence undocumented
	RiskEventType_InvestigationsThreatIntelligence RiskEventType = 7
	// RiskEventType_Generic undocumented
	RiskEventType_Generic RiskEventType = 8
	// RiskEventType_AdminConfirmedUserCompromised undocumented
	RiskEventType_AdminConfirmedUserCompromised RiskEventType = 9
	// RiskEventType_McasImpossibleTravel undocumented
	RiskEventType_McasImpossibleTravel RiskEventType = 10
	// RiskEventType_McasSuspiciousInboxManipulationRules undocumented
	RiskEventType_McasSuspiciousInboxManipulationRules RiskEventType = 11
	// RiskEventType_InvestigationsThreatIntelligenceSigninLinked undocumented
	RiskEventType_InvestigationsThreatIntelligenceSigninLinked RiskEventType = 12
	// RiskEventType_MaliciousIPAddressValidCredentialsBlockedIP undocumented
	RiskEventType_MaliciousIPAddressValidCredentialsBlockedIP RiskEventType = 13
	// RiskEventType_UnknownFutureValue undocumented
	RiskEventType_UnknownFutureValue RiskEventType = 14
)

// RiskLevel undocumented
type RiskLevel int

const (
	// RiskLevel_Low undocumented
	RiskLevel_Low RiskLevel = 0
	// RiskLevel_Medium undocumented
	RiskLevel_Medium RiskLevel = 1
	// RiskLevel_High undocumented
	RiskLevel_High RiskLevel = 2
	// RiskLevel_Hidden undocumented
	RiskLevel_Hidden RiskLevel = 3
	// RiskLevel_None undocumented
	RiskLevel_None RiskLevel = 4
	// RiskLevel_UnknownFutureValue undocumented
	RiskLevel_UnknownFutureValue RiskLevel = 5
)

// RiskState undocumented
type RiskState int

const (
	// RiskState_None undocumented
	RiskState_None RiskState = 0
	// RiskState_ConfirmedSafe undocumented
	RiskState_ConfirmedSafe RiskState = 1
	// RiskState_Remediated undocumented
	RiskState_Remediated RiskState = 2
	// RiskState_Dismissed undocumented
	RiskState_Dismissed RiskState = 3
	// RiskState_AtRisk undocumented
	RiskState_AtRisk RiskState = 4
	// RiskState_ConfirmedCompromised undocumented
	RiskState_ConfirmedCompromised RiskState = 5
	// RiskState_UnknownFutureValue undocumented
	RiskState_UnknownFutureValue RiskState = 6
)

// SafeSearchFilterType undocumented
type SafeSearchFilterType int

const (
	// SafeSearchFilterType_UserDefined undocumented
	SafeSearchFilterType_UserDefined SafeSearchFilterType = 0
	// SafeSearchFilterType_Strict undocumented
	SafeSearchFilterType_Strict SafeSearchFilterType = 1
	// SafeSearchFilterType_Moderate undocumented
	SafeSearchFilterType_Moderate SafeSearchFilterType = 2
)

// ScreenSharingRole undocumented
type ScreenSharingRole int

const (
	// ScreenSharingRole_Viewer undocumented
	ScreenSharingRole_Viewer ScreenSharingRole = 0
	// ScreenSharingRole_Sharer undocumented
	ScreenSharingRole_Sharer ScreenSharingRole = 1
)

// SecurityNetworkProtocol undocumented
type SecurityNetworkProtocol int

const (
	// SecurityNetworkProtocol_Ip undocumented
	SecurityNetworkProtocol_Ip SecurityNetworkProtocol = 0
	// SecurityNetworkProtocol_Icmp undocumented
	SecurityNetworkProtocol_Icmp SecurityNetworkProtocol = 1
	// SecurityNetworkProtocol_Igmp undocumented
	SecurityNetworkProtocol_Igmp SecurityNetworkProtocol = 2
	// SecurityNetworkProtocol_Ggp undocumented
	SecurityNetworkProtocol_Ggp SecurityNetworkProtocol = 3
	// SecurityNetworkProtocol_Ipv4 undocumented
	SecurityNetworkProtocol_Ipv4 SecurityNetworkProtocol = 4
	// SecurityNetworkProtocol_Tcp undocumented
	SecurityNetworkProtocol_Tcp SecurityNetworkProtocol = 6
	// SecurityNetworkProtocol_Pup undocumented
	SecurityNetworkProtocol_Pup SecurityNetworkProtocol = 12
	// SecurityNetworkProtocol_Udp undocumented
	SecurityNetworkProtocol_Udp SecurityNetworkProtocol = 17
	// SecurityNetworkProtocol_Idp undocumented
	SecurityNetworkProtocol_Idp SecurityNetworkProtocol = 22
	// SecurityNetworkProtocol_Ipv6 undocumented
	SecurityNetworkProtocol_Ipv6 SecurityNetworkProtocol = 41
	// SecurityNetworkProtocol_Ipv6RoutingHeader undocumented
	SecurityNetworkProtocol_Ipv6RoutingHeader SecurityNetworkProtocol = 43
	// SecurityNetworkProtocol_Ipv6FragmentHeader undocumented
	SecurityNetworkProtocol_Ipv6FragmentHeader SecurityNetworkProtocol = 44
	// SecurityNetworkProtocol_IpSecEncapsulatingSecurityPayload undocumented
	SecurityNetworkProtocol_IpSecEncapsulatingSecurityPayload SecurityNetworkProtocol = 50
	// SecurityNetworkProtocol_IpSecAuthenticationHeader undocumented
	SecurityNetworkProtocol_IpSecAuthenticationHeader SecurityNetworkProtocol = 51
	// SecurityNetworkProtocol_IcmpV6 undocumented
	SecurityNetworkProtocol_IcmpV6 SecurityNetworkProtocol = 58
	// SecurityNetworkProtocol_Ipv6NoNextHeader undocumented
	SecurityNetworkProtocol_Ipv6NoNextHeader SecurityNetworkProtocol = 59
	// SecurityNetworkProtocol_Ipv6DestinationOptions undocumented
	SecurityNetworkProtocol_Ipv6DestinationOptions SecurityNetworkProtocol = 60
	// SecurityNetworkProtocol_Nd undocumented
	SecurityNetworkProtocol_Nd SecurityNetworkProtocol = 77
	// SecurityNetworkProtocol_Raw undocumented
	SecurityNetworkProtocol_Raw SecurityNetworkProtocol = 255
	// SecurityNetworkProtocol_Ipx undocumented
	SecurityNetworkProtocol_Ipx SecurityNetworkProtocol = 1000
	// SecurityNetworkProtocol_Spx undocumented
	SecurityNetworkProtocol_Spx SecurityNetworkProtocol = 1256
	// SecurityNetworkProtocol_SpxII undocumented
	SecurityNetworkProtocol_SpxII SecurityNetworkProtocol = 1257
	// SecurityNetworkProtocol_UnknownFutureValue undocumented
	SecurityNetworkProtocol_UnknownFutureValue SecurityNetworkProtocol = 32767
	// SecurityNetworkProtocol_Unknown undocumented
	SecurityNetworkProtocol_Unknown SecurityNetworkProtocol = -1
)

// SelectionLikelihoodInfo undocumented
type SelectionLikelihoodInfo int

const (
	// SelectionLikelihoodInfo_NotSpecified undocumented
	SelectionLikelihoodInfo_NotSpecified SelectionLikelihoodInfo = 0
	// SelectionLikelihoodInfo_High undocumented
	SelectionLikelihoodInfo_High SelectionLikelihoodInfo = 1
)

// Sensitivity undocumented
type Sensitivity int

const (
	// Sensitivity_Normal undocumented
	Sensitivity_Normal Sensitivity = 0
	// Sensitivity_Personal undocumented
	Sensitivity_Personal Sensitivity = 1
	// Sensitivity_Private undocumented
	Sensitivity_Private Sensitivity = 2
	// Sensitivity_Confidential undocumented
	Sensitivity_Confidential Sensitivity = 3
)

// SharedPCAccountDeletionPolicyType undocumented
type SharedPCAccountDeletionPolicyType int

const (
	// SharedPCAccountDeletionPolicyType_Immediate undocumented
	SharedPCAccountDeletionPolicyType_Immediate SharedPCAccountDeletionPolicyType = 0
	// SharedPCAccountDeletionPolicyType_DiskSpaceThreshold undocumented
	SharedPCAccountDeletionPolicyType_DiskSpaceThreshold SharedPCAccountDeletionPolicyType = 1
	// SharedPCAccountDeletionPolicyType_DiskSpaceThresholdOrInactiveThreshold undocumented
	SharedPCAccountDeletionPolicyType_DiskSpaceThresholdOrInactiveThreshold SharedPCAccountDeletionPolicyType = 2
)

// SharedPCAllowedAccountType undocumented
type SharedPCAllowedAccountType int

const (
	// SharedPCAllowedAccountType_Guest undocumented
	SharedPCAllowedAccountType_Guest SharedPCAllowedAccountType = 1
	// SharedPCAllowedAccountType_Domain undocumented
	SharedPCAllowedAccountType_Domain SharedPCAllowedAccountType = 2
)

// SiteSecurityLevel undocumented
type SiteSecurityLevel int

const (
	// SiteSecurityLevel_UserDefined undocumented
	SiteSecurityLevel_UserDefined SiteSecurityLevel = 0
	// SiteSecurityLevel_Low undocumented
	SiteSecurityLevel_Low SiteSecurityLevel = 1
	// SiteSecurityLevel_MediumLow undocumented
	SiteSecurityLevel_MediumLow SiteSecurityLevel = 2
	// SiteSecurityLevel_Medium undocumented
	SiteSecurityLevel_Medium SiteSecurityLevel = 3
	// SiteSecurityLevel_MediumHigh undocumented
	SiteSecurityLevel_MediumHigh SiteSecurityLevel = 4
	// SiteSecurityLevel_High undocumented
	SiteSecurityLevel_High SiteSecurityLevel = 5
)

// StateManagementSetting undocumented
type StateManagementSetting int

const (
	// StateManagementSetting_NotConfigured undocumented
	StateManagementSetting_NotConfigured StateManagementSetting = 0
	// StateManagementSetting_Blocked undocumented
	StateManagementSetting_Blocked StateManagementSetting = 1
	// StateManagementSetting_Allowed undocumented
	StateManagementSetting_Allowed StateManagementSetting = 2
)

// Status undocumented
type Status int

const (
	// Status_Active undocumented
	Status_Active Status = 0
	// Status_Updated undocumented
	Status_Updated Status = 1
	// Status_Deleted undocumented
	Status_Deleted Status = 2
	// Status_Ignored undocumented
	Status_Ignored Status = 3
	// Status_UnknownFutureValue undocumented
	Status_UnknownFutureValue Status = 4
)

// TeamVisibilityType undocumented
type TeamVisibilityType int

const (
	// TeamVisibilityType_Private undocumented
	TeamVisibilityType_Private TeamVisibilityType = 0
	// TeamVisibilityType_Public undocumented
	TeamVisibilityType_Public TeamVisibilityType = 1
	// TeamVisibilityType_HiddenMembership undocumented
	TeamVisibilityType_HiddenMembership TeamVisibilityType = 2
	// TeamVisibilityType_UnknownFutureValue undocumented
	TeamVisibilityType_UnknownFutureValue TeamVisibilityType = 3
)

// TeamsAppDistributionMethod undocumented
type TeamsAppDistributionMethod int

const (
	// TeamsAppDistributionMethod_Store undocumented
	TeamsAppDistributionMethod_Store TeamsAppDistributionMethod = 0
	// TeamsAppDistributionMethod_Organization undocumented
	TeamsAppDistributionMethod_Organization TeamsAppDistributionMethod = 1
	// TeamsAppDistributionMethod_Sideloaded undocumented
	TeamsAppDistributionMethod_Sideloaded TeamsAppDistributionMethod = 2
	// TeamsAppDistributionMethod_UnknownFutureValue undocumented
	TeamsAppDistributionMethod_UnknownFutureValue TeamsAppDistributionMethod = 3
)

// TeamsAsyncOperationStatus undocumented
type TeamsAsyncOperationStatus int

const (
	// TeamsAsyncOperationStatus_Invalid undocumented
	TeamsAsyncOperationStatus_Invalid TeamsAsyncOperationStatus = 0
	// TeamsAsyncOperationStatus_NotStarted undocumented
	TeamsAsyncOperationStatus_NotStarted TeamsAsyncOperationStatus = 1
	// TeamsAsyncOperationStatus_InProgress undocumented
	TeamsAsyncOperationStatus_InProgress TeamsAsyncOperationStatus = 2
	// TeamsAsyncOperationStatus_Succeeded undocumented
	TeamsAsyncOperationStatus_Succeeded TeamsAsyncOperationStatus = 3
	// TeamsAsyncOperationStatus_Failed undocumented
	TeamsAsyncOperationStatus_Failed TeamsAsyncOperationStatus = 4
	// TeamsAsyncOperationStatus_UnknownFutureValue undocumented
	TeamsAsyncOperationStatus_UnknownFutureValue TeamsAsyncOperationStatus = 5
)

// TeamsAsyncOperationType undocumented
type TeamsAsyncOperationType int

const (
	// TeamsAsyncOperationType_Invalid undocumented
	TeamsAsyncOperationType_Invalid TeamsAsyncOperationType = 0
	// TeamsAsyncOperationType_CloneTeam undocumented
	TeamsAsyncOperationType_CloneTeam TeamsAsyncOperationType = 1
	// TeamsAsyncOperationType_ArchiveTeam undocumented
	TeamsAsyncOperationType_ArchiveTeam TeamsAsyncOperationType = 2
	// TeamsAsyncOperationType_UnarchiveTeam undocumented
	TeamsAsyncOperationType_UnarchiveTeam TeamsAsyncOperationType = 3
	// TeamsAsyncOperationType_CreateTeam undocumented
	TeamsAsyncOperationType_CreateTeam TeamsAsyncOperationType = 4
	// TeamsAsyncOperationType_UnknownFutureValue undocumented
	TeamsAsyncOperationType_UnknownFutureValue TeamsAsyncOperationType = 5
)

// TimeZoneStandard undocumented
type TimeZoneStandard int

const (
	// TimeZoneStandard_Windows undocumented
	TimeZoneStandard_Windows TimeZoneStandard = 0
	// TimeZoneStandard_Iana undocumented
	TimeZoneStandard_Iana TimeZoneStandard = 1
)

// Tone undocumented
type Tone int

const (
	// Tone_Tone0 undocumented
	Tone_Tone0 Tone = 0
	// Tone_Tone1 undocumented
	Tone_Tone1 Tone = 1
	// Tone_Tone2 undocumented
	Tone_Tone2 Tone = 2
	// Tone_Tone3 undocumented
	Tone_Tone3 Tone = 3
	// Tone_Tone4 undocumented
	Tone_Tone4 Tone = 4
	// Tone_Tone5 undocumented
	Tone_Tone5 Tone = 5
	// Tone_Tone6 undocumented
	Tone_Tone6 Tone = 6
	// Tone_Tone7 undocumented
	Tone_Tone7 Tone = 7
	// Tone_Tone8 undocumented
	Tone_Tone8 Tone = 8
	// Tone_Tone9 undocumented
	Tone_Tone9 Tone = 9
	// Tone_Star undocumented
	Tone_Star Tone = 10
	// Tone_Pound undocumented
	Tone_Pound Tone = 11
	// Tone_A undocumented
	Tone_A Tone = 12
	// Tone_B undocumented
	Tone_B Tone = 13
	// Tone_C undocumented
	Tone_C Tone = 14
	// Tone_D undocumented
	Tone_D Tone = 15
	// Tone_Flash undocumented
	Tone_Flash Tone = 16
)

// UserAccountSecurityType undocumented
type UserAccountSecurityType int

const (
	// UserAccountSecurityType_Unknown undocumented
	UserAccountSecurityType_Unknown UserAccountSecurityType = 0
	// UserAccountSecurityType_Standard undocumented
	UserAccountSecurityType_Standard UserAccountSecurityType = 1
	// UserAccountSecurityType_Power undocumented
	UserAccountSecurityType_Power UserAccountSecurityType = 2
	// UserAccountSecurityType_Administrator undocumented
	UserAccountSecurityType_Administrator UserAccountSecurityType = 3
	// UserAccountSecurityType_UnknownFutureValue undocumented
	UserAccountSecurityType_UnknownFutureValue UserAccountSecurityType = 127
)

// VisibilitySetting undocumented
type VisibilitySetting int

const (
	// VisibilitySetting_NotConfigured undocumented
	VisibilitySetting_NotConfigured VisibilitySetting = 0
	// VisibilitySetting_Hide undocumented
	VisibilitySetting_Hide VisibilitySetting = 1
	// VisibilitySetting_Show undocumented
	VisibilitySetting_Show VisibilitySetting = 2
)

// VppTokenAccountType undocumented
type VppTokenAccountType int

const (
	// VppTokenAccountType_Business undocumented
	VppTokenAccountType_Business VppTokenAccountType = 0
	// VppTokenAccountType_Education undocumented
	VppTokenAccountType_Education VppTokenAccountType = 1
)

// VppTokenState undocumented
type VppTokenState int

const (
	// VppTokenState_Unknown undocumented
	VppTokenState_Unknown VppTokenState = 0
	// VppTokenState_Valid undocumented
	VppTokenState_Valid VppTokenState = 1
	// VppTokenState_Expired undocumented
	VppTokenState_Expired VppTokenState = 2
	// VppTokenState_Invalid undocumented
	VppTokenState_Invalid VppTokenState = 3
	// VppTokenState_AssignedToExternalMDM undocumented
	VppTokenState_AssignedToExternalMDM VppTokenState = 4
)

// VppTokenSyncStatus undocumented
type VppTokenSyncStatus int

const (
	// VppTokenSyncStatus_None undocumented
	VppTokenSyncStatus_None VppTokenSyncStatus = 0
	// VppTokenSyncStatus_InProgress undocumented
	VppTokenSyncStatus_InProgress VppTokenSyncStatus = 1
	// VppTokenSyncStatus_Completed undocumented
	VppTokenSyncStatus_Completed VppTokenSyncStatus = 2
	// VppTokenSyncStatus_Failed undocumented
	VppTokenSyncStatus_Failed VppTokenSyncStatus = 3
)

// WebBrowserCookieSettings undocumented
type WebBrowserCookieSettings int

const (
	// WebBrowserCookieSettings_BrowserDefault undocumented
	WebBrowserCookieSettings_BrowserDefault WebBrowserCookieSettings = 0
	// WebBrowserCookieSettings_BlockAlways undocumented
	WebBrowserCookieSettings_BlockAlways WebBrowserCookieSettings = 1
	// WebBrowserCookieSettings_AllowCurrentWebSite undocumented
	WebBrowserCookieSettings_AllowCurrentWebSite WebBrowserCookieSettings = 2
	// WebBrowserCookieSettings_AllowFromWebsitesVisited undocumented
	WebBrowserCookieSettings_AllowFromWebsitesVisited WebBrowserCookieSettings = 3
	// WebBrowserCookieSettings_AllowAlways undocumented
	WebBrowserCookieSettings_AllowAlways WebBrowserCookieSettings = 4
)

// WebsiteType undocumented
type WebsiteType int

const (
	// WebsiteType_Other undocumented
	WebsiteType_Other WebsiteType = 0
	// WebsiteType_Home undocumented
	WebsiteType_Home WebsiteType = 1
	// WebsiteType_Work undocumented
	WebsiteType_Work WebsiteType = 2
	// WebsiteType_Blog undocumented
	WebsiteType_Blog WebsiteType = 3
	// WebsiteType_Profile undocumented
	WebsiteType_Profile WebsiteType = 4
)

// WeekIndex undocumented
type WeekIndex int

const (
	// WeekIndex_First undocumented
	WeekIndex_First WeekIndex = 0
	// WeekIndex_Second undocumented
	WeekIndex_Second WeekIndex = 1
	// WeekIndex_Third undocumented
	WeekIndex_Third WeekIndex = 2
	// WeekIndex_Fourth undocumented
	WeekIndex_Fourth WeekIndex = 3
	// WeekIndex_Last undocumented
	WeekIndex_Last WeekIndex = 4
)

// WeeklySchedule undocumented
type WeeklySchedule int

const (
	// WeeklySchedule_UserDefined undocumented
	WeeklySchedule_UserDefined WeeklySchedule = 0
	// WeeklySchedule_Everyday undocumented
	WeeklySchedule_Everyday WeeklySchedule = 1
	// WeeklySchedule_Sunday undocumented
	WeeklySchedule_Sunday WeeklySchedule = 2
	// WeeklySchedule_Monday undocumented
	WeeklySchedule_Monday WeeklySchedule = 3
	// WeeklySchedule_Tuesday undocumented
	WeeklySchedule_Tuesday WeeklySchedule = 4
	// WeeklySchedule_Wednesday undocumented
	WeeklySchedule_Wednesday WeeklySchedule = 5
	// WeeklySchedule_Thursday undocumented
	WeeklySchedule_Thursday WeeklySchedule = 6
	// WeeklySchedule_Friday undocumented
	WeeklySchedule_Friday WeeklySchedule = 7
	// WeeklySchedule_Saturday undocumented
	WeeklySchedule_Saturday WeeklySchedule = 8
)

// WelcomeScreenMeetingInformation undocumented
type WelcomeScreenMeetingInformation int

const (
	// WelcomeScreenMeetingInformation_UserDefined undocumented
	WelcomeScreenMeetingInformation_UserDefined WelcomeScreenMeetingInformation = 0
	// WelcomeScreenMeetingInformation_ShowOrganizerAndTimeOnly undocumented
	WelcomeScreenMeetingInformation_ShowOrganizerAndTimeOnly WelcomeScreenMeetingInformation = 1
	// WelcomeScreenMeetingInformation_ShowOrganizerAndTimeAndSubject undocumented
	WelcomeScreenMeetingInformation_ShowOrganizerAndTimeAndSubject WelcomeScreenMeetingInformation = 2
)

// Windows10EditionType undocumented
type Windows10EditionType int

const (
	// Windows10EditionType_Windows10Enterprise undocumented
	Windows10EditionType_Windows10Enterprise Windows10EditionType = 0
	// Windows10EditionType_Windows10EnterpriseN undocumented
	Windows10EditionType_Windows10EnterpriseN Windows10EditionType = 1
	// Windows10EditionType_Windows10Education undocumented
	Windows10EditionType_Windows10Education Windows10EditionType = 2
	// Windows10EditionType_Windows10EducationN undocumented
	Windows10EditionType_Windows10EducationN Windows10EditionType = 3
	// Windows10EditionType_Windows10MobileEnterprise undocumented
	Windows10EditionType_Windows10MobileEnterprise Windows10EditionType = 4
	// Windows10EditionType_Windows10HolographicEnterprise undocumented
	Windows10EditionType_Windows10HolographicEnterprise Windows10EditionType = 5
	// Windows10EditionType_Windows10Professional undocumented
	Windows10EditionType_Windows10Professional Windows10EditionType = 6
	// Windows10EditionType_Windows10ProfessionalN undocumented
	Windows10EditionType_Windows10ProfessionalN Windows10EditionType = 7
	// Windows10EditionType_Windows10ProfessionalEducation undocumented
	Windows10EditionType_Windows10ProfessionalEducation Windows10EditionType = 8
	// Windows10EditionType_Windows10ProfessionalEducationN undocumented
	Windows10EditionType_Windows10ProfessionalEducationN Windows10EditionType = 9
	// Windows10EditionType_Windows10ProfessionalWorkstation undocumented
	Windows10EditionType_Windows10ProfessionalWorkstation Windows10EditionType = 10
	// Windows10EditionType_Windows10ProfessionalWorkstationN undocumented
	Windows10EditionType_Windows10ProfessionalWorkstationN Windows10EditionType = 11
)

// WindowsArchitecture undocumented
type WindowsArchitecture int

const (
	// WindowsArchitecture_None undocumented
	WindowsArchitecture_None WindowsArchitecture = 0
	// WindowsArchitecture_X86 undocumented
	WindowsArchitecture_X86 WindowsArchitecture = 1
	// WindowsArchitecture_X64 undocumented
	WindowsArchitecture_X64 WindowsArchitecture = 2
	// WindowsArchitecture_Arm undocumented
	WindowsArchitecture_Arm WindowsArchitecture = 4
	// WindowsArchitecture_Neutral undocumented
	WindowsArchitecture_Neutral WindowsArchitecture = 8
)

// WindowsDeliveryOptimizationMode undocumented
type WindowsDeliveryOptimizationMode int

const (
	// WindowsDeliveryOptimizationMode_UserDefined undocumented
	WindowsDeliveryOptimizationMode_UserDefined WindowsDeliveryOptimizationMode = 0
	// WindowsDeliveryOptimizationMode_HttpOnly undocumented
	WindowsDeliveryOptimizationMode_HttpOnly WindowsDeliveryOptimizationMode = 1
	// WindowsDeliveryOptimizationMode_HttpWithPeeringNat undocumented
	WindowsDeliveryOptimizationMode_HttpWithPeeringNat WindowsDeliveryOptimizationMode = 2
	// WindowsDeliveryOptimizationMode_HttpWithPeeringPrivateGroup undocumented
	WindowsDeliveryOptimizationMode_HttpWithPeeringPrivateGroup WindowsDeliveryOptimizationMode = 3
	// WindowsDeliveryOptimizationMode_HttpWithInternetPeering undocumented
	WindowsDeliveryOptimizationMode_HttpWithInternetPeering WindowsDeliveryOptimizationMode = 4
	// WindowsDeliveryOptimizationMode_SimpleDownload undocumented
	WindowsDeliveryOptimizationMode_SimpleDownload WindowsDeliveryOptimizationMode = 99
	// WindowsDeliveryOptimizationMode_BypassMode undocumented
	WindowsDeliveryOptimizationMode_BypassMode WindowsDeliveryOptimizationMode = 100
)

// WindowsDeviceType undocumented
type WindowsDeviceType int

const (
	// WindowsDeviceType_None undocumented
	WindowsDeviceType_None WindowsDeviceType = 0
	// WindowsDeviceType_Desktop undocumented
	WindowsDeviceType_Desktop WindowsDeviceType = 1
	// WindowsDeviceType_Mobile undocumented
	WindowsDeviceType_Mobile WindowsDeviceType = 2
	// WindowsDeviceType_Holographic undocumented
	WindowsDeviceType_Holographic WindowsDeviceType = 4
	// WindowsDeviceType_Team undocumented
	WindowsDeviceType_Team WindowsDeviceType = 8
)

// WindowsHelloForBusinessPinUsage undocumented
type WindowsHelloForBusinessPinUsage int

const (
	// WindowsHelloForBusinessPinUsage_Allowed undocumented
	WindowsHelloForBusinessPinUsage_Allowed WindowsHelloForBusinessPinUsage = 0
	// WindowsHelloForBusinessPinUsage_Required undocumented
	WindowsHelloForBusinessPinUsage_Required WindowsHelloForBusinessPinUsage = 1
	// WindowsHelloForBusinessPinUsage_Disallowed undocumented
	WindowsHelloForBusinessPinUsage_Disallowed WindowsHelloForBusinessPinUsage = 2
)

// WindowsInformationProtectionEnforcementLevel undocumented
type WindowsInformationProtectionEnforcementLevel int

const (
	// WindowsInformationProtectionEnforcementLevel_NoProtection undocumented
	WindowsInformationProtectionEnforcementLevel_NoProtection WindowsInformationProtectionEnforcementLevel = 0
	// WindowsInformationProtectionEnforcementLevel_EncryptAndAuditOnly undocumented
	WindowsInformationProtectionEnforcementLevel_EncryptAndAuditOnly WindowsInformationProtectionEnforcementLevel = 1
	// WindowsInformationProtectionEnforcementLevel_EncryptAuditAndPrompt undocumented
	WindowsInformationProtectionEnforcementLevel_EncryptAuditAndPrompt WindowsInformationProtectionEnforcementLevel = 2
	// WindowsInformationProtectionEnforcementLevel_EncryptAuditAndBlock undocumented
	WindowsInformationProtectionEnforcementLevel_EncryptAuditAndBlock WindowsInformationProtectionEnforcementLevel = 3
)

// WindowsInformationProtectionPinCharacterRequirements undocumented
type WindowsInformationProtectionPinCharacterRequirements int

const (
	// WindowsInformationProtectionPinCharacterRequirements_NotAllow undocumented
	WindowsInformationProtectionPinCharacterRequirements_NotAllow WindowsInformationProtectionPinCharacterRequirements = 0
	// WindowsInformationProtectionPinCharacterRequirements_RequireAtLeastOne undocumented
	WindowsInformationProtectionPinCharacterRequirements_RequireAtLeastOne WindowsInformationProtectionPinCharacterRequirements = 1
	// WindowsInformationProtectionPinCharacterRequirements_Allow undocumented
	WindowsInformationProtectionPinCharacterRequirements_Allow WindowsInformationProtectionPinCharacterRequirements = 2
)

// WindowsSpotlightEnablementSettings undocumented
type WindowsSpotlightEnablementSettings int

const (
	// WindowsSpotlightEnablementSettings_NotConfigured undocumented
	WindowsSpotlightEnablementSettings_NotConfigured WindowsSpotlightEnablementSettings = 0
	// WindowsSpotlightEnablementSettings_Disabled undocumented
	WindowsSpotlightEnablementSettings_Disabled WindowsSpotlightEnablementSettings = 1
	// WindowsSpotlightEnablementSettings_Enabled undocumented
	WindowsSpotlightEnablementSettings_Enabled WindowsSpotlightEnablementSettings = 2
)

// WindowsStartMenuAppListVisibilityType undocumented
type WindowsStartMenuAppListVisibilityType int

const (
	// WindowsStartMenuAppListVisibilityType_UserDefined undocumented
	WindowsStartMenuAppListVisibilityType_UserDefined WindowsStartMenuAppListVisibilityType = 0
	// WindowsStartMenuAppListVisibilityType_Collapse undocumented
	WindowsStartMenuAppListVisibilityType_Collapse WindowsStartMenuAppListVisibilityType = 1
	// WindowsStartMenuAppListVisibilityType_Remove undocumented
	WindowsStartMenuAppListVisibilityType_Remove WindowsStartMenuAppListVisibilityType = 2
	// WindowsStartMenuAppListVisibilityType_DisableSettingsApp undocumented
	WindowsStartMenuAppListVisibilityType_DisableSettingsApp WindowsStartMenuAppListVisibilityType = 4
)

// WindowsStartMenuModeType undocumented
type WindowsStartMenuModeType int

const (
	// WindowsStartMenuModeType_UserDefined undocumented
	WindowsStartMenuModeType_UserDefined WindowsStartMenuModeType = 0
	// WindowsStartMenuModeType_FullScreen undocumented
	WindowsStartMenuModeType_FullScreen WindowsStartMenuModeType = 1
	// WindowsStartMenuModeType_NonFullScreen undocumented
	WindowsStartMenuModeType_NonFullScreen WindowsStartMenuModeType = 2
)

// WindowsUpdateType undocumented
type WindowsUpdateType int

const (
	// WindowsUpdateType_UserDefined undocumented
	WindowsUpdateType_UserDefined WindowsUpdateType = 0
	// WindowsUpdateType_All undocumented
	WindowsUpdateType_All WindowsUpdateType = 1
	// WindowsUpdateType_BusinessReadyOnly undocumented
	WindowsUpdateType_BusinessReadyOnly WindowsUpdateType = 2
	// WindowsUpdateType_WindowsInsiderBuildFast undocumented
	WindowsUpdateType_WindowsInsiderBuildFast WindowsUpdateType = 3
	// WindowsUpdateType_WindowsInsiderBuildSlow undocumented
	WindowsUpdateType_WindowsInsiderBuildSlow WindowsUpdateType = 4
	// WindowsUpdateType_WindowsInsiderBuildRelease undocumented
	WindowsUpdateType_WindowsInsiderBuildRelease WindowsUpdateType = 5
)

// WindowsUserAccountControlSettings undocumented
type WindowsUserAccountControlSettings int

const (
	// WindowsUserAccountControlSettings_UserDefined undocumented
	WindowsUserAccountControlSettings_UserDefined WindowsUserAccountControlSettings = 0
	// WindowsUserAccountControlSettings_AlwaysNotify undocumented
	WindowsUserAccountControlSettings_AlwaysNotify WindowsUserAccountControlSettings = 1
	// WindowsUserAccountControlSettings_NotifyOnAppChanges undocumented
	WindowsUserAccountControlSettings_NotifyOnAppChanges WindowsUserAccountControlSettings = 2
	// WindowsUserAccountControlSettings_NotifyOnAppChangesWithoutDimming undocumented
	WindowsUserAccountControlSettings_NotifyOnAppChangesWithoutDimming WindowsUserAccountControlSettings = 3
	// WindowsUserAccountControlSettings_NeverNotify undocumented
	WindowsUserAccountControlSettings_NeverNotify WindowsUserAccountControlSettings = 4
)

// ComplexExtensionValue undocumented
type ComplexExtensionValue struct {
}

// CopyNotebookModel undocumented
type CopyNotebookModel struct {
	// IsDefault undocumented
	IsDefault *bool `json:"isDefault,omitempty"`
	// UserRole undocumented
	UserRole *OnenoteUserRole `json:"userRole,omitempty"`
	// IsShared undocumented
	IsShared *bool `json:"isShared,omitempty"`
	// SectionsUrl undocumented
	SectionsUrl *string `json:"sectionsUrl,omitempty"`
	// SectionGroupsUrl undocumented
	SectionGroupsUrl *string `json:"sectionGroupsUrl,omitempty"`
	// Links undocumented
	Links *NotebookLinks `json:"links,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// CreatedBy undocumented
	CreatedBy *string `json:"createdBy,omitempty"`
	// CreatedByIdentity undocumented
	CreatedByIdentity *IdentitySet `json:"createdByIdentity,omitempty"`
	// LastModifiedBy undocumented
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	// LastModifiedByIdentity undocumented
	LastModifiedByIdentity *IdentitySet `json:"lastModifiedByIdentity,omitempty"`
	// LastModifiedTime undocumented
	LastModifiedTime *time.Time `json:"lastModifiedTime,omitempty"`
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// Self undocumented
	Self *string `json:"self,omitempty"`
	// CreatedTime undocumented
	CreatedTime *time.Time `json:"createdTime,omitempty"`
}

// Json undocumented
type Json struct {
}

// AccessAction undocumented
type AccessAction struct {
}

// ActivityHistoryItem undocumented
type ActivityHistoryItem struct {
	Entity
	// Status undocumented
	Status *Status `json:"status,omitempty"`
	// ActiveDurationSeconds undocumented
	ActiveDurationSeconds *int `json:"activeDurationSeconds,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastActiveDateTime undocumented
	LastActiveDateTime *time.Time `json:"lastActiveDateTime,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// ExpirationDateTime undocumented
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// StartedDateTime undocumented
	StartedDateTime *time.Time `json:"startedDateTime,omitempty"`
	// UserTimezone undocumented
	UserTimezone *string `json:"userTimezone,omitempty"`
}

// AdministrativeUnit undocumented
type AdministrativeUnit struct {
	DirectoryObject
}

// Alert undocumented
type Alert struct {
	Entity
	// ActivityGroupName undocumented
	ActivityGroupName *string `json:"activityGroupName,omitempty"`
	// AssignedTo undocumented
	AssignedTo *string `json:"assignedTo,omitempty"`
	// AzureSubscriptionId undocumented
	AzureSubscriptionId *string `json:"azureSubscriptionId,omitempty"`
	// AzureTenantId undocumented
	AzureTenantId *string `json:"azureTenantId,omitempty"`
	// Category undocumented
	Category *string `json:"category,omitempty"`
	// ClosedDateTime undocumented
	ClosedDateTime *time.Time `json:"closedDateTime,omitempty"`
	// CloudAppStates undocumented
	CloudAppStates []CloudAppSecurityState `json:"cloudAppStates,omitempty"`
	// Comments undocumented
	Comments []string `json:"comments,omitempty"`
	// Confidence undocumented
	Confidence *int `json:"confidence,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// DetectionIds undocumented
	DetectionIds []string `json:"detectionIds,omitempty"`
	// EventDateTime undocumented
	EventDateTime *time.Time `json:"eventDateTime,omitempty"`
	// Feedback undocumented
	Feedback *AlertFeedback `json:"feedback,omitempty"`
	// FileStates undocumented
	FileStates []FileSecurityState `json:"fileStates,omitempty"`
	// HistoryStates undocumented
	HistoryStates []AlertHistoryState `json:"historyStates,omitempty"`
	// HostStates undocumented
	HostStates []HostSecurityState `json:"hostStates,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// MalwareStates undocumented
	MalwareStates []MalwareState `json:"malwareStates,omitempty"`
	// NetworkConnections undocumented
	NetworkConnections []NetworkConnection `json:"networkConnections,omitempty"`
	// Processes undocumented
	Processes []Process `json:"processes,omitempty"`
	// RecommendedActions undocumented
	RecommendedActions []string `json:"recommendedActions,omitempty"`
	// RegistryKeyStates undocumented
	RegistryKeyStates []RegistryKeyState `json:"registryKeyStates,omitempty"`
	// Severity undocumented
	Severity *AlertSeverity `json:"severity,omitempty"`
	// SourceMaterials undocumented
	SourceMaterials []string `json:"sourceMaterials,omitempty"`
	// Status undocumented
	Status *AlertStatus `json:"status,omitempty"`
	// Tags undocumented
	Tags []string `json:"tags,omitempty"`
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// Triggers undocumented
	Triggers []AlertTrigger `json:"triggers,omitempty"`
	// UserStates undocumented
	UserStates []UserSecurityState `json:"userStates,omitempty"`
	// VendorInformation undocumented
	VendorInformation *SecurityVendorInformation `json:"vendorInformation,omitempty"`
	// VulnerabilityStates undocumented
	VulnerabilityStates []VulnerabilityState `json:"vulnerabilityStates,omitempty"`
}

// AlertHistoryState undocumented
type AlertHistoryState struct {
	// AppId undocumented
	AppId *string `json:"appId,omitempty"`
	// AssignedTo undocumented
	AssignedTo *string `json:"assignedTo,omitempty"`
	// Comments undocumented
	Comments []string `json:"comments,omitempty"`
	// Feedback undocumented
	Feedback *AlertFeedback `json:"feedback,omitempty"`
	// Status undocumented
	Status *AlertStatus `json:"status,omitempty"`
	// UpdatedDateTime undocumented
	UpdatedDateTime *time.Time `json:"updatedDateTime,omitempty"`
	// User undocumented
	User *string `json:"user,omitempty"`
}

// AlertTrigger undocumented
type AlertTrigger struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// Value undocumented
	Value *string `json:"value,omitempty"`
}

// AllDevicesAssignmentTarget undocumented
type AllDevicesAssignmentTarget struct {
	DeviceAndAppManagementAssignmentTarget
}

// AllLicensedUsersAssignmentTarget undocumented
type AllLicensedUsersAssignmentTarget struct {
	DeviceAndAppManagementAssignmentTarget
}

// AlternativeSecurityId undocumented
type AlternativeSecurityId struct {
	// Type undocumented
	Type *int `json:"type,omitempty"`
	// IdentityProvider undocumented
	IdentityProvider *string `json:"identityProvider,omitempty"`
	// Key undocumented
	Key *Binary `json:"key,omitempty"`
}

// AndroidCompliancePolicy This class contains compliance settings for Android.
type AndroidCompliancePolicy struct {
	DeviceCompliancePolicy
	// PasswordRequired Require a password to unlock device.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// PasswordMinimumLength Minimum password length. Valid values 4 to 16
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordRequiredType Type of characters in password
	PasswordRequiredType *AndroidRequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordMinutesOfInactivityBeforeLock Minutes of inactivity before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	// PasswordExpirationDays Number of days before the password expires. Valid values 1 to 365
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordPreviousPasswordBlockCount Number of previous passwords to block. Valid values 1 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// SecurityPreventInstallAppsFromUnknownSources Require that devices disallow installation of apps from unknown sources.
	SecurityPreventInstallAppsFromUnknownSources *bool `json:"securityPreventInstallAppsFromUnknownSources,omitempty"`
	// SecurityDisableUsbDebugging Disable USB debugging on Android devices.
	SecurityDisableUsbDebugging *bool `json:"securityDisableUsbDebugging,omitempty"`
	// SecurityRequireVerifyApps Require the Android Verify apps feature is turned on.
	SecurityRequireVerifyApps *bool `json:"securityRequireVerifyApps,omitempty"`
	// DeviceThreatProtectionEnabled Require that devices have enabled device threat protection.
	DeviceThreatProtectionEnabled *bool `json:"deviceThreatProtectionEnabled,omitempty"`
	// DeviceThreatProtectionRequiredSecurityLevel Require Mobile Threat Protection minimum risk level to report noncompliance.
	DeviceThreatProtectionRequiredSecurityLevel *DeviceThreatProtectionLevel `json:"deviceThreatProtectionRequiredSecurityLevel,omitempty"`
	// SecurityBlockJailbrokenDevices Devices must not be jailbroken or rooted.
	SecurityBlockJailbrokenDevices *bool `json:"securityBlockJailbrokenDevices,omitempty"`
	// OsMinimumVersion Minimum Android version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Maximum Android version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// MinAndroidSecurityPatchLevel Minimum Android security patch level.
	MinAndroidSecurityPatchLevel *string `json:"minAndroidSecurityPatchLevel,omitempty"`
	// StorageRequireEncryption Require encryption on Android devices.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`
	// SecurityRequireSafetyNetAttestationBasicIntegrity Require the device to pass the SafetyNet basic integrity check.
	SecurityRequireSafetyNetAttestationBasicIntegrity *bool `json:"securityRequireSafetyNetAttestationBasicIntegrity,omitempty"`
	// SecurityRequireSafetyNetAttestationCertifiedDevice Require the device to pass the SafetyNet certified device check.
	SecurityRequireSafetyNetAttestationCertifiedDevice *bool `json:"securityRequireSafetyNetAttestationCertifiedDevice,omitempty"`
	// SecurityRequireGooglePlayServices Require Google Play Services to be installed and enabled on the device.
	SecurityRequireGooglePlayServices *bool `json:"securityRequireGooglePlayServices,omitempty"`
	// SecurityRequireUpToDateSecurityProviders Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.
	SecurityRequireUpToDateSecurityProviders *bool `json:"securityRequireUpToDateSecurityProviders,omitempty"`
	// SecurityRequireCompanyPortalAppIntegrity Require the device to pass the Company Portal client app runtime integrity check.
	SecurityRequireCompanyPortalAppIntegrity *bool `json:"securityRequireCompanyPortalAppIntegrity,omitempty"`
}

// AndroidCustomConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the androidCustomConfiguration resource.
type AndroidCustomConfiguration struct {
	DeviceConfiguration
	// OmaSettings OMA settings. This collection can contain a maximum of 1000 elements.
	OmaSettings []OmaSetting `json:"omaSettings,omitempty"`
}

// AndroidGeneralDeviceConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the androidGeneralDeviceConfiguration resource.
type AndroidGeneralDeviceConfiguration struct {
	DeviceConfiguration
	// AppsBlockClipboardSharing Indicates whether or not to block clipboard sharing to copy and paste between applications.
	AppsBlockClipboardSharing *bool `json:"appsBlockClipboardSharing,omitempty"`
	// AppsBlockCopyPaste Indicates whether or not to block copy and paste within applications.
	AppsBlockCopyPaste *bool `json:"appsBlockCopyPaste,omitempty"`
	// AppsBlockYouTube Indicates whether or not to block the YouTube app.
	AppsBlockYouTube *bool `json:"appsBlockYouTube,omitempty"`
	// BluetoothBlocked Indicates whether or not to block Bluetooth.
	BluetoothBlocked *bool `json:"bluetoothBlocked,omitempty"`
	// CameraBlocked Indicates whether or not to block the use of the camera.
	CameraBlocked *bool `json:"cameraBlocked,omitempty"`
	// CellularBlockDataRoaming Indicates whether or not to block data roaming.
	CellularBlockDataRoaming *bool `json:"cellularBlockDataRoaming,omitempty"`
	// CellularBlockMessaging Indicates whether or not to block SMS/MMS messaging.
	CellularBlockMessaging *bool `json:"cellularBlockMessaging,omitempty"`
	// CellularBlockVoiceRoaming Indicates whether or not to block voice roaming.
	CellularBlockVoiceRoaming *bool `json:"cellularBlockVoiceRoaming,omitempty"`
	// CellularBlockWiFiTethering Indicates whether or not to block syncing Wi-Fi tethering.
	CellularBlockWiFiTethering *bool `json:"cellularBlockWiFiTethering,omitempty"`
	// CompliantAppsList List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.
	CompliantAppsList []AppListItem `json:"compliantAppsList,omitempty"`
	// CompliantAppListType Type of list that is in the CompliantAppsList.
	CompliantAppListType *AppListType `json:"compliantAppListType,omitempty"`
	// DiagnosticDataBlockSubmission Indicates whether or not to block diagnostic data submission.
	DiagnosticDataBlockSubmission *bool `json:"diagnosticDataBlockSubmission,omitempty"`
	// LocationServicesBlocked Indicates whether or not to block location services.
	LocationServicesBlocked *bool `json:"locationServicesBlocked,omitempty"`
	// GoogleAccountBlockAutoSync Indicates whether or not to block Google account auto sync.
	GoogleAccountBlockAutoSync *bool `json:"googleAccountBlockAutoSync,omitempty"`
	// GooglePlayStoreBlocked Indicates whether or not to block the Google Play store.
	GooglePlayStoreBlocked *bool `json:"googlePlayStoreBlocked,omitempty"`
	// KioskModeBlockSleepButton Indicates whether or not to block the screen sleep button while in Kiosk Mode.
	KioskModeBlockSleepButton *bool `json:"kioskModeBlockSleepButton,omitempty"`
	// KioskModeBlockVolumeButtons Indicates whether or not to block the volume buttons while in Kiosk Mode.
	KioskModeBlockVolumeButtons *bool `json:"kioskModeBlockVolumeButtons,omitempty"`
	// KioskModeApps A list of apps that will be allowed to run when the device is in Kiosk Mode. This collection can contain a maximum of 500 elements.
	KioskModeApps []AppListItem `json:"kioskModeApps,omitempty"`
	// NfcBlocked Indicates whether or not to block Near-Field Communication.
	NfcBlocked *bool `json:"nfcBlocked,omitempty"`
	// PasswordBlockFingerprintUnlock Indicates whether or not to block fingerprint unlock.
	PasswordBlockFingerprintUnlock *bool `json:"passwordBlockFingerprintUnlock,omitempty"`
	// PasswordBlockTrustAgents Indicates whether or not to block Smart Lock and other trust agents.
	PasswordBlockTrustAgents *bool `json:"passwordBlockTrustAgents,omitempty"`
	// PasswordExpirationDays Number of days before the password expires. Valid values 1 to 365
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength Minimum length of passwords. Valid values 4 to 16
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeScreenTimeout Minutes of inactivity before the screen times out.
	PasswordMinutesOfInactivityBeforeScreenTimeout *int `json:"passwordMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	// PasswordPreviousPasswordBlockCount Number of previous passwords to block. Valid values 0 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordSignInFailureCountBeforeFactoryReset Number of sign in failures allowed before factory reset. Valid values 1 to 16
	PasswordSignInFailureCountBeforeFactoryReset *int `json:"passwordSignInFailureCountBeforeFactoryReset,omitempty"`
	// PasswordRequiredType Type of password that is required.
	PasswordRequiredType *AndroidRequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordRequired Indicates whether or not to require a password.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// PowerOffBlocked Indicates whether or not to block powering off the device.
	PowerOffBlocked *bool `json:"powerOffBlocked,omitempty"`
	// FactoryResetBlocked Indicates whether or not to block user performing a factory reset.
	FactoryResetBlocked *bool `json:"factoryResetBlocked,omitempty"`
	// ScreenCaptureBlocked Indicates whether or not to block screenshots.
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`
	// DeviceSharingAllowed Indicates whether or not to allow device sharing mode.
	DeviceSharingAllowed *bool `json:"deviceSharingAllowed,omitempty"`
	// StorageBlockGoogleBackup Indicates whether or not to block Google Backup.
	StorageBlockGoogleBackup *bool `json:"storageBlockGoogleBackup,omitempty"`
	// StorageBlockRemovableStorage Indicates whether or not to block removable storage usage.
	StorageBlockRemovableStorage *bool `json:"storageBlockRemovableStorage,omitempty"`
	// StorageRequireDeviceEncryption Indicates whether or not to require device encryption.
	StorageRequireDeviceEncryption *bool `json:"storageRequireDeviceEncryption,omitempty"`
	// StorageRequireRemovableStorageEncryption Indicates whether or not to require removable storage encryption.
	StorageRequireRemovableStorageEncryption *bool `json:"storageRequireRemovableStorageEncryption,omitempty"`
	// VoiceAssistantBlocked Indicates whether or not to block the use of the Voice Assistant.
	VoiceAssistantBlocked *bool `json:"voiceAssistantBlocked,omitempty"`
	// VoiceDialingBlocked Indicates whether or not to block voice dialing.
	VoiceDialingBlocked *bool `json:"voiceDialingBlocked,omitempty"`
	// WebBrowserBlockPopups Indicates whether or not to block popups within the web browser.
	WebBrowserBlockPopups *bool `json:"webBrowserBlockPopups,omitempty"`
	// WebBrowserBlockAutofill Indicates whether or not to block the web browser's auto fill feature.
	WebBrowserBlockAutofill *bool `json:"webBrowserBlockAutofill,omitempty"`
	// WebBrowserBlockJavaScript Indicates whether or not to block JavaScript within the web browser.
	WebBrowserBlockJavaScript *bool `json:"webBrowserBlockJavaScript,omitempty"`
	// WebBrowserBlocked Indicates whether or not to block the web browser.
	WebBrowserBlocked *bool `json:"webBrowserBlocked,omitempty"`
	// WebBrowserCookieSettings Cookie settings within the web browser.
	WebBrowserCookieSettings *WebBrowserCookieSettings `json:"webBrowserCookieSettings,omitempty"`
	// WiFiBlocked Indicates whether or not to block syncing Wi-Fi.
	WiFiBlocked *bool `json:"wiFiBlocked,omitempty"`
	// AppsInstallAllowList List of apps which can be installed on the KNOX device. This collection can contain a maximum of 500 elements.
	AppsInstallAllowList []AppListItem `json:"appsInstallAllowList,omitempty"`
	// AppsLaunchBlockList List of apps which are blocked from being launched on the KNOX device. This collection can contain a maximum of 500 elements.
	AppsLaunchBlockList []AppListItem `json:"appsLaunchBlockList,omitempty"`
	// AppsHideList List of apps to be hidden on the KNOX device. This collection can contain a maximum of 500 elements.
	AppsHideList []AppListItem `json:"appsHideList,omitempty"`
	// SecurityRequireVerifyApps Require the Android Verify apps feature is turned on.
	SecurityRequireVerifyApps *bool `json:"securityRequireVerifyApps,omitempty"`
}

// AndroidLobApp Contains properties and inherited properties for Android Line Of Business apps.
type AndroidLobApp struct {
	MobileLobApp
	// PackageId The package identifier.
	PackageId *string `json:"packageId,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum applicable operating system.
	MinimumSupportedOperatingSystem *AndroidMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
	// VersionName The version name of Android Line of Business (LoB) app.
	VersionName *string `json:"versionName,omitempty"`
	// VersionCode The version code of Android Line of Business (LoB) app.
	VersionCode *string `json:"versionCode,omitempty"`
}

// AndroidManagedAppProtection Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
type AndroidManagedAppProtection struct {
	TargetedManagedAppProtection
	// ScreenCaptureBlocked Indicates whether a managed user can take screen captures of managed apps
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`
	// DisableAppEncryptionIfDeviceEncryptionIsEnabled When this setting is enabled, app level encryption is disabled if device level encryption is enabled
	DisableAppEncryptionIfDeviceEncryptionIsEnabled *bool `json:"disableAppEncryptionIfDeviceEncryptionIsEnabled,omitempty"`
	// EncryptAppData Indicates whether application data for managed apps should be encrypted
	EncryptAppData *bool `json:"encryptAppData,omitempty"`
	// DeployedAppCount Count of apps to which the current policy is deployed.
	DeployedAppCount *int `json:"deployedAppCount,omitempty"`
	// MinimumRequiredPatchVersion Define the oldest required Android security patch level a user can have to gain secure access to the app.
	MinimumRequiredPatchVersion *string `json:"minimumRequiredPatchVersion,omitempty"`
	// MinimumWarningPatchVersion Define the oldest recommended Android security patch level a user can have for secure access to the app.
	MinimumWarningPatchVersion *string `json:"minimumWarningPatchVersion,omitempty"`
}

// AndroidManagedAppRegistration Represents the synchronization details of an android app, with management capabilities, for a specific user.
type AndroidManagedAppRegistration struct {
	ManagedAppRegistration
}

// AndroidMinimumOperatingSystem undocumented
type AndroidMinimumOperatingSystem struct {
	// V4_0 Version 4.0 or later.
	V4_0 *bool `json:"v4_0,omitempty"`
	// V4_0_3 Version 4.0.3 or later.
	V4_0_3 *bool `json:"v4_0_3,omitempty"`
	// V4_1 Version 4.1 or later.
	V4_1 *bool `json:"v4_1,omitempty"`
	// V4_2 Version 4.2 or later.
	V4_2 *bool `json:"v4_2,omitempty"`
	// V4_3 Version 4.3 or later.
	V4_3 *bool `json:"v4_3,omitempty"`
	// V4_4 Version 4.4 or later.
	V4_4 *bool `json:"v4_4,omitempty"`
	// V5_0 Version 5.0 or later.
	V5_0 *bool `json:"v5_0,omitempty"`
	// V5_1 Version 5.1 or later.
	V5_1 *bool `json:"v5_1,omitempty"`
}

// AndroidMobileAppIdentifier undocumented
type AndroidMobileAppIdentifier struct {
	MobileAppIdentifier
	// PackageId The identifier for an app, as specified in the play store.
	PackageId *string `json:"packageId,omitempty"`
}

// AndroidStoreApp Contains properties and inherited properties for Android store apps.
type AndroidStoreApp struct {
	MobileApp
	// PackageId The package identifier.
	PackageId *string `json:"packageId,omitempty"`
	// AppStoreUrl The Android app store URL.
	AppStoreUrl *string `json:"appStoreUrl,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum applicable operating system.
	MinimumSupportedOperatingSystem *AndroidMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
}

// AndroidWorkProfileCompliancePolicy This class contains compliance settings for Android Work Profile.
type AndroidWorkProfileCompliancePolicy struct {
	DeviceCompliancePolicy
	// PasswordRequired Require a password to unlock device.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// PasswordMinimumLength Minimum password length. Valid values 4 to 16
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordRequiredType Type of characters in password
	PasswordRequiredType *AndroidRequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordMinutesOfInactivityBeforeLock Minutes of inactivity before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	// PasswordExpirationDays Number of days before the password expires. Valid values 1 to 365
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordPreviousPasswordBlockCount Number of previous passwords to block. Valid values 1 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// SecurityPreventInstallAppsFromUnknownSources Require that devices disallow installation of apps from unknown sources.
	SecurityPreventInstallAppsFromUnknownSources *bool `json:"securityPreventInstallAppsFromUnknownSources,omitempty"`
	// SecurityDisableUsbDebugging Disable USB debugging on Android devices.
	SecurityDisableUsbDebugging *bool `json:"securityDisableUsbDebugging,omitempty"`
	// SecurityRequireVerifyApps Require the Android Verify apps feature is turned on.
	SecurityRequireVerifyApps *bool `json:"securityRequireVerifyApps,omitempty"`
	// DeviceThreatProtectionEnabled Require that devices have enabled device threat protection.
	DeviceThreatProtectionEnabled *bool `json:"deviceThreatProtectionEnabled,omitempty"`
	// DeviceThreatProtectionRequiredSecurityLevel Require Mobile Threat Protection minimum risk level to report noncompliance.
	DeviceThreatProtectionRequiredSecurityLevel *DeviceThreatProtectionLevel `json:"deviceThreatProtectionRequiredSecurityLevel,omitempty"`
	// SecurityBlockJailbrokenDevices Devices must not be jailbroken or rooted.
	SecurityBlockJailbrokenDevices *bool `json:"securityBlockJailbrokenDevices,omitempty"`
	// OsMinimumVersion Minimum Android version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Maximum Android version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// MinAndroidSecurityPatchLevel Minimum Android security patch level.
	MinAndroidSecurityPatchLevel *string `json:"minAndroidSecurityPatchLevel,omitempty"`
	// StorageRequireEncryption Require encryption on Android devices.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`
	// SecurityRequireSafetyNetAttestationBasicIntegrity Require the device to pass the SafetyNet basic integrity check.
	SecurityRequireSafetyNetAttestationBasicIntegrity *bool `json:"securityRequireSafetyNetAttestationBasicIntegrity,omitempty"`
	// SecurityRequireSafetyNetAttestationCertifiedDevice Require the device to pass the SafetyNet certified device check.
	SecurityRequireSafetyNetAttestationCertifiedDevice *bool `json:"securityRequireSafetyNetAttestationCertifiedDevice,omitempty"`
	// SecurityRequireGooglePlayServices Require Google Play Services to be installed and enabled on the device.
	SecurityRequireGooglePlayServices *bool `json:"securityRequireGooglePlayServices,omitempty"`
	// SecurityRequireUpToDateSecurityProviders Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.
	SecurityRequireUpToDateSecurityProviders *bool `json:"securityRequireUpToDateSecurityProviders,omitempty"`
	// SecurityRequireCompanyPortalAppIntegrity Require the device to pass the Company Portal client app runtime integrity check.
	SecurityRequireCompanyPortalAppIntegrity *bool `json:"securityRequireCompanyPortalAppIntegrity,omitempty"`
}

// AndroidWorkProfileCustomConfiguration Android Work Profile custom configuration
type AndroidWorkProfileCustomConfiguration struct {
	DeviceConfiguration
	// OmaSettings OMA settings. This collection can contain a maximum of 500 elements.
	OmaSettings []OmaSetting `json:"omaSettings,omitempty"`
}

// AndroidWorkProfileGeneralDeviceConfiguration Android Work Profile general device configuration.
type AndroidWorkProfileGeneralDeviceConfiguration struct {
	DeviceConfiguration
	// PasswordBlockFingerprintUnlock Indicates whether or not to block fingerprint unlock.
	PasswordBlockFingerprintUnlock *bool `json:"passwordBlockFingerprintUnlock,omitempty"`
	// PasswordBlockTrustAgents Indicates whether or not to block Smart Lock and other trust agents.
	PasswordBlockTrustAgents *bool `json:"passwordBlockTrustAgents,omitempty"`
	// PasswordExpirationDays Number of days before the password expires. Valid values 1 to 365
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength Minimum length of passwords. Valid values 4 to 16
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeScreenTimeout Minutes of inactivity before the screen times out.
	PasswordMinutesOfInactivityBeforeScreenTimeout *int `json:"passwordMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	// PasswordPreviousPasswordBlockCount Number of previous passwords to block. Valid values 0 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordSignInFailureCountBeforeFactoryReset Number of sign in failures allowed before factory reset. Valid values 1 to 16
	PasswordSignInFailureCountBeforeFactoryReset *int `json:"passwordSignInFailureCountBeforeFactoryReset,omitempty"`
	// PasswordRequiredType Type of password that is required.
	PasswordRequiredType *AndroidWorkProfileRequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// WorkProfileDataSharingType Type of data sharing that is allowed.
	WorkProfileDataSharingType *AndroidWorkProfileCrossProfileDataSharingType `json:"workProfileDataSharingType,omitempty"`
	// WorkProfileBlockNotificationsWhileDeviceLocked Indicates whether or not to block notifications while device locked.
	WorkProfileBlockNotificationsWhileDeviceLocked *bool `json:"workProfileBlockNotificationsWhileDeviceLocked,omitempty"`
	// WorkProfileBlockAddingAccounts Block users from adding/removing accounts in work profile.
	WorkProfileBlockAddingAccounts *bool `json:"workProfileBlockAddingAccounts,omitempty"`
	// WorkProfileBluetoothEnableContactSharing Allow bluetooth devices to access enterprise contacts.
	WorkProfileBluetoothEnableContactSharing *bool `json:"workProfileBluetoothEnableContactSharing,omitempty"`
	// WorkProfileBlockScreenCapture Block screen capture in work profile.
	WorkProfileBlockScreenCapture *bool `json:"workProfileBlockScreenCapture,omitempty"`
	// WorkProfileBlockCrossProfileCallerId Block display work profile caller ID in personal profile.
	WorkProfileBlockCrossProfileCallerId *bool `json:"workProfileBlockCrossProfileCallerId,omitempty"`
	// WorkProfileBlockCamera Block work profile camera.
	WorkProfileBlockCamera *bool `json:"workProfileBlockCamera,omitempty"`
	// WorkProfileBlockCrossProfileContactsSearch Block work profile contacts availability in personal profile.
	WorkProfileBlockCrossProfileContactsSearch *bool `json:"workProfileBlockCrossProfileContactsSearch,omitempty"`
	// WorkProfileBlockCrossProfileCopyPaste Boolean that indicates if the setting disallow cross profile copy/paste is enabled.
	WorkProfileBlockCrossProfileCopyPaste *bool `json:"workProfileBlockCrossProfileCopyPaste,omitempty"`
	// WorkProfileDefaultAppPermissionPolicy Type of password that is required.
	WorkProfileDefaultAppPermissionPolicy *AndroidWorkProfileDefaultAppPermissionPolicyType `json:"workProfileDefaultAppPermissionPolicy,omitempty"`
	// WorkProfilePasswordBlockFingerprintUnlock Indicates whether or not to block fingerprint unlock for work profile.
	WorkProfilePasswordBlockFingerprintUnlock *bool `json:"workProfilePasswordBlockFingerprintUnlock,omitempty"`
	// WorkProfilePasswordBlockTrustAgents Indicates whether or not to block Smart Lock and other trust agents for work profile.
	WorkProfilePasswordBlockTrustAgents *bool `json:"workProfilePasswordBlockTrustAgents,omitempty"`
	// WorkProfilePasswordExpirationDays Number of days before the work profile password expires. Valid values 1 to 365
	WorkProfilePasswordExpirationDays *int `json:"workProfilePasswordExpirationDays,omitempty"`
	// WorkProfilePasswordMinimumLength Minimum length of work profile password. Valid values 4 to 16
	WorkProfilePasswordMinimumLength *int `json:"workProfilePasswordMinimumLength,omitempty"`
	// WorkProfilePasswordMinNumericCharacters Minimum # of numeric characters required in work profile password. Valid values 1 to 10
	WorkProfilePasswordMinNumericCharacters *int `json:"workProfilePasswordMinNumericCharacters,omitempty"`
	// WorkProfilePasswordMinNonLetterCharacters Minimum # of non-letter characters required in work profile password. Valid values 1 to 10
	WorkProfilePasswordMinNonLetterCharacters *int `json:"workProfilePasswordMinNonLetterCharacters,omitempty"`
	// WorkProfilePasswordMinLetterCharacters Minimum # of letter characters required in work profile password. Valid values 1 to 10
	WorkProfilePasswordMinLetterCharacters *int `json:"workProfilePasswordMinLetterCharacters,omitempty"`
	// WorkProfilePasswordMinLowerCaseCharacters Minimum # of lower-case characters required in work profile password. Valid values 1 to 10
	WorkProfilePasswordMinLowerCaseCharacters *int `json:"workProfilePasswordMinLowerCaseCharacters,omitempty"`
	// WorkProfilePasswordMinUpperCaseCharacters Minimum # of upper-case characters required in work profile password. Valid values 1 to 10
	WorkProfilePasswordMinUpperCaseCharacters *int `json:"workProfilePasswordMinUpperCaseCharacters,omitempty"`
	// WorkProfilePasswordMinSymbolCharacters Minimum # of symbols required in work profile password. Valid values 1 to 10
	WorkProfilePasswordMinSymbolCharacters *int `json:"workProfilePasswordMinSymbolCharacters,omitempty"`
	// WorkProfilePasswordMinutesOfInactivityBeforeScreenTimeout Minutes of inactivity before the screen times out.
	WorkProfilePasswordMinutesOfInactivityBeforeScreenTimeout *int `json:"workProfilePasswordMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	// WorkProfilePasswordPreviousPasswordBlockCount Number of previous work profile passwords to block. Valid values 0 to 24
	WorkProfilePasswordPreviousPasswordBlockCount *int `json:"workProfilePasswordPreviousPasswordBlockCount,omitempty"`
	// WorkProfilePasswordSignInFailureCountBeforeFactoryReset Number of sign in failures allowed before work profile is removed and all corporate data deleted. Valid values 1 to 16
	WorkProfilePasswordSignInFailureCountBeforeFactoryReset *int `json:"workProfilePasswordSignInFailureCountBeforeFactoryReset,omitempty"`
	// WorkProfilePasswordRequiredType Type of work profile password that is required.
	WorkProfilePasswordRequiredType *AndroidWorkProfileRequiredPasswordType `json:"workProfilePasswordRequiredType,omitempty"`
	// WorkProfileRequirePassword Password is required or not for work profile
	WorkProfileRequirePassword *bool `json:"workProfileRequirePassword,omitempty"`
	// SecurityRequireVerifyApps Require the Android Verify apps feature is turned on.
	SecurityRequireVerifyApps *bool `json:"securityRequireVerifyApps,omitempty"`
}

// AppCatalogs undocumented
type AppCatalogs struct {
	Entity
}

// AppConfigurationSettingItem undocumented
type AppConfigurationSettingItem struct {
	// AppConfigKey app configuration key.
	AppConfigKey *string `json:"appConfigKey,omitempty"`
	// AppConfigKeyType app configuration key type.
	AppConfigKeyType *MdmAppConfigKeyType `json:"appConfigKeyType,omitempty"`
	// AppConfigKeyValue app configuration key value.
	AppConfigKeyValue *string `json:"appConfigKeyValue,omitempty"`
}

// AppHostedMediaConfig undocumented
type AppHostedMediaConfig struct {
	MediaConfig
	// Blob undocumented
	Blob *string `json:"blob,omitempty"`
}

// AppIdentity undocumented
type AppIdentity struct {
	// AppId undocumented
	AppId *string `json:"appId,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// ServicePrincipalId undocumented
	ServicePrincipalId *string `json:"servicePrincipalId,omitempty"`
	// ServicePrincipalName undocumented
	ServicePrincipalName *string `json:"servicePrincipalName,omitempty"`
}

// AppListItem undocumented
type AppListItem struct {
	// Name The application name
	Name *string `json:"name,omitempty"`
	// Publisher The publisher of the application
	Publisher *string `json:"publisher,omitempty"`
	// AppStoreUrl The Store URL of the application
	AppStoreUrl *string `json:"appStoreUrl,omitempty"`
	// AppId The application or bundle identifier of the application
	AppId *string `json:"appId,omitempty"`
}

// AppleDeviceFeaturesConfigurationBase Apple device features configuration profile.
type AppleDeviceFeaturesConfigurationBase struct {
	DeviceConfiguration
}

// ApplePushNotificationCertificate Apple push notification certificate.
type ApplePushNotificationCertificate struct {
	Entity
	// AppleIdentifier Apple Id of the account used to create the MDM push certificate.
	AppleIdentifier *string `json:"appleIdentifier,omitempty"`
	// TopicIdentifier Topic Id.
	TopicIdentifier *string `json:"topicIdentifier,omitempty"`
	// LastModifiedDateTime Last modified date and time for Apple push notification certificate.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// ExpirationDateTime The expiration date and time for Apple push notification certificate.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// Certificate undocumented
	Certificate *string `json:"certificate,omitempty"`
}

// AppliedConditionalAccessPolicy undocumented
type AppliedConditionalAccessPolicy struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// EnforcedGrantControls undocumented
	EnforcedGrantControls []string `json:"enforcedGrantControls,omitempty"`
	// EnforcedSessionControls undocumented
	EnforcedSessionControls []string `json:"enforcedSessionControls,omitempty"`
	// Result undocumented
	Result *AppliedConditionalAccessPolicyResult `json:"result,omitempty"`
}

// AssignedLicense undocumented
type AssignedLicense struct {
	// DisabledPlans undocumented
	DisabledPlans []UUID `json:"disabledPlans,omitempty"`
	// SkuId undocumented
	SkuId *UUID `json:"skuId,omitempty"`
}

// AssignedPlan undocumented
type AssignedPlan struct {
	// AssignedDateTime undocumented
	AssignedDateTime *time.Time `json:"assignedDateTime,omitempty"`
	// CapabilityStatus undocumented
	CapabilityStatus *string `json:"capabilityStatus,omitempty"`
	// Service undocumented
	Service *string `json:"service,omitempty"`
	// ServicePlanId undocumented
	ServicePlanId *UUID `json:"servicePlanId,omitempty"`
}

// Attachment undocumented
type Attachment struct {
	Entity
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// ContentType undocumented
	ContentType *string `json:"contentType,omitempty"`
	// Size undocumented
	Size *int `json:"size,omitempty"`
	// IsInline undocumented
	IsInline *bool `json:"isInline,omitempty"`
}

// Attendee undocumented
type Attendee struct {
	AttendeeBase
	// Status undocumented
	Status *ResponseStatus `json:"status,omitempty"`
}

// AttendeeAvailability undocumented
type AttendeeAvailability struct {
	// Attendee undocumented
	Attendee *AttendeeBase `json:"attendee,omitempty"`
	// Availability undocumented
	Availability *FreeBusyStatus `json:"availability,omitempty"`
}

// AttendeeBase undocumented
type AttendeeBase struct {
	Recipient
	// Type undocumented
	Type *AttendeeType `json:"type,omitempty"`
}

// Audio undocumented
type Audio struct {
	// Album undocumented
	Album *string `json:"album,omitempty"`
	// AlbumArtist undocumented
	AlbumArtist *string `json:"albumArtist,omitempty"`
	// Artist undocumented
	Artist *string `json:"artist,omitempty"`
	// Bitrate undocumented
	Bitrate *int `json:"bitrate,omitempty"`
	// Composers undocumented
	Composers *string `json:"composers,omitempty"`
	// Copyright undocumented
	Copyright *string `json:"copyright,omitempty"`
	// Disc undocumented
	Disc *int `json:"disc,omitempty"`
	// DiscCount undocumented
	DiscCount *int `json:"discCount,omitempty"`
	// Duration undocumented
	Duration *int `json:"duration,omitempty"`
	// Genre undocumented
	Genre *string `json:"genre,omitempty"`
	// HasDrm undocumented
	HasDrm *bool `json:"hasDrm,omitempty"`
	// IsVariableBitrate undocumented
	IsVariableBitrate *bool `json:"isVariableBitrate,omitempty"`
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// Track undocumented
	Track *int `json:"track,omitempty"`
	// TrackCount undocumented
	TrackCount *int `json:"trackCount,omitempty"`
	// Year undocumented
	Year *int `json:"year,omitempty"`
}

// AudioConferencing undocumented
type AudioConferencing struct {
	// ConferenceId undocumented
	ConferenceId *string `json:"conferenceId,omitempty"`
	// TollNumber undocumented
	TollNumber *string `json:"tollNumber,omitempty"`
	// TollFreeNumber undocumented
	TollFreeNumber *string `json:"tollFreeNumber,omitempty"`
	// DialinUrl undocumented
	DialinUrl *string `json:"dialinUrl,omitempty"`
}

// AuditActivityInitiator undocumented
type AuditActivityInitiator struct {
	// User undocumented
	User *UserIdentity `json:"user,omitempty"`
	// App undocumented
	App *AppIdentity `json:"app,omitempty"`
}

// AuditLogRoot undocumented
type AuditLogRoot struct {
	Entity
}

// AutomaticRepliesMailTips undocumented
type AutomaticRepliesMailTips struct {
	// Message undocumented
	Message *string `json:"message,omitempty"`
	// MessageLanguage undocumented
	MessageLanguage *LocaleInfo `json:"messageLanguage,omitempty"`
	// ScheduledStartTime undocumented
	ScheduledStartTime *DateTimeTimeZone `json:"scheduledStartTime,omitempty"`
	// ScheduledEndTime undocumented
	ScheduledEndTime *DateTimeTimeZone `json:"scheduledEndTime,omitempty"`
}

// AutomaticRepliesSetting undocumented
type AutomaticRepliesSetting struct {
	// Status undocumented
	Status *AutomaticRepliesStatus `json:"status,omitempty"`
	// ExternalAudience undocumented
	ExternalAudience *ExternalAudienceScope `json:"externalAudience,omitempty"`
	// ScheduledStartDateTime undocumented
	ScheduledStartDateTime *DateTimeTimeZone `json:"scheduledStartDateTime,omitempty"`
	// ScheduledEndDateTime undocumented
	ScheduledEndDateTime *DateTimeTimeZone `json:"scheduledEndDateTime,omitempty"`
	// InternalReplyMessage undocumented
	InternalReplyMessage *string `json:"internalReplyMessage,omitempty"`
	// ExternalReplyMessage undocumented
	ExternalReplyMessage *string `json:"externalReplyMessage,omitempty"`
}

// AverageComparativeScore undocumented
type AverageComparativeScore struct {
	// AverageScore undocumented
	AverageScore *float64 `json:"averageScore,omitempty"`
	// Basis undocumented
	Basis *string `json:"basis,omitempty"`
}

// BaseItem undocumented
type BaseItem struct {
	Entity
	// CreatedBy undocumented
	CreatedBy *IdentitySet `json:"createdBy,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// ETag undocumented
	ETag *string `json:"eTag,omitempty"`
	// LastModifiedBy undocumented
	LastModifiedBy *IdentitySet `json:"lastModifiedBy,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// ParentReference undocumented
	ParentReference *ItemReference `json:"parentReference,omitempty"`
	// WebUrl undocumented
	WebUrl *string `json:"webUrl,omitempty"`
}

// BaseItemVersion undocumented
type BaseItemVersion struct {
	Entity
	// LastModifiedBy undocumented
	LastModifiedBy *IdentitySet `json:"lastModifiedBy,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Publication undocumented
	Publication *PublicationFacet `json:"publication,omitempty"`
}

// BitLockerRemovableDrivePolicy undocumented
type BitLockerRemovableDrivePolicy struct {
	// EncryptionMethod Select the encryption method for removable  drives.
	EncryptionMethod *BitLockerEncryptionMethod `json:"encryptionMethod,omitempty"`
	// RequireEncryptionForWriteAccess Indicates whether to block write access to devices configured in another organization.  If requireEncryptionForWriteAccess is false, this value does not affect.
	RequireEncryptionForWriteAccess *bool `json:"requireEncryptionForWriteAccess,omitempty"`
	// BlockCrossOrganizationWriteAccess This policy setting determines whether BitLocker protection is required for removable data drives to be writable on a computer.
	BlockCrossOrganizationWriteAccess *bool `json:"blockCrossOrganizationWriteAccess,omitempty"`
}

// BooleanColumn undocumented
type BooleanColumn struct {
}

// CalculatedColumn undocumented
type CalculatedColumn struct {
	// Format undocumented
	Format *string `json:"format,omitempty"`
	// Formula undocumented
	Formula *string `json:"formula,omitempty"`
	// OutputType undocumented
	OutputType *string `json:"outputType,omitempty"`
}

// Calendar undocumented
type Calendar struct {
	Entity
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Color undocumented
	Color *CalendarColor `json:"color,omitempty"`
	// ChangeKey undocumented
	ChangeKey *string `json:"changeKey,omitempty"`
	// CanShare undocumented
	CanShare *bool `json:"canShare,omitempty"`
	// CanViewPrivateItems undocumented
	CanViewPrivateItems *bool `json:"canViewPrivateItems,omitempty"`
	// CanEdit undocumented
	CanEdit *bool `json:"canEdit,omitempty"`
	// Owner undocumented
	Owner *EmailAddress `json:"owner,omitempty"`
}

// CalendarGroup undocumented
type CalendarGroup struct {
	Entity
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// ClassId undocumented
	ClassId *UUID `json:"classId,omitempty"`
	// ChangeKey undocumented
	ChangeKey *string `json:"changeKey,omitempty"`
}

// Call undocumented
type Call struct {
	Entity
	// State undocumented
	State *CallState `json:"state,omitempty"`
	// MediaState undocumented
	MediaState *CallMediaState `json:"mediaState,omitempty"`
	// ResultInfo undocumented
	ResultInfo *ResultInfo `json:"resultInfo,omitempty"`
	// Direction undocumented
	Direction *CallDirection `json:"direction,omitempty"`
	// Subject undocumented
	Subject *string `json:"subject,omitempty"`
	// CallbackUri undocumented
	CallbackUri *string `json:"callbackUri,omitempty"`
	// Source undocumented
	Source *ParticipantInfo `json:"source,omitempty"`
	// Targets undocumented
	Targets []ParticipantInfo `json:"targets,omitempty"`
	// RequestedModalities undocumented
	RequestedModalities []Modality `json:"requestedModalities,omitempty"`
	// MediaConfig undocumented
	MediaConfig *MediaConfig `json:"mediaConfig,omitempty"`
	// ChatInfo undocumented
	ChatInfo *ChatInfo `json:"chatInfo,omitempty"`
	// MeetingInfo undocumented
	MeetingInfo *MeetingInfo `json:"meetingInfo,omitempty"`
	// TenantId undocumented
	TenantId *string `json:"tenantId,omitempty"`
	// MyParticipantId undocumented
	MyParticipantId *string `json:"myParticipantId,omitempty"`
	// ToneInfo undocumented
	ToneInfo *ToneInfo `json:"toneInfo,omitempty"`
}

// CallMediaState undocumented
type CallMediaState struct {
	// Audio undocumented
	Audio *MediaState `json:"audio,omitempty"`
}

// CertificateAuthority undocumented
type CertificateAuthority struct {
	// IsRootAuthority undocumented
	IsRootAuthority *bool `json:"isRootAuthority,omitempty"`
	// CertificateRevocationListUrl undocumented
	CertificateRevocationListUrl *string `json:"certificateRevocationListUrl,omitempty"`
	// DeltaCertificateRevocationListUrl undocumented
	DeltaCertificateRevocationListUrl *string `json:"deltaCertificateRevocationListUrl,omitempty"`
	// Certificate undocumented
	Certificate *Binary `json:"certificate,omitempty"`
	// Issuer undocumented
	Issuer *string `json:"issuer,omitempty"`
	// IssuerSki undocumented
	IssuerSki *string `json:"issuerSki,omitempty"`
}

// CertificateBasedAuthConfiguration undocumented
type CertificateBasedAuthConfiguration struct {
	Entity
	// CertificateAuthorities undocumented
	CertificateAuthorities []CertificateAuthority `json:"certificateAuthorities,omitempty"`
}

// CertificationControl undocumented
type CertificationControl struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Url undocumented
	Url *string `json:"url,omitempty"`
}

// Channel undocumented
type Channel struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// Email undocumented
	Email *string `json:"email,omitempty"`
	// WebUrl undocumented
	WebUrl *string `json:"webUrl,omitempty"`
}

// ChatInfo undocumented
type ChatInfo struct {
	// ThreadId undocumented
	ThreadId *string `json:"threadId,omitempty"`
	// MessageId undocumented
	MessageId *string `json:"messageId,omitempty"`
	// ReplyChainMessageId undocumented
	ReplyChainMessageId *string `json:"replyChainMessageId,omitempty"`
}

// ChoiceColumn undocumented
type ChoiceColumn struct {
	// AllowTextEntry undocumented
	AllowTextEntry *bool `json:"allowTextEntry,omitempty"`
	// Choices undocumented
	Choices []string `json:"choices,omitempty"`
	// DisplayAs undocumented
	DisplayAs *string `json:"displayAs,omitempty"`
}

// CloudAppSecurityState undocumented
type CloudAppSecurityState struct {
	// DestinationServiceIp undocumented
	DestinationServiceIp *string `json:"destinationServiceIp,omitempty"`
	// DestinationServiceName undocumented
	DestinationServiceName *string `json:"destinationServiceName,omitempty"`
	// RiskScore undocumented
	RiskScore *string `json:"riskScore,omitempty"`
}

// CloudCommunications undocumented
type CloudCommunications struct {
	Entity
}

// ColumnDefinition undocumented
type ColumnDefinition struct {
	Entity
	// Boolean undocumented
	Boolean *BooleanColumn `json:"boolean,omitempty"`
	// Calculated undocumented
	Calculated *CalculatedColumn `json:"calculated,omitempty"`
	// Choice undocumented
	Choice *ChoiceColumn `json:"choice,omitempty"`
	// ColumnGroup undocumented
	ColumnGroup *string `json:"columnGroup,omitempty"`
	// Currency undocumented
	Currency *CurrencyColumn `json:"currency,omitempty"`
	// DateTime undocumented
	DateTime *DateTimeColumn `json:"dateTime,omitempty"`
	// DefaultValue undocumented
	DefaultValue *DefaultColumnValue `json:"defaultValue,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// EnforceUniqueValues undocumented
	EnforceUniqueValues *bool `json:"enforceUniqueValues,omitempty"`
	// Hidden undocumented
	Hidden *bool `json:"hidden,omitempty"`
	// Indexed undocumented
	Indexed *bool `json:"indexed,omitempty"`
	// Lookup undocumented
	Lookup *LookupColumn `json:"lookup,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Number undocumented
	Number *NumberColumn `json:"number,omitempty"`
	// PersonOrGroup undocumented
	PersonOrGroup *PersonOrGroupColumn `json:"personOrGroup,omitempty"`
	// ReadOnly undocumented
	ReadOnly *bool `json:"readOnly,omitempty"`
	// Required undocumented
	Required *bool `json:"required,omitempty"`
	// Text undocumented
	Text *TextColumn `json:"text,omitempty"`
}

// ColumnLink undocumented
type ColumnLink struct {
	Entity
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

// CommsNotification undocumented
type CommsNotification struct {
	// ChangeType undocumented
	ChangeType *ChangeType `json:"changeType,omitempty"`
	// ResourceUrl undocumented
	ResourceUrl *string `json:"resourceUrl,omitempty"`
}

// CommsNotifications undocumented
type CommsNotifications struct {
	// Value undocumented
	Value []CommsNotification `json:"value,omitempty"`
}

// CommsOperation undocumented
type CommsOperation struct {
	Entity
	// Status undocumented
	Status *OperationStatus `json:"status,omitempty"`
	// ClientContext undocumented
	ClientContext *string `json:"clientContext,omitempty"`
	// ResultInfo undocumented
	ResultInfo *ResultInfo `json:"resultInfo,omitempty"`
}

// ComplianceInformation undocumented
type ComplianceInformation struct {
	// CertificationControls undocumented
	CertificationControls []CertificationControl `json:"certificationControls,omitempty"`
	// CertificationName undocumented
	CertificationName *string `json:"certificationName,omitempty"`
}

// ConfigurationManagerClientEnabledFeatures undocumented
type ConfigurationManagerClientEnabledFeatures struct {
	// Inventory Whether inventory is managed by Intune
	Inventory *bool `json:"inventory,omitempty"`
	// ModernApps Whether modern application is managed by Intune
	ModernApps *bool `json:"modernApps,omitempty"`
	// ResourceAccess Whether resource access is managed by Intune
	ResourceAccess *bool `json:"resourceAccess,omitempty"`
	// DeviceConfiguration Whether device configuration is managed by Intune
	DeviceConfiguration *bool `json:"deviceConfiguration,omitempty"`
	// CompliancePolicy Whether compliance policy is managed by Intune
	CompliancePolicy *bool `json:"compliancePolicy,omitempty"`
	// WindowsUpdateForBusiness Whether Windows Update for Business is managed by Intune
	WindowsUpdateForBusiness *bool `json:"windowsUpdateForBusiness,omitempty"`
}

// Contact undocumented
type Contact struct {
	OutlookItem
	// ParentFolderId undocumented
	ParentFolderId *string `json:"parentFolderId,omitempty"`
	// Birthday undocumented
	Birthday *time.Time `json:"birthday,omitempty"`
	// FileAs undocumented
	FileAs *string `json:"fileAs,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// GivenName undocumented
	GivenName *string `json:"givenName,omitempty"`
	// Initials undocumented
	Initials *string `json:"initials,omitempty"`
	// MiddleName undocumented
	MiddleName *string `json:"middleName,omitempty"`
	// NickName undocumented
	NickName *string `json:"nickName,omitempty"`
	// Surname undocumented
	Surname *string `json:"surname,omitempty"`
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// YomiGivenName undocumented
	YomiGivenName *string `json:"yomiGivenName,omitempty"`
	// YomiSurname undocumented
	YomiSurname *string `json:"yomiSurname,omitempty"`
	// YomiCompanyName undocumented
	YomiCompanyName *string `json:"yomiCompanyName,omitempty"`
	// Generation undocumented
	Generation *string `json:"generation,omitempty"`
	// EmailAddresses undocumented
	EmailAddresses []EmailAddress `json:"emailAddresses,omitempty"`
	// ImAddresses undocumented
	ImAddresses []string `json:"imAddresses,omitempty"`
	// JobTitle undocumented
	JobTitle *string `json:"jobTitle,omitempty"`
	// CompanyName undocumented
	CompanyName *string `json:"companyName,omitempty"`
	// Department undocumented
	Department *string `json:"department,omitempty"`
	// OfficeLocation undocumented
	OfficeLocation *string `json:"officeLocation,omitempty"`
	// Profession undocumented
	Profession *string `json:"profession,omitempty"`
	// BusinessHomePage undocumented
	BusinessHomePage *string `json:"businessHomePage,omitempty"`
	// AssistantName undocumented
	AssistantName *string `json:"assistantName,omitempty"`
	// Manager undocumented
	Manager *string `json:"manager,omitempty"`
	// HomePhones undocumented
	HomePhones []string `json:"homePhones,omitempty"`
	// MobilePhone undocumented
	MobilePhone *string `json:"mobilePhone,omitempty"`
	// BusinessPhones undocumented
	BusinessPhones []string `json:"businessPhones,omitempty"`
	// HomeAddress undocumented
	HomeAddress *PhysicalAddress `json:"homeAddress,omitempty"`
	// BusinessAddress undocumented
	BusinessAddress *PhysicalAddress `json:"businessAddress,omitempty"`
	// OtherAddress undocumented
	OtherAddress *PhysicalAddress `json:"otherAddress,omitempty"`
	// SpouseName undocumented
	SpouseName *string `json:"spouseName,omitempty"`
	// PersonalNotes undocumented
	PersonalNotes *string `json:"personalNotes,omitempty"`
	// Children undocumented
	Children []string `json:"children,omitempty"`
}

// ContactFolder undocumented
type ContactFolder struct {
	Entity
	// ParentFolderId undocumented
	ParentFolderId *string `json:"parentFolderId,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// ContentType undocumented
type ContentType struct {
	Entity
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// Group undocumented
	Group *string `json:"group,omitempty"`
	// Hidden undocumented
	Hidden *bool `json:"hidden,omitempty"`
	// InheritedFrom undocumented
	InheritedFrom *ItemReference `json:"inheritedFrom,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Order undocumented
	Order *ContentTypeOrder `json:"order,omitempty"`
	// ParentId undocumented
	ParentId *string `json:"parentId,omitempty"`
	// ReadOnly undocumented
	ReadOnly *bool `json:"readOnly,omitempty"`
	// Sealed undocumented
	Sealed *bool `json:"sealed,omitempty"`
}

// ContentTypeInfo undocumented
type ContentTypeInfo struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
}

// ContentTypeOrder undocumented
type ContentTypeOrder struct {
	// Default undocumented
	Default *bool `json:"default,omitempty"`
	// Position undocumented
	Position *int `json:"position,omitempty"`
}

// Contract undocumented
type Contract struct {
	DirectoryObject
	// ContractType undocumented
	ContractType *string `json:"contractType,omitempty"`
	// CustomerId undocumented
	CustomerId *UUID `json:"customerId,omitempty"`
	// DefaultDomainName undocumented
	DefaultDomainName *string `json:"defaultDomainName,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// ControlScore undocumented
type ControlScore struct {
	// ControlCategory undocumented
	ControlCategory *string `json:"controlCategory,omitempty"`
	// ControlName undocumented
	ControlName *string `json:"controlName,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// Score undocumented
	Score *float64 `json:"score,omitempty"`
}

// Conversation undocumented
type Conversation struct {
	Entity
	// Topic undocumented
	Topic *string `json:"topic,omitempty"`
	// HasAttachments undocumented
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	// LastDeliveredDateTime undocumented
	LastDeliveredDateTime *time.Time `json:"lastDeliveredDateTime,omitempty"`
	// UniqueSenders undocumented
	UniqueSenders []string `json:"uniqueSenders,omitempty"`
	// Preview undocumented
	Preview *string `json:"preview,omitempty"`
}

// ConversationThread undocumented
type ConversationThread struct {
	Entity
	// ToRecipients undocumented
	ToRecipients []Recipient `json:"toRecipients,omitempty"`
	// Topic undocumented
	Topic *string `json:"topic,omitempty"`
	// HasAttachments undocumented
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	// LastDeliveredDateTime undocumented
	LastDeliveredDateTime *time.Time `json:"lastDeliveredDateTime,omitempty"`
	// UniqueSenders undocumented
	UniqueSenders []string `json:"uniqueSenders,omitempty"`
	// CcRecipients undocumented
	CcRecipients []Recipient `json:"ccRecipients,omitempty"`
	// Preview undocumented
	Preview *string `json:"preview,omitempty"`
	// IsLocked undocumented
	IsLocked *bool `json:"isLocked,omitempty"`
}

// ConvertIdResult undocumented
type ConvertIdResult struct {
	// SourceId undocumented
	SourceId *string `json:"sourceId,omitempty"`
	// TargetId undocumented
	TargetId *string `json:"targetId,omitempty"`
	// ErrorDetails undocumented
	ErrorDetails *GenericError `json:"errorDetails,omitempty"`
}

// CurrencyColumn undocumented
type CurrencyColumn struct {
	// Locale undocumented
	Locale *string `json:"locale,omitempty"`
}

// CustomTimeZone undocumented
type CustomTimeZone struct {
	TimeZoneBase
	// Bias undocumented
	Bias *int `json:"bias,omitempty"`
	// StandardOffset undocumented
	StandardOffset *StandardTimeZoneOffset `json:"standardOffset,omitempty"`
	// DaylightOffset undocumented
	DaylightOffset *DaylightTimeZoneOffset `json:"daylightOffset,omitempty"`
}

// DataPolicyOperation undocumented
type DataPolicyOperation struct {
	Entity
	// CompletedDateTime undocumented
	CompletedDateTime *time.Time `json:"completedDateTime,omitempty"`
	// Status undocumented
	Status *DataPolicyOperationStatus `json:"status,omitempty"`
	// StorageLocation undocumented
	StorageLocation *string `json:"storageLocation,omitempty"`
	// UserId undocumented
	UserId *string `json:"userId,omitempty"`
	// SubmittedDateTime undocumented
	SubmittedDateTime *time.Time `json:"submittedDateTime,omitempty"`
	// Progress undocumented
	Progress *float64 `json:"progress,omitempty"`
}

// DateTimeColumn undocumented
type DateTimeColumn struct {
	// DisplayAs undocumented
	DisplayAs *string `json:"displayAs,omitempty"`
	// Format undocumented
	Format *string `json:"format,omitempty"`
}

// DateTimeTimeZone undocumented
type DateTimeTimeZone struct {
	// DateTime undocumented
	DateTime *string `json:"dateTime,omitempty"`
	// TimeZone undocumented
	TimeZone *string `json:"timeZone,omitempty"`
}

// DaylightTimeZoneOffset undocumented
type DaylightTimeZoneOffset struct {
	StandardTimeZoneOffset
	// DaylightBias undocumented
	DaylightBias *int `json:"daylightBias,omitempty"`
}

// DefaultColumnValue undocumented
type DefaultColumnValue struct {
	// Formula undocumented
	Formula *string `json:"formula,omitempty"`
	// Value undocumented
	Value *string `json:"value,omitempty"`
}

// DefaultManagedAppProtection Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
type DefaultManagedAppProtection struct {
	ManagedAppProtection
	// AppDataEncryptionType Type of encryption which should be used for data in a managed app. (iOS Only)
	AppDataEncryptionType *ManagedAppDataEncryptionType `json:"appDataEncryptionType,omitempty"`
	// ScreenCaptureBlocked Indicates whether screen capture is blocked. (Android only)
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`
	// EncryptAppData Indicates whether managed-app data should be encrypted. (Android only)
	EncryptAppData *bool `json:"encryptAppData,omitempty"`
	// DisableAppEncryptionIfDeviceEncryptionIsEnabled When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
	DisableAppEncryptionIfDeviceEncryptionIsEnabled *bool `json:"disableAppEncryptionIfDeviceEncryptionIsEnabled,omitempty"`
	// MinimumRequiredSdkVersion Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
	MinimumRequiredSdkVersion *string `json:"minimumRequiredSdkVersion,omitempty"`
	// CustomSettings A set of string key and string value pairs to be sent to the affected users, unalterned by this service
	CustomSettings []KeyValuePair `json:"customSettings,omitempty"`
	// DeployedAppCount Count of apps to which the current policy is deployed.
	DeployedAppCount *int `json:"deployedAppCount,omitempty"`
	// MinimumRequiredPatchVersion Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
	MinimumRequiredPatchVersion *string `json:"minimumRequiredPatchVersion,omitempty"`
	// MinimumWarningPatchVersion Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
	MinimumWarningPatchVersion *string `json:"minimumWarningPatchVersion,omitempty"`
	// FaceIdBlocked Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
	FaceIdBlocked *bool `json:"faceIdBlocked,omitempty"`
}

// DefenderDetectedMalwareActions undocumented
type DefenderDetectedMalwareActions struct {
	// LowSeverity Indicates a Defender action to take for low severity Malware threat detected.
	LowSeverity *DefenderThreatAction `json:"lowSeverity,omitempty"`
	// ModerateSeverity Indicates a Defender action to take for moderate severity Malware threat detected.
	ModerateSeverity *DefenderThreatAction `json:"moderateSeverity,omitempty"`
	// HighSeverity Indicates a Defender action to take for high severity Malware threat detected.
	HighSeverity *DefenderThreatAction `json:"highSeverity,omitempty"`
	// SevereSeverity Indicates a Defender action to take for severe severity Malware threat detected.
	SevereSeverity *DefenderThreatAction `json:"severeSeverity,omitempty"`
}

// DeleteUserFromSharedAppleDeviceActionResult undocumented
type DeleteUserFromSharedAppleDeviceActionResult struct {
	DeviceActionResult
	// UserPrincipalName User principal name of the user to be deleted
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// Deleted undocumented
type Deleted struct {
	// State undocumented
	State *string `json:"state,omitempty"`
}

// DetectedApp A managed or unmanaged app that is installed on a managed device. Unmanaged apps will only appear for devices marked as corporate owned.
type DetectedApp struct {
	Entity
	// DisplayName Name of the discovered application. Read-only
	DisplayName *string `json:"displayName,omitempty"`
	// Version Version of the discovered application. Read-only
	Version *string `json:"version,omitempty"`
	// SizeInByte Discovered application size in bytes. Read-only
	SizeInByte *int `json:"sizeInByte,omitempty"`
	// DeviceCount The number of devices that have installed this application
	DeviceCount *int `json:"deviceCount,omitempty"`
}

// Device undocumented
type Device struct {
	DirectoryObject
	// AccountEnabled undocumented
	AccountEnabled *bool `json:"accountEnabled,omitempty"`
	// AlternativeSecurityIds undocumented
	AlternativeSecurityIds []AlternativeSecurityId `json:"alternativeSecurityIds,omitempty"`
	// ApproximateLastSignInDateTime undocumented
	ApproximateLastSignInDateTime *time.Time `json:"approximateLastSignInDateTime,omitempty"`
	// ComplianceExpirationDateTime undocumented
	ComplianceExpirationDateTime *time.Time `json:"complianceExpirationDateTime,omitempty"`
	// DeviceId undocumented
	DeviceId *string `json:"deviceId,omitempty"`
	// DeviceMetadata undocumented
	DeviceMetadata *string `json:"deviceMetadata,omitempty"`
	// DeviceVersion undocumented
	DeviceVersion *int `json:"deviceVersion,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// IsCompliant undocumented
	IsCompliant *bool `json:"isCompliant,omitempty"`
	// IsManaged undocumented
	IsManaged *bool `json:"isManaged,omitempty"`
	// OnPremisesLastSyncDateTime undocumented
	OnPremisesLastSyncDateTime *time.Time `json:"onPremisesLastSyncDateTime,omitempty"`
	// OnPremisesSyncEnabled undocumented
	OnPremisesSyncEnabled *bool `json:"onPremisesSyncEnabled,omitempty"`
	// OperatingSystem undocumented
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// OperatingSystemVersion undocumented
	OperatingSystemVersion *string `json:"operatingSystemVersion,omitempty"`
	// PhysicalIds undocumented
	PhysicalIds []string `json:"physicalIds,omitempty"`
	// ProfileType undocumented
	ProfileType *string `json:"profileType,omitempty"`
	// SystemLabels undocumented
	SystemLabels []string `json:"systemLabels,omitempty"`
	// TrustType undocumented
	TrustType *string `json:"trustType,omitempty"`
}

// DeviceActionResult undocumented
type DeviceActionResult struct {
	// ActionName Action name
	ActionName *string `json:"actionName,omitempty"`
	// ActionState State of the action
	ActionState *ActionState `json:"actionState,omitempty"`
	// StartDateTime Time the action was initiated
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// LastUpdatedDateTime Time the action state was last updated
	LastUpdatedDateTime *time.Time `json:"lastUpdatedDateTime,omitempty"`
}

// DeviceAndAppManagementAssignmentTarget undocumented
type DeviceAndAppManagementAssignmentTarget struct {
}

// DeviceAndAppManagementRoleAssignment The Role Assignment resource. Role assignments tie together a role definition with members and scopes. There can be one or more role assignments per role. This applies to custom and built-in roles.
type DeviceAndAppManagementRoleAssignment struct {
	RoleAssignment
	// Members The list of ids of role member security groups. These are IDs from Azure Active Directory.
	Members []string `json:"members,omitempty"`
}

// DeviceAndAppManagementRoleDefinition The Role Definition resource. The role definition is the foundation of role based access in Intune. The role combines an Intune resource such as a Mobile App and associated role permissions such as Create or Read for the resource. There are two types of roles, built-in and custom. Built-in roles cannot be modified. Both built-in roles and custom roles must have assignments to be enforced. Create custom roles if you want to define a role that allows any of the available resources and role permissions to be combined into a single role.
type DeviceAndAppManagementRoleDefinition struct {
	RoleDefinition
}

// DeviceAppManagement Device app management singleton entity.
type DeviceAppManagement struct {
	Entity
	// MicrosoftStoreForBusinessLastSuccessfulSyncDateTime The last time the apps from the Microsoft Store for Business were synced successfully for the account.
	MicrosoftStoreForBusinessLastSuccessfulSyncDateTime *time.Time `json:"microsoftStoreForBusinessLastSuccessfulSyncDateTime,omitempty"`
	// IsEnabledForMicrosoftStoreForBusiness Whether the account is enabled for syncing applications from the Microsoft Store for Business.
	IsEnabledForMicrosoftStoreForBusiness *bool `json:"isEnabledForMicrosoftStoreForBusiness,omitempty"`
	// MicrosoftStoreForBusinessLanguage The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is <languagecode2>-<country/regioncode2>, where <languagecode2> is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.
	MicrosoftStoreForBusinessLanguage *string `json:"microsoftStoreForBusinessLanguage,omitempty"`
	// MicrosoftStoreForBusinessLastCompletedApplicationSyncTime The last time an application sync from the Microsoft Store for Business was completed.
	MicrosoftStoreForBusinessLastCompletedApplicationSyncTime *time.Time `json:"microsoftStoreForBusinessLastCompletedApplicationSyncTime,omitempty"`
}

// DeviceCategory Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
type DeviceCategory struct {
	Entity
	// DisplayName Display name for the device category.
	DisplayName *string `json:"displayName,omitempty"`
	// Description Optional description for the device category.
	Description *string `json:"description,omitempty"`
}

// DeviceComplianceActionItem Scheduled Action Configuration
type DeviceComplianceActionItem struct {
	Entity
	// GracePeriodHours Number of hours to wait till the action will be enforced. Valid values 0 to 8760
	GracePeriodHours *int `json:"gracePeriodHours,omitempty"`
	// ActionType What action to take
	ActionType *DeviceComplianceActionType `json:"actionType,omitempty"`
	// NotificationTemplateId What notification Message template to use
	NotificationTemplateId *string `json:"notificationTemplateId,omitempty"`
	// NotificationMessageCCList A list of group IDs to speicify who to CC this notification message to.
	NotificationMessageCCList []string `json:"notificationMessageCCList,omitempty"`
}

// DeviceComplianceDeviceOverview undocumented
type DeviceComplianceDeviceOverview struct {
	Entity
	// PendingCount Number of pending devices
	PendingCount *int `json:"pendingCount,omitempty"`
	// NotApplicableCount Number of not applicable devices
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// SuccessCount Number of succeeded devices
	SuccessCount *int `json:"successCount,omitempty"`
	// ErrorCount Number of error devices
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed devices
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
}

// DeviceComplianceDeviceStatus undocumented
type DeviceComplianceDeviceStatus struct {
	Entity
	// DeviceDisplayName Device name of the DevicePolicyStatus.
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	// UserName The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	// DeviceModel The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceCompliancePolicy This is the base class for Compliance policy. Compliance policies are platform specific and individual per-platform compliance policies inherit from here.
type DeviceCompliancePolicy struct {
	Entity
	// CreatedDateTime DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// DisplayName Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`
	// Version Version of the device configuration.
	Version *int `json:"version,omitempty"`
}

// DeviceCompliancePolicyAssignment Device compliance policy assignment.
type DeviceCompliancePolicyAssignment struct {
	Entity
	// Target Target for the compliance policy assignment.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceCompliancePolicyDeviceStateSummary undocumented
type DeviceCompliancePolicyDeviceStateSummary struct {
	Entity
	// InGracePeriodCount Number of devices that are in grace period
	InGracePeriodCount *int `json:"inGracePeriodCount,omitempty"`
	// ConfigManagerCount Number of devices that have compliance managed by System Center Configuration Manager
	ConfigManagerCount *int `json:"configManagerCount,omitempty"`
	// UnknownDeviceCount Number of unknown devices
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
	// NotApplicableDeviceCount Number of not applicable devices
	NotApplicableDeviceCount *int `json:"notApplicableDeviceCount,omitempty"`
	// CompliantDeviceCount Number of compliant devices
	CompliantDeviceCount *int `json:"compliantDeviceCount,omitempty"`
	// RemediatedDeviceCount Number of remediated devices
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
	// NonCompliantDeviceCount Number of NonCompliant devices
	NonCompliantDeviceCount *int `json:"nonCompliantDeviceCount,omitempty"`
	// ErrorDeviceCount Number of error devices
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// ConflictDeviceCount Number of conflict devices
	ConflictDeviceCount *int `json:"conflictDeviceCount,omitempty"`
}

// DeviceCompliancePolicySettingState undocumented
type DeviceCompliancePolicySettingState struct {
	// Setting The setting that is being reported
	Setting *string `json:"setting,omitempty"`
	// SettingName Localized/user friendly setting name that is being reported
	SettingName *string `json:"settingName,omitempty"`
	// InstanceDisplayName Name of setting instance that is being reported.
	InstanceDisplayName *string `json:"instanceDisplayName,omitempty"`
	// State The compliance state of the setting
	State *ComplianceStatus `json:"state,omitempty"`
	// ErrorCode Error code for the setting
	ErrorCode *int `json:"errorCode,omitempty"`
	// ErrorDescription Error description
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// UserId UserId
	UserId *string `json:"userId,omitempty"`
	// UserName UserName
	UserName *string `json:"userName,omitempty"`
	// UserEmail UserEmail
	UserEmail *string `json:"userEmail,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// Sources Contributing policies
	Sources []SettingSource `json:"sources,omitempty"`
	// CurrentValue Current value of setting on device
	CurrentValue *string `json:"currentValue,omitempty"`
}

// DeviceCompliancePolicySettingStateSummary Device Compilance Policy Setting State summary across the account.
type DeviceCompliancePolicySettingStateSummary struct {
	Entity
	// Setting The setting class name and property name.
	Setting *string `json:"setting,omitempty"`
	// SettingName Name of the setting.
	SettingName *string `json:"settingName,omitempty"`
	// PlatformType Setting platform
	PlatformType *PolicyPlatformType `json:"platformType,omitempty"`
	// UnknownDeviceCount Number of unknown devices
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
	// NotApplicableDeviceCount Number of not applicable devices
	NotApplicableDeviceCount *int `json:"notApplicableDeviceCount,omitempty"`
	// CompliantDeviceCount Number of compliant devices
	CompliantDeviceCount *int `json:"compliantDeviceCount,omitempty"`
	// RemediatedDeviceCount Number of remediated devices
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
	// NonCompliantDeviceCount Number of NonCompliant devices
	NonCompliantDeviceCount *int `json:"nonCompliantDeviceCount,omitempty"`
	// ErrorDeviceCount Number of error devices
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// ConflictDeviceCount Number of conflict devices
	ConflictDeviceCount *int `json:"conflictDeviceCount,omitempty"`
}

// DeviceCompliancePolicyState Device Compliance Policy State for a given device.
type DeviceCompliancePolicyState struct {
	Entity
	// SettingStates undocumented
	SettingStates []DeviceCompliancePolicySettingState `json:"settingStates,omitempty"`
	// DisplayName The name of the policy for this policyBase
	DisplayName *string `json:"displayName,omitempty"`
	// Version The version of the policy
	Version *int `json:"version,omitempty"`
	// PlatformType Platform type that the policy applies to
	PlatformType *PolicyPlatformType `json:"platformType,omitempty"`
	// State The compliance state of the policy
	State *ComplianceStatus `json:"state,omitempty"`
	// SettingCount Count of how many setting a policy holds
	SettingCount *int `json:"settingCount,omitempty"`
}

// DeviceComplianceScheduledActionForRule Scheduled Action for Rule
type DeviceComplianceScheduledActionForRule struct {
	Entity
	// RuleName Name of the rule which this scheduled action applies to.
	RuleName *string `json:"ruleName,omitempty"`
}

// DeviceComplianceSettingState Device compliance setting State for a given device.
type DeviceComplianceSettingState struct {
	Entity
	// Setting The setting class name and property name.
	Setting *string `json:"setting,omitempty"`
	// SettingName The Setting Name that is being reported
	SettingName *string `json:"settingName,omitempty"`
	// DeviceId The Device Id that is being reported
	DeviceId *string `json:"deviceId,omitempty"`
	// DeviceName The Device Name that is being reported
	DeviceName *string `json:"deviceName,omitempty"`
	// UserId The user Id that is being reported
	UserId *string `json:"userId,omitempty"`
	// UserEmail The User email address that is being reported
	UserEmail *string `json:"userEmail,omitempty"`
	// UserName The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	// UserPrincipalName The User PrincipalName that is being reported
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// DeviceModel The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	// State The compliance state of the setting
	State *ComplianceStatus `json:"state,omitempty"`
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
}

// DeviceComplianceUserOverview undocumented
type DeviceComplianceUserOverview struct {
	Entity
	// PendingCount Number of pending Users
	PendingCount *int `json:"pendingCount,omitempty"`
	// NotApplicableCount Number of not applicable users
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// SuccessCount Number of succeeded Users
	SuccessCount *int `json:"successCount,omitempty"`
	// ErrorCount Number of error Users
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed Users
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
}

// DeviceComplianceUserStatus undocumented
type DeviceComplianceUserStatus struct {
	Entity
	// UserDisplayName User name of the DevicePolicyStatus.
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// DevicesCount Devices count for that user.
	DevicesCount *int `json:"devicesCount,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceConfiguration Device Configuration.
type DeviceConfiguration struct {
	Entity
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// CreatedDateTime DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	// DisplayName Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`
	// Version Version of the device configuration.
	Version *int `json:"version,omitempty"`
}

// DeviceConfigurationAssignment The device configuration assignment entity assigns an AAD group to a specific device configuration.
type DeviceConfigurationAssignment struct {
	Entity
	// Target The assignment target for the device configuration.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// DeviceConfigurationDeviceOverview undocumented
type DeviceConfigurationDeviceOverview struct {
	Entity
	// PendingCount Number of pending devices
	PendingCount *int `json:"pendingCount,omitempty"`
	// NotApplicableCount Number of not applicable devices
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// SuccessCount Number of succeeded devices
	SuccessCount *int `json:"successCount,omitempty"`
	// ErrorCount Number of error devices
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed devices
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
}

// DeviceConfigurationDeviceStateSummary undocumented
type DeviceConfigurationDeviceStateSummary struct {
	Entity
	// UnknownDeviceCount Number of unknown devices
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
	// NotApplicableDeviceCount Number of not applicable devices
	NotApplicableDeviceCount *int `json:"notApplicableDeviceCount,omitempty"`
	// CompliantDeviceCount Number of compliant devices
	CompliantDeviceCount *int `json:"compliantDeviceCount,omitempty"`
	// RemediatedDeviceCount Number of remediated devices
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
	// NonCompliantDeviceCount Number of NonCompliant devices
	NonCompliantDeviceCount *int `json:"nonCompliantDeviceCount,omitempty"`
	// ErrorDeviceCount Number of error devices
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// ConflictDeviceCount Number of conflict devices
	ConflictDeviceCount *int `json:"conflictDeviceCount,omitempty"`
}

// DeviceConfigurationDeviceStatus undocumented
type DeviceConfigurationDeviceStatus struct {
	Entity
	// DeviceDisplayName Device name of the DevicePolicyStatus.
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	// UserName The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	// DeviceModel The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceConfigurationSettingState undocumented
type DeviceConfigurationSettingState struct {
	// Setting The setting that is being reported
	Setting *string `json:"setting,omitempty"`
	// SettingName Localized/user friendly setting name that is being reported
	SettingName *string `json:"settingName,omitempty"`
	// InstanceDisplayName Name of setting instance that is being reported.
	InstanceDisplayName *string `json:"instanceDisplayName,omitempty"`
	// State The compliance state of the setting
	State *ComplianceStatus `json:"state,omitempty"`
	// ErrorCode Error code for the setting
	ErrorCode *int `json:"errorCode,omitempty"`
	// ErrorDescription Error description
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// UserId UserId
	UserId *string `json:"userId,omitempty"`
	// UserName UserName
	UserName *string `json:"userName,omitempty"`
	// UserEmail UserEmail
	UserEmail *string `json:"userEmail,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// Sources Contributing policies
	Sources []SettingSource `json:"sources,omitempty"`
	// CurrentValue Current value of setting on device
	CurrentValue *string `json:"currentValue,omitempty"`
}

// DeviceConfigurationState Device Configuration State for a given device.
type DeviceConfigurationState struct {
	Entity
	// SettingStates undocumented
	SettingStates []DeviceConfigurationSettingState `json:"settingStates,omitempty"`
	// DisplayName The name of the policy for this policyBase
	DisplayName *string `json:"displayName,omitempty"`
	// Version The version of the policy
	Version *int `json:"version,omitempty"`
	// PlatformType Platform type that the policy applies to
	PlatformType *PolicyPlatformType `json:"platformType,omitempty"`
	// State The compliance state of the policy
	State *ComplianceStatus `json:"state,omitempty"`
	// SettingCount Count of how many setting a policy holds
	SettingCount *int `json:"settingCount,omitempty"`
}

// DeviceConfigurationUserOverview undocumented
type DeviceConfigurationUserOverview struct {
	Entity
	// PendingCount Number of pending Users
	PendingCount *int `json:"pendingCount,omitempty"`
	// NotApplicableCount Number of not applicable users
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// SuccessCount Number of succeeded Users
	SuccessCount *int `json:"successCount,omitempty"`
	// ErrorCount Number of error Users
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed Users
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
}

// DeviceConfigurationUserStatus undocumented
type DeviceConfigurationUserStatus struct {
	Entity
	// UserDisplayName User name of the DevicePolicyStatus.
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// DevicesCount Devices count for that user.
	DevicesCount *int `json:"devicesCount,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// DeviceDetail undocumented
type DeviceDetail struct {
	// DeviceId undocumented
	DeviceId *string `json:"deviceId,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// OperatingSystem undocumented
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// Browser undocumented
	Browser *string `json:"browser,omitempty"`
	// IsCompliant undocumented
	IsCompliant *bool `json:"isCompliant,omitempty"`
	// IsManaged undocumented
	IsManaged *bool `json:"isManaged,omitempty"`
	// TrustType undocumented
	TrustType *string `json:"trustType,omitempty"`
}

// DeviceEnrollmentConfiguration undocumented
type DeviceEnrollmentConfiguration struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// Priority undocumented
	Priority *int `json:"priority,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Version undocumented
	Version *int `json:"version,omitempty"`
}

// DeviceEnrollmentLimitConfiguration undocumented
type DeviceEnrollmentLimitConfiguration struct {
	DeviceEnrollmentConfiguration
	// Limit undocumented
	Limit *int `json:"limit,omitempty"`
}

// DeviceEnrollmentPlatformRestriction undocumented
type DeviceEnrollmentPlatformRestriction struct {
	// PlatformBlocked Block the platform from enrolling
	PlatformBlocked *bool `json:"platformBlocked,omitempty"`
	// PersonalDeviceEnrollmentBlocked Block personally owned devices from enrolling
	PersonalDeviceEnrollmentBlocked *bool `json:"personalDeviceEnrollmentBlocked,omitempty"`
	// OsMinimumVersion Min OS version supported
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Max OS version supported
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
}

// DeviceEnrollmentPlatformRestrictionsConfiguration undocumented
type DeviceEnrollmentPlatformRestrictionsConfiguration struct {
	DeviceEnrollmentConfiguration
	// IosRestriction undocumented
	IosRestriction *DeviceEnrollmentPlatformRestriction `json:"iosRestriction,omitempty"`
	// WindowsRestriction undocumented
	WindowsRestriction *DeviceEnrollmentPlatformRestriction `json:"windowsRestriction,omitempty"`
	// WindowsMobileRestriction undocumented
	WindowsMobileRestriction *DeviceEnrollmentPlatformRestriction `json:"windowsMobileRestriction,omitempty"`
	// AndroidRestriction undocumented
	AndroidRestriction *DeviceEnrollmentPlatformRestriction `json:"androidRestriction,omitempty"`
	// MacOSRestriction undocumented
	MacOSRestriction *DeviceEnrollmentPlatformRestriction `json:"macOSRestriction,omitempty"`
}

// DeviceEnrollmentWindowsHelloForBusinessConfiguration undocumented
type DeviceEnrollmentWindowsHelloForBusinessConfiguration struct {
	DeviceEnrollmentConfiguration
	// PinMinimumLength undocumented
	PinMinimumLength *int `json:"pinMinimumLength,omitempty"`
	// PinMaximumLength undocumented
	PinMaximumLength *int `json:"pinMaximumLength,omitempty"`
	// PinUppercaseCharactersUsage undocumented
	PinUppercaseCharactersUsage *WindowsHelloForBusinessPinUsage `json:"pinUppercaseCharactersUsage,omitempty"`
	// PinLowercaseCharactersUsage undocumented
	PinLowercaseCharactersUsage *WindowsHelloForBusinessPinUsage `json:"pinLowercaseCharactersUsage,omitempty"`
	// PinSpecialCharactersUsage undocumented
	PinSpecialCharactersUsage *WindowsHelloForBusinessPinUsage `json:"pinSpecialCharactersUsage,omitempty"`
	// State undocumented
	State *Enablement `json:"state,omitempty"`
	// SecurityDeviceRequired undocumented
	SecurityDeviceRequired *bool `json:"securityDeviceRequired,omitempty"`
	// UnlockWithBiometricsEnabled undocumented
	UnlockWithBiometricsEnabled *bool `json:"unlockWithBiometricsEnabled,omitempty"`
	// RemotePassportEnabled undocumented
	RemotePassportEnabled *bool `json:"remotePassportEnabled,omitempty"`
	// PinPreviousBlockCount undocumented
	PinPreviousBlockCount *int `json:"pinPreviousBlockCount,omitempty"`
	// PinExpirationInDays undocumented
	PinExpirationInDays *int `json:"pinExpirationInDays,omitempty"`
	// EnhancedBiometricsState undocumented
	EnhancedBiometricsState *Enablement `json:"enhancedBiometricsState,omitempty"`
}

// DeviceExchangeAccessStateSummary undocumented
type DeviceExchangeAccessStateSummary struct {
	// AllowedDeviceCount Total count of devices with Exchange Access State: Allowed.
	AllowedDeviceCount *int `json:"allowedDeviceCount,omitempty"`
	// BlockedDeviceCount Total count of devices with Exchange Access State: Blocked.
	BlockedDeviceCount *int `json:"blockedDeviceCount,omitempty"`
	// QuarantinedDeviceCount Total count of devices with Exchange Access State: Quarantined.
	QuarantinedDeviceCount *int `json:"quarantinedDeviceCount,omitempty"`
	// UnknownDeviceCount Total count of devices with Exchange Access State: Unknown.
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
	// UnavailableDeviceCount Total count of devices for which no Exchange Access State could be found.
	UnavailableDeviceCount *int `json:"unavailableDeviceCount,omitempty"`
}

// DeviceGeoLocation undocumented
type DeviceGeoLocation struct {
	// LastCollectedDateTime Time at which location was recorded, relative to UTC
	LastCollectedDateTime *time.Time `json:"lastCollectedDateTime,omitempty"`
	// Longitude Longitude coordinate of the device's location
	Longitude *float64 `json:"longitude,omitempty"`
	// Latitude Latitude coordinate of the device's location
	Latitude *float64 `json:"latitude,omitempty"`
	// Altitude Altitude, given in meters above sea level
	Altitude *float64 `json:"altitude,omitempty"`
	// HorizontalAccuracy Accuracy of longitude and latitude in meters
	HorizontalAccuracy *float64 `json:"horizontalAccuracy,omitempty"`
	// VerticalAccuracy Accuracy of altitude in meters
	VerticalAccuracy *float64 `json:"verticalAccuracy,omitempty"`
	// Heading Heading in degrees from true north
	Heading *float64 `json:"heading,omitempty"`
	// Speed Speed the device is traveling in meters per second
	Speed *float64 `json:"speed,omitempty"`
}

// DeviceHealthAttestationState undocumented
type DeviceHealthAttestationState struct {
	// LastUpdateDateTime The Timestamp of the last update.
	LastUpdateDateTime *string `json:"lastUpdateDateTime,omitempty"`
	// ContentNamespaceUrl The DHA report version. (Namespace version)
	ContentNamespaceUrl *string `json:"contentNamespaceUrl,omitempty"`
	// DeviceHealthAttestationStatus The DHA report version. (Namespace version)
	DeviceHealthAttestationStatus *string `json:"deviceHealthAttestationStatus,omitempty"`
	// ContentVersion The HealthAttestation state schema version
	ContentVersion *string `json:"contentVersion,omitempty"`
	// IssuedDateTime The DateTime when device was evaluated or issued to MDM
	IssuedDateTime *time.Time `json:"issuedDateTime,omitempty"`
	// AttestationIdentityKey TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
	AttestationIdentityKey *string `json:"attestationIdentityKey,omitempty"`
	// ResetCount The number of times a PC device has hibernated or resumed
	ResetCount *int `json:"resetCount,omitempty"`
	// RestartCount The number of times a PC device has rebooted
	RestartCount *int `json:"restartCount,omitempty"`
	// DataExcutionPolicy DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
	DataExcutionPolicy *string `json:"dataExcutionPolicy,omitempty"`
	// BitLockerStatus On or Off of BitLocker Drive Encryption
	BitLockerStatus *string `json:"bitLockerStatus,omitempty"`
	// BootManagerVersion The version of the Boot Manager
	BootManagerVersion *string `json:"bootManagerVersion,omitempty"`
	// CodeIntegrityCheckVersion The version of the Boot Manager
	CodeIntegrityCheckVersion *string `json:"codeIntegrityCheckVersion,omitempty"`
	// SecureBoot When Secure Boot is enabled, the core components must have the correct cryptographic signatures
	SecureBoot *string `json:"secureBoot,omitempty"`
	// BootDebugging When bootDebugging is enabled, the device is used in development and testing
	BootDebugging *string `json:"bootDebugging,omitempty"`
	// OperatingSystemKernelDebugging When operatingSystemKernelDebugging is enabled, the device is used in development and testing
	OperatingSystemKernelDebugging *string `json:"operatingSystemKernelDebugging,omitempty"`
	// CodeIntegrity  When code integrity is enabled, code execution is restricted to integrity verified code
	CodeIntegrity *string `json:"codeIntegrity,omitempty"`
	// TestSigning When test signing is allowed, the device does not enforce signature validation during boot
	TestSigning *string `json:"testSigning,omitempty"`
	// SafeMode Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
	SafeMode *string `json:"safeMode,omitempty"`
	// WindowsPE Operating system running with limited services that is used to prepare a computer for Windows
	WindowsPE *string `json:"windowsPE,omitempty"`
	// EarlyLaunchAntiMalwareDriverProtection ELAM provides protection for the computers in your network when they start up
	EarlyLaunchAntiMalwareDriverProtection *string `json:"earlyLaunchAntiMalwareDriverProtection,omitempty"`
	// VirtualSecureMode VSM is a container that protects high value assets from a compromised kernel
	VirtualSecureMode *string `json:"virtualSecureMode,omitempty"`
	// PcrHashAlgorithm Informational attribute that identifies the HASH algorithm that was used by TPM
	PcrHashAlgorithm *string `json:"pcrHashAlgorithm,omitempty"`
	// BootAppSecurityVersion The security version number of the Boot Application
	BootAppSecurityVersion *string `json:"bootAppSecurityVersion,omitempty"`
	// BootManagerSecurityVersion The security version number of the Boot Application
	BootManagerSecurityVersion *string `json:"bootManagerSecurityVersion,omitempty"`
	// TpmVersion The security version number of the Boot Application
	TpmVersion *string `json:"tpmVersion,omitempty"`
	// Pcr0 The measurement that is captured in PCR[0]
	Pcr0 *string `json:"pcr0,omitempty"`
	// SecureBootConfigurationPolicyFingerPrint Fingerprint of the Custom Secure Boot Configuration Policy
	SecureBootConfigurationPolicyFingerPrint *string `json:"secureBootConfigurationPolicyFingerPrint,omitempty"`
	// CodeIntegrityPolicy The Code Integrity policy that is controlling the security of the boot environment
	CodeIntegrityPolicy *string `json:"codeIntegrityPolicy,omitempty"`
	// BootRevisionListInfo The Boot Revision List that was loaded during initial boot on the attested device
	BootRevisionListInfo *string `json:"bootRevisionListInfo,omitempty"`
	// OperatingSystemRevListInfo The Operating System Revision List that was loaded during initial boot on the attested device
	OperatingSystemRevListInfo *string `json:"operatingSystemRevListInfo,omitempty"`
	// HealthStatusMismatchInfo This attribute appears if DHA-Service detects an integrity issue
	HealthStatusMismatchInfo *string `json:"healthStatusMismatchInfo,omitempty"`
	// HealthAttestationSupportedStatus This attribute indicates if DHA is supported for the device
	HealthAttestationSupportedStatus *string `json:"healthAttestationSupportedStatus,omitempty"`
}

// DeviceInstallState Contains properties for the installation state for a device.
type DeviceInstallState struct {
	Entity
	// DeviceName Device name.
	DeviceName *string `json:"deviceName,omitempty"`
	// DeviceId Device Id.
	DeviceId *string `json:"deviceId,omitempty"`
	// LastSyncDateTime Last sync date and time.
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// InstallState The install state of the eBook.
	InstallState *InstallState `json:"installState,omitempty"`
	// ErrorCode The error code for install failures.
	ErrorCode *string `json:"errorCode,omitempty"`
	// OsVersion OS Version.
	OsVersion *string `json:"osVersion,omitempty"`
	// OsDescription OS Description.
	OsDescription *string `json:"osDescription,omitempty"`
	// UserName Device User Name.
	UserName *string `json:"userName,omitempty"`
}

// DeviceManagement Singleton entity that acts as a container for all device management functionality.
type DeviceManagement struct {
	Entity
	// Settings Account level settings.
	Settings *DeviceManagementSettings `json:"settings,omitempty"`
	// IntuneBrand intuneBrand contains data which is used in customizing the appearance of the Company Portal applications as well as the end user web portal.
	IntuneBrand *IntuneBrand `json:"intuneBrand,omitempty"`
	// SubscriptionState Tenant mobile device management subscription state.
	SubscriptionState *DeviceManagementSubscriptionState `json:"subscriptionState,omitempty"`
}

// DeviceManagementExchangeConnector Entity which represents a connection to an Exchange environment.
type DeviceManagementExchangeConnector struct {
	Entity
	// LastSyncDateTime Last sync time for the Exchange Connector
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// Status Exchange Connector Status
	Status *DeviceManagementExchangeConnectorStatus `json:"status,omitempty"`
	// PrimarySmtpAddress Email address used to configure the Service To Service Exchange Connector.
	PrimarySmtpAddress *string `json:"primarySmtpAddress,omitempty"`
	// ServerName The name of the Exchange server.
	ServerName *string `json:"serverName,omitempty"`
	// ConnectorServerName The name of the server hosting the Exchange Connector.
	ConnectorServerName *string `json:"connectorServerName,omitempty"`
	// ExchangeConnectorType The type of Exchange Connector Configured.
	ExchangeConnectorType *DeviceManagementExchangeConnectorType `json:"exchangeConnectorType,omitempty"`
	// Version The version of the ExchangeConnectorAgent
	Version *string `json:"version,omitempty"`
	// ExchangeAlias An alias assigned to the Exchange server
	ExchangeAlias *string `json:"exchangeAlias,omitempty"`
	// ExchangeOrganization Exchange Organization to the Exchange server
	ExchangeOrganization *string `json:"exchangeOrganization,omitempty"`
}

// DeviceManagementPartner Entity which represents a connection to device management partner.
type DeviceManagementPartner struct {
	Entity
	// LastHeartbeatDateTime Timestamp of last heartbeat after admin enabled option Connect to Device management Partner
	LastHeartbeatDateTime *time.Time `json:"lastHeartbeatDateTime,omitempty"`
	// PartnerState Partner state of this tenant
	PartnerState *DeviceManagementPartnerTenantState `json:"partnerState,omitempty"`
	// PartnerAppType Partner App type
	PartnerAppType *DeviceManagementPartnerAppType `json:"partnerAppType,omitempty"`
	// SingleTenantAppId Partner Single tenant App id
	SingleTenantAppId *string `json:"singleTenantAppId,omitempty"`
	// DisplayName Partner display name
	DisplayName *string `json:"displayName,omitempty"`
	// IsConfigured Whether device management partner is configured or not
	IsConfigured *bool `json:"isConfigured,omitempty"`
	// WhenPartnerDevicesWillBeRemovedDateTime DateTime in UTC when PartnerDevices will be removed
	WhenPartnerDevicesWillBeRemovedDateTime *time.Time `json:"whenPartnerDevicesWillBeRemovedDateTime,omitempty"`
	// WhenPartnerDevicesWillBeMarkedAsNonCompliantDateTime DateTime in UTC when PartnerDevices will be marked as NonCompliant
	WhenPartnerDevicesWillBeMarkedAsNonCompliantDateTime *time.Time `json:"whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime,omitempty"`
}

// DeviceManagementSettings undocumented
type DeviceManagementSettings struct {
	// DeviceComplianceCheckinThresholdDays The number of days a device is allowed to go without checking in to remain compliant. Valid values 0 to 120
	DeviceComplianceCheckinThresholdDays *int `json:"deviceComplianceCheckinThresholdDays,omitempty"`
	// IsScheduledActionEnabled Is feature enabled or not for scheduled action for rule.
	IsScheduledActionEnabled *bool `json:"isScheduledActionEnabled,omitempty"`
	// SecureByDefault Device should be noncompliant when there is no compliance policy targeted when this is true
	SecureByDefault *bool `json:"secureByDefault,omitempty"`
}

// DeviceManagementTroubleshootingEvent Event representing an general failure.
type DeviceManagementTroubleshootingEvent struct {
	Entity
	// EventDateTime Time when the event occurred .
	EventDateTime *time.Time `json:"eventDateTime,omitempty"`
	// CorrelationId Id used for tracing the failure in the service.
	CorrelationId *string `json:"correlationId,omitempty"`
}

// DeviceOperatingSystemSummary undocumented
type DeviceOperatingSystemSummary struct {
	// AndroidCount Number of android device count.
	AndroidCount *int `json:"androidCount,omitempty"`
	// IosCount Number of iOS device count.
	IosCount *int `json:"iosCount,omitempty"`
	// MacOSCount Number of Mac OS X device count.
	MacOSCount *int `json:"macOSCount,omitempty"`
	// WindowsMobileCount Number of Windows mobile device count.
	WindowsMobileCount *int `json:"windowsMobileCount,omitempty"`
	// WindowsCount Number of Windows device count.
	WindowsCount *int `json:"windowsCount,omitempty"`
	// UnknownCount Number of unknown device count.
	UnknownCount *int `json:"unknownCount,omitempty"`
}

// Diagnostic undocumented
type Diagnostic struct {
	// Message undocumented
	Message *string `json:"message,omitempty"`
	// Url undocumented
	Url *string `json:"url,omitempty"`
}

// Directory undocumented
type Directory struct {
	Entity
}

// DirectoryAudit undocumented
type DirectoryAudit struct {
	Entity
	// Category undocumented
	Category *string `json:"category,omitempty"`
	// CorrelationId undocumented
	CorrelationId *string `json:"correlationId,omitempty"`
	// Result undocumented
	Result *OperationResult `json:"result,omitempty"`
	// ResultReason undocumented
	ResultReason *string `json:"resultReason,omitempty"`
	// ActivityDisplayName undocumented
	ActivityDisplayName *string `json:"activityDisplayName,omitempty"`
	// ActivityDateTime undocumented
	ActivityDateTime *time.Time `json:"activityDateTime,omitempty"`
	// LoggedByService undocumented
	LoggedByService *string `json:"loggedByService,omitempty"`
	// OperationType undocumented
	OperationType *string `json:"operationType,omitempty"`
	// InitiatedBy undocumented
	InitiatedBy *AuditActivityInitiator `json:"initiatedBy,omitempty"`
	// TargetResources undocumented
	TargetResources []TargetResource `json:"targetResources,omitempty"`
	// AdditionalDetails undocumented
	AdditionalDetails []KeyValue `json:"additionalDetails,omitempty"`
}

// DirectoryObject Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.
type DirectoryObject struct {
	Entity
	// DeletedDateTime undocumented
	DeletedDateTime *time.Time `json:"deletedDateTime,omitempty"`
}

// DirectoryObjectPartnerReference undocumented
type DirectoryObjectPartnerReference struct {
	DirectoryObject
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// ExternalPartnerTenantId undocumented
	ExternalPartnerTenantId *UUID `json:"externalPartnerTenantId,omitempty"`
	// ObjectType undocumented
	ObjectType *string `json:"objectType,omitempty"`
}

// DirectoryRole undocumented
type DirectoryRole struct {
	DirectoryObject
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// RoleTemplateId undocumented
	RoleTemplateId *string `json:"roleTemplateId,omitempty"`
}

// DirectoryRoleTemplate undocumented
type DirectoryRoleTemplate struct {
	DirectoryObject
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// Domain undocumented
type Domain struct {
	Entity
	// AuthenticationType undocumented
	AuthenticationType *string `json:"authenticationType,omitempty"`
	// AvailabilityStatus undocumented
	AvailabilityStatus *string `json:"availabilityStatus,omitempty"`
	// IsAdminManaged undocumented
	IsAdminManaged *bool `json:"isAdminManaged,omitempty"`
	// IsDefault undocumented
	IsDefault *bool `json:"isDefault,omitempty"`
	// IsInitial undocumented
	IsInitial *bool `json:"isInitial,omitempty"`
	// IsRoot undocumented
	IsRoot *bool `json:"isRoot,omitempty"`
	// IsVerified undocumented
	IsVerified *bool `json:"isVerified,omitempty"`
	// PasswordNotificationWindowInDays undocumented
	PasswordNotificationWindowInDays *int `json:"passwordNotificationWindowInDays,omitempty"`
	// PasswordValidityPeriodInDays undocumented
	PasswordValidityPeriodInDays *int `json:"passwordValidityPeriodInDays,omitempty"`
	// SupportedServices undocumented
	SupportedServices []string `json:"supportedServices,omitempty"`
	// State undocumented
	State *DomainState `json:"state,omitempty"`
}

// DomainDnsCnameRecord undocumented
type DomainDnsCnameRecord struct {
	DomainDnsRecord
	// CanonicalName undocumented
	CanonicalName *string `json:"canonicalName,omitempty"`
}

// DomainDnsMxRecord undocumented
type DomainDnsMxRecord struct {
	DomainDnsRecord
	// MailExchange undocumented
	MailExchange *string `json:"mailExchange,omitempty"`
	// Preference undocumented
	Preference *int `json:"preference,omitempty"`
}

// DomainDnsRecord undocumented
type DomainDnsRecord struct {
	Entity
	// IsOptional undocumented
	IsOptional *bool `json:"isOptional,omitempty"`
	// Label undocumented
	Label *string `json:"label,omitempty"`
	// RecordType undocumented
	RecordType *string `json:"recordType,omitempty"`
	// SupportedService undocumented
	SupportedService *string `json:"supportedService,omitempty"`
	// Ttl undocumented
	Ttl *int `json:"ttl,omitempty"`
}

// DomainDnsSrvRecord undocumented
type DomainDnsSrvRecord struct {
	DomainDnsRecord
	// NameTarget undocumented
	NameTarget *string `json:"nameTarget,omitempty"`
	// Port undocumented
	Port *int `json:"port,omitempty"`
	// Priority undocumented
	Priority *int `json:"priority,omitempty"`
	// Protocol undocumented
	Protocol *string `json:"protocol,omitempty"`
	// Service undocumented
	Service *string `json:"service,omitempty"`
	// Weight undocumented
	Weight *int `json:"weight,omitempty"`
}

// DomainDnsTxtRecord undocumented
type DomainDnsTxtRecord struct {
	DomainDnsRecord
	// Text undocumented
	Text *string `json:"text,omitempty"`
}

// DomainDnsUnavailableRecord undocumented
type DomainDnsUnavailableRecord struct {
	DomainDnsRecord
	// Description undocumented
	Description *string `json:"description,omitempty"`
}

// DomainState undocumented
type DomainState struct {
	// Status undocumented
	Status *string `json:"status,omitempty"`
	// Operation undocumented
	Operation *string `json:"operation,omitempty"`
	// LastActionDateTime undocumented
	LastActionDateTime *time.Time `json:"lastActionDateTime,omitempty"`
}

// Drive undocumented
type Drive struct {
	BaseItem
	// DriveType undocumented
	DriveType *string `json:"driveType,omitempty"`
	// Owner undocumented
	Owner *IdentitySet `json:"owner,omitempty"`
	// Quota undocumented
	Quota *Quota `json:"quota,omitempty"`
	// SharePointIds undocumented
	SharePointIds *SharepointIds `json:"sharePointIds,omitempty"`
	// System undocumented
	System *SystemFacet `json:"system,omitempty"`
}

// DriveItem undocumented
type DriveItem struct {
	BaseItem
	// Audio undocumented
	Audio *Audio `json:"audio,omitempty"`
	// Content undocumented
	Content *Stream `json:"content,omitempty"`
	// CTag undocumented
	CTag *string `json:"cTag,omitempty"`
	// Deleted undocumented
	Deleted *Deleted `json:"deleted,omitempty"`
	// File undocumented
	File *File `json:"file,omitempty"`
	// FileSystemInfo undocumented
	FileSystemInfo *FileSystemInfo `json:"fileSystemInfo,omitempty"`
	// Folder undocumented
	Folder *Folder `json:"folder,omitempty"`
	// Image undocumented
	Image *Image `json:"image,omitempty"`
	// Location undocumented
	Location *GeoCoordinates `json:"location,omitempty"`
	// Package undocumented
	Package *Package `json:"package,omitempty"`
	// Photo undocumented
	Photo *Photo `json:"photo,omitempty"`
	// Publication undocumented
	Publication *PublicationFacet `json:"publication,omitempty"`
	// RemoteItem undocumented
	RemoteItem *RemoteItem `json:"remoteItem,omitempty"`
	// Root undocumented
	Root *Root `json:"root,omitempty"`
	// SearchResult undocumented
	SearchResult *SearchResult `json:"searchResult,omitempty"`
	// Shared undocumented
	Shared *Shared `json:"shared,omitempty"`
	// SharepointIds undocumented
	SharepointIds *SharepointIds `json:"sharepointIds,omitempty"`
	// Size undocumented
	Size *int `json:"size,omitempty"`
	// SpecialFolder undocumented
	SpecialFolder *SpecialFolder `json:"specialFolder,omitempty"`
	// Video undocumented
	Video *Video `json:"video,omitempty"`
	// WebDavUrl undocumented
	WebDavUrl *string `json:"webDavUrl,omitempty"`
}

// DriveItemUploadableProperties undocumented
type DriveItemUploadableProperties struct {
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// FileSystemInfo undocumented
	FileSystemInfo *FileSystemInfo `json:"fileSystemInfo,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

// DriveItemVersion undocumented
type DriveItemVersion struct {
	BaseItemVersion
	// Content undocumented
	Content *Stream `json:"content,omitempty"`
	// Size undocumented
	Size *int `json:"size,omitempty"`
}

// DriveRecipient undocumented
type DriveRecipient struct {
	// Alias undocumented
	Alias *string `json:"alias,omitempty"`
	// Email undocumented
	Email *string `json:"email,omitempty"`
	// ObjectId undocumented
	ObjectId *string `json:"objectId,omitempty"`
}

// EBookInstallSummary Contains properties for the installation summary of a book for a device.
type EBookInstallSummary struct {
	Entity
	// InstalledDeviceCount Number of Devices that have successfully installed this book.
	InstalledDeviceCount *int `json:"installedDeviceCount,omitempty"`
	// FailedDeviceCount Number of Devices that have failed to install this book.
	FailedDeviceCount *int `json:"failedDeviceCount,omitempty"`
	// NotInstalledDeviceCount Number of Devices that does not have this book installed.
	NotInstalledDeviceCount *int `json:"notInstalledDeviceCount,omitempty"`
	// InstalledUserCount Number of Users whose devices have all succeeded to install this book.
	InstalledUserCount *int `json:"installedUserCount,omitempty"`
	// FailedUserCount Number of Users that have 1 or more device that failed to install this book.
	FailedUserCount *int `json:"failedUserCount,omitempty"`
	// NotInstalledUserCount Number of Users that did not install this book.
	NotInstalledUserCount *int `json:"notInstalledUserCount,omitempty"`
}

// EdgeSearchEngine undocumented
type EdgeSearchEngine struct {
	EdgeSearchEngineBase
	// EdgeSearchEngineType Allows IT admins to set a predefined default search engine for MDM-Controlled devices.
	EdgeSearchEngineType *EdgeSearchEngineType `json:"edgeSearchEngineType,omitempty"`
}

// EdgeSearchEngineBase undocumented
type EdgeSearchEngineBase struct {
}

// EdgeSearchEngineCustom undocumented
type EdgeSearchEngineCustom struct {
	EdgeSearchEngineBase
	// EdgeSearchEngineOpenSearchXmlUrl Points to a https link containing the OpenSearch xml file that contains, at minimum, the short name and the URL to the search Engine.
	EdgeSearchEngineOpenSearchXmlUrl *string `json:"edgeSearchEngineOpenSearchXmlUrl,omitempty"`
}

// EditionUpgradeConfiguration Windows 10 Edition Upgrade configuration.
type EditionUpgradeConfiguration struct {
	DeviceConfiguration
	// LicenseType Edition Upgrade License Type.
	LicenseType *EditionUpgradeLicenseType `json:"licenseType,omitempty"`
	// TargetEdition Edition Upgrade Target Edition.
	TargetEdition *Windows10EditionType `json:"targetEdition,omitempty"`
	// License Edition Upgrade License File Content.
	License *string `json:"license,omitempty"`
	// ProductKey Edition Upgrade Product Key.
	ProductKey *string `json:"productKey,omitempty"`
}

// EducationClass undocumented
type EducationClass struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// MailNickname undocumented
	MailNickname *string `json:"mailNickname,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// CreatedBy undocumented
	CreatedBy *IdentitySet `json:"createdBy,omitempty"`
	// ClassCode undocumented
	ClassCode *string `json:"classCode,omitempty"`
	// ExternalName undocumented
	ExternalName *string `json:"externalName,omitempty"`
	// ExternalId undocumented
	ExternalId *string `json:"externalId,omitempty"`
	// ExternalSource undocumented
	ExternalSource *EducationExternalSource `json:"externalSource,omitempty"`
	// Term undocumented
	Term *EducationTerm `json:"term,omitempty"`
}

// EducationOrganization undocumented
type EducationOrganization struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// ExternalSource undocumented
	ExternalSource *EducationExternalSource `json:"externalSource,omitempty"`
}

// EducationRoot undocumented
type EducationRoot struct {
	Entity
}

// EducationSchool undocumented
type EducationSchool struct {
	EducationOrganization
	// PrincipalEmail undocumented
	PrincipalEmail *string `json:"principalEmail,omitempty"`
	// PrincipalName undocumented
	PrincipalName *string `json:"principalName,omitempty"`
	// ExternalPrincipalId undocumented
	ExternalPrincipalId *string `json:"externalPrincipalId,omitempty"`
	// LowestGrade undocumented
	LowestGrade *string `json:"lowestGrade,omitempty"`
	// HighestGrade undocumented
	HighestGrade *string `json:"highestGrade,omitempty"`
	// SchoolNumber undocumented
	SchoolNumber *string `json:"schoolNumber,omitempty"`
	// ExternalId undocumented
	ExternalId *string `json:"externalId,omitempty"`
	// Phone undocumented
	Phone *string `json:"phone,omitempty"`
	// Fax undocumented
	Fax *string `json:"fax,omitempty"`
	// CreatedBy undocumented
	CreatedBy *IdentitySet `json:"createdBy,omitempty"`
	// Address undocumented
	Address *PhysicalAddress `json:"address,omitempty"`
}

// EducationStudent undocumented
type EducationStudent struct {
	// GraduationYear undocumented
	GraduationYear *string `json:"graduationYear,omitempty"`
	// Grade undocumented
	Grade *string `json:"grade,omitempty"`
	// BirthDate undocumented
	BirthDate *time.Time `json:"birthDate,omitempty"`
	// Gender undocumented
	Gender *EducationGender `json:"gender,omitempty"`
	// StudentNumber undocumented
	StudentNumber *string `json:"studentNumber,omitempty"`
	// ExternalId undocumented
	ExternalId *string `json:"externalId,omitempty"`
}

// EducationTeacher undocumented
type EducationTeacher struct {
	// TeacherNumber undocumented
	TeacherNumber *string `json:"teacherNumber,omitempty"`
	// ExternalId undocumented
	ExternalId *string `json:"externalId,omitempty"`
}

// EducationTerm undocumented
type EducationTerm struct {
	// ExternalId undocumented
	ExternalId *string `json:"externalId,omitempty"`
	// StartDate undocumented
	StartDate *time.Time `json:"startDate,omitempty"`
	// EndDate undocumented
	EndDate *time.Time `json:"endDate,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// EducationUser undocumented
type EducationUser struct {
	Entity
	// PrimaryRole undocumented
	PrimaryRole *EducationUserRole `json:"primaryRole,omitempty"`
	// MiddleName undocumented
	MiddleName *string `json:"middleName,omitempty"`
	// ExternalSource undocumented
	ExternalSource *EducationExternalSource `json:"externalSource,omitempty"`
	// ResidenceAddress undocumented
	ResidenceAddress *PhysicalAddress `json:"residenceAddress,omitempty"`
	// MailingAddress undocumented
	MailingAddress *PhysicalAddress `json:"mailingAddress,omitempty"`
	// Student undocumented
	Student *EducationStudent `json:"student,omitempty"`
	// Teacher undocumented
	Teacher *EducationTeacher `json:"teacher,omitempty"`
	// CreatedBy undocumented
	CreatedBy *IdentitySet `json:"createdBy,omitempty"`
	// AccountEnabled undocumented
	AccountEnabled *bool `json:"accountEnabled,omitempty"`
	// AssignedLicenses undocumented
	AssignedLicenses []AssignedLicense `json:"assignedLicenses,omitempty"`
	// AssignedPlans undocumented
	AssignedPlans []AssignedPlan `json:"assignedPlans,omitempty"`
	// BusinessPhones undocumented
	BusinessPhones []string `json:"businessPhones,omitempty"`
	// Department undocumented
	Department *string `json:"department,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// GivenName undocumented
	GivenName *string `json:"givenName,omitempty"`
	// Mail undocumented
	Mail *string `json:"mail,omitempty"`
	// MailNickname undocumented
	MailNickname *string `json:"mailNickname,omitempty"`
	// MobilePhone undocumented
	MobilePhone *string `json:"mobilePhone,omitempty"`
	// PasswordPolicies undocumented
	PasswordPolicies *string `json:"passwordPolicies,omitempty"`
	// PasswordProfile undocumented
	PasswordProfile *PasswordProfile `json:"passwordProfile,omitempty"`
	// OfficeLocation undocumented
	OfficeLocation *string `json:"officeLocation,omitempty"`
	// PreferredLanguage undocumented
	PreferredLanguage *string `json:"preferredLanguage,omitempty"`
	// ProvisionedPlans undocumented
	ProvisionedPlans []ProvisionedPlan `json:"provisionedPlans,omitempty"`
	// RefreshTokensValidFromDateTime undocumented
	RefreshTokensValidFromDateTime *time.Time `json:"refreshTokensValidFromDateTime,omitempty"`
	// ShowInAddressList undocumented
	ShowInAddressList *bool `json:"showInAddressList,omitempty"`
	// Surname undocumented
	Surname *string `json:"surname,omitempty"`
	// UsageLocation undocumented
	UsageLocation *string `json:"usageLocation,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// UserType undocumented
	UserType *string `json:"userType,omitempty"`
}

// EmailAddress undocumented
type EmailAddress struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Address undocumented
	Address *string `json:"address,omitempty"`
}

// EnrollmentConfigurationAssignment undocumented
type EnrollmentConfigurationAssignment struct {
	Entity
	// Target undocumented
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// EnrollmentTroubleshootingEvent Event representing an enrollment failure.
type EnrollmentTroubleshootingEvent struct {
	DeviceManagementTroubleshootingEvent
	// ManagedDeviceIdentifier Device identifier created or collected by Intune.
	ManagedDeviceIdentifier *string `json:"managedDeviceIdentifier,omitempty"`
	// OperatingSystem Operating System.
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// OsVersion OS Version.
	OsVersion *string `json:"osVersion,omitempty"`
	// UserId Identifier for the user that tried to enroll the device.
	UserId *string `json:"userId,omitempty"`
	// DeviceId Azure AD device identifier.
	DeviceId *string `json:"deviceId,omitempty"`
	// EnrollmentType Type of the enrollment.
	EnrollmentType *DeviceEnrollmentType `json:"enrollmentType,omitempty"`
	// FailureCategory Highlevel failure category.
	FailureCategory *DeviceEnrollmentFailureReason `json:"failureCategory,omitempty"`
	// FailureReason Detailed failure reason.
	FailureReason *string `json:"failureReason,omitempty"`
}

// Entity undocumented
type Entity struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
}

// Event undocumented
type Event struct {
	OutlookItem
	// OriginalStartTimeZone undocumented
	OriginalStartTimeZone *string `json:"originalStartTimeZone,omitempty"`
	// OriginalEndTimeZone undocumented
	OriginalEndTimeZone *string `json:"originalEndTimeZone,omitempty"`
	// ResponseStatus undocumented
	ResponseStatus *ResponseStatus `json:"responseStatus,omitempty"`
	// ICalUId undocumented
	ICalUId *string `json:"iCalUId,omitempty"`
	// ReminderMinutesBeforeStart undocumented
	ReminderMinutesBeforeStart *int `json:"reminderMinutesBeforeStart,omitempty"`
	// IsReminderOn undocumented
	IsReminderOn *bool `json:"isReminderOn,omitempty"`
	// HasAttachments undocumented
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	// Subject undocumented
	Subject *string `json:"subject,omitempty"`
	// Body undocumented
	Body *ItemBody `json:"body,omitempty"`
	// BodyPreview undocumented
	BodyPreview *string `json:"bodyPreview,omitempty"`
	// Importance undocumented
	Importance *Importance `json:"importance,omitempty"`
	// Sensitivity undocumented
	Sensitivity *Sensitivity `json:"sensitivity,omitempty"`
	// Start undocumented
	Start *DateTimeTimeZone `json:"start,omitempty"`
	// OriginalStart undocumented
	OriginalStart *time.Time `json:"originalStart,omitempty"`
	// End undocumented
	End *DateTimeTimeZone `json:"end,omitempty"`
	// Location undocumented
	Location *Location `json:"location,omitempty"`
	// Locations undocumented
	Locations []Location `json:"locations,omitempty"`
	// IsAllDay undocumented
	IsAllDay *bool `json:"isAllDay,omitempty"`
	// IsCancelled undocumented
	IsCancelled *bool `json:"isCancelled,omitempty"`
	// IsOrganizer undocumented
	IsOrganizer *bool `json:"isOrganizer,omitempty"`
	// Recurrence undocumented
	Recurrence *PatternedRecurrence `json:"recurrence,omitempty"`
	// ResponseRequested undocumented
	ResponseRequested *bool `json:"responseRequested,omitempty"`
	// SeriesMasterId undocumented
	SeriesMasterId *string `json:"seriesMasterId,omitempty"`
	// ShowAs undocumented
	ShowAs *FreeBusyStatus `json:"showAs,omitempty"`
	// Type undocumented
	Type *EventType `json:"type,omitempty"`
	// Attendees undocumented
	Attendees []Attendee `json:"attendees,omitempty"`
	// Organizer undocumented
	Organizer *Recipient `json:"organizer,omitempty"`
	// WebLink undocumented
	WebLink *string `json:"webLink,omitempty"`
	// OnlineMeetingUrl undocumented
	OnlineMeetingUrl *string `json:"onlineMeetingUrl,omitempty"`
}

// EventMessage undocumented
type EventMessage struct {
	Message
	// MeetingMessageType undocumented
	MeetingMessageType *MeetingMessageType `json:"meetingMessageType,omitempty"`
}

// ExclusionGroupAssignmentTarget undocumented
type ExclusionGroupAssignmentTarget struct {
	GroupAssignmentTarget
}

// Extension undocumented
type Extension struct {
	Entity
}

// ExtensionSchemaProperty undocumented
type ExtensionSchemaProperty struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
}

// ExternalLink undocumented
type ExternalLink struct {
	// Href undocumented
	Href *string `json:"href,omitempty"`
}

// FieldValueSet undocumented
type FieldValueSet struct {
	Entity
}

// File undocumented
type File struct {
	// Hashes undocumented
	Hashes *Hashes `json:"hashes,omitempty"`
	// MimeType undocumented
	MimeType *string `json:"mimeType,omitempty"`
	// ProcessingMetadata undocumented
	ProcessingMetadata *bool `json:"processingMetadata,omitempty"`
}

// FileAttachment undocumented
type FileAttachment struct {
	Attachment
	// ContentId undocumented
	ContentId *string `json:"contentId,omitempty"`
	// ContentLocation undocumented
	ContentLocation *string `json:"contentLocation,omitempty"`
	// ContentBytes undocumented
	ContentBytes *Binary `json:"contentBytes,omitempty"`
}

// FileEncryptionInfo undocumented
type FileEncryptionInfo struct {
	// EncryptionKey The key used to encrypt the file content.
	EncryptionKey *Binary `json:"encryptionKey,omitempty"`
	// InitializationVector The initialization vector used for the encryption algorithm.
	InitializationVector *Binary `json:"initializationVector,omitempty"`
	// Mac The hash of the encrypted file content + IV (content hash).
	Mac *Binary `json:"mac,omitempty"`
	// MacKey The key used to get mac.
	MacKey *Binary `json:"macKey,omitempty"`
	// ProfileIdentifier The the profile identifier.
	ProfileIdentifier *string `json:"profileIdentifier,omitempty"`
	// FileDigest The file digest prior to encryption.
	FileDigest *Binary `json:"fileDigest,omitempty"`
	// FileDigestAlgorithm The file digest algorithm.
	FileDigestAlgorithm *string `json:"fileDigestAlgorithm,omitempty"`
}

// FileHash undocumented
type FileHash struct {
	// HashType undocumented
	HashType *FileHashType `json:"hashType,omitempty"`
	// HashValue undocumented
	HashValue *string `json:"hashValue,omitempty"`
}

// FileSecurityState undocumented
type FileSecurityState struct {
	// FileHash undocumented
	FileHash *FileHash `json:"fileHash,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Path undocumented
	Path *string `json:"path,omitempty"`
	// RiskScore undocumented
	RiskScore *string `json:"riskScore,omitempty"`
}

// FileSystemInfo undocumented
type FileSystemInfo struct {
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastAccessedDateTime undocumented
	LastAccessedDateTime *time.Time `json:"lastAccessedDateTime,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// Folder undocumented
type Folder struct {
	// ChildCount undocumented
	ChildCount *int `json:"childCount,omitempty"`
	// View undocumented
	View *FolderView `json:"view,omitempty"`
}

// FolderView undocumented
type FolderView struct {
	// SortBy undocumented
	SortBy *string `json:"sortBy,omitempty"`
	// SortOrder undocumented
	SortOrder *string `json:"sortOrder,omitempty"`
	// ViewType undocumented
	ViewType *string `json:"viewType,omitempty"`
}

// FollowupFlag undocumented
type FollowupFlag struct {
	// CompletedDateTime undocumented
	CompletedDateTime *DateTimeTimeZone `json:"completedDateTime,omitempty"`
	// DueDateTime undocumented
	DueDateTime *DateTimeTimeZone `json:"dueDateTime,omitempty"`
	// StartDateTime undocumented
	StartDateTime *DateTimeTimeZone `json:"startDateTime,omitempty"`
	// FlagStatus undocumented
	FlagStatus *FollowupFlagStatus `json:"flagStatus,omitempty"`
}

// FreeBusyError undocumented
type FreeBusyError struct {
	// Message undocumented
	Message *string `json:"message,omitempty"`
	// ResponseCode undocumented
	ResponseCode *string `json:"responseCode,omitempty"`
}

// GenericError undocumented
type GenericError struct {
	// Message undocumented
	Message *string `json:"message,omitempty"`
	// Code undocumented
	Code *string `json:"code,omitempty"`
}

// GeoCoordinates undocumented
type GeoCoordinates struct {
	// Altitude undocumented
	Altitude *float64 `json:"altitude,omitempty"`
	// Latitude undocumented
	Latitude *float64 `json:"latitude,omitempty"`
	// Longitude undocumented
	Longitude *float64 `json:"longitude,omitempty"`
}

// Group undocumented
type Group struct {
	DirectoryObject
	// AssignedLicenses undocumented
	AssignedLicenses []AssignedLicense `json:"assignedLicenses,omitempty"`
	// Classification undocumented
	Classification *string `json:"classification,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// HasMembersWithLicenseErrors undocumented
	HasMembersWithLicenseErrors *bool `json:"hasMembersWithLicenseErrors,omitempty"`
	// GroupTypes undocumented
	GroupTypes []string `json:"groupTypes,omitempty"`
	// LicenseProcessingState undocumented
	LicenseProcessingState *LicenseProcessingState `json:"licenseProcessingState,omitempty"`
	// Mail undocumented
	Mail *string `json:"mail,omitempty"`
	// MailEnabled undocumented
	MailEnabled *bool `json:"mailEnabled,omitempty"`
	// MailNickname undocumented
	MailNickname *string `json:"mailNickname,omitempty"`
	// OnPremisesLastSyncDateTime undocumented
	OnPremisesLastSyncDateTime *time.Time `json:"onPremisesLastSyncDateTime,omitempty"`
	// OnPremisesProvisioningErrors undocumented
	OnPremisesProvisioningErrors []OnPremisesProvisioningError `json:"onPremisesProvisioningErrors,omitempty"`
	// OnPremisesSecurityIdentifier undocumented
	OnPremisesSecurityIdentifier *string `json:"onPremisesSecurityIdentifier,omitempty"`
	// OnPremisesSyncEnabled undocumented
	OnPremisesSyncEnabled *bool `json:"onPremisesSyncEnabled,omitempty"`
	// PreferredDataLocation undocumented
	PreferredDataLocation *string `json:"preferredDataLocation,omitempty"`
	// ProxyAddresses undocumented
	ProxyAddresses []string `json:"proxyAddresses,omitempty"`
	// RenewedDateTime undocumented
	RenewedDateTime *time.Time `json:"renewedDateTime,omitempty"`
	// SecurityEnabled undocumented
	SecurityEnabled *bool `json:"securityEnabled,omitempty"`
	// Visibility undocumented
	Visibility *string `json:"visibility,omitempty"`
	// AllowExternalSenders undocumented
	AllowExternalSenders *bool `json:"allowExternalSenders,omitempty"`
	// AutoSubscribeNewMembers undocumented
	AutoSubscribeNewMembers *bool `json:"autoSubscribeNewMembers,omitempty"`
	// IsSubscribedByMail undocumented
	IsSubscribedByMail *bool `json:"isSubscribedByMail,omitempty"`
	// UnseenCount undocumented
	UnseenCount *int `json:"unseenCount,omitempty"`
	// IsArchived undocumented
	IsArchived *bool `json:"isArchived,omitempty"`
}

// GroupAssignmentTarget undocumented
type GroupAssignmentTarget struct {
	DeviceAndAppManagementAssignmentTarget
	// GroupId The group Id that is the target of the assignment.
	GroupId *string `json:"groupId,omitempty"`
}

// GroupLifecyclePolicy undocumented
type GroupLifecyclePolicy struct {
	Entity
	// GroupLifetimeInDays undocumented
	GroupLifetimeInDays *int `json:"groupLifetimeInDays,omitempty"`
	// ManagedGroupTypes undocumented
	ManagedGroupTypes *string `json:"managedGroupTypes,omitempty"`
	// AlternateNotificationEmails undocumented
	AlternateNotificationEmails *string `json:"alternateNotificationEmails,omitempty"`
}

// GroupSetting undocumented
type GroupSetting struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// TemplateId undocumented
	TemplateId *string `json:"templateId,omitempty"`
	// Values undocumented
	Values []SettingValue `json:"values,omitempty"`
}

// GroupSettingTemplate undocumented
type GroupSettingTemplate struct {
	DirectoryObject
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// Values undocumented
	Values []SettingTemplateValue `json:"values,omitempty"`
}

// Hashes undocumented
type Hashes struct {
	// Crc32Hash undocumented
	Crc32Hash *string `json:"crc32Hash,omitempty"`
	// QuickXorHash undocumented
	QuickXorHash *string `json:"quickXorHash,omitempty"`
	// Sha1Hash undocumented
	Sha1Hash *string `json:"sha1Hash,omitempty"`
}

// HostSecurityState undocumented
type HostSecurityState struct {
	// Fqdn undocumented
	Fqdn *string `json:"fqdn,omitempty"`
	// IsAzureAdJoined undocumented
	IsAzureAdJoined *bool `json:"isAzureAdJoined,omitempty"`
	// IsAzureAdRegistered undocumented
	IsAzureAdRegistered *bool `json:"isAzureAdRegistered,omitempty"`
	// IsHybridAzureDomainJoined undocumented
	IsHybridAzureDomainJoined *bool `json:"isHybridAzureDomainJoined,omitempty"`
	// NetBiosName undocumented
	NetBiosName *string `json:"netBiosName,omitempty"`
	// Os undocumented
	Os *string `json:"os,omitempty"`
	// PrivateIpAddress undocumented
	PrivateIpAddress *string `json:"privateIpAddress,omitempty"`
	// PublicIpAddress undocumented
	PublicIpAddress *string `json:"publicIpAddress,omitempty"`
	// RiskScore undocumented
	RiskScore *string `json:"riskScore,omitempty"`
}

// IPv4Range undocumented
type IPv4Range struct {
	IpRange
	// LowerAddress Lower address.
	LowerAddress *string `json:"lowerAddress,omitempty"`
	// UpperAddress Upper address.
	UpperAddress *string `json:"upperAddress,omitempty"`
}

// IPv6Range undocumented
type IPv6Range struct {
	IpRange
	// LowerAddress Lower address
	LowerAddress *string `json:"lowerAddress,omitempty"`
	// UpperAddress Upper address
	UpperAddress *string `json:"upperAddress,omitempty"`
}

// Identity undocumented
type Identity struct {
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Id undocumented
	Id *string `json:"id,omitempty"`
}

// IdentityProvider undocumented
type IdentityProvider struct {
	Entity
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// ClientId undocumented
	ClientId *string `json:"clientId,omitempty"`
	// ClientSecret undocumented
	ClientSecret *string `json:"clientSecret,omitempty"`
}

// IdentitySet undocumented
type IdentitySet struct {
	// Application undocumented
	Application *Identity `json:"application,omitempty"`
	// Device undocumented
	Device *Identity `json:"device,omitempty"`
	// User undocumented
	User *Identity `json:"user,omitempty"`
}

// Image undocumented
type Image struct {
	// Height undocumented
	Height *int `json:"height,omitempty"`
	// Width undocumented
	Width *int `json:"width,omitempty"`
}

// ImageInfo undocumented
type ImageInfo struct {
	// IconUrl undocumented
	IconUrl *string `json:"iconUrl,omitempty"`
	// AlternativeText undocumented
	AlternativeText *string `json:"alternativeText,omitempty"`
	// AlternateText undocumented
	AlternateText *string `json:"alternateText,omitempty"`
	// AddImageQuery undocumented
	AddImageQuery *bool `json:"addImageQuery,omitempty"`
}

// IncompleteData undocumented
type IncompleteData struct {
	// MissingDataBeforeDateTime undocumented
	MissingDataBeforeDateTime *time.Time `json:"missingDataBeforeDateTime,omitempty"`
	// WasThrottled undocumented
	WasThrottled *bool `json:"wasThrottled,omitempty"`
}

// InferenceClassification undocumented
type InferenceClassification struct {
	Entity
}

// InferenceClassificationOverride undocumented
type InferenceClassificationOverride struct {
	Entity
	// ClassifyAs undocumented
	ClassifyAs *InferenceClassificationType `json:"classifyAs,omitempty"`
	// SenderEmailAddress undocumented
	SenderEmailAddress *EmailAddress `json:"senderEmailAddress,omitempty"`
}

// InsightIdentity undocumented
type InsightIdentity struct {
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// Address undocumented
	Address *string `json:"address,omitempty"`
}

// InternetMessageHeader undocumented
type InternetMessageHeader struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Value undocumented
	Value *string `json:"value,omitempty"`
}

// IntuneBrand undocumented
type IntuneBrand struct {
	// DisplayName Company/organization name that is displayed to end users.
	DisplayName *string `json:"displayName,omitempty"`
	// ContactITName Name of the person/organization responsible for IT support.
	ContactITName *string `json:"contactITName,omitempty"`
	// ContactITPhoneNumber Phone number of the person/organization responsible for IT support.
	ContactITPhoneNumber *string `json:"contactITPhoneNumber,omitempty"`
	// ContactITEmailAddress Email address of the person/organization responsible for IT support.
	ContactITEmailAddress *string `json:"contactITEmailAddress,omitempty"`
	// ContactITNotes Text comments regarding the person/organization responsible for IT support.
	ContactITNotes *string `json:"contactITNotes,omitempty"`
	// PrivacyUrl URL to the company/organization’s privacy policy.
	PrivacyUrl *string `json:"privacyUrl,omitempty"`
	// OnlineSupportSiteUrl URL to the company/organization’s IT helpdesk site.
	OnlineSupportSiteUrl *string `json:"onlineSupportSiteUrl,omitempty"`
	// OnlineSupportSiteName Display name of the company/organization’s IT helpdesk site.
	OnlineSupportSiteName *string `json:"onlineSupportSiteName,omitempty"`
	// ThemeColor Primary theme color used in the Company Portal applications and web portal.
	ThemeColor *RgbColor `json:"themeColor,omitempty"`
	// ShowLogo Boolean that represents whether the administrator-supplied logo images are shown or not shown.
	ShowLogo *bool `json:"showLogo,omitempty"`
	// LightBackgroundLogo Logo image displayed in Company Portal apps which have a light background behind the logo.
	LightBackgroundLogo *MimeContent `json:"lightBackgroundLogo,omitempty"`
	// DarkBackgroundLogo Logo image displayed in Company Portal apps which have a dark background behind the logo.
	DarkBackgroundLogo *MimeContent `json:"darkBackgroundLogo,omitempty"`
	// ShowNameNextToLogo Boolean that represents whether the administrator-supplied display name will be shown next to the logo image.
	ShowNameNextToLogo *bool `json:"showNameNextToLogo,omitempty"`
	// ShowDisplayNameNextToLogo Boolean that represents whether the administrator-supplied display name will be shown next to the logo image.
	ShowDisplayNameNextToLogo *bool `json:"showDisplayNameNextToLogo,omitempty"`
}

// Invitation undocumented
type Invitation struct {
	Entity
	// InvitedUserDisplayName undocumented
	InvitedUserDisplayName *string `json:"invitedUserDisplayName,omitempty"`
	// InvitedUserType undocumented
	InvitedUserType *string `json:"invitedUserType,omitempty"`
	// InvitedUserEmailAddress undocumented
	InvitedUserEmailAddress *string `json:"invitedUserEmailAddress,omitempty"`
	// InvitedUserMessageInfo undocumented
	InvitedUserMessageInfo *InvitedUserMessageInfo `json:"invitedUserMessageInfo,omitempty"`
	// SendInvitationMessage undocumented
	SendInvitationMessage *bool `json:"sendInvitationMessage,omitempty"`
	// InviteRedirectUrl undocumented
	InviteRedirectUrl *string `json:"inviteRedirectUrl,omitempty"`
	// InviteRedeemUrl undocumented
	InviteRedeemUrl *string `json:"inviteRedeemUrl,omitempty"`
	// Status undocumented
	Status *string `json:"status,omitempty"`
}

// InvitationParticipantInfo undocumented
type InvitationParticipantInfo struct {
	ParticipantInfo
	// ReplacesCallId undocumented
	ReplacesCallId *string `json:"replacesCallId,omitempty"`
}

// InviteParticipantsOperation undocumented
type InviteParticipantsOperation struct {
	CommsOperation
	// Participants undocumented
	Participants []InvitationParticipantInfo `json:"participants,omitempty"`
}

// InvitedUserMessageInfo undocumented
type InvitedUserMessageInfo struct {
	// CcRecipients undocumented
	CcRecipients []Recipient `json:"ccRecipients,omitempty"`
	// MessageLanguage undocumented
	MessageLanguage *string `json:"messageLanguage,omitempty"`
	// CustomizedMessageBody undocumented
	CustomizedMessageBody *string `json:"customizedMessageBody,omitempty"`
}

// IosCertificateProfile Device Configuration.
type IosCertificateProfile struct {
	DeviceConfiguration
}

// IosCompliancePolicy This class contains compliance settings for IOS.
type IosCompliancePolicy struct {
	DeviceCompliancePolicy
	// PasscodeBlockSimple Indicates whether or not to block simple passcodes.
	PasscodeBlockSimple *bool `json:"passcodeBlockSimple,omitempty"`
	// PasscodeExpirationDays Number of days before the passcode expires. Valid values 1 to 65535
	PasscodeExpirationDays *int `json:"passcodeExpirationDays,omitempty"`
	// PasscodeMinimumLength Minimum length of passcode. Valid values 4 to 14
	PasscodeMinimumLength *int `json:"passcodeMinimumLength,omitempty"`
	// PasscodeMinutesOfInactivityBeforeLock Minutes of inactivity before a passcode is required.
	PasscodeMinutesOfInactivityBeforeLock *int `json:"passcodeMinutesOfInactivityBeforeLock,omitempty"`
	// PasscodePreviousPasscodeBlockCount Number of previous passcodes to block. Valid values 1 to 24
	PasscodePreviousPasscodeBlockCount *int `json:"passcodePreviousPasscodeBlockCount,omitempty"`
	// PasscodeMinimumCharacterSetCount The number of character sets required in the password.
	PasscodeMinimumCharacterSetCount *int `json:"passcodeMinimumCharacterSetCount,omitempty"`
	// PasscodeRequiredType The required passcode type.
	PasscodeRequiredType *RequiredPasswordType `json:"passcodeRequiredType,omitempty"`
	// PasscodeRequired Indicates whether or not to require a passcode.
	PasscodeRequired *bool `json:"passcodeRequired,omitempty"`
	// OsMinimumVersion Minimum IOS version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Maximum IOS version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// SecurityBlockJailbrokenDevices Devices must not be jailbroken or rooted.
	SecurityBlockJailbrokenDevices *bool `json:"securityBlockJailbrokenDevices,omitempty"`
	// DeviceThreatProtectionEnabled Require that devices have enabled device threat protection .
	DeviceThreatProtectionEnabled *bool `json:"deviceThreatProtectionEnabled,omitempty"`
	// DeviceThreatProtectionRequiredSecurityLevel Require Mobile Threat Protection minimum risk level to report noncompliance.
	DeviceThreatProtectionRequiredSecurityLevel *DeviceThreatProtectionLevel `json:"deviceThreatProtectionRequiredSecurityLevel,omitempty"`
	// ManagedEmailProfileRequired Indicates whether or not to require a managed email profile.
	ManagedEmailProfileRequired *bool `json:"managedEmailProfileRequired,omitempty"`
}

// IosCustomConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the iosCustomConfiguration resource.
type IosCustomConfiguration struct {
	DeviceConfiguration
	// PayloadName Name that is displayed to the user.
	PayloadName *string `json:"payloadName,omitempty"`
	// PayloadFileName Payload file name (*.mobileconfig | *.xml).
	PayloadFileName *string `json:"payloadFileName,omitempty"`
	// Payload Payload. (UTF8 encoded byte array)
	Payload *Binary `json:"payload,omitempty"`
}

// IosDeviceFeaturesConfiguration iOS Device Features Configuration Profile.
type IosDeviceFeaturesConfiguration struct {
	AppleDeviceFeaturesConfigurationBase
	// AssetTagTemplate Asset tag information for the device, displayed on the login window and lock screen.
	AssetTagTemplate *string `json:"assetTagTemplate,omitempty"`
	// LockScreenFootnote A footnote displayed on the login window and lock screen. Available in iOS 9.3.1 and later.
	LockScreenFootnote *string `json:"lockScreenFootnote,omitempty"`
	// HomeScreenDockIcons A list of app and folders to appear on the Home Screen Dock. This collection can contain a maximum of 500 elements.
	HomeScreenDockIcons []IosHomeScreenItem `json:"homeScreenDockIcons,omitempty"`
	// HomeScreenPages A list of pages on the Home Screen. This collection can contain a maximum of 500 elements.
	HomeScreenPages []IosHomeScreenPage `json:"homeScreenPages,omitempty"`
	// NotificationSettings Notification settings for each bundle id. Applicable to devices in supervised mode only (iOS 9.3 and later). This collection can contain a maximum of 500 elements.
	NotificationSettings []IosNotificationSettings `json:"notificationSettings,omitempty"`
}

// IosDeviceType undocumented
type IosDeviceType struct {
	// IPad Whether the app should run on iPads.
	IPad *bool `json:"iPad,omitempty"`
	// IPhoneAndIPod Whether the app should run on iPhones and iPods.
	IPhoneAndIPod *bool `json:"iPhoneAndIPod,omitempty"`
}

// IosGeneralDeviceConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the iosGeneralDeviceConfiguration resource.
type IosGeneralDeviceConfiguration struct {
	DeviceConfiguration
	// AccountBlockModification Indicates whether or not to allow account modification when the device is in supervised mode.
	AccountBlockModification *bool `json:"accountBlockModification,omitempty"`
	// ActivationLockAllowWhenSupervised Indicates whether or not to allow activation lock when the device is in the supervised mode.
	ActivationLockAllowWhenSupervised *bool `json:"activationLockAllowWhenSupervised,omitempty"`
	// AirDropBlocked Indicates whether or not to allow AirDrop when the device is in supervised mode.
	AirDropBlocked *bool `json:"airDropBlocked,omitempty"`
	// AirDropForceUnmanagedDropTarget Indicates whether or not to cause AirDrop to be considered an unmanaged drop target (iOS 9.0 and later).
	AirDropForceUnmanagedDropTarget *bool `json:"airDropForceUnmanagedDropTarget,omitempty"`
	// AirPlayForcePairingPasswordForOutgoingRequests Indicates whether or not to enforce all devices receiving AirPlay requests from this device to use a pairing password.
	AirPlayForcePairingPasswordForOutgoingRequests *bool `json:"airPlayForcePairingPasswordForOutgoingRequests,omitempty"`
	// AppleWatchBlockPairing Indicates whether or not to allow Apple Watch pairing when the device is in supervised mode (iOS 9.0 and later).
	AppleWatchBlockPairing *bool `json:"appleWatchBlockPairing,omitempty"`
	// AppleWatchForceWristDetection Indicates whether or not to force a paired Apple Watch to use Wrist Detection (iOS 8.2 and later).
	AppleWatchForceWristDetection *bool `json:"appleWatchForceWristDetection,omitempty"`
	// AppleNewsBlocked Indicates whether or not to block the user from using News when the device is in supervised mode (iOS 9.0 and later).
	AppleNewsBlocked *bool `json:"appleNewsBlocked,omitempty"`
	// AppsSingleAppModeList Gets or sets the list of iOS apps allowed to autonomously enter Single App Mode. Supervised only. iOS 7.0 and later. This collection can contain a maximum of 500 elements.
	AppsSingleAppModeList []AppListItem `json:"appsSingleAppModeList,omitempty"`
	// AppsVisibilityList List of apps in the visibility list (either visible/launchable apps list or hidden/unlaunchable apps list, controlled by AppsVisibilityListType) (iOS 9.3 and later). This collection can contain a maximum of 10000 elements.
	AppsVisibilityList []AppListItem `json:"appsVisibilityList,omitempty"`
	// AppsVisibilityListType Type of list that is in the AppsVisibilityList.
	AppsVisibilityListType *AppListType `json:"appsVisibilityListType,omitempty"`
	// AppStoreBlockAutomaticDownloads Indicates whether or not to block the automatic downloading of apps purchased on other devices when the device is in supervised mode (iOS 9.0 and later).
	AppStoreBlockAutomaticDownloads *bool `json:"appStoreBlockAutomaticDownloads,omitempty"`
	// AppStoreBlocked Indicates whether or not to block the user from using the App Store.
	AppStoreBlocked *bool `json:"appStoreBlocked,omitempty"`
	// AppStoreBlockInAppPurchases Indicates whether or not to block the user from making in app purchases.
	AppStoreBlockInAppPurchases *bool `json:"appStoreBlockInAppPurchases,omitempty"`
	// AppStoreBlockUIAppInstallation Indicates whether or not to block the App Store app, not restricting installation through Host apps. Applies to supervised mode only (iOS 9.0 and later).
	AppStoreBlockUIAppInstallation *bool `json:"appStoreBlockUIAppInstallation,omitempty"`
	// AppStoreRequirePassword Indicates whether or not to require a password when using the app store.
	AppStoreRequirePassword *bool `json:"appStoreRequirePassword,omitempty"`
	// BluetoothBlockModification Indicates whether or not to allow modification of Bluetooth settings when the device is in supervised mode (iOS 10.0 and later).
	BluetoothBlockModification *bool `json:"bluetoothBlockModification,omitempty"`
	// CameraBlocked Indicates whether or not to block the user from accessing the camera of the device.
	CameraBlocked *bool `json:"cameraBlocked,omitempty"`
	// CellularBlockDataRoaming Indicates whether or not to block data roaming.
	CellularBlockDataRoaming *bool `json:"cellularBlockDataRoaming,omitempty"`
	// CellularBlockGlobalBackgroundFetchWhileRoaming Indicates whether or not to block global background fetch while roaming.
	CellularBlockGlobalBackgroundFetchWhileRoaming *bool `json:"cellularBlockGlobalBackgroundFetchWhileRoaming,omitempty"`
	// CellularBlockPerAppDataModification Indicates whether or not to allow changes to cellular app data usage settings when the device is in supervised mode.
	CellularBlockPerAppDataModification *bool `json:"cellularBlockPerAppDataModification,omitempty"`
	// CellularBlockPersonalHotspot Indicates whether or not to block Personal Hotspot.
	CellularBlockPersonalHotspot *bool `json:"cellularBlockPersonalHotspot,omitempty"`
	// CellularBlockVoiceRoaming Indicates whether or not to block voice roaming.
	CellularBlockVoiceRoaming *bool `json:"cellularBlockVoiceRoaming,omitempty"`
	// CertificatesBlockUntrustedTlsCertificates Indicates whether or not to block untrusted TLS certificates.
	CertificatesBlockUntrustedTlsCertificates *bool `json:"certificatesBlockUntrustedTlsCertificates,omitempty"`
	// ClassroomAppBlockRemoteScreenObservation Indicates whether or not to allow remote screen observation by Classroom app when the device is in supervised mode (iOS 9.3 and later).
	ClassroomAppBlockRemoteScreenObservation *bool `json:"classroomAppBlockRemoteScreenObservation,omitempty"`
	// ClassroomAppForceUnpromptedScreenObservation Indicates whether or not to automatically give permission to the teacher of a managed course on the Classroom app to view a student's screen without prompting when the device is in supervised mode.
	ClassroomAppForceUnpromptedScreenObservation *bool `json:"classroomAppForceUnpromptedScreenObservation,omitempty"`
	// CompliantAppsList List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.
	CompliantAppsList []AppListItem `json:"compliantAppsList,omitempty"`
	// CompliantAppListType List that is in the AppComplianceList.
	CompliantAppListType *AppListType `json:"compliantAppListType,omitempty"`
	// ConfigurationProfileBlockChanges Indicates whether or not to block the user from installing configuration profiles and certificates interactively when the device is in supervised mode.
	ConfigurationProfileBlockChanges *bool `json:"configurationProfileBlockChanges,omitempty"`
	// DefinitionLookupBlocked Indicates whether or not to block definition lookup when the device is in supervised mode (iOS 8.1.3 and later ).
	DefinitionLookupBlocked *bool `json:"definitionLookupBlocked,omitempty"`
	// DeviceBlockEnableRestrictions Indicates whether or not to allow the user to enables restrictions in the device settings when the device is in supervised mode.
	DeviceBlockEnableRestrictions *bool `json:"deviceBlockEnableRestrictions,omitempty"`
	// DeviceBlockEraseContentAndSettings Indicates whether or not to allow the use of the 'Erase all content and settings' option on the device when the device is in supervised mode.
	DeviceBlockEraseContentAndSettings *bool `json:"deviceBlockEraseContentAndSettings,omitempty"`
	// DeviceBlockNameModification Indicates whether or not to allow device name modification when the device is in supervised mode (iOS 9.0 and later).
	DeviceBlockNameModification *bool `json:"deviceBlockNameModification,omitempty"`
	// DiagnosticDataBlockSubmission Indicates whether or not to block diagnostic data submission.
	DiagnosticDataBlockSubmission *bool `json:"diagnosticDataBlockSubmission,omitempty"`
	// DiagnosticDataBlockSubmissionModification Indicates whether or not to allow diagnostics submission settings modification when the device is in supervised mode (iOS 9.3.2 and later).
	DiagnosticDataBlockSubmissionModification *bool `json:"diagnosticDataBlockSubmissionModification,omitempty"`
	// DocumentsBlockManagedDocumentsInUnmanagedApps Indicates whether or not to block the user from viewing managed documents in unmanaged apps.
	DocumentsBlockManagedDocumentsInUnmanagedApps *bool `json:"documentsBlockManagedDocumentsInUnmanagedApps,omitempty"`
	// DocumentsBlockUnmanagedDocumentsInManagedApps Indicates whether or not to block the user from viewing unmanaged documents in managed apps.
	DocumentsBlockUnmanagedDocumentsInManagedApps *bool `json:"documentsBlockUnmanagedDocumentsInManagedApps,omitempty"`
	// EmailInDomainSuffixes An email address lacking a suffix that matches any of these strings will be considered out-of-domain.
	EmailInDomainSuffixes []string `json:"emailInDomainSuffixes,omitempty"`
	// EnterpriseAppBlockTrust Indicates whether or not to block the user from trusting an enterprise app.
	EnterpriseAppBlockTrust *bool `json:"enterpriseAppBlockTrust,omitempty"`
	// EnterpriseAppBlockTrustModification Indicates whether or not to block the user from modifying the enterprise app trust settings.
	EnterpriseAppBlockTrustModification *bool `json:"enterpriseAppBlockTrustModification,omitempty"`
	// FaceTimeBlocked Indicates whether or not to block the user from using FaceTime.
	FaceTimeBlocked *bool `json:"faceTimeBlocked,omitempty"`
	// FindMyFriendsBlocked Indicates whether or not to block Find My Friends when the device is in supervised mode.
	FindMyFriendsBlocked *bool `json:"findMyFriendsBlocked,omitempty"`
	// GamingBlockGameCenterFriends Indicates whether or not to block the user from having friends in Game Center.
	GamingBlockGameCenterFriends *bool `json:"gamingBlockGameCenterFriends,omitempty"`
	// GamingBlockMultiplayer Indicates whether or not to block the user from using multiplayer gaming.
	GamingBlockMultiplayer *bool `json:"gamingBlockMultiplayer,omitempty"`
	// GameCenterBlocked Indicates whether or not to block the user from using Game Center when the device is in supervised mode.
	GameCenterBlocked *bool `json:"gameCenterBlocked,omitempty"`
	// HostPairingBlocked indicates whether or not to allow host pairing to control the devices an iOS device can pair with when the iOS device is in supervised mode.
	HostPairingBlocked *bool `json:"hostPairingBlocked,omitempty"`
	// IBooksStoreBlocked Indicates whether or not to block the user from using the iBooks Store when the device is in supervised mode.
	IBooksStoreBlocked *bool `json:"iBooksStoreBlocked,omitempty"`
	// IBooksStoreBlockErotica Indicates whether or not to block the user from downloading media from the iBookstore that has been tagged as erotica.
	IBooksStoreBlockErotica *bool `json:"iBooksStoreBlockErotica,omitempty"`
	// ICloudBlockActivityContinuation Indicates whether or not to block  the the user from continuing work they started on iOS device to another iOS or macOS device.
	ICloudBlockActivityContinuation *bool `json:"iCloudBlockActivityContinuation,omitempty"`
	// ICloudBlockBackup Indicates whether or not to block iCloud backup.
	ICloudBlockBackup *bool `json:"iCloudBlockBackup,omitempty"`
	// ICloudBlockDocumentSync Indicates whether or not to block iCloud document sync.
	ICloudBlockDocumentSync *bool `json:"iCloudBlockDocumentSync,omitempty"`
	// ICloudBlockManagedAppsSync Indicates whether or not to block Managed Apps Cloud Sync.
	ICloudBlockManagedAppsSync *bool `json:"iCloudBlockManagedAppsSync,omitempty"`
	// ICloudBlockPhotoLibrary Indicates whether or not to block iCloud Photo Library.
	ICloudBlockPhotoLibrary *bool `json:"iCloudBlockPhotoLibrary,omitempty"`
	// ICloudBlockPhotoStreamSync Indicates whether or not to block iCloud Photo Stream Sync.
	ICloudBlockPhotoStreamSync *bool `json:"iCloudBlockPhotoStreamSync,omitempty"`
	// ICloudBlockSharedPhotoStream Indicates whether or not to block Shared Photo Stream.
	ICloudBlockSharedPhotoStream *bool `json:"iCloudBlockSharedPhotoStream,omitempty"`
	// ICloudRequireEncryptedBackup Indicates whether or not to require backups to iCloud be encrypted.
	ICloudRequireEncryptedBackup *bool `json:"iCloudRequireEncryptedBackup,omitempty"`
	// ITunesBlockExplicitContent Indicates whether or not to block the user from accessing explicit content in iTunes and the App Store.
	ITunesBlockExplicitContent *bool `json:"iTunesBlockExplicitContent,omitempty"`
	// ITunesBlockMusicService Indicates whether or not to block Music service and revert Music app to classic mode when the device is in supervised mode (iOS 9.3 and later and macOS 10.12 and later).
	ITunesBlockMusicService *bool `json:"iTunesBlockMusicService,omitempty"`
	// ITunesBlockRadio Indicates whether or not to block the user from using iTunes Radio when the device is in supervised mode (iOS 9.3 and later).
	ITunesBlockRadio *bool `json:"iTunesBlockRadio,omitempty"`
	// KeyboardBlockAutoCorrect Indicates whether or not to block keyboard auto-correction when the device is in supervised mode (iOS 8.1.3 and later).
	KeyboardBlockAutoCorrect *bool `json:"keyboardBlockAutoCorrect,omitempty"`
	// KeyboardBlockDictation Indicates whether or not to block the user from using dictation input when the device is in supervised mode.
	KeyboardBlockDictation *bool `json:"keyboardBlockDictation,omitempty"`
	// KeyboardBlockPredictive Indicates whether or not to block predictive keyboards when device is in supervised mode (iOS 8.1.3 and later).
	KeyboardBlockPredictive *bool `json:"keyboardBlockPredictive,omitempty"`
	// KeyboardBlockShortcuts Indicates whether or not to block keyboard shortcuts when the device is in supervised mode (iOS 9.0 and later).
	KeyboardBlockShortcuts *bool `json:"keyboardBlockShortcuts,omitempty"`
	// KeyboardBlockSpellCheck Indicates whether or not to block keyboard spell-checking when the device is in supervised mode (iOS 8.1.3 and later).
	KeyboardBlockSpellCheck *bool `json:"keyboardBlockSpellCheck,omitempty"`
	// KioskModeAllowAssistiveSpeak Indicates whether or not to allow assistive speak while in kiosk mode.
	KioskModeAllowAssistiveSpeak *bool `json:"kioskModeAllowAssistiveSpeak,omitempty"`
	// KioskModeAllowAssistiveTouchSettings Indicates whether or not to allow access to the Assistive Touch Settings while in kiosk mode.
	KioskModeAllowAssistiveTouchSettings *bool `json:"kioskModeAllowAssistiveTouchSettings,omitempty"`
	// KioskModeAllowAutoLock Indicates whether or not to allow device auto lock while in kiosk mode.
	KioskModeAllowAutoLock *bool `json:"kioskModeAllowAutoLock,omitempty"`
	// KioskModeAllowColorInversionSettings Indicates whether or not to allow access to the Color Inversion Settings while in kiosk mode.
	KioskModeAllowColorInversionSettings *bool `json:"kioskModeAllowColorInversionSettings,omitempty"`
	// KioskModeAllowRingerSwitch Indicates whether or not to allow use of the ringer switch while in kiosk mode.
	KioskModeAllowRingerSwitch *bool `json:"kioskModeAllowRingerSwitch,omitempty"`
	// KioskModeAllowScreenRotation Indicates whether or not to allow screen rotation while in kiosk mode.
	KioskModeAllowScreenRotation *bool `json:"kioskModeAllowScreenRotation,omitempty"`
	// KioskModeAllowSleepButton Indicates whether or not to allow use of the sleep button while in kiosk mode.
	KioskModeAllowSleepButton *bool `json:"kioskModeAllowSleepButton,omitempty"`
	// KioskModeAllowTouchscreen Indicates whether or not to allow use of the touchscreen while in kiosk mode.
	KioskModeAllowTouchscreen *bool `json:"kioskModeAllowTouchscreen,omitempty"`
	// KioskModeAllowVoiceOverSettings Indicates whether or not to allow access to the voice over settings while in kiosk mode.
	KioskModeAllowVoiceOverSettings *bool `json:"kioskModeAllowVoiceOverSettings,omitempty"`
	// KioskModeAllowVolumeButtons Indicates whether or not to allow use of the volume buttons while in kiosk mode.
	KioskModeAllowVolumeButtons *bool `json:"kioskModeAllowVolumeButtons,omitempty"`
	// KioskModeAllowZoomSettings Indicates whether or not to allow access to the zoom settings while in kiosk mode.
	KioskModeAllowZoomSettings *bool `json:"kioskModeAllowZoomSettings,omitempty"`
	// KioskModeAppStoreUrl URL in the app store to the app to use for kiosk mode. Use if KioskModeManagedAppId is not known.
	KioskModeAppStoreUrl *string `json:"kioskModeAppStoreUrl,omitempty"`
	// KioskModeBuiltInAppId ID for built-in apps to use for kiosk mode. Used when KioskModeManagedAppId and KioskModeAppStoreUrl are not set.
	KioskModeBuiltInAppId *string `json:"kioskModeBuiltInAppId,omitempty"`
	// KioskModeRequireAssistiveTouch Indicates whether or not to require assistive touch while in kiosk mode.
	KioskModeRequireAssistiveTouch *bool `json:"kioskModeRequireAssistiveTouch,omitempty"`
	// KioskModeRequireColorInversion Indicates whether or not to require color inversion while in kiosk mode.
	KioskModeRequireColorInversion *bool `json:"kioskModeRequireColorInversion,omitempty"`
	// KioskModeRequireMonoAudio Indicates whether or not to require mono audio while in kiosk mode.
	KioskModeRequireMonoAudio *bool `json:"kioskModeRequireMonoAudio,omitempty"`
	// KioskModeRequireVoiceOver Indicates whether or not to require voice over while in kiosk mode.
	KioskModeRequireVoiceOver *bool `json:"kioskModeRequireVoiceOver,omitempty"`
	// KioskModeRequireZoom Indicates whether or not to require zoom while in kiosk mode.
	KioskModeRequireZoom *bool `json:"kioskModeRequireZoom,omitempty"`
	// KioskModeManagedAppId Managed app id of the app to use for kiosk mode. If KioskModeManagedAppId is specified then KioskModeAppStoreUrl will be ignored.
	KioskModeManagedAppId *string `json:"kioskModeManagedAppId,omitempty"`
	// LockScreenBlockControlCenter Indicates whether or not to block the user from using control center on the lock screen.
	LockScreenBlockControlCenter *bool `json:"lockScreenBlockControlCenter,omitempty"`
	// LockScreenBlockNotificationView Indicates whether or not to block the user from using the notification view on the lock screen.
	LockScreenBlockNotificationView *bool `json:"lockScreenBlockNotificationView,omitempty"`
	// LockScreenBlockPassbook Indicates whether or not to block the user from using passbook when the device is locked.
	LockScreenBlockPassbook *bool `json:"lockScreenBlockPassbook,omitempty"`
	// LockScreenBlockTodayView Indicates whether or not to block the user from using the Today View on the lock screen.
	LockScreenBlockTodayView *bool `json:"lockScreenBlockTodayView,omitempty"`
	// MediaContentRatingAustralia Media content rating settings for Australia
	MediaContentRatingAustralia *MediaContentRatingAustralia `json:"mediaContentRatingAustralia,omitempty"`
	// MediaContentRatingCanada Media content rating settings for Canada
	MediaContentRatingCanada *MediaContentRatingCanada `json:"mediaContentRatingCanada,omitempty"`
	// MediaContentRatingFrance Media content rating settings for France
	MediaContentRatingFrance *MediaContentRatingFrance `json:"mediaContentRatingFrance,omitempty"`
	// MediaContentRatingGermany Media content rating settings for Germany
	MediaContentRatingGermany *MediaContentRatingGermany `json:"mediaContentRatingGermany,omitempty"`
	// MediaContentRatingIreland Media content rating settings for Ireland
	MediaContentRatingIreland *MediaContentRatingIreland `json:"mediaContentRatingIreland,omitempty"`
	// MediaContentRatingJapan Media content rating settings for Japan
	MediaContentRatingJapan *MediaContentRatingJapan `json:"mediaContentRatingJapan,omitempty"`
	// MediaContentRatingNewZealand Media content rating settings for New Zealand
	MediaContentRatingNewZealand *MediaContentRatingNewZealand `json:"mediaContentRatingNewZealand,omitempty"`
	// MediaContentRatingUnitedKingdom Media content rating settings for United Kingdom
	MediaContentRatingUnitedKingdom *MediaContentRatingUnitedKingdom `json:"mediaContentRatingUnitedKingdom,omitempty"`
	// MediaContentRatingUnitedStates Media content rating settings for United States
	MediaContentRatingUnitedStates *MediaContentRatingUnitedStates `json:"mediaContentRatingUnitedStates,omitempty"`
	// NetworkUsageRules List of managed apps and the network rules that applies to them. This collection can contain a maximum of 1000 elements.
	NetworkUsageRules []IosNetworkUsageRule `json:"networkUsageRules,omitempty"`
	// MediaContentRatingApps Media content rating settings for Apps
	MediaContentRatingApps *RatingAppsType `json:"mediaContentRatingApps,omitempty"`
	// MessagesBlocked Indicates whether or not to block the user from using the Messages app on the supervised device.
	MessagesBlocked *bool `json:"messagesBlocked,omitempty"`
	// NotificationsBlockSettingsModification Indicates whether or not to allow notifications settings modification (iOS 9.3 and later).
	NotificationsBlockSettingsModification *bool `json:"notificationsBlockSettingsModification,omitempty"`
	// PasscodeBlockFingerprintUnlock Indicates whether or not to block fingerprint unlock.
	PasscodeBlockFingerprintUnlock *bool `json:"passcodeBlockFingerprintUnlock,omitempty"`
	// PasscodeBlockFingerprintModification Block modification of registered Touch ID fingerprints when in supervised mode.
	PasscodeBlockFingerprintModification *bool `json:"passcodeBlockFingerprintModification,omitempty"`
	// PasscodeBlockModification Indicates whether or not to allow passcode modification on the supervised device (iOS 9.0 and later).
	PasscodeBlockModification *bool `json:"passcodeBlockModification,omitempty"`
	// PasscodeBlockSimple Indicates whether or not to block simple passcodes.
	PasscodeBlockSimple *bool `json:"passcodeBlockSimple,omitempty"`
	// PasscodeExpirationDays Number of days before the passcode expires. Valid values 1 to 65535
	PasscodeExpirationDays *int `json:"passcodeExpirationDays,omitempty"`
	// PasscodeMinimumLength Minimum length of passcode. Valid values 4 to 14
	PasscodeMinimumLength *int `json:"passcodeMinimumLength,omitempty"`
	// PasscodeMinutesOfInactivityBeforeLock Minutes of inactivity before a passcode is required.
	PasscodeMinutesOfInactivityBeforeLock *int `json:"passcodeMinutesOfInactivityBeforeLock,omitempty"`
	// PasscodeMinutesOfInactivityBeforeScreenTimeout Minutes of inactivity before the screen times out.
	PasscodeMinutesOfInactivityBeforeScreenTimeout *int `json:"passcodeMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	// PasscodeMinimumCharacterSetCount Number of character sets a passcode must contain. Valid values 0 to 4
	PasscodeMinimumCharacterSetCount *int `json:"passcodeMinimumCharacterSetCount,omitempty"`
	// PasscodePreviousPasscodeBlockCount Number of previous passcodes to block. Valid values 1 to 24
	PasscodePreviousPasscodeBlockCount *int `json:"passcodePreviousPasscodeBlockCount,omitempty"`
	// PasscodeSignInFailureCountBeforeWipe Number of sign in failures allowed before wiping the device. Valid values 4 to 11
	PasscodeSignInFailureCountBeforeWipe *int `json:"passcodeSignInFailureCountBeforeWipe,omitempty"`
	// PasscodeRequiredType Type of passcode that is required.
	PasscodeRequiredType *RequiredPasswordType `json:"passcodeRequiredType,omitempty"`
	// PasscodeRequired Indicates whether or not to require a passcode.
	PasscodeRequired *bool `json:"passcodeRequired,omitempty"`
	// PodcastsBlocked Indicates whether or not to block the user from using podcasts on the supervised device (iOS 8.0 and later).
	PodcastsBlocked *bool `json:"podcastsBlocked,omitempty"`
	// SafariBlockAutofill Indicates whether or not to block the user from using Auto fill in Safari.
	SafariBlockAutofill *bool `json:"safariBlockAutofill,omitempty"`
	// SafariBlockJavaScript Indicates whether or not to block JavaScript in Safari.
	SafariBlockJavaScript *bool `json:"safariBlockJavaScript,omitempty"`
	// SafariBlockPopups Indicates whether or not to block popups in Safari.
	SafariBlockPopups *bool `json:"safariBlockPopups,omitempty"`
	// SafariBlocked Indicates whether or not to block the user from using Safari.
	SafariBlocked *bool `json:"safariBlocked,omitempty"`
	// SafariCookieSettings Cookie settings for Safari.
	SafariCookieSettings *WebBrowserCookieSettings `json:"safariCookieSettings,omitempty"`
	// SafariManagedDomains URLs matching the patterns listed here will be considered managed.
	SafariManagedDomains []string `json:"safariManagedDomains,omitempty"`
	// SafariPasswordAutoFillDomains Users can save passwords in Safari only from URLs matching the patterns listed here. Applies to devices in supervised mode (iOS 9.3 and later).
	SafariPasswordAutoFillDomains []string `json:"safariPasswordAutoFillDomains,omitempty"`
	// SafariRequireFraudWarning Indicates whether or not to require fraud warning in Safari.
	SafariRequireFraudWarning *bool `json:"safariRequireFraudWarning,omitempty"`
	// ScreenCaptureBlocked Indicates whether or not to block the user from taking Screenshots.
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`
	// SiriBlocked Indicates whether or not to block the user from using Siri.
	SiriBlocked *bool `json:"siriBlocked,omitempty"`
	// SiriBlockedWhenLocked Indicates whether or not to block the user from using Siri when locked.
	SiriBlockedWhenLocked *bool `json:"siriBlockedWhenLocked,omitempty"`
	// SiriBlockUserGeneratedContent Indicates whether or not to block Siri from querying user-generated content when used on a supervised device.
	SiriBlockUserGeneratedContent *bool `json:"siriBlockUserGeneratedContent,omitempty"`
	// SiriRequireProfanityFilter Indicates whether or not to prevent Siri from dictating, or speaking profane language on supervised device.
	SiriRequireProfanityFilter *bool `json:"siriRequireProfanityFilter,omitempty"`
	// SpotlightBlockInternetResults Indicates whether or not to block Spotlight search from returning internet results on supervised device.
	SpotlightBlockInternetResults *bool `json:"spotlightBlockInternetResults,omitempty"`
	// VoiceDialingBlocked Indicates whether or not to block voice dialing.
	VoiceDialingBlocked *bool `json:"voiceDialingBlocked,omitempty"`
	// WallpaperBlockModification Indicates whether or not to allow wallpaper modification on supervised device (iOS 9.0 and later) .
	WallpaperBlockModification *bool `json:"wallpaperBlockModification,omitempty"`
	// WiFiConnectOnlyToConfiguredNetworks Indicates whether or not to force the device to use only Wi-Fi networks from configuration profiles when the device is in supervised mode.
	WiFiConnectOnlyToConfiguredNetworks *bool `json:"wiFiConnectOnlyToConfiguredNetworks,omitempty"`
}

// IosHomeScreenApp undocumented
type IosHomeScreenApp struct {
	IosHomeScreenItem
	// BundleID BundleID of app
	BundleID *string `json:"bundleID,omitempty"`
}

// IosHomeScreenFolder undocumented
type IosHomeScreenFolder struct {
	IosHomeScreenItem
	// Pages Pages of Home Screen Layout Icons which must be Application Type. This collection can contain a maximum of 500 elements.
	Pages []IosHomeScreenFolderPage `json:"pages,omitempty"`
}

// IosHomeScreenFolderPage undocumented
type IosHomeScreenFolderPage struct {
	// DisplayName Name of the folder page
	DisplayName *string `json:"displayName,omitempty"`
	// Apps A list of apps to appear on a page within a folder. This collection can contain a maximum of 500 elements.
	Apps []IosHomeScreenApp `json:"apps,omitempty"`
}

// IosHomeScreenItem undocumented
type IosHomeScreenItem struct {
	// DisplayName Name of the app
	DisplayName *string `json:"displayName,omitempty"`
}

// IosHomeScreenPage undocumented
type IosHomeScreenPage struct {
	// DisplayName Name of the page
	DisplayName *string `json:"displayName,omitempty"`
	// Icons A list of apps and folders to appear on a page. This collection can contain a maximum of 500 elements.
	Icons []IosHomeScreenItem `json:"icons,omitempty"`
}

// IosLobApp Contains properties and inherited properties for iOS Line Of Business apps.
type IosLobApp struct {
	MobileLobApp
	// BundleId The Identity Name.
	BundleId *string `json:"bundleId,omitempty"`
	// ApplicableDeviceType The iOS architecture for which this app can run on.
	ApplicableDeviceType *IosDeviceType `json:"applicableDeviceType,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum applicable operating system.
	MinimumSupportedOperatingSystem *IosMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
	// ExpirationDateTime The expiration time.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// VersionNumber The version number of iOS Line of Business (LoB) app.
	VersionNumber *string `json:"versionNumber,omitempty"`
	// BuildNumber The build number of iOS Line of Business (LoB) app.
	BuildNumber *string `json:"buildNumber,omitempty"`
}

// IosLobAppAssignmentSettings undocumented
type IosLobAppAssignmentSettings struct {
	MobileAppAssignmentSettings
	// VpnConfigurationId The VPN Configuration Id to apply for this app.
	VpnConfigurationId *string `json:"vpnConfigurationId,omitempty"`
}

// IosManagedAppProtection Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
type IosManagedAppProtection struct {
	TargetedManagedAppProtection
	// AppDataEncryptionType Type of encryption which should be used for data in a managed app.
	AppDataEncryptionType *ManagedAppDataEncryptionType `json:"appDataEncryptionType,omitempty"`
	// MinimumRequiredSdkVersion Versions less than the specified version will block the managed app from accessing company data.
	MinimumRequiredSdkVersion *string `json:"minimumRequiredSdkVersion,omitempty"`
	// DeployedAppCount Count of apps to which the current policy is deployed.
	DeployedAppCount *int `json:"deployedAppCount,omitempty"`
	// FaceIdBlocked Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
	FaceIdBlocked *bool `json:"faceIdBlocked,omitempty"`
}

// IosManagedAppRegistration Represents the synchronization details of an ios app, with management capabilities, for a specific user.
type IosManagedAppRegistration struct {
	ManagedAppRegistration
}

// IosMinimumOperatingSystem undocumented
type IosMinimumOperatingSystem struct {
	// V8_0 Version 8.0 or later.
	V8_0 *bool `json:"v8_0,omitempty"`
	// V9_0 Version 9.0 or later.
	V9_0 *bool `json:"v9_0,omitempty"`
	// V10_0 Version 10.0 or later.
	V10_0 *bool `json:"v10_0,omitempty"`
	// V11_0 Version 11.0 or later.
	V11_0 *bool `json:"v11_0,omitempty"`
	// V12_0 Version 12.0 or later.
	V12_0 *bool `json:"v12_0,omitempty"`
	// V13_0 Version 13.0 or later.
	V13_0 *bool `json:"v13_0,omitempty"`
}

// IosMobileAppConfiguration Contains properties, inherited properties and actions for iOS mobile app configurations.
type IosMobileAppConfiguration struct {
	ManagedDeviceMobileAppConfiguration
	// EncodedSettingXml mdm app configuration Base64 binary.
	EncodedSettingXml *Binary `json:"encodedSettingXml,omitempty"`
	// Settings app configuration setting items.
	Settings []AppConfigurationSettingItem `json:"settings,omitempty"`
}

// IosMobileAppIdentifier undocumented
type IosMobileAppIdentifier struct {
	MobileAppIdentifier
	// BundleId The identifier for an app, as specified in the app store.
	BundleId *string `json:"bundleId,omitempty"`
}

// IosNetworkUsageRule undocumented
type IosNetworkUsageRule struct {
	// ManagedApps Information about the managed apps that this rule is going to apply to. This collection can contain a maximum of 500 elements.
	ManagedApps []AppListItem `json:"managedApps,omitempty"`
	// CellularDataBlockWhenRoaming If set to true, corresponding managed apps will not be allowed to use cellular data when roaming.
	CellularDataBlockWhenRoaming *bool `json:"cellularDataBlockWhenRoaming,omitempty"`
	// CellularDataBlocked If set to true, corresponding managed apps will not be allowed to use cellular data at any time.
	CellularDataBlocked *bool `json:"cellularDataBlocked,omitempty"`
}

// IosNotificationSettings undocumented
type IosNotificationSettings struct {
	// BundleID Bundle id of app to which to apply these notification settings.
	BundleID *string `json:"bundleID,omitempty"`
	// AppName Application name to be associated with the bundleID.
	AppName *string `json:"appName,omitempty"`
	// Publisher Publisher to be associated with the bundleID.
	Publisher *string `json:"publisher,omitempty"`
	// Enabled Indicates whether notifications are allowed for this app.
	Enabled *bool `json:"enabled,omitempty"`
	// ShowInNotificationCenter Indicates whether notifications can be shown in notification center.
	ShowInNotificationCenter *bool `json:"showInNotificationCenter,omitempty"`
	// ShowOnLockScreen Indicates whether notifications can be shown on the lock screen.
	ShowOnLockScreen *bool `json:"showOnLockScreen,omitempty"`
	// AlertType Indicates the type of alert for notifications for this app.
	AlertType *IosNotificationAlertType `json:"alertType,omitempty"`
	// BadgesEnabled Indicates whether badges are allowed for this app.
	BadgesEnabled *bool `json:"badgesEnabled,omitempty"`
	// SoundsEnabled Indicates whether sounds are allowed for this app.
	SoundsEnabled *bool `json:"soundsEnabled,omitempty"`
}

// IosStoreApp Contains properties and inherited properties for iOS store apps.
type IosStoreApp struct {
	MobileApp
	// BundleId The Identity Name.
	BundleId *string `json:"bundleId,omitempty"`
	// AppStoreUrl The Apple App Store URL
	AppStoreUrl *string `json:"appStoreUrl,omitempty"`
	// ApplicableDeviceType The iOS architecture for which this app can run on.
	ApplicableDeviceType *IosDeviceType `json:"applicableDeviceType,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum applicable operating system.
	MinimumSupportedOperatingSystem *IosMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
}

// IosStoreAppAssignmentSettings undocumented
type IosStoreAppAssignmentSettings struct {
	MobileAppAssignmentSettings
	// VpnConfigurationId The VPN Configuration Id to apply for this app.
	VpnConfigurationId *string `json:"vpnConfigurationId,omitempty"`
}

// IosUpdateConfiguration IOS Update Configuration, allows you to configure time window within week to install iOS updates
type IosUpdateConfiguration struct {
	DeviceConfiguration
	// ActiveHoursStart Active Hours Start (active hours mean the time window when updates install should not happen)
	ActiveHoursStart *time.Time `json:"activeHoursStart,omitempty"`
	// ActiveHoursEnd Active Hours End (active hours mean the time window when updates install should not happen)
	ActiveHoursEnd *time.Time `json:"activeHoursEnd,omitempty"`
	// ScheduledInstallDays Days in week for which active hours are configured. This collection can contain a maximum of 7 elements.
	ScheduledInstallDays []DayOfWeek `json:"scheduledInstallDays,omitempty"`
	// UtcTimeOffsetInMinutes UTC Time Offset indicated in minutes
	UtcTimeOffsetInMinutes *int `json:"utcTimeOffsetInMinutes,omitempty"`
}

// IosUpdateDeviceStatus undocumented
type IosUpdateDeviceStatus struct {
	Entity
	// InstallStatus The installation status of the policy report.
	InstallStatus *IosUpdatesInstallStatus `json:"installStatus,omitempty"`
	// OsVersion The device version that is being reported.
	OsVersion *string `json:"osVersion,omitempty"`
	// DeviceId The device id that is being reported.
	DeviceId *string `json:"deviceId,omitempty"`
	// UserId The User id that is being reported.
	UserId *string `json:"userId,omitempty"`
	// DeviceDisplayName Device name of the DevicePolicyStatus.
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	// UserName The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	// DeviceModel The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// IosVppApp Contains properties and inherited properties for iOS Volume-Purchased Program (VPP) Apps.
type IosVppApp struct {
	MobileApp
	// UsedLicenseCount The number of VPP licenses in use.
	UsedLicenseCount *int `json:"usedLicenseCount,omitempty"`
	// TotalLicenseCount The total number of VPP licenses.
	TotalLicenseCount *int `json:"totalLicenseCount,omitempty"`
	// ReleaseDateTime The VPP application release date and time.
	ReleaseDateTime *time.Time `json:"releaseDateTime,omitempty"`
	// AppStoreUrl The store URL.
	AppStoreUrl *string `json:"appStoreUrl,omitempty"`
	// LicensingType The supported License Type.
	LicensingType *VppLicensingType `json:"licensingType,omitempty"`
	// ApplicableDeviceType The applicable iOS Device Type.
	ApplicableDeviceType *IosDeviceType `json:"applicableDeviceType,omitempty"`
	// VppTokenOrganizationName The organization associated with the Apple Volume Purchase Program Token
	VppTokenOrganizationName *string `json:"vppTokenOrganizationName,omitempty"`
	// VppTokenAccountType The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`.
	VppTokenAccountType *VppTokenAccountType `json:"vppTokenAccountType,omitempty"`
	// VppTokenAppleId The Apple Id associated with the given Apple Volume Purchase Program Token.
	VppTokenAppleId *string `json:"vppTokenAppleId,omitempty"`
	// BundleId The Identity Name.
	BundleId *string `json:"bundleId,omitempty"`
}

// IosVppAppAssignmentSettings undocumented
type IosVppAppAssignmentSettings struct {
	MobileAppAssignmentSettings
	// UseDeviceLicensing Whether or not to use device licensing.
	UseDeviceLicensing *bool `json:"useDeviceLicensing,omitempty"`
	// VpnConfigurationId The VPN Configuration Id to apply for this app.
	VpnConfigurationId *string `json:"vpnConfigurationId,omitempty"`
}

// IosVppEBook A class containing the properties for iOS Vpp eBook.
type IosVppEBook struct {
	ManagedEBook
	// VppTokenId The Vpp token ID.
	VppTokenId *UUID `json:"vppTokenId,omitempty"`
	// AppleId The Apple ID associated with Vpp token.
	AppleId *string `json:"appleId,omitempty"`
	// VppOrganizationName The Vpp token's organization name.
	VppOrganizationName *string `json:"vppOrganizationName,omitempty"`
	// Genres Genres.
	Genres []string `json:"genres,omitempty"`
	// Language Language.
	Language *string `json:"language,omitempty"`
	// Seller Seller.
	Seller *string `json:"seller,omitempty"`
	// TotalLicenseCount Total license count.
	TotalLicenseCount *int `json:"totalLicenseCount,omitempty"`
	// UsedLicenseCount Used license count.
	UsedLicenseCount *int `json:"usedLicenseCount,omitempty"`
}

// IosVppEBookAssignment Contains properties used to assign an iOS VPP EBook to a group.
type IosVppEBookAssignment struct {
	ManagedEBookAssignment
}

// IpRange undocumented
type IpRange struct {
}

// ItemActionStat undocumented
type ItemActionStat struct {
	// ActionCount undocumented
	ActionCount *int `json:"actionCount,omitempty"`
	// ActorCount undocumented
	ActorCount *int `json:"actorCount,omitempty"`
}

// ItemActivity undocumented
type ItemActivity struct {
	Entity
	// Access undocumented
	Access *AccessAction `json:"access,omitempty"`
	// ActivityDateTime undocumented
	ActivityDateTime *time.Time `json:"activityDateTime,omitempty"`
	// Actor undocumented
	Actor *IdentitySet `json:"actor,omitempty"`
}

// ItemActivityStat undocumented
type ItemActivityStat struct {
	Entity
	// StartDateTime undocumented
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// EndDateTime undocumented
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	// Access undocumented
	Access *ItemActionStat `json:"access,omitempty"`
	// Create undocumented
	Create *ItemActionStat `json:"create,omitempty"`
	// Delete undocumented
	Delete *ItemActionStat `json:"delete,omitempty"`
	// Edit undocumented
	Edit *ItemActionStat `json:"edit,omitempty"`
	// Move undocumented
	Move *ItemActionStat `json:"move,omitempty"`
	// IsTrending undocumented
	IsTrending *bool `json:"isTrending,omitempty"`
	// IncompleteData undocumented
	IncompleteData *IncompleteData `json:"incompleteData,omitempty"`
}

// ItemAnalytics undocumented
type ItemAnalytics struct {
	Entity
}

// ItemAttachment undocumented
type ItemAttachment struct {
	Attachment
}

// ItemBody undocumented
type ItemBody struct {
	// ContentType undocumented
	ContentType *BodyType `json:"contentType,omitempty"`
	// Content undocumented
	Content *string `json:"content,omitempty"`
}

// ItemPreviewInfo undocumented
type ItemPreviewInfo struct {
	// GetUrl undocumented
	GetUrl *string `json:"getUrl,omitempty"`
	// PostParameters undocumented
	PostParameters *string `json:"postParameters,omitempty"`
	// PostUrl undocumented
	PostUrl *string `json:"postUrl,omitempty"`
}

// ItemReference undocumented
type ItemReference struct {
	// DriveId undocumented
	DriveId *string `json:"driveId,omitempty"`
	// DriveType undocumented
	DriveType *string `json:"driveType,omitempty"`
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Path undocumented
	Path *string `json:"path,omitempty"`
	// ShareId undocumented
	ShareId *string `json:"shareId,omitempty"`
	// SharepointIds undocumented
	SharepointIds *SharepointIds `json:"sharepointIds,omitempty"`
	// SiteId undocumented
	SiteId *string `json:"siteId,omitempty"`
}

// KeyValue undocumented
type KeyValue struct {
	// Key undocumented
	Key *string `json:"key,omitempty"`
	// Value undocumented
	Value *string `json:"value,omitempty"`
}

// KeyValuePair undocumented
type KeyValuePair struct {
	// Name Name for this key-value pair
	Name *string `json:"name,omitempty"`
	// Value Value for this key-value pair
	Value *string `json:"value,omitempty"`
}

// LicenseAssignmentState undocumented
type LicenseAssignmentState struct {
	// SkuId undocumented
	SkuId *UUID `json:"skuId,omitempty"`
	// DisabledPlans undocumented
	DisabledPlans []UUID `json:"disabledPlans,omitempty"`
	// AssignedByGroup undocumented
	AssignedByGroup *string `json:"assignedByGroup,omitempty"`
	// State undocumented
	State *string `json:"state,omitempty"`
	// Error undocumented
	Error *string `json:"error,omitempty"`
}

// LicenseDetails undocumented
type LicenseDetails struct {
	Entity
	// ServicePlans undocumented
	ServicePlans []ServicePlanInfo `json:"servicePlans,omitempty"`
	// SkuId undocumented
	SkuId *UUID `json:"skuId,omitempty"`
	// SkuPartNumber undocumented
	SkuPartNumber *string `json:"skuPartNumber,omitempty"`
}

// LicenseProcessingState undocumented
type LicenseProcessingState struct {
	// State undocumented
	State *string `json:"state,omitempty"`
}

// LicenseUnitsDetail undocumented
type LicenseUnitsDetail struct {
	// Enabled undocumented
	Enabled *int `json:"enabled,omitempty"`
	// Suspended undocumented
	Suspended *int `json:"suspended,omitempty"`
	// Warning undocumented
	Warning *int `json:"warning,omitempty"`
}

// List undocumented
type List struct {
	BaseItem
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// List undocumented
	List *ListInfo `json:"list,omitempty"`
	// SharepointIds undocumented
	SharepointIds *SharepointIds `json:"sharepointIds,omitempty"`
	// System undocumented
	System *SystemFacet `json:"system,omitempty"`
}

// ListInfo undocumented
type ListInfo struct {
	// ContentTypesEnabled undocumented
	ContentTypesEnabled *bool `json:"contentTypesEnabled,omitempty"`
	// Hidden undocumented
	Hidden *bool `json:"hidden,omitempty"`
	// Template undocumented
	Template *string `json:"template,omitempty"`
}

// ListItem undocumented
type ListItem struct {
	BaseItem
	// ContentType undocumented
	ContentType *ContentTypeInfo `json:"contentType,omitempty"`
	// SharepointIds undocumented
	SharepointIds *SharepointIds `json:"sharepointIds,omitempty"`
}

// ListItemVersion undocumented
type ListItemVersion struct {
	BaseItemVersion
}

// LocaleInfo undocumented
type LocaleInfo struct {
	// Locale undocumented
	Locale *string `json:"locale,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// LocalizedNotificationMessage The text content of a Notification Message Template for the specified locale.
type LocalizedNotificationMessage struct {
	Entity
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Locale The Locale for which this message is destined.
	Locale *string `json:"locale,omitempty"`
	// Subject The Message Template Subject.
	Subject *string `json:"subject,omitempty"`
	// MessageTemplate The Message Template content.
	MessageTemplate *string `json:"messageTemplate,omitempty"`
	// IsDefault Flag to indicate whether or not this is the default locale for language fallback. This flag can only be set. To unset, set this property to true on another Localized Notification Message.
	IsDefault *bool `json:"isDefault,omitempty"`
}

// LocateDeviceActionResult undocumented
type LocateDeviceActionResult struct {
	DeviceActionResult
	// DeviceLocation device location
	DeviceLocation *DeviceGeoLocation `json:"deviceLocation,omitempty"`
}

// Location undocumented
type Location struct {
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// LocationEmailAddress undocumented
	LocationEmailAddress *string `json:"locationEmailAddress,omitempty"`
	// Address undocumented
	Address *PhysicalAddress `json:"address,omitempty"`
	// LocationUri undocumented
	LocationUri *string `json:"locationUri,omitempty"`
	// Coordinates undocumented
	Coordinates *OutlookGeoCoordinates `json:"coordinates,omitempty"`
	// LocationType undocumented
	LocationType *LocationType `json:"locationType,omitempty"`
	// UniqueId undocumented
	UniqueId *string `json:"uniqueId,omitempty"`
	// UniqueIdType undocumented
	UniqueIdType *LocationUniqueIdType `json:"uniqueIdType,omitempty"`
}

// LocationConstraint undocumented
type LocationConstraint struct {
	// Locations undocumented
	Locations []LocationConstraintItem `json:"locations,omitempty"`
	// IsRequired undocumented
	IsRequired *bool `json:"isRequired,omitempty"`
	// SuggestLocation undocumented
	SuggestLocation *bool `json:"suggestLocation,omitempty"`
}

// LocationConstraintItem undocumented
type LocationConstraintItem struct {
	Location
	// ResolveAvailability undocumented
	ResolveAvailability *bool `json:"resolveAvailability,omitempty"`
}

// LookupColumn undocumented
type LookupColumn struct {
	// AllowMultipleValues undocumented
	AllowMultipleValues *bool `json:"allowMultipleValues,omitempty"`
	// AllowUnlimitedLength undocumented
	AllowUnlimitedLength *bool `json:"allowUnlimitedLength,omitempty"`
	// ColumnName undocumented
	ColumnName *string `json:"columnName,omitempty"`
	// ListId undocumented
	ListId *string `json:"listId,omitempty"`
	// PrimaryLookupColumnId undocumented
	PrimaryLookupColumnId *string `json:"primaryLookupColumnId,omitempty"`
}

// MacOSCompliancePolicy This class contains compliance settings for Mac OS.
type MacOSCompliancePolicy struct {
	DeviceCompliancePolicy
	// PasswordRequired Whether or not to require a password.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// PasswordBlockSimple Indicates whether or not to block simple passwords.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`
	// PasswordExpirationDays Number of days before the password expires. Valid values 1 to 65535
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength Minimum length of password. Valid values 4 to 14
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeLock Minutes of inactivity before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	// PasswordPreviousPasswordBlockCount Number of previous passwords to block. Valid values 1 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordMinimumCharacterSetCount The number of character sets required in the password.
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordRequiredType The required password type.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// OsMinimumVersion Minimum MacOS version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Maximum MacOS version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// SystemIntegrityProtectionEnabled Require that devices have enabled system integrity protection.
	SystemIntegrityProtectionEnabled *bool `json:"systemIntegrityProtectionEnabled,omitempty"`
	// DeviceThreatProtectionEnabled Require that devices have enabled device threat protection.
	DeviceThreatProtectionEnabled *bool `json:"deviceThreatProtectionEnabled,omitempty"`
	// DeviceThreatProtectionRequiredSecurityLevel Require Mobile Threat Protection minimum risk level to report noncompliance.
	DeviceThreatProtectionRequiredSecurityLevel *DeviceThreatProtectionLevel `json:"deviceThreatProtectionRequiredSecurityLevel,omitempty"`
	// StorageRequireEncryption Require encryption on Mac OS devices.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`
	// FirewallEnabled Whether the firewall should be enabled or not.
	FirewallEnabled *bool `json:"firewallEnabled,omitempty"`
	// FirewallBlockAllIncoming Corresponds to the “Block all incoming connections” option.
	FirewallBlockAllIncoming *bool `json:"firewallBlockAllIncoming,omitempty"`
	// FirewallEnableStealthMode Corresponds to “Enable stealth mode.”
	FirewallEnableStealthMode *bool `json:"firewallEnableStealthMode,omitempty"`
}

// MacOSCustomConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the macOSCustomConfiguration resource.
type MacOSCustomConfiguration struct {
	DeviceConfiguration
	// PayloadName Name that is displayed to the user.
	PayloadName *string `json:"payloadName,omitempty"`
	// PayloadFileName Payload file name (*.mobileconfig | *.xml).
	PayloadFileName *string `json:"payloadFileName,omitempty"`
	// Payload Payload. (UTF8 encoded byte array)
	Payload *Binary `json:"payload,omitempty"`
}

// MacOSDeviceFeaturesConfiguration MacOS device features configuration profile.
type MacOSDeviceFeaturesConfiguration struct {
	AppleDeviceFeaturesConfigurationBase
}

// MacOSGeneralDeviceConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the macOSGeneralDeviceConfiguration resource.
type MacOSGeneralDeviceConfiguration struct {
	DeviceConfiguration
	// CompliantAppsList List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.
	CompliantAppsList []AppListItem `json:"compliantAppsList,omitempty"`
	// CompliantAppListType List that is in the CompliantAppsList.
	CompliantAppListType *AppListType `json:"compliantAppListType,omitempty"`
	// EmailInDomainSuffixes An email address lacking a suffix that matches any of these strings will be considered out-of-domain.
	EmailInDomainSuffixes []string `json:"emailInDomainSuffixes,omitempty"`
	// PasswordBlockSimple Block simple passwords.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`
	// PasswordExpirationDays Number of days before the password expires.
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumCharacterSetCount Number of character sets a password must contain. Valid values 0 to 4
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordMinimumLength Minimum length of passwords.
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeLock Minutes of inactivity required before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	// PasswordMinutesOfInactivityBeforeScreenTimeout Minutes of inactivity required before the screen times out.
	PasswordMinutesOfInactivityBeforeScreenTimeout *int `json:"passwordMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	// PasswordPreviousPasswordBlockCount Number of previous passwords to block.
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordRequiredType Type of password that is required.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordRequired Whether or not to require a password.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
}

// MacOSOfficeSuiteApp Contains properties and inherited properties for the MacOS Office Suite App.
type MacOSOfficeSuiteApp struct {
	MobileApp
}

// MailFolder undocumented
type MailFolder struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// ParentFolderId undocumented
	ParentFolderId *string `json:"parentFolderId,omitempty"`
	// ChildFolderCount undocumented
	ChildFolderCount *int `json:"childFolderCount,omitempty"`
	// UnreadItemCount undocumented
	UnreadItemCount *int `json:"unreadItemCount,omitempty"`
	// TotalItemCount undocumented
	TotalItemCount *int `json:"totalItemCount,omitempty"`
}

// MailSearchFolder undocumented
type MailSearchFolder struct {
	MailFolder
	// IsSupported undocumented
	IsSupported *bool `json:"isSupported,omitempty"`
	// IncludeNestedFolders undocumented
	IncludeNestedFolders *bool `json:"includeNestedFolders,omitempty"`
	// SourceFolderIds undocumented
	SourceFolderIds []string `json:"sourceFolderIds,omitempty"`
	// FilterQuery undocumented
	FilterQuery *string `json:"filterQuery,omitempty"`
}

// MailTips undocumented
type MailTips struct {
	// EmailAddress undocumented
	EmailAddress *EmailAddress `json:"emailAddress,omitempty"`
	// AutomaticReplies undocumented
	AutomaticReplies *AutomaticRepliesMailTips `json:"automaticReplies,omitempty"`
	// MailboxFull undocumented
	MailboxFull *bool `json:"mailboxFull,omitempty"`
	// CustomMailTip undocumented
	CustomMailTip *string `json:"customMailTip,omitempty"`
	// ExternalMemberCount undocumented
	ExternalMemberCount *int `json:"externalMemberCount,omitempty"`
	// TotalMemberCount undocumented
	TotalMemberCount *int `json:"totalMemberCount,omitempty"`
	// DeliveryRestricted undocumented
	DeliveryRestricted *bool `json:"deliveryRestricted,omitempty"`
	// IsModerated undocumented
	IsModerated *bool `json:"isModerated,omitempty"`
	// RecipientScope undocumented
	RecipientScope *RecipientScopeType `json:"recipientScope,omitempty"`
	// RecipientSuggestions undocumented
	RecipientSuggestions []Recipient `json:"recipientSuggestions,omitempty"`
	// MaxMessageSize undocumented
	MaxMessageSize *int `json:"maxMessageSize,omitempty"`
	// Error undocumented
	Error *MailTipsError `json:"error,omitempty"`
}

// MailTipsError undocumented
type MailTipsError struct {
	// Message undocumented
	Message *string `json:"message,omitempty"`
	// Code undocumented
	Code *string `json:"code,omitempty"`
}

// MailboxSettings undocumented
type MailboxSettings struct {
	// AutomaticRepliesSetting undocumented
	AutomaticRepliesSetting *AutomaticRepliesSetting `json:"automaticRepliesSetting,omitempty"`
	// ArchiveFolder undocumented
	ArchiveFolder *string `json:"archiveFolder,omitempty"`
	// TimeZone undocumented
	TimeZone *string `json:"timeZone,omitempty"`
	// Language undocumented
	Language *LocaleInfo `json:"language,omitempty"`
	// WorkingHours undocumented
	WorkingHours *WorkingHours `json:"workingHours,omitempty"`
	// DateFormat undocumented
	DateFormat *string `json:"dateFormat,omitempty"`
	// TimeFormat undocumented
	TimeFormat *string `json:"timeFormat,omitempty"`
}

// MalwareState undocumented
type MalwareState struct {
	// Category undocumented
	Category *string `json:"category,omitempty"`
	// Family undocumented
	Family *string `json:"family,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Severity undocumented
	Severity *string `json:"severity,omitempty"`
	// WasRunning undocumented
	WasRunning *bool `json:"wasRunning,omitempty"`
}

// ManagedAndroidLobApp Contains properties and inherited properties for Managed Android Line Of Business apps.
type ManagedAndroidLobApp struct {
	ManagedMobileLobApp
	// PackageId The package identifier.
	PackageId *string `json:"packageId,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum applicable operating system.
	MinimumSupportedOperatingSystem *AndroidMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
	// VersionName The version name of managed Android Line of Business (LoB) app.
	VersionName *string `json:"versionName,omitempty"`
	// VersionCode The version code of managed Android Line of Business (LoB) app.
	VersionCode *string `json:"versionCode,omitempty"`
}

// ManagedAndroidStoreApp Contains properties and inherited properties for Android store apps that you can manage with an Intune app protection policy.
type ManagedAndroidStoreApp struct {
	ManagedApp
	// PackageId The app's package ID.
	PackageId *string `json:"packageId,omitempty"`
	// AppStoreUrl The Android AppStoreUrl.
	AppStoreUrl *string `json:"appStoreUrl,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum supported operating system.
	MinimumSupportedOperatingSystem *AndroidMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
}

// ManagedApp Abstract class that contains properties and inherited properties for apps that you can manage with an Intune app protection policy.
type ManagedApp struct {
	MobileApp
	// AppAvailability The Application's availability.
	AppAvailability *ManagedAppAvailability `json:"appAvailability,omitempty"`
	// Version The Application's version.
	Version *string `json:"version,omitempty"`
}

// ManagedAppConfiguration Configuration used to deliver a set of custom settings as-is to apps for users to whom the configuration is scoped
type ManagedAppConfiguration struct {
	ManagedAppPolicy
	// CustomSettings A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
	CustomSettings []KeyValuePair `json:"customSettings,omitempty"`
}

// ManagedAppDiagnosticStatus undocumented
type ManagedAppDiagnosticStatus struct {
	// ValidationName The validation friendly name
	ValidationName *string `json:"validationName,omitempty"`
	// State The state of the operation
	State *string `json:"state,omitempty"`
	// MitigationInstruction Instruction on how to mitigate a failed validation
	MitigationInstruction *string `json:"mitigationInstruction,omitempty"`
}

// ManagedAppOperation Represents an operation applied against an app registration.
type ManagedAppOperation struct {
	Entity
	// DisplayName The operation name.
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime The last time the app operation was modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// State The current state of the operation
	State *string `json:"state,omitempty"`
	// Version Version of the entity.
	Version *string `json:"version,omitempty"`
}

// ManagedAppPolicy The ManagedAppPolicy resource represents a base type for platform specific policies.
type ManagedAppPolicy struct {
	Entity
	// DisplayName Policy display name.
	DisplayName *string `json:"displayName,omitempty"`
	// Description The policy's description.
	Description *string `json:"description,omitempty"`
	// CreatedDateTime The date and time the policy was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastModifiedDateTime Last time the policy was modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Version Version of the entity.
	Version *string `json:"version,omitempty"`
}

// ManagedAppPolicyDeploymentSummary The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
type ManagedAppPolicyDeploymentSummary struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// ConfigurationDeployedUserCount undocumented
	ConfigurationDeployedUserCount *int `json:"configurationDeployedUserCount,omitempty"`
	// LastRefreshTime undocumented
	LastRefreshTime *time.Time `json:"lastRefreshTime,omitempty"`
	// ConfigurationDeploymentSummaryPerApp undocumented
	ConfigurationDeploymentSummaryPerApp []ManagedAppPolicyDeploymentSummaryPerApp `json:"configurationDeploymentSummaryPerApp,omitempty"`
	// Version Version of the entity.
	Version *string `json:"version,omitempty"`
}

// ManagedAppPolicyDeploymentSummaryPerApp undocumented
type ManagedAppPolicyDeploymentSummaryPerApp struct {
	// MobileAppIdentifier Deployment of an app.
	MobileAppIdentifier *MobileAppIdentifier `json:"mobileAppIdentifier,omitempty"`
	// ConfigurationAppliedUserCount Number of users the policy is applied.
	ConfigurationAppliedUserCount *int `json:"configurationAppliedUserCount,omitempty"`
}

// ManagedAppProtection Policy used to configure detailed management settings for a specified set of apps
type ManagedAppProtection struct {
	ManagedAppPolicy
	// PeriodOfflineBeforeAccessCheck The period after which access is checked when the device is not connected to the internet.
	PeriodOfflineBeforeAccessCheck *time.Duration `json:"periodOfflineBeforeAccessCheck,omitempty"`
	// PeriodOnlineBeforeAccessCheck The period after which access is checked when the device is connected to the internet.
	PeriodOnlineBeforeAccessCheck *time.Duration `json:"periodOnlineBeforeAccessCheck,omitempty"`
	// AllowedInboundDataTransferSources Sources from which data is allowed to be transferred.
	AllowedInboundDataTransferSources *ManagedAppDataTransferLevel `json:"allowedInboundDataTransferSources,omitempty"`
	// AllowedOutboundDataTransferDestinations Destinations to which data is allowed to be transferred.
	AllowedOutboundDataTransferDestinations *ManagedAppDataTransferLevel `json:"allowedOutboundDataTransferDestinations,omitempty"`
	// OrganizationalCredentialsRequired Indicates whether organizational credentials are required for app use.
	OrganizationalCredentialsRequired *bool `json:"organizationalCredentialsRequired,omitempty"`
	// AllowedOutboundClipboardSharingLevel The level to which the clipboard may be shared between apps on the managed device.
	AllowedOutboundClipboardSharingLevel *ManagedAppClipboardSharingLevel `json:"allowedOutboundClipboardSharingLevel,omitempty"`
	// DataBackupBlocked Indicates whether the backup of a managed app's data is blocked.
	DataBackupBlocked *bool `json:"dataBackupBlocked,omitempty"`
	// DeviceComplianceRequired Indicates whether device compliance is required.
	DeviceComplianceRequired *bool `json:"deviceComplianceRequired,omitempty"`
	// ManagedBrowserToOpenLinksRequired Indicates whether internet links should be opened in the managed browser app.
	ManagedBrowserToOpenLinksRequired *bool `json:"managedBrowserToOpenLinksRequired,omitempty"`
	// SaveAsBlocked Indicates whether users may use the "Save As" menu item to save a copy of protected files.
	SaveAsBlocked *bool `json:"saveAsBlocked,omitempty"`
	// PeriodOfflineBeforeWipeIsEnforced The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
	PeriodOfflineBeforeWipeIsEnforced *time.Duration `json:"periodOfflineBeforeWipeIsEnforced,omitempty"`
	// PinRequired Indicates whether an app-level pin is required.
	PinRequired *bool `json:"pinRequired,omitempty"`
	// MaximumPinRetries Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
	MaximumPinRetries *int `json:"maximumPinRetries,omitempty"`
	// SimplePinBlocked Indicates whether simplePin is blocked.
	SimplePinBlocked *bool `json:"simplePinBlocked,omitempty"`
	// MinimumPinLength Minimum pin length required for an app-level pin if PinRequired is set to True
	MinimumPinLength *int `json:"minimumPinLength,omitempty"`
	// PinCharacterSet Character set which may be used for an app-level pin if PinRequired is set to True.
	PinCharacterSet *ManagedAppPinCharacterSet `json:"pinCharacterSet,omitempty"`
	// PeriodBeforePinReset TimePeriod before the all-level pin must be reset if PinRequired is set to True.
	PeriodBeforePinReset *time.Duration `json:"periodBeforePinReset,omitempty"`
	// AllowedDataStorageLocations Data storage locations where a user may store managed data.
	AllowedDataStorageLocations []ManagedAppDataStorageLocation `json:"allowedDataStorageLocations,omitempty"`
	// ContactSyncBlocked Indicates whether contacts can be synced to the user's device.
	ContactSyncBlocked *bool `json:"contactSyncBlocked,omitempty"`
	// PrintBlocked Indicates whether printing is allowed from managed apps.
	PrintBlocked *bool `json:"printBlocked,omitempty"`
	// FingerprintBlocked Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
	FingerprintBlocked *bool `json:"fingerprintBlocked,omitempty"`
	// DisableAppPinIfDevicePinIsSet Indicates whether use of the app pin is required if the device pin is set.
	DisableAppPinIfDevicePinIsSet *bool `json:"disableAppPinIfDevicePinIsSet,omitempty"`
	// MinimumRequiredOsVersion Versions less than the specified version will block the managed app from accessing company data.
	MinimumRequiredOsVersion *string `json:"minimumRequiredOsVersion,omitempty"`
	// MinimumWarningOsVersion Versions less than the specified version will result in warning message on the managed app from accessing company data.
	MinimumWarningOsVersion *string `json:"minimumWarningOsVersion,omitempty"`
	// MinimumRequiredAppVersion Versions less than the specified version will block the managed app from accessing company data.
	MinimumRequiredAppVersion *string `json:"minimumRequiredAppVersion,omitempty"`
	// MinimumWarningAppVersion Versions less than the specified version will result in warning message on the managed app.
	MinimumWarningAppVersion *string `json:"minimumWarningAppVersion,omitempty"`
}

// ManagedAppRegistration The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
type ManagedAppRegistration struct {
	Entity
	// CreatedDateTime Date and time of creation
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastSyncDateTime Date and time of last the app synced with management service.
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// ApplicationVersion App version
	ApplicationVersion *string `json:"applicationVersion,omitempty"`
	// ManagementSdkVersion App management SDK version
	ManagementSdkVersion *string `json:"managementSdkVersion,omitempty"`
	// PlatformVersion Operating System version
	PlatformVersion *string `json:"platformVersion,omitempty"`
	// DeviceType Host device type
	DeviceType *string `json:"deviceType,omitempty"`
	// DeviceTag App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
	DeviceTag *string `json:"deviceTag,omitempty"`
	// DeviceName Host device name
	DeviceName *string `json:"deviceName,omitempty"`
	// FlaggedReasons Zero or more reasons an app registration is flagged. E.g. app running on rooted device
	FlaggedReasons []ManagedAppFlaggedReason `json:"flaggedReasons,omitempty"`
	// UserId The user Id to who this app registration belongs.
	UserId *string `json:"userId,omitempty"`
	// AppIdentifier The app package Identifier
	AppIdentifier *MobileAppIdentifier `json:"appIdentifier,omitempty"`
	// Version Version of the entity.
	Version *string `json:"version,omitempty"`
}

// ManagedAppStatus Represents app protection and configuration status for the organization.
type ManagedAppStatus struct {
	Entity
	// DisplayName Friendly name of the status report.
	DisplayName *string `json:"displayName,omitempty"`
	// Version Version of the entity.
	Version *string `json:"version,omitempty"`
}

// ManagedAppStatusRaw Represents an un-typed status report about organizations app protection and configuration.
type ManagedAppStatusRaw struct {
	ManagedAppStatus
	// Content Status report content.
	Content json.RawMessage `json:"content,omitempty"`
}

// ManagedDevice Devices that are managed or pre-enrolled through Intune
type ManagedDevice struct {
	Entity
	// UserId Unique Identifier for the user associated with the device
	UserId *string `json:"userId,omitempty"`
	// DeviceName Name of the device
	DeviceName *string `json:"deviceName,omitempty"`
	// ManagedDeviceOwnerType Ownership of the device. Can be 'company' or 'personal'
	ManagedDeviceOwnerType *ManagedDeviceOwnerType `json:"managedDeviceOwnerType,omitempty"`
	// DeviceActionResults List of ComplexType deviceActionResult objects.
	DeviceActionResults []DeviceActionResult `json:"deviceActionResults,omitempty"`
	// EnrolledDateTime Enrollment time of the device.
	EnrolledDateTime *time.Time `json:"enrolledDateTime,omitempty"`
	// LastSyncDateTime The date and time that the device last completed a successful sync with Intune.
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// OperatingSystem Operating system of the device. Windows, iOS, etc.
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// ComplianceState Compliance state of the device.
	ComplianceState *ComplianceState `json:"complianceState,omitempty"`
	// JailBroken whether the device is jail broken or rooted.
	JailBroken *string `json:"jailBroken,omitempty"`
	// ManagementAgent Management channel of the device. Intune, EAS, etc.
	ManagementAgent *ManagementAgentType `json:"managementAgent,omitempty"`
	// OsVersion Operating system version of the device.
	OsVersion *string `json:"osVersion,omitempty"`
	// EasActivated Whether the device is Exchange ActiveSync activated.
	EasActivated *bool `json:"easActivated,omitempty"`
	// EasDeviceId Exchange ActiveSync Id of the device.
	EasDeviceId *string `json:"easDeviceId,omitempty"`
	// EasActivationDateTime Exchange ActivationSync activation time of the device.
	EasActivationDateTime *time.Time `json:"easActivationDateTime,omitempty"`
	// AzureADRegistered Whether the device is Azure Active Directory registered.
	AzureADRegistered *bool `json:"azureADRegistered,omitempty"`
	// DeviceEnrollmentType Enrollment type of the device.
	DeviceEnrollmentType *DeviceEnrollmentType `json:"deviceEnrollmentType,omitempty"`
	// ActivationLockBypassCode Code that allows the Activation Lock on a device to be bypassed.
	ActivationLockBypassCode *string `json:"activationLockBypassCode,omitempty"`
	// EmailAddress Email(s) for the user associated with the device
	EmailAddress *string `json:"emailAddress,omitempty"`
	// AzureADDeviceId The unique identifier for the Azure Active Directory device. Read only.
	AzureADDeviceId *string `json:"azureADDeviceId,omitempty"`
	// DeviceRegistrationState Device registration state.
	DeviceRegistrationState *DeviceRegistrationState `json:"deviceRegistrationState,omitempty"`
	// DeviceCategoryDisplayName Device category display name
	DeviceCategoryDisplayName *string `json:"deviceCategoryDisplayName,omitempty"`
	// IsSupervised Device supervised status
	IsSupervised *bool `json:"isSupervised,omitempty"`
	// ExchangeLastSuccessfulSyncDateTime Last time the device contacted Exchange.
	ExchangeLastSuccessfulSyncDateTime *time.Time `json:"exchangeLastSuccessfulSyncDateTime,omitempty"`
	// ExchangeAccessState The Access State of the device in Exchange.
	ExchangeAccessState *DeviceManagementExchangeAccessState `json:"exchangeAccessState,omitempty"`
	// ExchangeAccessStateReason The reason for the device's access state in Exchange.
	ExchangeAccessStateReason *DeviceManagementExchangeAccessStateReason `json:"exchangeAccessStateReason,omitempty"`
	// RemoteAssistanceSessionUrl Url that allows a Remote Assistance session to be established with the device.
	RemoteAssistanceSessionUrl *string `json:"remoteAssistanceSessionUrl,omitempty"`
	// RemoteAssistanceSessionErrorDetails An error string that identifies issues when creating Remote Assistance session objects.
	RemoteAssistanceSessionErrorDetails *string `json:"remoteAssistanceSessionErrorDetails,omitempty"`
	// IsEncrypted Device encryption status
	IsEncrypted *bool `json:"isEncrypted,omitempty"`
	// UserPrincipalName Device user principal name
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// Model Model of the device
	Model *string `json:"model,omitempty"`
	// Manufacturer Manufacturer of the device
	Manufacturer *string `json:"manufacturer,omitempty"`
	// Imei IMEI
	Imei *string `json:"imei,omitempty"`
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// SerialNumber SerialNumber
	SerialNumber *string `json:"serialNumber,omitempty"`
	// PhoneNumber Phone number of the device
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// AndroidSecurityPatchLevel Android security patch level
	AndroidSecurityPatchLevel *string `json:"androidSecurityPatchLevel,omitempty"`
	// UserDisplayName User display name
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// ConfigurationManagerClientEnabledFeatures ConfigrMgr client enabled features
	ConfigurationManagerClientEnabledFeatures *ConfigurationManagerClientEnabledFeatures `json:"configurationManagerClientEnabledFeatures,omitempty"`
	// WiFiMacAddress Wi-Fi MAC
	WiFiMacAddress *string `json:"wiFiMacAddress,omitempty"`
	// DeviceHealthAttestationState The device health attestation state.
	DeviceHealthAttestationState *DeviceHealthAttestationState `json:"deviceHealthAttestationState,omitempty"`
	// SubscriberCarrier Subscriber Carrier
	SubscriberCarrier *string `json:"subscriberCarrier,omitempty"`
	// Meid MEID
	Meid *string `json:"meid,omitempty"`
	// TotalStorageSpaceInBytes Total Storage in Bytes
	TotalStorageSpaceInBytes *int `json:"totalStorageSpaceInBytes,omitempty"`
	// FreeStorageSpaceInBytes Free Storage in Bytes
	FreeStorageSpaceInBytes *int `json:"freeStorageSpaceInBytes,omitempty"`
	// ManagedDeviceName Automatically generated name to identify a device. Can be overwritten to a user friendly name.
	ManagedDeviceName *string `json:"managedDeviceName,omitempty"`
	// PartnerReportedThreatState Indicates the threat state of a device when a Mobile Threat Defense partner is in use by the account and device. Read Only.
	PartnerReportedThreatState *ManagedDevicePartnerReportedHealthState `json:"partnerReportedThreatState,omitempty"`
}

// ManagedDeviceMobileAppConfiguration An abstract class for Mobile app configuration for enrolled devices.
type ManagedDeviceMobileAppConfiguration struct {
	Entity
	// TargetedMobileApps the associated app.
	TargetedMobileApps []string `json:"targetedMobileApps,omitempty"`
	// CreatedDateTime DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Description Admin provided description of the Device Configuration.
	Description *string `json:"description,omitempty"`
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// DisplayName Admin provided name of the device configuration.
	DisplayName *string `json:"displayName,omitempty"`
	// Version Version of the device configuration.
	Version *int `json:"version,omitempty"`
}

// ManagedDeviceMobileAppConfigurationAssignment Contains the properties used to assign an MDM app configuration to a group.
type ManagedDeviceMobileAppConfigurationAssignment struct {
	Entity
	// Target Assignment target that the T&C policy is assigned to.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// ManagedDeviceMobileAppConfigurationDeviceStatus Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
type ManagedDeviceMobileAppConfigurationDeviceStatus struct {
	Entity
	// DeviceDisplayName Device name of the DevicePolicyStatus.
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	// UserName The User Name that is being reported
	UserName *string `json:"userName,omitempty"`
	// DeviceModel The device model that is being reported
	DeviceModel *string `json:"deviceModel,omitempty"`
	// ComplianceGracePeriodExpirationDateTime The DateTime when device compliance grace period expires
	ComplianceGracePeriodExpirationDateTime *time.Time `json:"complianceGracePeriodExpirationDateTime,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// ManagedDeviceMobileAppConfigurationDeviceSummary Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
type ManagedDeviceMobileAppConfigurationDeviceSummary struct {
	Entity
	// PendingCount Number of pending devices
	PendingCount *int `json:"pendingCount,omitempty"`
	// NotApplicableCount Number of not applicable devices
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// SuccessCount Number of succeeded devices
	SuccessCount *int `json:"successCount,omitempty"`
	// ErrorCount Number of error devices
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed devices
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
}

// ManagedDeviceMobileAppConfigurationUserStatus Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
type ManagedDeviceMobileAppConfigurationUserStatus struct {
	Entity
	// UserDisplayName User name of the DevicePolicyStatus.
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// DevicesCount Devices count for that user.
	DevicesCount *int `json:"devicesCount,omitempty"`
	// Status Compliance status of the policy report.
	Status *ComplianceStatus `json:"status,omitempty"`
	// LastReportedDateTime Last modified date time of the policy report.
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// UserPrincipalName UserPrincipalName.
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// ManagedDeviceMobileAppConfigurationUserSummary Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
type ManagedDeviceMobileAppConfigurationUserSummary struct {
	Entity
	// PendingCount Number of pending Users
	PendingCount *int `json:"pendingCount,omitempty"`
	// NotApplicableCount Number of not applicable users
	NotApplicableCount *int `json:"notApplicableCount,omitempty"`
	// SuccessCount Number of succeeded Users
	SuccessCount *int `json:"successCount,omitempty"`
	// ErrorCount Number of error Users
	ErrorCount *int `json:"errorCount,omitempty"`
	// FailedCount Number of failed Users
	FailedCount *int `json:"failedCount,omitempty"`
	// LastUpdateDateTime Last update time
	LastUpdateDateTime *time.Time `json:"lastUpdateDateTime,omitempty"`
	// ConfigurationVersion Version of the policy for that overview
	ConfigurationVersion *int `json:"configurationVersion,omitempty"`
}

// ManagedDeviceOverview Summary data for managed devices
type ManagedDeviceOverview struct {
	Entity
	// EnrolledDeviceCount Total enrolled device count. Does not include PC devices managed via Intune PC Agent
	EnrolledDeviceCount *int `json:"enrolledDeviceCount,omitempty"`
	// MdmEnrolledCount The number of devices enrolled in MDM
	MdmEnrolledCount *int `json:"mdmEnrolledCount,omitempty"`
	// DualEnrolledDeviceCount The number of devices enrolled in both MDM and EAS
	DualEnrolledDeviceCount *int `json:"dualEnrolledDeviceCount,omitempty"`
	// DeviceOperatingSystemSummary Device operating system summary.
	DeviceOperatingSystemSummary *DeviceOperatingSystemSummary `json:"deviceOperatingSystemSummary,omitempty"`
	// DeviceExchangeAccessStateSummary Distribution of Exchange Access State in Intune
	DeviceExchangeAccessStateSummary *DeviceExchangeAccessStateSummary `json:"deviceExchangeAccessStateSummary,omitempty"`
}

// ManagedEBook An abstract class containing the base properties for Managed eBook.
type ManagedEBook struct {
	Entity
	// DisplayName Name of the eBook.
	DisplayName *string `json:"displayName,omitempty"`
	// Description Description.
	Description *string `json:"description,omitempty"`
	// Publisher Publisher.
	Publisher *string `json:"publisher,omitempty"`
	// PublishedDateTime The date and time when the eBook was published.
	PublishedDateTime *time.Time `json:"publishedDateTime,omitempty"`
	// LargeCover Book cover.
	LargeCover *MimeContent `json:"largeCover,omitempty"`
	// CreatedDateTime The date and time when the eBook file was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastModifiedDateTime The date and time when the eBook was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// InformationUrl The more information Url.
	InformationUrl *string `json:"informationUrl,omitempty"`
	// PrivacyInformationUrl The privacy statement Url.
	PrivacyInformationUrl *string `json:"privacyInformationUrl,omitempty"`
}

// ManagedEBookAssignment Contains properties used to assign a eBook to a group.
type ManagedEBookAssignment struct {
	Entity
	// Target The assignment target for eBook.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
	// InstallIntent The install intent for eBook.
	InstallIntent *InstallIntent `json:"installIntent,omitempty"`
}

// ManagedIOSLobApp Contains properties and inherited properties for Managed iOS Line Of Business apps.
type ManagedIOSLobApp struct {
	ManagedMobileLobApp
	// BundleId The Identity Name.
	BundleId *string `json:"bundleId,omitempty"`
	// ApplicableDeviceType The iOS architecture for which this app can run on.
	ApplicableDeviceType *IosDeviceType `json:"applicableDeviceType,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum applicable operating system.
	MinimumSupportedOperatingSystem *IosMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
	// ExpirationDateTime The expiration time.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// VersionNumber The version number of managed iOS Line of Business (LoB) app.
	VersionNumber *string `json:"versionNumber,omitempty"`
	// BuildNumber The build number of managed iOS Line of Business (LoB) app.
	BuildNumber *string `json:"buildNumber,omitempty"`
}

// ManagedIOSStoreApp Contains properties and inherited properties for an iOS store app that you can manage with an Intune app protection policy.
type ManagedIOSStoreApp struct {
	ManagedApp
	// BundleId The app's Bundle ID.
	BundleId *string `json:"bundleId,omitempty"`
	// AppStoreUrl The Apple AppStoreUrl.
	AppStoreUrl *string `json:"appStoreUrl,omitempty"`
	// ApplicableDeviceType The iOS architecture for which this app can run on.
	ApplicableDeviceType *IosDeviceType `json:"applicableDeviceType,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum supported operating system.
	MinimumSupportedOperatingSystem *IosMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
}

// ManagedMobileApp The identifier for the deployment an app.
type ManagedMobileApp struct {
	Entity
	// MobileAppIdentifier The identifier for an app with it's operating system type.
	MobileAppIdentifier *MobileAppIdentifier `json:"mobileAppIdentifier,omitempty"`
	// Version Version of the entity.
	Version *string `json:"version,omitempty"`
}

// ManagedMobileLobApp An abstract base class containing properties for all managed mobile line of business apps.
type ManagedMobileLobApp struct {
	ManagedApp
	// CommittedContentVersion The internal committed content version.
	CommittedContentVersion *string `json:"committedContentVersion,omitempty"`
	// FileName The name of the main Lob application file.
	FileName *string `json:"fileName,omitempty"`
	// Size The total size, including all uploaded files.
	Size *int `json:"size,omitempty"`
}

// MdmWindowsInformationProtectionPolicy Policy for Windows information protection with MDM
type MdmWindowsInformationProtectionPolicy struct {
	WindowsInformationProtection
}

// MediaConfig undocumented
type MediaConfig struct {
}

// MediaContentRatingAustralia undocumented
type MediaContentRatingAustralia struct {
	// MovieRating Movies rating selected for Australia
	MovieRating *RatingAustraliaMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for Australia
	TvRating *RatingAustraliaTelevisionType `json:"tvRating,omitempty"`
}

// MediaContentRatingCanada undocumented
type MediaContentRatingCanada struct {
	// MovieRating Movies rating selected for Canada
	MovieRating *RatingCanadaMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for Canada
	TvRating *RatingCanadaTelevisionType `json:"tvRating,omitempty"`
}

// MediaContentRatingFrance undocumented
type MediaContentRatingFrance struct {
	// MovieRating Movies rating selected for France
	MovieRating *RatingFranceMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for France
	TvRating *RatingFranceTelevisionType `json:"tvRating,omitempty"`
}

// MediaContentRatingGermany undocumented
type MediaContentRatingGermany struct {
	// MovieRating Movies rating selected for Germany
	MovieRating *RatingGermanyMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for Germany
	TvRating *RatingGermanyTelevisionType `json:"tvRating,omitempty"`
}

// MediaContentRatingIreland undocumented
type MediaContentRatingIreland struct {
	// MovieRating Movies rating selected for Ireland
	MovieRating *RatingIrelandMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for Ireland
	TvRating *RatingIrelandTelevisionType `json:"tvRating,omitempty"`
}

// MediaContentRatingJapan undocumented
type MediaContentRatingJapan struct {
	// MovieRating Movies rating selected for Japan
	MovieRating *RatingJapanMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for Japan
	TvRating *RatingJapanTelevisionType `json:"tvRating,omitempty"`
}

// MediaContentRatingNewZealand undocumented
type MediaContentRatingNewZealand struct {
	// MovieRating Movies rating selected for New Zealand
	MovieRating *RatingNewZealandMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for New Zealand
	TvRating *RatingNewZealandTelevisionType `json:"tvRating,omitempty"`
}

// MediaContentRatingUnitedKingdom undocumented
type MediaContentRatingUnitedKingdom struct {
	// MovieRating Movies rating selected for United Kingdom
	MovieRating *RatingUnitedKingdomMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for United Kingdom
	TvRating *RatingUnitedKingdomTelevisionType `json:"tvRating,omitempty"`
}

// MediaContentRatingUnitedStates undocumented
type MediaContentRatingUnitedStates struct {
	// MovieRating Movies rating selected for United States
	MovieRating *RatingUnitedStatesMoviesType `json:"movieRating,omitempty"`
	// TvRating TV rating selected for United States
	TvRating *RatingUnitedStatesTelevisionType `json:"tvRating,omitempty"`
}

// MediaInfo undocumented
type MediaInfo struct {
	// Uri undocumented
	Uri *string `json:"uri,omitempty"`
	// ResourceId undocumented
	ResourceId *string `json:"resourceId,omitempty"`
}

// MediaPrompt undocumented
type MediaPrompt struct {
	Prompt
	// MediaInfo undocumented
	MediaInfo *MediaInfo `json:"mediaInfo,omitempty"`
}

// MediaStream undocumented
type MediaStream struct {
	// MediaType undocumented
	MediaType *Modality `json:"mediaType,omitempty"`
	// Label undocumented
	Label *string `json:"label,omitempty"`
	// SourceId undocumented
	SourceId *string `json:"sourceId,omitempty"`
	// Direction undocumented
	Direction *MediaDirection `json:"direction,omitempty"`
	// ServerMuted undocumented
	ServerMuted *bool `json:"serverMuted,omitempty"`
}

// MeetingInfo undocumented
type MeetingInfo struct {
}

// MeetingParticipantInfo undocumented
type MeetingParticipantInfo struct {
	// Identity undocumented
	Identity *IdentitySet `json:"identity,omitempty"`
	// Upn undocumented
	Upn *string `json:"upn,omitempty"`
}

// MeetingParticipants undocumented
type MeetingParticipants struct {
	// Organizer undocumented
	Organizer *MeetingParticipantInfo `json:"organizer,omitempty"`
	// Attendees undocumented
	Attendees []MeetingParticipantInfo `json:"attendees,omitempty"`
}

// MeetingTimeSuggestion undocumented
type MeetingTimeSuggestion struct {
	// Confidence undocumented
	Confidence *float64 `json:"confidence,omitempty"`
	// Order undocumented
	Order *int `json:"order,omitempty"`
	// OrganizerAvailability undocumented
	OrganizerAvailability *FreeBusyStatus `json:"organizerAvailability,omitempty"`
	// AttendeeAvailability undocumented
	AttendeeAvailability []AttendeeAvailability `json:"attendeeAvailability,omitempty"`
	// Locations undocumented
	Locations []Location `json:"locations,omitempty"`
	// SuggestionReason undocumented
	SuggestionReason *string `json:"suggestionReason,omitempty"`
	// MeetingTimeSlot undocumented
	MeetingTimeSlot *TimeSlot `json:"meetingTimeSlot,omitempty"`
}

// MeetingTimeSuggestionsResult undocumented
type MeetingTimeSuggestionsResult struct {
	// MeetingTimeSuggestions undocumented
	MeetingTimeSuggestions []MeetingTimeSuggestion `json:"meetingTimeSuggestions,omitempty"`
	// EmptySuggestionsReason undocumented
	EmptySuggestionsReason *string `json:"emptySuggestionsReason,omitempty"`
}

// Message undocumented
type Message struct {
	OutlookItem
	// ReceivedDateTime undocumented
	ReceivedDateTime *time.Time `json:"receivedDateTime,omitempty"`
	// SentDateTime undocumented
	SentDateTime *time.Time `json:"sentDateTime,omitempty"`
	// HasAttachments undocumented
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	// InternetMessageId undocumented
	InternetMessageId *string `json:"internetMessageId,omitempty"`
	// InternetMessageHeaders undocumented
	InternetMessageHeaders []InternetMessageHeader `json:"internetMessageHeaders,omitempty"`
	// Subject undocumented
	Subject *string `json:"subject,omitempty"`
	// Body undocumented
	Body *ItemBody `json:"body,omitempty"`
	// BodyPreview undocumented
	BodyPreview *string `json:"bodyPreview,omitempty"`
	// Importance undocumented
	Importance *Importance `json:"importance,omitempty"`
	// ParentFolderId undocumented
	ParentFolderId *string `json:"parentFolderId,omitempty"`
	// Sender undocumented
	Sender *Recipient `json:"sender,omitempty"`
	// From undocumented
	From *Recipient `json:"from,omitempty"`
	// ToRecipients undocumented
	ToRecipients []Recipient `json:"toRecipients,omitempty"`
	// CcRecipients undocumented
	CcRecipients []Recipient `json:"ccRecipients,omitempty"`
	// BccRecipients undocumented
	BccRecipients []Recipient `json:"bccRecipients,omitempty"`
	// ReplyTo undocumented
	ReplyTo []Recipient `json:"replyTo,omitempty"`
	// ConversationId undocumented
	ConversationId *string `json:"conversationId,omitempty"`
	// UniqueBody undocumented
	UniqueBody *ItemBody `json:"uniqueBody,omitempty"`
	// IsDeliveryReceiptRequested undocumented
	IsDeliveryReceiptRequested *bool `json:"isDeliveryReceiptRequested,omitempty"`
	// IsReadReceiptRequested undocumented
	IsReadReceiptRequested *bool `json:"isReadReceiptRequested,omitempty"`
	// IsRead undocumented
	IsRead *bool `json:"isRead,omitempty"`
	// IsDraft undocumented
	IsDraft *bool `json:"isDraft,omitempty"`
	// WebLink undocumented
	WebLink *string `json:"webLink,omitempty"`
	// InferenceClassification undocumented
	InferenceClassification *InferenceClassificationType `json:"inferenceClassification,omitempty"`
	// Flag undocumented
	Flag *FollowupFlag `json:"flag,omitempty"`
}

// MessageRule undocumented
type MessageRule struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Sequence undocumented
	Sequence *int `json:"sequence,omitempty"`
	// Conditions undocumented
	Conditions *MessageRulePredicates `json:"conditions,omitempty"`
	// Actions undocumented
	Actions *MessageRuleActions `json:"actions,omitempty"`
	// Exceptions undocumented
	Exceptions *MessageRulePredicates `json:"exceptions,omitempty"`
	// IsEnabled undocumented
	IsEnabled *bool `json:"isEnabled,omitempty"`
	// HasError undocumented
	HasError *bool `json:"hasError,omitempty"`
	// IsReadOnly undocumented
	IsReadOnly *bool `json:"isReadOnly,omitempty"`
}

// MessageRuleActions undocumented
type MessageRuleActions struct {
	// MoveToFolder undocumented
	MoveToFolder *string `json:"moveToFolder,omitempty"`
	// CopyToFolder undocumented
	CopyToFolder *string `json:"copyToFolder,omitempty"`
	// Delete undocumented
	Delete *bool `json:"delete,omitempty"`
	// PermanentDelete undocumented
	PermanentDelete *bool `json:"permanentDelete,omitempty"`
	// MarkAsRead undocumented
	MarkAsRead *bool `json:"markAsRead,omitempty"`
	// MarkImportance undocumented
	MarkImportance *Importance `json:"markImportance,omitempty"`
	// ForwardTo undocumented
	ForwardTo []Recipient `json:"forwardTo,omitempty"`
	// ForwardAsAttachmentTo undocumented
	ForwardAsAttachmentTo []Recipient `json:"forwardAsAttachmentTo,omitempty"`
	// RedirectTo undocumented
	RedirectTo []Recipient `json:"redirectTo,omitempty"`
	// AssignCategories undocumented
	AssignCategories []string `json:"assignCategories,omitempty"`
	// StopProcessingRules undocumented
	StopProcessingRules *bool `json:"stopProcessingRules,omitempty"`
}

// MessageRulePredicates undocumented
type MessageRulePredicates struct {
	// Categories undocumented
	Categories []string `json:"categories,omitempty"`
	// SubjectContains undocumented
	SubjectContains []string `json:"subjectContains,omitempty"`
	// BodyContains undocumented
	BodyContains []string `json:"bodyContains,omitempty"`
	// BodyOrSubjectContains undocumented
	BodyOrSubjectContains []string `json:"bodyOrSubjectContains,omitempty"`
	// SenderContains undocumented
	SenderContains []string `json:"senderContains,omitempty"`
	// RecipientContains undocumented
	RecipientContains []string `json:"recipientContains,omitempty"`
	// HeaderContains undocumented
	HeaderContains []string `json:"headerContains,omitempty"`
	// MessageActionFlag undocumented
	MessageActionFlag *MessageActionFlag `json:"messageActionFlag,omitempty"`
	// Importance undocumented
	Importance *Importance `json:"importance,omitempty"`
	// Sensitivity undocumented
	Sensitivity *Sensitivity `json:"sensitivity,omitempty"`
	// FromAddresses undocumented
	FromAddresses []Recipient `json:"fromAddresses,omitempty"`
	// SentToAddresses undocumented
	SentToAddresses []Recipient `json:"sentToAddresses,omitempty"`
	// SentToMe undocumented
	SentToMe *bool `json:"sentToMe,omitempty"`
	// SentOnlyToMe undocumented
	SentOnlyToMe *bool `json:"sentOnlyToMe,omitempty"`
	// SentCcMe undocumented
	SentCcMe *bool `json:"sentCcMe,omitempty"`
	// SentToOrCcMe undocumented
	SentToOrCcMe *bool `json:"sentToOrCcMe,omitempty"`
	// NotSentToMe undocumented
	NotSentToMe *bool `json:"notSentToMe,omitempty"`
	// HasAttachments undocumented
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	// IsApprovalRequest undocumented
	IsApprovalRequest *bool `json:"isApprovalRequest,omitempty"`
	// IsAutomaticForward undocumented
	IsAutomaticForward *bool `json:"isAutomaticForward,omitempty"`
	// IsAutomaticReply undocumented
	IsAutomaticReply *bool `json:"isAutomaticReply,omitempty"`
	// IsEncrypted undocumented
	IsEncrypted *bool `json:"isEncrypted,omitempty"`
	// IsMeetingRequest undocumented
	IsMeetingRequest *bool `json:"isMeetingRequest,omitempty"`
	// IsMeetingResponse undocumented
	IsMeetingResponse *bool `json:"isMeetingResponse,omitempty"`
	// IsNonDeliveryReport undocumented
	IsNonDeliveryReport *bool `json:"isNonDeliveryReport,omitempty"`
	// IsPermissionControlled undocumented
	IsPermissionControlled *bool `json:"isPermissionControlled,omitempty"`
	// IsReadReceipt undocumented
	IsReadReceipt *bool `json:"isReadReceipt,omitempty"`
	// IsSigned undocumented
	IsSigned *bool `json:"isSigned,omitempty"`
	// IsVoicemail undocumented
	IsVoicemail *bool `json:"isVoicemail,omitempty"`
	// WithinSizeRange undocumented
	WithinSizeRange *SizeRange `json:"withinSizeRange,omitempty"`
}

// MicrosoftStoreForBusinessApp Microsoft Store for Business Apps. This class does not support Create, Delete, or Update.
type MicrosoftStoreForBusinessApp struct {
	MobileApp
	// UsedLicenseCount The number of Microsoft Store for Business licenses in use.
	UsedLicenseCount *int `json:"usedLicenseCount,omitempty"`
	// TotalLicenseCount The total number of Microsoft Store for Business licenses.
	TotalLicenseCount *int `json:"totalLicenseCount,omitempty"`
	// ProductKey The app product key
	ProductKey *string `json:"productKey,omitempty"`
	// LicenseType The app license type
	LicenseType *MicrosoftStoreForBusinessLicenseType `json:"licenseType,omitempty"`
	// PackageIdentityName The app package identifier
	PackageIdentityName *string `json:"packageIdentityName,omitempty"`
}

// MicrosoftStoreForBusinessAppAssignmentSettings undocumented
type MicrosoftStoreForBusinessAppAssignmentSettings struct {
	MobileAppAssignmentSettings
	// UseDeviceContext Whether or not to use device execution context for Microsoft Store for Business mobile app.
	UseDeviceContext *bool `json:"useDeviceContext,omitempty"`
}

// MimeContent undocumented
type MimeContent struct {
	// Type Indicates the content mime type.
	Type *string `json:"type,omitempty"`
	// Value The byte array that contains the actual content.
	Value *Binary `json:"value,omitempty"`
}

// MobileApp An abstract class containing the base properties for Intune mobile apps.
type MobileApp struct {
	Entity
	// DisplayName The admin provided or imported title of the app.
	DisplayName *string `json:"displayName,omitempty"`
	// Description The description of the app.
	Description *string `json:"description,omitempty"`
	// Publisher The publisher of the app.
	Publisher *string `json:"publisher,omitempty"`
	// LargeIcon The large icon, to be displayed in the app details and used for upload of the icon.
	LargeIcon *MimeContent `json:"largeIcon,omitempty"`
	// CreatedDateTime The date and time the app was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastModifiedDateTime The date and time the app was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// IsFeatured The value indicating whether the app is marked as featured by the admin.
	IsFeatured *bool `json:"isFeatured,omitempty"`
	// PrivacyInformationUrl The privacy statement Url.
	PrivacyInformationUrl *string `json:"privacyInformationUrl,omitempty"`
	// InformationUrl The more information Url.
	InformationUrl *string `json:"informationUrl,omitempty"`
	// Owner The owner of the app.
	Owner *string `json:"owner,omitempty"`
	// Developer The developer of the app.
	Developer *string `json:"developer,omitempty"`
	// Notes Notes for the app.
	Notes *string `json:"notes,omitempty"`
	// PublishingState The publishing state for the app. The app cannot be assigned unless the app is published.
	PublishingState *MobileAppPublishingState `json:"publishingState,omitempty"`
}

// MobileAppAssignment A class containing the properties used for Group Assignment of a Mobile App.
type MobileAppAssignment struct {
	Entity
	// Intent The install intent defined by the admin.
	Intent *InstallIntent `json:"intent,omitempty"`
	// Target The target group assignment defined by the admin.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
	// Settings The settings for target assignment defined by the admin.
	Settings *MobileAppAssignmentSettings `json:"settings,omitempty"`
}

// MobileAppAssignmentSettings undocumented
type MobileAppAssignmentSettings struct {
}

// MobileAppCategory Contains properties for a single Intune app category.
type MobileAppCategory struct {
	Entity
	// DisplayName The name of the app category.
	DisplayName *string `json:"displayName,omitempty"`
	// LastModifiedDateTime The date and time the mobileAppCategory was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// MobileAppContent Contains content properties for a specific app version. Each mobileAppContent can have multiple mobileAppContentFile.
type MobileAppContent struct {
	Entity
}

// MobileAppContentFile Contains properties for a single installer file that is associated with a given mobileAppContent version.
type MobileAppContentFile struct {
	Entity
	// AzureStorageUri The Azure Storage URI.
	AzureStorageUri *string `json:"azureStorageUri,omitempty"`
	// IsCommitted A value indicating whether the file is committed.
	IsCommitted *bool `json:"isCommitted,omitempty"`
	// CreatedDateTime The time the file was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Name the file name.
	Name *string `json:"name,omitempty"`
	// Size The size of the file prior to encryption.
	Size *int `json:"size,omitempty"`
	// SizeEncrypted The size of the file after encryption.
	SizeEncrypted *int `json:"sizeEncrypted,omitempty"`
	// AzureStorageUriExpirationDateTime The time the Azure storage Uri expires.
	AzureStorageUriExpirationDateTime *time.Time `json:"azureStorageUriExpirationDateTime,omitempty"`
	// Manifest The manifest information.
	Manifest *Binary `json:"manifest,omitempty"`
	// UploadState The state of the current upload request.
	UploadState *MobileAppContentFileUploadState `json:"uploadState,omitempty"`
}

// MobileAppIdentifier undocumented
type MobileAppIdentifier struct {
}

// MobileLobApp An abstract base class containing properties for all mobile line of business apps.
type MobileLobApp struct {
	MobileApp
	// CommittedContentVersion The internal committed content version.
	CommittedContentVersion *string `json:"committedContentVersion,omitempty"`
	// FileName The name of the main Lob application file.
	FileName *string `json:"fileName,omitempty"`
	// Size The total size, including all uploaded files.
	Size *int `json:"size,omitempty"`
}

// MobileThreatDefenseConnector Entity which represents a connection to Mobile threat defense partner.
type MobileThreatDefenseConnector struct {
	Entity
	// LastHeartbeatDateTime DateTime of last Heartbeat recieved from the Data Sync Partner
	LastHeartbeatDateTime *time.Time `json:"lastHeartbeatDateTime,omitempty"`
	// PartnerState Data Sync Partner state for this account
	PartnerState *MobileThreatPartnerTenantState `json:"partnerState,omitempty"`
	// AndroidEnabled For Android, set whether data from the data sync partner should be used during compliance evaluations
	AndroidEnabled *bool `json:"androidEnabled,omitempty"`
	// IosEnabled For IOS, get or set whether data from the data sync partner should be used during compliance evaluations
	IosEnabled *bool `json:"iosEnabled,omitempty"`
	// AndroidDeviceBlockedOnMissingPartnerData For Android, set whether Intune must receive data from the data sync partner prior to marking a device compliant
	AndroidDeviceBlockedOnMissingPartnerData *bool `json:"androidDeviceBlockedOnMissingPartnerData,omitempty"`
	// IosDeviceBlockedOnMissingPartnerData For IOS, set whether Intune must receive data from the data sync partner prior to marking a device compliant
	IosDeviceBlockedOnMissingPartnerData *bool `json:"iosDeviceBlockedOnMissingPartnerData,omitempty"`
	// PartnerUnsupportedOsVersionBlocked Get or set whether to block devices on the enabled platforms that do not meet the minimum version requirements of the Data Sync Partner
	PartnerUnsupportedOsVersionBlocked *bool `json:"partnerUnsupportedOsVersionBlocked,omitempty"`
	// PartnerUnresponsivenessThresholdInDays Get or Set days the per tenant tolerance to unresponsiveness for this partner integration
	PartnerUnresponsivenessThresholdInDays *int `json:"partnerUnresponsivenessThresholdInDays,omitempty"`
}

// ModifiedProperty undocumented
type ModifiedProperty struct {
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// OldValue undocumented
	OldValue *string `json:"oldValue,omitempty"`
	// NewValue undocumented
	NewValue *string `json:"newValue,omitempty"`
}

// MultiValueLegacyExtendedProperty undocumented
type MultiValueLegacyExtendedProperty struct {
	Entity
	// Value undocumented
	Value []string `json:"value,omitempty"`
}

// MuteParticipantOperation undocumented
type MuteParticipantOperation struct {
	CommsOperation
}

// NetworkConnection undocumented
type NetworkConnection struct {
	// ApplicationName undocumented
	ApplicationName *string `json:"applicationName,omitempty"`
	// DestinationAddress undocumented
	DestinationAddress *string `json:"destinationAddress,omitempty"`
	// DestinationDomain undocumented
	DestinationDomain *string `json:"destinationDomain,omitempty"`
	// DestinationPort undocumented
	DestinationPort *string `json:"destinationPort,omitempty"`
	// DestinationUrl undocumented
	DestinationUrl *string `json:"destinationUrl,omitempty"`
	// Direction undocumented
	Direction *ConnectionDirection `json:"direction,omitempty"`
	// DomainRegisteredDateTime undocumented
	DomainRegisteredDateTime *time.Time `json:"domainRegisteredDateTime,omitempty"`
	// LocalDnsName undocumented
	LocalDnsName *string `json:"localDnsName,omitempty"`
	// NatDestinationAddress undocumented
	NatDestinationAddress *string `json:"natDestinationAddress,omitempty"`
	// NatDestinationPort undocumented
	NatDestinationPort *string `json:"natDestinationPort,omitempty"`
	// NatSourceAddress undocumented
	NatSourceAddress *string `json:"natSourceAddress,omitempty"`
	// NatSourcePort undocumented
	NatSourcePort *string `json:"natSourcePort,omitempty"`
	// Protocol undocumented
	Protocol *SecurityNetworkProtocol `json:"protocol,omitempty"`
	// RiskScore undocumented
	RiskScore *string `json:"riskScore,omitempty"`
	// SourceAddress undocumented
	SourceAddress *string `json:"sourceAddress,omitempty"`
	// SourcePort undocumented
	SourcePort *string `json:"sourcePort,omitempty"`
	// Status undocumented
	Status *ConnectionStatus `json:"status,omitempty"`
	// UrlParameters undocumented
	UrlParameters *string `json:"urlParameters,omitempty"`
}

// Notebook undocumented
type Notebook struct {
	OnenoteEntityHierarchyModel
	// IsDefault undocumented
	IsDefault *bool `json:"isDefault,omitempty"`
	// UserRole undocumented
	UserRole *OnenoteUserRole `json:"userRole,omitempty"`
	// IsShared undocumented
	IsShared *bool `json:"isShared,omitempty"`
	// SectionsUrl undocumented
	SectionsUrl *string `json:"sectionsUrl,omitempty"`
	// SectionGroupsUrl undocumented
	SectionGroupsUrl *string `json:"sectionGroupsUrl,omitempty"`
	// Links undocumented
	Links *NotebookLinks `json:"links,omitempty"`
}

// NotebookLinks undocumented
type NotebookLinks struct {
	// OneNoteClientUrl undocumented
	OneNoteClientUrl *ExternalLink `json:"oneNoteClientUrl,omitempty"`
	// OneNoteWebUrl undocumented
	OneNoteWebUrl *ExternalLink `json:"oneNoteWebUrl,omitempty"`
}

// NotificationMessageTemplate Notification messages are messages that are sent to end users who are determined to be not-compliant with the compliance policies defined by the administrator. Administrators choose notifications and configure them in the Intune Admin Console using the compliance policy creation page under the “Actions for non-compliance” section. Use the notificationMessageTemplate object to create your own custom notifications for administrators to choose while configuring actions for non-compliance.
type NotificationMessageTemplate struct {
	Entity
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// DisplayName Display name for the Notification Message Template.
	DisplayName *string `json:"displayName,omitempty"`
	// DefaultLocale The default locale to fallback onto when the requested locale is not available.
	DefaultLocale *string `json:"defaultLocale,omitempty"`
	// BrandingOptions The Message Template Branding Options. Branding is defined in the Intune Admin Console.
	BrandingOptions *NotificationTemplateBrandingOptions `json:"brandingOptions,omitempty"`
}

// NumberColumn undocumented
type NumberColumn struct {
	// DecimalPlaces undocumented
	DecimalPlaces *string `json:"decimalPlaces,omitempty"`
	// DisplayAs undocumented
	DisplayAs *string `json:"displayAs,omitempty"`
	// Maximum undocumented
	Maximum *float64 `json:"maximum,omitempty"`
	// Minimum undocumented
	Minimum *float64 `json:"minimum,omitempty"`
}

// OfficeGraphInsights undocumented
type OfficeGraphInsights struct {
	Entity
}

// OmaSetting undocumented
type OmaSetting struct {
	// DisplayName Display Name.
	DisplayName *string `json:"displayName,omitempty"`
	// Description Description.
	Description *string `json:"description,omitempty"`
	// OmaUri OMA.
	OmaUri *string `json:"omaUri,omitempty"`
}

// OmaSettingBase64 undocumented
type OmaSettingBase64 struct {
	OmaSetting
	// FileName File name associated with the Value property (*.cer | *.crt | *.p7b | *.bin).
	FileName *string `json:"fileName,omitempty"`
	// Value Value. (Base64 encoded string)
	Value *string `json:"value,omitempty"`
}

// OmaSettingBoolean undocumented
type OmaSettingBoolean struct {
	OmaSetting
	// Value Value.
	Value *bool `json:"value,omitempty"`
}

// OmaSettingDateTime undocumented
type OmaSettingDateTime struct {
	OmaSetting
	// Value Value.
	Value *time.Time `json:"value,omitempty"`
}

// OmaSettingFloatingPoint undocumented
type OmaSettingFloatingPoint struct {
	OmaSetting
	// Value Value.
	Value *float64 `json:"value,omitempty"`
}

// OmaSettingInteger undocumented
type OmaSettingInteger struct {
	OmaSetting
	// Value Value.
	Value *int `json:"value,omitempty"`
}

// OmaSettingString undocumented
type OmaSettingString struct {
	OmaSetting
	// Value Value.
	Value *string `json:"value,omitempty"`
}

// OmaSettingStringXml undocumented
type OmaSettingStringXml struct {
	OmaSetting
	// FileName File name associated with the Value property (*.xml).
	FileName *string `json:"fileName,omitempty"`
	// Value Value. (UTF8 encoded byte array)
	Value *Binary `json:"value,omitempty"`
}

// OnPremisesConditionalAccessSettings Singleton entity which represents the Exchange OnPremises Conditional Access Settings for a tenant.
type OnPremisesConditionalAccessSettings struct {
	Entity
	// Enabled Indicates if on premises conditional access is enabled for this organization
	Enabled *bool `json:"enabled,omitempty"`
	// IncludedGroups User groups that will be targeted by on premises conditional access. All users in these groups will be required to have mobile device managed and compliant for mail access.
	IncludedGroups []UUID `json:"includedGroups,omitempty"`
	// ExcludedGroups User groups that will be exempt by on premises conditional access. All users in these groups will be exempt from the conditional access policy.
	ExcludedGroups []UUID `json:"excludedGroups,omitempty"`
	// OverrideDefaultRule Override the default access rule when allowing a device to ensure access is granted.
	OverrideDefaultRule *bool `json:"overrideDefaultRule,omitempty"`
}

// OnPremisesExtensionAttributes undocumented
type OnPremisesExtensionAttributes struct {
	// ExtensionAttribute1 undocumented
	ExtensionAttribute1 *string `json:"extensionAttribute1,omitempty"`
	// ExtensionAttribute2 undocumented
	ExtensionAttribute2 *string `json:"extensionAttribute2,omitempty"`
	// ExtensionAttribute3 undocumented
	ExtensionAttribute3 *string `json:"extensionAttribute3,omitempty"`
	// ExtensionAttribute4 undocumented
	ExtensionAttribute4 *string `json:"extensionAttribute4,omitempty"`
	// ExtensionAttribute5 undocumented
	ExtensionAttribute5 *string `json:"extensionAttribute5,omitempty"`
	// ExtensionAttribute6 undocumented
	ExtensionAttribute6 *string `json:"extensionAttribute6,omitempty"`
	// ExtensionAttribute7 undocumented
	ExtensionAttribute7 *string `json:"extensionAttribute7,omitempty"`
	// ExtensionAttribute8 undocumented
	ExtensionAttribute8 *string `json:"extensionAttribute8,omitempty"`
	// ExtensionAttribute9 undocumented
	ExtensionAttribute9 *string `json:"extensionAttribute9,omitempty"`
	// ExtensionAttribute10 undocumented
	ExtensionAttribute10 *string `json:"extensionAttribute10,omitempty"`
	// ExtensionAttribute11 undocumented
	ExtensionAttribute11 *string `json:"extensionAttribute11,omitempty"`
	// ExtensionAttribute12 undocumented
	ExtensionAttribute12 *string `json:"extensionAttribute12,omitempty"`
	// ExtensionAttribute13 undocumented
	ExtensionAttribute13 *string `json:"extensionAttribute13,omitempty"`
	// ExtensionAttribute14 undocumented
	ExtensionAttribute14 *string `json:"extensionAttribute14,omitempty"`
	// ExtensionAttribute15 undocumented
	ExtensionAttribute15 *string `json:"extensionAttribute15,omitempty"`
}

// OnPremisesProvisioningError undocumented
type OnPremisesProvisioningError struct {
	// Value undocumented
	Value *string `json:"value,omitempty"`
	// Category undocumented
	Category *string `json:"category,omitempty"`
	// PropertyCausingError undocumented
	PropertyCausingError *string `json:"propertyCausingError,omitempty"`
	// OccurredDateTime undocumented
	OccurredDateTime *time.Time `json:"occurredDateTime,omitempty"`
}

// Onenote undocumented
type Onenote struct {
	Entity
}

// OnenoteEntityBaseModel undocumented
type OnenoteEntityBaseModel struct {
	Entity
	// Self undocumented
	Self *string `json:"self,omitempty"`
}

// OnenoteEntityHierarchyModel undocumented
type OnenoteEntityHierarchyModel struct {
	OnenoteEntitySchemaObjectModel
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// CreatedBy undocumented
	CreatedBy *IdentitySet `json:"createdBy,omitempty"`
	// LastModifiedBy undocumented
	LastModifiedBy *IdentitySet `json:"lastModifiedBy,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// OnenoteEntitySchemaObjectModel undocumented
type OnenoteEntitySchemaObjectModel struct {
	OnenoteEntityBaseModel
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
}

// OnenoteOperation undocumented
type OnenoteOperation struct {
	Operation
	// ResourceLocation undocumented
	ResourceLocation *string `json:"resourceLocation,omitempty"`
	// ResourceId undocumented
	ResourceId *string `json:"resourceId,omitempty"`
	// Error undocumented
	Error *OnenoteOperationError `json:"error,omitempty"`
	// PercentComplete undocumented
	PercentComplete *string `json:"percentComplete,omitempty"`
}

// OnenoteOperationError undocumented
type OnenoteOperationError struct {
	// Code undocumented
	Code *string `json:"code,omitempty"`
	// Message undocumented
	Message *string `json:"message,omitempty"`
}

// OnenotePage undocumented
type OnenotePage struct {
	OnenoteEntitySchemaObjectModel
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// CreatedByAppId undocumented
	CreatedByAppId *string `json:"createdByAppId,omitempty"`
	// Links undocumented
	Links *PageLinks `json:"links,omitempty"`
	// ContentUrl undocumented
	ContentUrl *string `json:"contentUrl,omitempty"`
	// Content undocumented
	Content *Stream `json:"content,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Level undocumented
	Level *int `json:"level,omitempty"`
	// Order undocumented
	Order *int `json:"order,omitempty"`
	// UserTags undocumented
	UserTags []string `json:"userTags,omitempty"`
}

// OnenotePagePreview undocumented
type OnenotePagePreview struct {
	// PreviewText undocumented
	PreviewText *string `json:"previewText,omitempty"`
	// Links undocumented
	Links *OnenotePagePreviewLinks `json:"links,omitempty"`
}

// OnenotePagePreviewLinks undocumented
type OnenotePagePreviewLinks struct {
	// PreviewImageUrl undocumented
	PreviewImageUrl *ExternalLink `json:"previewImageUrl,omitempty"`
}

// OnenotePatchContentCommand undocumented
type OnenotePatchContentCommand struct {
	// Action undocumented
	Action *OnenotePatchActionType `json:"action,omitempty"`
	// Target undocumented
	Target *string `json:"target,omitempty"`
	// Content undocumented
	Content *string `json:"content,omitempty"`
	// Position undocumented
	Position *OnenotePatchInsertPosition `json:"position,omitempty"`
}

// OnenoteResource undocumented
type OnenoteResource struct {
	OnenoteEntityBaseModel
	// Content undocumented
	Content *Stream `json:"content,omitempty"`
	// ContentUrl undocumented
	ContentUrl *string `json:"contentUrl,omitempty"`
}

// OnenoteSection undocumented
type OnenoteSection struct {
	OnenoteEntityHierarchyModel
	// IsDefault undocumented
	IsDefault *bool `json:"isDefault,omitempty"`
	// Links undocumented
	Links *SectionLinks `json:"links,omitempty"`
	// PagesUrl undocumented
	PagesUrl *string `json:"pagesUrl,omitempty"`
}

// OnlineMeeting undocumented
type OnlineMeeting struct {
	Entity
	// CreationDateTime undocumented
	CreationDateTime *time.Time `json:"creationDateTime,omitempty"`
	// StartDateTime undocumented
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// EndDateTime undocumented
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	// JoinUrl undocumented
	JoinUrl *string `json:"joinUrl,omitempty"`
	// Subject undocumented
	Subject *string `json:"subject,omitempty"`
	// Participants undocumented
	Participants *MeetingParticipants `json:"participants,omitempty"`
	// AudioConferencing undocumented
	AudioConferencing *AudioConferencing `json:"audioConferencing,omitempty"`
	// ChatInfo undocumented
	ChatInfo *ChatInfo `json:"chatInfo,omitempty"`
	// VideoTeleconferenceId undocumented
	VideoTeleconferenceId *string `json:"videoTeleconferenceId,omitempty"`
}

// OpenTypeExtension undocumented
type OpenTypeExtension struct {
	Extension
	// ExtensionName undocumented
	ExtensionName *string `json:"extensionName,omitempty"`
}

// Operation undocumented
type Operation struct {
	Entity
	// Status undocumented
	Status *OperationStatus `json:"status,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastActionDateTime undocumented
	LastActionDateTime *time.Time `json:"lastActionDateTime,omitempty"`
}

// OperationError undocumented
type OperationError struct {
	// Code undocumented
	Code *string `json:"code,omitempty"`
	// Message undocumented
	Message *string `json:"message,omitempty"`
}

// Organization The organization resource represents an instance of global settings and resources which operate and are provisioned at the tenant-level.
type Organization struct {
	DirectoryObject
	// AssignedPlans undocumented
	AssignedPlans []AssignedPlan `json:"assignedPlans,omitempty"`
	// BusinessPhones undocumented
	BusinessPhones []string `json:"businessPhones,omitempty"`
	// City undocumented
	City *string `json:"city,omitempty"`
	// Country undocumented
	Country *string `json:"country,omitempty"`
	// CountryLetterCode undocumented
	CountryLetterCode *string `json:"countryLetterCode,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// MarketingNotificationEmails undocumented
	MarketingNotificationEmails []string `json:"marketingNotificationEmails,omitempty"`
	// OnPremisesLastSyncDateTime undocumented
	OnPremisesLastSyncDateTime *time.Time `json:"onPremisesLastSyncDateTime,omitempty"`
	// OnPremisesSyncEnabled undocumented
	OnPremisesSyncEnabled *bool `json:"onPremisesSyncEnabled,omitempty"`
	// PostalCode undocumented
	PostalCode *string `json:"postalCode,omitempty"`
	// PreferredLanguage undocumented
	PreferredLanguage *string `json:"preferredLanguage,omitempty"`
	// PrivacyProfile undocumented
	PrivacyProfile *PrivacyProfile `json:"privacyProfile,omitempty"`
	// ProvisionedPlans undocumented
	ProvisionedPlans []ProvisionedPlan `json:"provisionedPlans,omitempty"`
	// SecurityComplianceNotificationMails undocumented
	SecurityComplianceNotificationMails []string `json:"securityComplianceNotificationMails,omitempty"`
	// SecurityComplianceNotificationPhones undocumented
	SecurityComplianceNotificationPhones []string `json:"securityComplianceNotificationPhones,omitempty"`
	// State undocumented
	State *string `json:"state,omitempty"`
	// Street undocumented
	Street *string `json:"street,omitempty"`
	// TechnicalNotificationMails undocumented
	TechnicalNotificationMails []string `json:"technicalNotificationMails,omitempty"`
	// VerifiedDomains undocumented
	VerifiedDomains []VerifiedDomain `json:"verifiedDomains,omitempty"`
	// MobileDeviceManagementAuthority Mobile device management authority.
	MobileDeviceManagementAuthority *MdmAuthority `json:"mobileDeviceManagementAuthority,omitempty"`
}

// OrganizerMeetingInfo undocumented
type OrganizerMeetingInfo struct {
	MeetingInfo
	// Organizer undocumented
	Organizer *IdentitySet `json:"organizer,omitempty"`
}

// OutlookCategory undocumented
type OutlookCategory struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Color undocumented
	Color *CategoryColor `json:"color,omitempty"`
}

// OutlookGeoCoordinates undocumented
type OutlookGeoCoordinates struct {
	// Latitude undocumented
	Latitude *float64 `json:"latitude,omitempty"`
	// Longitude undocumented
	Longitude *float64 `json:"longitude,omitempty"`
	// Accuracy undocumented
	Accuracy *float64 `json:"accuracy,omitempty"`
	// Altitude undocumented
	Altitude *float64 `json:"altitude,omitempty"`
	// AltitudeAccuracy undocumented
	AltitudeAccuracy *float64 `json:"altitudeAccuracy,omitempty"`
}

// OutlookItem undocumented
type OutlookItem struct {
	Entity
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// ChangeKey undocumented
	ChangeKey *string `json:"changeKey,omitempty"`
	// Categories undocumented
	Categories []string `json:"categories,omitempty"`
}

// OutlookUser undocumented
type OutlookUser struct {
	Entity
}

// Package undocumented
type Package struct {
	// Type undocumented
	Type *string `json:"type,omitempty"`
}

// PageLinks undocumented
type PageLinks struct {
	// OneNoteClientUrl undocumented
	OneNoteClientUrl *ExternalLink `json:"oneNoteClientUrl,omitempty"`
	// OneNoteWebUrl undocumented
	OneNoteWebUrl *ExternalLink `json:"oneNoteWebUrl,omitempty"`
}

// Participant undocumented
type Participant struct {
	Entity
	// Info undocumented
	Info *ParticipantInfo `json:"info,omitempty"`
	// MediaStreams undocumented
	MediaStreams []MediaStream `json:"mediaStreams,omitempty"`
	// IsMuted undocumented
	IsMuted *bool `json:"isMuted,omitempty"`
	// IsInLobby undocumented
	IsInLobby *bool `json:"isInLobby,omitempty"`
}

// ParticipantInfo undocumented
type ParticipantInfo struct {
	// Identity undocumented
	Identity *IdentitySet `json:"identity,omitempty"`
	// Region undocumented
	Region *string `json:"region,omitempty"`
	// LanguageId undocumented
	LanguageId *string `json:"languageId,omitempty"`
}

// PasswordProfile undocumented
type PasswordProfile struct {
	// Password undocumented
	Password *string `json:"password,omitempty"`
	// ForceChangePasswordNextSignIn undocumented
	ForceChangePasswordNextSignIn *bool `json:"forceChangePasswordNextSignIn,omitempty"`
	// ForceChangePasswordNextSignInWithMfa undocumented
	ForceChangePasswordNextSignInWithMfa *bool `json:"forceChangePasswordNextSignInWithMfa,omitempty"`
}

// PatternedRecurrence undocumented
type PatternedRecurrence struct {
	// Pattern undocumented
	Pattern *RecurrencePattern `json:"pattern,omitempty"`
	// Range undocumented
	Range *RecurrenceRange `json:"range,omitempty"`
}

// Permission undocumented
type Permission struct {
	Entity
	// GrantedTo undocumented
	GrantedTo *IdentitySet `json:"grantedTo,omitempty"`
	// InheritedFrom undocumented
	InheritedFrom *ItemReference `json:"inheritedFrom,omitempty"`
	// Invitation undocumented
	Invitation *SharingInvitation `json:"invitation,omitempty"`
	// Link undocumented
	Link *SharingLink `json:"link,omitempty"`
	// Roles undocumented
	Roles []string `json:"roles,omitempty"`
	// ShareId undocumented
	ShareId *string `json:"shareId,omitempty"`
}

// Person undocumented
type Person struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// GivenName undocumented
	GivenName *string `json:"givenName,omitempty"`
	// Surname undocumented
	Surname *string `json:"surname,omitempty"`
	// Birthday undocumented
	Birthday *string `json:"birthday,omitempty"`
	// PersonNotes undocumented
	PersonNotes *string `json:"personNotes,omitempty"`
	// IsFavorite undocumented
	IsFavorite *bool `json:"isFavorite,omitempty"`
	// ScoredEmailAddresses undocumented
	ScoredEmailAddresses []ScoredEmailAddress `json:"scoredEmailAddresses,omitempty"`
	// Phones undocumented
	Phones []Phone `json:"phones,omitempty"`
	// PostalAddresses undocumented
	PostalAddresses []Location `json:"postalAddresses,omitempty"`
	// Websites undocumented
	Websites []Website `json:"websites,omitempty"`
	// JobTitle undocumented
	JobTitle *string `json:"jobTitle,omitempty"`
	// CompanyName undocumented
	CompanyName *string `json:"companyName,omitempty"`
	// YomiCompany undocumented
	YomiCompany *string `json:"yomiCompany,omitempty"`
	// Department undocumented
	Department *string `json:"department,omitempty"`
	// OfficeLocation undocumented
	OfficeLocation *string `json:"officeLocation,omitempty"`
	// Profession undocumented
	Profession *string `json:"profession,omitempty"`
	// PersonType undocumented
	PersonType *PersonType `json:"personType,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// ImAddress undocumented
	ImAddress *string `json:"imAddress,omitempty"`
}

// PersonOrGroupColumn undocumented
type PersonOrGroupColumn struct {
	// AllowMultipleSelection undocumented
	AllowMultipleSelection *bool `json:"allowMultipleSelection,omitempty"`
	// ChooseFromType undocumented
	ChooseFromType *string `json:"chooseFromType,omitempty"`
	// DisplayAs undocumented
	DisplayAs *string `json:"displayAs,omitempty"`
}

// PersonType undocumented
type PersonType struct {
	// Class undocumented
	Class *string `json:"class,omitempty"`
	// Subclass undocumented
	Subclass *string `json:"subclass,omitempty"`
}

// Phone undocumented
type Phone struct {
	// Type undocumented
	Type *PhoneType `json:"type,omitempty"`
	// Number undocumented
	Number *string `json:"number,omitempty"`
	// Region undocumented
	Region *string `json:"region,omitempty"`
	// Language undocumented
	Language *string `json:"language,omitempty"`
}

// Photo undocumented
type Photo struct {
	// CameraMake undocumented
	CameraMake *string `json:"cameraMake,omitempty"`
	// CameraModel undocumented
	CameraModel *string `json:"cameraModel,omitempty"`
	// ExposureDenominator undocumented
	ExposureDenominator *float64 `json:"exposureDenominator,omitempty"`
	// ExposureNumerator undocumented
	ExposureNumerator *float64 `json:"exposureNumerator,omitempty"`
	// FNumber undocumented
	FNumber *float64 `json:"fNumber,omitempty"`
	// FocalLength undocumented
	FocalLength *float64 `json:"focalLength,omitempty"`
	// Iso undocumented
	Iso *int `json:"iso,omitempty"`
	// TakenDateTime undocumented
	TakenDateTime *time.Time `json:"takenDateTime,omitempty"`
}

// PhysicalAddress undocumented
type PhysicalAddress struct {
	// Street undocumented
	Street *string `json:"street,omitempty"`
	// City undocumented
	City *string `json:"city,omitempty"`
	// State undocumented
	State *string `json:"state,omitempty"`
	// CountryOrRegion undocumented
	CountryOrRegion *string `json:"countryOrRegion,omitempty"`
	// PostalCode undocumented
	PostalCode *string `json:"postalCode,omitempty"`
}

// Planner undocumented
type Planner struct {
	Entity
}

// PlannerAppliedCategories undocumented
type PlannerAppliedCategories struct {
}

// PlannerAssignedToTaskBoardTaskFormat undocumented
type PlannerAssignedToTaskBoardTaskFormat struct {
	Entity
	// UnassignedOrderHint undocumented
	UnassignedOrderHint *string `json:"unassignedOrderHint,omitempty"`
	// OrderHintsByAssignee undocumented
	OrderHintsByAssignee *PlannerOrderHintsByAssignee `json:"orderHintsByAssignee,omitempty"`
}

// PlannerAssignment undocumented
type PlannerAssignment struct {
	// AssignedBy undocumented
	AssignedBy *IdentitySet `json:"assignedBy,omitempty"`
	// AssignedDateTime undocumented
	AssignedDateTime *time.Time `json:"assignedDateTime,omitempty"`
	// OrderHint undocumented
	OrderHint *string `json:"orderHint,omitempty"`
}

// PlannerAssignments undocumented
type PlannerAssignments struct {
}

// PlannerBucket undocumented
type PlannerBucket struct {
	Entity
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// PlanId undocumented
	PlanId *string `json:"planId,omitempty"`
	// OrderHint undocumented
	OrderHint *string `json:"orderHint,omitempty"`
}

// PlannerBucketTaskBoardTaskFormat undocumented
type PlannerBucketTaskBoardTaskFormat struct {
	Entity
	// OrderHint undocumented
	OrderHint *string `json:"orderHint,omitempty"`
}

// PlannerCategoryDescriptions undocumented
type PlannerCategoryDescriptions struct {
	// Category1 undocumented
	Category1 *string `json:"category1,omitempty"`
	// Category2 undocumented
	Category2 *string `json:"category2,omitempty"`
	// Category3 undocumented
	Category3 *string `json:"category3,omitempty"`
	// Category4 undocumented
	Category4 *string `json:"category4,omitempty"`
	// Category5 undocumented
	Category5 *string `json:"category5,omitempty"`
	// Category6 undocumented
	Category6 *string `json:"category6,omitempty"`
}

// PlannerChecklistItem undocumented
type PlannerChecklistItem struct {
	// IsChecked undocumented
	IsChecked *bool `json:"isChecked,omitempty"`
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// OrderHint undocumented
	OrderHint *string `json:"orderHint,omitempty"`
	// LastModifiedBy undocumented
	LastModifiedBy *IdentitySet `json:"lastModifiedBy,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// PlannerChecklistItems undocumented
type PlannerChecklistItems struct {
}

// PlannerExternalReference undocumented
type PlannerExternalReference struct {
	// Alias undocumented
	Alias *string `json:"alias,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// PreviewPriority undocumented
	PreviewPriority *string `json:"previewPriority,omitempty"`
	// LastModifiedBy undocumented
	LastModifiedBy *IdentitySet `json:"lastModifiedBy,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// PlannerExternalReferences undocumented
type PlannerExternalReferences struct {
}

// PlannerGroup undocumented
type PlannerGroup struct {
	Entity
}

// PlannerOrderHintsByAssignee undocumented
type PlannerOrderHintsByAssignee struct {
}

// PlannerPlan undocumented
type PlannerPlan struct {
	Entity
	// CreatedBy undocumented
	CreatedBy *IdentitySet `json:"createdBy,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Owner undocumented
	Owner *string `json:"owner,omitempty"`
	// Title undocumented
	Title *string `json:"title,omitempty"`
}

// PlannerPlanDetails undocumented
type PlannerPlanDetails struct {
	Entity
	// SharedWith undocumented
	SharedWith *PlannerUserIds `json:"sharedWith,omitempty"`
	// CategoryDescriptions undocumented
	CategoryDescriptions *PlannerCategoryDescriptions `json:"categoryDescriptions,omitempty"`
}

// PlannerProgressTaskBoardTaskFormat undocumented
type PlannerProgressTaskBoardTaskFormat struct {
	Entity
	// OrderHint undocumented
	OrderHint *string `json:"orderHint,omitempty"`
}

// PlannerTask undocumented
type PlannerTask struct {
	Entity
	// CreatedBy undocumented
	CreatedBy *IdentitySet `json:"createdBy,omitempty"`
	// PlanId undocumented
	PlanId *string `json:"planId,omitempty"`
	// BucketId undocumented
	BucketId *string `json:"bucketId,omitempty"`
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// OrderHint undocumented
	OrderHint *string `json:"orderHint,omitempty"`
	// AssigneePriority undocumented
	AssigneePriority *string `json:"assigneePriority,omitempty"`
	// PercentComplete undocumented
	PercentComplete *int `json:"percentComplete,omitempty"`
	// StartDateTime undocumented
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// DueDateTime undocumented
	DueDateTime *time.Time `json:"dueDateTime,omitempty"`
	// HasDescription undocumented
	HasDescription *bool `json:"hasDescription,omitempty"`
	// PreviewType undocumented
	PreviewType *PlannerPreviewType `json:"previewType,omitempty"`
	// CompletedDateTime undocumented
	CompletedDateTime *time.Time `json:"completedDateTime,omitempty"`
	// CompletedBy undocumented
	CompletedBy *IdentitySet `json:"completedBy,omitempty"`
	// ReferenceCount undocumented
	ReferenceCount *int `json:"referenceCount,omitempty"`
	// ChecklistItemCount undocumented
	ChecklistItemCount *int `json:"checklistItemCount,omitempty"`
	// ActiveChecklistItemCount undocumented
	ActiveChecklistItemCount *int `json:"activeChecklistItemCount,omitempty"`
	// AppliedCategories undocumented
	AppliedCategories *PlannerAppliedCategories `json:"appliedCategories,omitempty"`
	// Assignments undocumented
	Assignments *PlannerAssignments `json:"assignments,omitempty"`
	// ConversationThreadId undocumented
	ConversationThreadId *string `json:"conversationThreadId,omitempty"`
}

// PlannerTaskDetails undocumented
type PlannerTaskDetails struct {
	Entity
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// PreviewType undocumented
	PreviewType *PlannerPreviewType `json:"previewType,omitempty"`
	// References undocumented
	References *PlannerExternalReferences `json:"references,omitempty"`
	// Checklist undocumented
	Checklist *PlannerChecklistItems `json:"checklist,omitempty"`
}

// PlannerUser undocumented
type PlannerUser struct {
	Entity
}

// PlannerUserIds undocumented
type PlannerUserIds struct {
}

// PlayPromptOperation undocumented
type PlayPromptOperation struct {
	CommsOperation
}

// Post undocumented
type Post struct {
	OutlookItem
	// Body undocumented
	Body *ItemBody `json:"body,omitempty"`
	// ReceivedDateTime undocumented
	ReceivedDateTime *time.Time `json:"receivedDateTime,omitempty"`
	// HasAttachments undocumented
	HasAttachments *bool `json:"hasAttachments,omitempty"`
	// From undocumented
	From *Recipient `json:"from,omitempty"`
	// Sender undocumented
	Sender *Recipient `json:"sender,omitempty"`
	// ConversationThreadId undocumented
	ConversationThreadId *string `json:"conversationThreadId,omitempty"`
	// NewParticipants undocumented
	NewParticipants []Recipient `json:"newParticipants,omitempty"`
	// ConversationId undocumented
	ConversationId *string `json:"conversationId,omitempty"`
}

// PrivacyProfile undocumented
type PrivacyProfile struct {
	// ContactEmail undocumented
	ContactEmail *string `json:"contactEmail,omitempty"`
	// StatementUrl undocumented
	StatementUrl *string `json:"statementUrl,omitempty"`
}

// Process undocumented
type Process struct {
	// AccountName undocumented
	AccountName *string `json:"accountName,omitempty"`
	// CommandLine undocumented
	CommandLine *string `json:"commandLine,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// FileHash undocumented
	FileHash *FileHash `json:"fileHash,omitempty"`
	// IntegrityLevel undocumented
	IntegrityLevel *ProcessIntegrityLevel `json:"integrityLevel,omitempty"`
	// IsElevated undocumented
	IsElevated *bool `json:"isElevated,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// ParentProcessCreatedDateTime undocumented
	ParentProcessCreatedDateTime *time.Time `json:"parentProcessCreatedDateTime,omitempty"`
	// ParentProcessId undocumented
	ParentProcessId *int `json:"parentProcessId,omitempty"`
	// ParentProcessName undocumented
	ParentProcessName *string `json:"parentProcessName,omitempty"`
	// Path undocumented
	Path *string `json:"path,omitempty"`
	// ProcessId undocumented
	ProcessId *int `json:"processId,omitempty"`
}

// ProfilePhoto undocumented
type ProfilePhoto struct {
	Entity
	// Height undocumented
	Height *int `json:"height,omitempty"`
	// Width undocumented
	Width *int `json:"width,omitempty"`
}

// Prompt undocumented
type Prompt struct {
}

// ProvisionedPlan undocumented
type ProvisionedPlan struct {
	// CapabilityStatus undocumented
	CapabilityStatus *string `json:"capabilityStatus,omitempty"`
	// ProvisioningStatus undocumented
	ProvisioningStatus *string `json:"provisioningStatus,omitempty"`
	// Service undocumented
	Service *string `json:"service,omitempty"`
}

// ProxiedDomain undocumented
type ProxiedDomain struct {
	// IpAddressOrFQDN The IP address or FQDN
	IpAddressOrFQDN *string `json:"ipAddressOrFQDN,omitempty"`
	// Proxy Proxy IP or FQDN
	Proxy *string `json:"proxy,omitempty"`
}

// PublicationFacet undocumented
type PublicationFacet struct {
	// Level undocumented
	Level *string `json:"level,omitempty"`
	// VersionId undocumented
	VersionId *string `json:"versionId,omitempty"`
}

// Quota undocumented
type Quota struct {
	// Deleted undocumented
	Deleted *int `json:"deleted,omitempty"`
	// Remaining undocumented
	Remaining *int `json:"remaining,omitempty"`
	// State undocumented
	State *string `json:"state,omitempty"`
	// Total undocumented
	Total *int `json:"total,omitempty"`
	// Used undocumented
	Used *int `json:"used,omitempty"`
}

// RecentNotebook undocumented
type RecentNotebook struct {
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// LastAccessedTime undocumented
	LastAccessedTime *time.Time `json:"lastAccessedTime,omitempty"`
	// Links undocumented
	Links *RecentNotebookLinks `json:"links,omitempty"`
	// SourceService undocumented
	SourceService *OnenoteSourceService `json:"sourceService,omitempty"`
}

// RecentNotebookLinks undocumented
type RecentNotebookLinks struct {
	// OneNoteClientUrl undocumented
	OneNoteClientUrl *ExternalLink `json:"oneNoteClientUrl,omitempty"`
	// OneNoteWebUrl undocumented
	OneNoteWebUrl *ExternalLink `json:"oneNoteWebUrl,omitempty"`
}

// Recipient undocumented
type Recipient struct {
	// EmailAddress undocumented
	EmailAddress *EmailAddress `json:"emailAddress,omitempty"`
}

// RecordOperation undocumented
type RecordOperation struct {
	CommsOperation
	// RecordingLocation undocumented
	RecordingLocation *string `json:"recordingLocation,omitempty"`
	// RecordingAccessToken undocumented
	RecordingAccessToken *string `json:"recordingAccessToken,omitempty"`
}

// RecurrencePattern undocumented
type RecurrencePattern struct {
	// Type undocumented
	Type *RecurrencePatternType `json:"type,omitempty"`
	// Interval undocumented
	Interval *int `json:"interval,omitempty"`
	// Month undocumented
	Month *int `json:"month,omitempty"`
	// DayOfMonth undocumented
	DayOfMonth *int `json:"dayOfMonth,omitempty"`
	// DaysOfWeek undocumented
	DaysOfWeek []DayOfWeek `json:"daysOfWeek,omitempty"`
	// FirstDayOfWeek undocumented
	FirstDayOfWeek *DayOfWeek `json:"firstDayOfWeek,omitempty"`
	// Index undocumented
	Index *WeekIndex `json:"index,omitempty"`
}

// RecurrenceRange undocumented
type RecurrenceRange struct {
	// Type undocumented
	Type *RecurrenceRangeType `json:"type,omitempty"`
	// StartDate undocumented
	StartDate *time.Time `json:"startDate,omitempty"`
	// EndDate undocumented
	EndDate *time.Time `json:"endDate,omitempty"`
	// RecurrenceTimeZone undocumented
	RecurrenceTimeZone *string `json:"recurrenceTimeZone,omitempty"`
	// NumberOfOccurrences undocumented
	NumberOfOccurrences *int `json:"numberOfOccurrences,omitempty"`
}

// ReferenceAttachment undocumented
type ReferenceAttachment struct {
	Attachment
}

// RegistryKeyState undocumented
type RegistryKeyState struct {
	// Hive undocumented
	Hive *RegistryHive `json:"hive,omitempty"`
	// Key undocumented
	Key *string `json:"key,omitempty"`
	// OldKey undocumented
	OldKey *string `json:"oldKey,omitempty"`
	// OldValueData undocumented
	OldValueData *string `json:"oldValueData,omitempty"`
	// OldValueName undocumented
	OldValueName *string `json:"oldValueName,omitempty"`
	// Operation undocumented
	Operation *RegistryOperation `json:"operation,omitempty"`
	// ProcessId undocumented
	ProcessId *int `json:"processId,omitempty"`
	// ValueData undocumented
	ValueData *string `json:"valueData,omitempty"`
	// ValueName undocumented
	ValueName *string `json:"valueName,omitempty"`
	// ValueType undocumented
	ValueType *RegistryValueType `json:"valueType,omitempty"`
}

// Reminder undocumented
type Reminder struct {
	// EventId undocumented
	EventId *string `json:"eventId,omitempty"`
	// EventStartTime undocumented
	EventStartTime *DateTimeTimeZone `json:"eventStartTime,omitempty"`
	// EventEndTime undocumented
	EventEndTime *DateTimeTimeZone `json:"eventEndTime,omitempty"`
	// ChangeKey undocumented
	ChangeKey *string `json:"changeKey,omitempty"`
	// EventSubject undocumented
	EventSubject *string `json:"eventSubject,omitempty"`
	// EventLocation undocumented
	EventLocation *Location `json:"eventLocation,omitempty"`
	// EventWebLink undocumented
	EventWebLink *string `json:"eventWebLink,omitempty"`
	// ReminderFireTime undocumented
	ReminderFireTime *DateTimeTimeZone `json:"reminderFireTime,omitempty"`
}

// RemoteAssistancePartner remoteAssistPartner resources represent the metadata and status of a given Remote Assistance partner service.
type RemoteAssistancePartner struct {
	Entity
	// DisplayName Display name of the partner.
	DisplayName *string `json:"displayName,omitempty"`
	// OnboardingUrl URL of the partner's onboarding portal, where an administrator can configure their Remote Assistance service.
	OnboardingUrl *string `json:"onboardingUrl,omitempty"`
	// OnboardingStatus TBD
	OnboardingStatus *RemoteAssistanceOnboardingStatus `json:"onboardingStatus,omitempty"`
	// LastConnectionDateTime Timestamp of the last request sent to Intune by the TEM partner.
	LastConnectionDateTime *time.Time `json:"lastConnectionDateTime,omitempty"`
}

// RemoteItem undocumented
type RemoteItem struct {
	// CreatedBy undocumented
	CreatedBy *IdentitySet `json:"createdBy,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// File undocumented
	File *File `json:"file,omitempty"`
	// FileSystemInfo undocumented
	FileSystemInfo *FileSystemInfo `json:"fileSystemInfo,omitempty"`
	// Folder undocumented
	Folder *Folder `json:"folder,omitempty"`
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// LastModifiedBy undocumented
	LastModifiedBy *IdentitySet `json:"lastModifiedBy,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Package undocumented
	Package *Package `json:"package,omitempty"`
	// ParentReference undocumented
	ParentReference *ItemReference `json:"parentReference,omitempty"`
	// Shared undocumented
	Shared *Shared `json:"shared,omitempty"`
	// SharepointIds undocumented
	SharepointIds *SharepointIds `json:"sharepointIds,omitempty"`
	// Size undocumented
	Size *int `json:"size,omitempty"`
	// SpecialFolder undocumented
	SpecialFolder *SpecialFolder `json:"specialFolder,omitempty"`
	// WebDavUrl undocumented
	WebDavUrl *string `json:"webDavUrl,omitempty"`
	// WebUrl undocumented
	WebUrl *string `json:"webUrl,omitempty"`
}

// RemoteLockActionResult undocumented
type RemoteLockActionResult struct {
	DeviceActionResult
	// UnlockPin Pin to unlock the client
	UnlockPin *string `json:"unlockPin,omitempty"`
}

// Report undocumented
type Report struct {
	// Content undocumented
	Content *Stream `json:"content,omitempty"`
}

// ReportRoot The resource that represents an instance of Enrollment Failure Reports.
type ReportRoot struct {
	Entity
}

// ResetPasscodeActionResult undocumented
type ResetPasscodeActionResult struct {
	DeviceActionResult
	// Passcode Newly generated passcode for the device
	Passcode *string `json:"passcode,omitempty"`
}

// ResourceAction undocumented
type ResourceAction struct {
	// AllowedResourceActions Allowed Actions
	AllowedResourceActions []string `json:"allowedResourceActions,omitempty"`
	// NotAllowedResourceActions Not Allowed Actions
	NotAllowedResourceActions []string `json:"notAllowedResourceActions,omitempty"`
}

// ResourceOperation This defines an operation or action that can be performed on an Intune resource (or entity).  Common operations are Read, Delete, Update or Create.  These operations provide basic management of the underlying Intune resource itself.  In some cases, an Intune resource can have operations that are used by the resource to take action in combination with other resources.  For example, the Assign operation is used to assign a MobileApp resource to an AAD security group.  Resource operations cannot be modified for built-in roles.This defines an operation or action that can be performed on an Intune resource (or entity).  Common operations are Get, List, Delete, Update or Create.  These operations provide basic management of the underlying Intune resource itself.  In some cases, an Intune resource can have operations that are used by the resource to take action in combination with other resources.  For example, the "Assign" operation is used to assign a MobileApp resource to an AAD security group.  Resource operations cannot be modified for built-in roles.
type ResourceOperation struct {
	Entity
	// ResourceName Name of the Resource this operation is performed on.
	ResourceName *string `json:"resourceName,omitempty"`
	// ActionName Type of action this operation is going to perform. The actionName should be concise and limited to as few words as possible.
	ActionName *string `json:"actionName,omitempty"`
	// Description Description of the resource operation. The description is used in mouse-over text for the operation when shown in the Azure Portal.
	Description *string `json:"description,omitempty"`
}

// ResourceReference undocumented
type ResourceReference struct {
	// WebUrl undocumented
	WebUrl *string `json:"webUrl,omitempty"`
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
}

// ResourceVisualization undocumented
type ResourceVisualization struct {
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// MediaType undocumented
	MediaType *string `json:"mediaType,omitempty"`
	// PreviewImageUrl undocumented
	PreviewImageUrl *string `json:"previewImageUrl,omitempty"`
	// PreviewText undocumented
	PreviewText *string `json:"previewText,omitempty"`
	// ContainerWebUrl undocumented
	ContainerWebUrl *string `json:"containerWebUrl,omitempty"`
	// ContainerDisplayName undocumented
	ContainerDisplayName *string `json:"containerDisplayName,omitempty"`
	// ContainerType undocumented
	ContainerType *string `json:"containerType,omitempty"`
}

// ResponseStatus undocumented
type ResponseStatus struct {
	// Response undocumented
	Response *ResponseType `json:"response,omitempty"`
	// Time undocumented
	Time *time.Time `json:"time,omitempty"`
}

// RestrictedSignIn undocumented
type RestrictedSignIn struct {
	SignIn
	// TargetTenantId undocumented
	TargetTenantId *UUID `json:"targetTenantId,omitempty"`
}

// ResultInfo undocumented
type ResultInfo struct {
	// Code undocumented
	Code *int `json:"code,omitempty"`
	// Subcode undocumented
	Subcode *int `json:"subcode,omitempty"`
	// Message undocumented
	Message *string `json:"message,omitempty"`
}

// RgbColor undocumented
type RgbColor struct {
	// R Red value
	R *byte `json:"r,omitempty"`
	// G Green value
	G *byte `json:"g,omitempty"`
	// B Blue value
	B *byte `json:"b,omitempty"`
}

// RoleAssignment The Role Assignment resource. Role assignments tie together a role definition with members and scopes. There can be one or more role assignments per role. This applies to custom and built-in roles.
type RoleAssignment struct {
	Entity
	// DisplayName The display or friendly name of the role Assignment.
	DisplayName *string `json:"displayName,omitempty"`
	// Description Description of the Role Assignment.
	Description *string `json:"description,omitempty"`
	// ResourceScopes List of ids of role scope member security groups.  These are IDs from Azure Active Directory.
	ResourceScopes []string `json:"resourceScopes,omitempty"`
}

// RoleDefinition The Role Definition resource. The role definition is the foundation of role based access in Intune. The role combines an Intune resource such as a Mobile App and associated role permissions such as Create or Read for the resource. There are two types of roles, built-in and custom. Built-in roles cannot be modified. Both built-in roles and custom roles must have assignments to be enforced. Create custom roles if you want to define a role that allows any of the available resources and role permissions to be combined into a single role.
type RoleDefinition struct {
	Entity
	// DisplayName Display Name of the Role definition.
	DisplayName *string `json:"displayName,omitempty"`
	// Description Description of the Role definition.
	Description *string `json:"description,omitempty"`
	// RolePermissions List of Role Permissions this role is allowed to perform. These must match the actionName that is defined as part of the rolePermission.
	RolePermissions []RolePermission `json:"rolePermissions,omitempty"`
	// IsBuiltIn Type of Role. Set to True if it is built-in, or set to False if it is a custom role definition.
	IsBuiltIn *bool `json:"isBuiltIn,omitempty"`
}

// RolePermission undocumented
type RolePermission struct {
	// ResourceActions Actions
	ResourceActions []ResourceAction `json:"resourceActions,omitempty"`
}

// Root undocumented
type Root struct {
}

// ScheduleInformation undocumented
type ScheduleInformation struct {
	// ScheduleId undocumented
	ScheduleId *string `json:"scheduleId,omitempty"`
	// ScheduleItems undocumented
	ScheduleItems []ScheduleItem `json:"scheduleItems,omitempty"`
	// AvailabilityView undocumented
	AvailabilityView *string `json:"availabilityView,omitempty"`
	// Error undocumented
	Error *FreeBusyError `json:"error,omitempty"`
	// WorkingHours undocumented
	WorkingHours *WorkingHours `json:"workingHours,omitempty"`
}

// ScheduleItem undocumented
type ScheduleItem struct {
	// Start undocumented
	Start *DateTimeTimeZone `json:"start,omitempty"`
	// End undocumented
	End *DateTimeTimeZone `json:"end,omitempty"`
	// IsPrivate undocumented
	IsPrivate *bool `json:"isPrivate,omitempty"`
	// Status undocumented
	Status *FreeBusyStatus `json:"status,omitempty"`
	// Subject undocumented
	Subject *string `json:"subject,omitempty"`
	// Location undocumented
	Location *string `json:"location,omitempty"`
}

// SchemaExtension undocumented
type SchemaExtension struct {
	Entity
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// TargetTypes undocumented
	TargetTypes []string `json:"targetTypes,omitempty"`
	// Properties undocumented
	Properties []ExtensionSchemaProperty `json:"properties,omitempty"`
	// Status undocumented
	Status *string `json:"status,omitempty"`
	// Owner undocumented
	Owner *string `json:"owner,omitempty"`
}

// ScoredEmailAddress undocumented
type ScoredEmailAddress struct {
	// Address undocumented
	Address *string `json:"address,omitempty"`
	// RelevanceScore undocumented
	RelevanceScore *float64 `json:"relevanceScore,omitempty"`
	// SelectionLikelihood undocumented
	SelectionLikelihood *SelectionLikelihoodInfo `json:"selectionLikelihood,omitempty"`
	// ItemId undocumented
	ItemId *string `json:"itemId,omitempty"`
}

// SearchResult undocumented
type SearchResult struct {
	// OnClickTelemetryUrl undocumented
	OnClickTelemetryUrl *string `json:"onClickTelemetryUrl,omitempty"`
}

// SectionGroup undocumented
type SectionGroup struct {
	OnenoteEntityHierarchyModel
	// SectionsUrl undocumented
	SectionsUrl *string `json:"sectionsUrl,omitempty"`
	// SectionGroupsUrl undocumented
	SectionGroupsUrl *string `json:"sectionGroupsUrl,omitempty"`
}

// SectionLinks undocumented
type SectionLinks struct {
	// OneNoteClientUrl undocumented
	OneNoteClientUrl *ExternalLink `json:"oneNoteClientUrl,omitempty"`
	// OneNoteWebUrl undocumented
	OneNoteWebUrl *ExternalLink `json:"oneNoteWebUrl,omitempty"`
}

// SecureScore undocumented
type SecureScore struct {
	Entity
	// ActiveUserCount undocumented
	ActiveUserCount *int `json:"activeUserCount,omitempty"`
	// AverageComparativeScores undocumented
	AverageComparativeScores []AverageComparativeScore `json:"averageComparativeScores,omitempty"`
	// AzureTenantId undocumented
	AzureTenantId *string `json:"azureTenantId,omitempty"`
	// ControlScores undocumented
	ControlScores []ControlScore `json:"controlScores,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// CurrentScore undocumented
	CurrentScore *float64 `json:"currentScore,omitempty"`
	// EnabledServices undocumented
	EnabledServices []string `json:"enabledServices,omitempty"`
	// LicensedUserCount undocumented
	LicensedUserCount *int `json:"licensedUserCount,omitempty"`
	// MaxScore undocumented
	MaxScore *float64 `json:"maxScore,omitempty"`
	// VendorInformation undocumented
	VendorInformation *SecurityVendorInformation `json:"vendorInformation,omitempty"`
}

// SecureScoreControlProfile undocumented
type SecureScoreControlProfile struct {
	Entity
	// ActionType undocumented
	ActionType *string `json:"actionType,omitempty"`
	// ActionUrl undocumented
	ActionUrl *string `json:"actionUrl,omitempty"`
	// AzureTenantId undocumented
	AzureTenantId *string `json:"azureTenantId,omitempty"`
	// ComplianceInformation undocumented
	ComplianceInformation []ComplianceInformation `json:"complianceInformation,omitempty"`
	// ControlCategory undocumented
	ControlCategory *string `json:"controlCategory,omitempty"`
	// ControlStateUpdates undocumented
	ControlStateUpdates []SecureScoreControlStateUpdate `json:"controlStateUpdates,omitempty"`
	// Deprecated undocumented
	Deprecated *bool `json:"deprecated,omitempty"`
	// ImplementationCost undocumented
	ImplementationCost *string `json:"implementationCost,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// MaxScore undocumented
	MaxScore *float64 `json:"maxScore,omitempty"`
	// Rank undocumented
	Rank *int `json:"rank,omitempty"`
	// Remediation undocumented
	Remediation *string `json:"remediation,omitempty"`
	// RemediationImpact undocumented
	RemediationImpact *string `json:"remediationImpact,omitempty"`
	// Service undocumented
	Service *string `json:"service,omitempty"`
	// Threats undocumented
	Threats []string `json:"threats,omitempty"`
	// Tier undocumented
	Tier *string `json:"tier,omitempty"`
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// UserImpact undocumented
	UserImpact *string `json:"userImpact,omitempty"`
	// VendorInformation undocumented
	VendorInformation *SecurityVendorInformation `json:"vendorInformation,omitempty"`
}

// SecureScoreControlStateUpdate undocumented
type SecureScoreControlStateUpdate struct {
	// AssignedTo undocumented
	AssignedTo *string `json:"assignedTo,omitempty"`
	// Comment undocumented
	Comment *string `json:"comment,omitempty"`
	// State undocumented
	State *string `json:"state,omitempty"`
	// UpdatedBy undocumented
	UpdatedBy *string `json:"updatedBy,omitempty"`
	// UpdatedDateTime undocumented
	UpdatedDateTime *time.Time `json:"updatedDateTime,omitempty"`
}

// Security undocumented
type Security struct {
	Entity
}

// SecurityVendorInformation undocumented
type SecurityVendorInformation struct {
	// Provider undocumented
	Provider *string `json:"provider,omitempty"`
	// ProviderVersion undocumented
	ProviderVersion *string `json:"providerVersion,omitempty"`
	// SubProvider undocumented
	SubProvider *string `json:"subProvider,omitempty"`
	// Vendor undocumented
	Vendor *string `json:"vendor,omitempty"`
}

// ServiceHostedMediaConfig undocumented
type ServiceHostedMediaConfig struct {
	MediaConfig
	// PreFetchMedia undocumented
	PreFetchMedia []MediaInfo `json:"preFetchMedia,omitempty"`
}

// ServicePlanInfo undocumented
type ServicePlanInfo struct {
	// ServicePlanId undocumented
	ServicePlanId *UUID `json:"servicePlanId,omitempty"`
	// ServicePlanName undocumented
	ServicePlanName *string `json:"servicePlanName,omitempty"`
	// ProvisioningStatus undocumented
	ProvisioningStatus *string `json:"provisioningStatus,omitempty"`
	// AppliesTo undocumented
	AppliesTo *string `json:"appliesTo,omitempty"`
}

// SettingSource undocumented
type SettingSource struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// SettingStateDeviceSummary Device Compilance Policy and Configuration for a Setting State summary
type SettingStateDeviceSummary struct {
	Entity
	// SettingName Name of the setting
	SettingName *string `json:"settingName,omitempty"`
	// InstancePath Name of the InstancePath for the setting
	InstancePath *string `json:"instancePath,omitempty"`
	// UnknownDeviceCount Device Unkown count for the setting
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
	// NotApplicableDeviceCount Device Not Applicable count for the setting
	NotApplicableDeviceCount *int `json:"notApplicableDeviceCount,omitempty"`
	// CompliantDeviceCount Device Compliant count for the setting
	CompliantDeviceCount *int `json:"compliantDeviceCount,omitempty"`
	// RemediatedDeviceCount Device Compliant count for the setting
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
	// NonCompliantDeviceCount Device NonCompliant count for the setting
	NonCompliantDeviceCount *int `json:"nonCompliantDeviceCount,omitempty"`
	// ErrorDeviceCount Device error count for the setting
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// ConflictDeviceCount Device conflict error count for the setting
	ConflictDeviceCount *int `json:"conflictDeviceCount,omitempty"`
}

// SettingTemplateValue undocumented
type SettingTemplateValue struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// DefaultValue undocumented
	DefaultValue *string `json:"defaultValue,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
}

// SettingValue undocumented
type SettingValue struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Value undocumented
	Value *string `json:"value,omitempty"`
}

// Shared undocumented
type Shared struct {
	// Owner undocumented
	Owner *IdentitySet `json:"owner,omitempty"`
	// Scope undocumented
	Scope *string `json:"scope,omitempty"`
	// SharedBy undocumented
	SharedBy *IdentitySet `json:"sharedBy,omitempty"`
	// SharedDateTime undocumented
	SharedDateTime *time.Time `json:"sharedDateTime,omitempty"`
}

// SharedDriveItem undocumented
type SharedDriveItem struct {
	BaseItem
	// Owner undocumented
	Owner *IdentitySet `json:"owner,omitempty"`
}

// SharedInsight undocumented
type SharedInsight struct {
	Entity
	// LastShared undocumented
	LastShared *SharingDetail `json:"lastShared,omitempty"`
	// SharingHistory undocumented
	SharingHistory []SharingDetail `json:"sharingHistory,omitempty"`
	// ResourceVisualization undocumented
	ResourceVisualization *ResourceVisualization `json:"resourceVisualization,omitempty"`
	// ResourceReference undocumented
	ResourceReference *ResourceReference `json:"resourceReference,omitempty"`
}

// SharedPCAccountManagerPolicy undocumented
type SharedPCAccountManagerPolicy struct {
	// AccountDeletionPolicy Configures when accounts are deleted.
	AccountDeletionPolicy *SharedPCAccountDeletionPolicyType `json:"accountDeletionPolicy,omitempty"`
	// CacheAccountsAboveDiskFreePercentage Sets the percentage of available disk space a PC should have before it stops deleting cached shared PC accounts. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100
	CacheAccountsAboveDiskFreePercentage *int `json:"cacheAccountsAboveDiskFreePercentage,omitempty"`
	// InactiveThresholdDays Specifies when the accounts will start being deleted when they have not been logged on during the specified period, given as number of days. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold.
	InactiveThresholdDays *int `json:"inactiveThresholdDays,omitempty"`
	// RemoveAccountsBelowDiskFreePercentage Sets the percentage of disk space remaining on a PC before cached accounts will be deleted to free disk space. Accounts that have been inactive the longest will be deleted first. Only applies when AccountDeletionPolicy is DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100
	RemoveAccountsBelowDiskFreePercentage *int `json:"removeAccountsBelowDiskFreePercentage,omitempty"`
}

// SharedPCConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the sharedPCConfiguration resource.
type SharedPCConfiguration struct {
	DeviceConfiguration
	// AccountManagerPolicy Specifies how accounts are managed on a shared PC. Only applies when disableAccountManager is false.
	AccountManagerPolicy *SharedPCAccountManagerPolicy `json:"accountManagerPolicy,omitempty"`
	// AllowedAccounts Indicates which type of accounts are allowed to use on a shared PC.
	AllowedAccounts *SharedPCAllowedAccountType `json:"allowedAccounts,omitempty"`
	// AllowLocalStorage Specifies whether local storage is allowed on a shared PC.
	AllowLocalStorage *bool `json:"allowLocalStorage,omitempty"`
	// DisableAccountManager Disables the account manager for shared PC mode.
	DisableAccountManager *bool `json:"disableAccountManager,omitempty"`
	// DisableEduPolicies Specifies whether the default shared PC education environment policies should be disabled. For Windows 10 RS2 and later, this policy will be applied without setting Enabled to true.
	DisableEduPolicies *bool `json:"disableEduPolicies,omitempty"`
	// DisablePowerPolicies Specifies whether the default shared PC power policies should be disabled.
	DisablePowerPolicies *bool `json:"disablePowerPolicies,omitempty"`
	// DisableSignInOnResume Disables the requirement to sign in whenever the device wakes up from sleep mode.
	DisableSignInOnResume *bool `json:"disableSignInOnResume,omitempty"`
	// Enabled Enables shared PC mode and applies the shared pc policies.
	Enabled *bool `json:"enabled,omitempty"`
	// IdleTimeBeforeSleepInSeconds Specifies the time in seconds that a device must sit idle before the PC goes to sleep. Setting this value to 0 prevents the sleep timeout from occurring.
	IdleTimeBeforeSleepInSeconds *int `json:"idleTimeBeforeSleepInSeconds,omitempty"`
	// KioskAppDisplayName Specifies the display text for the account shown on the sign-in screen which launches the app specified by SetKioskAppUserModelId. Only applies when KioskAppUserModelId is set.
	KioskAppDisplayName *string `json:"kioskAppDisplayName,omitempty"`
	// KioskAppUserModelId Specifies the application user model ID of the app to use with assigned access.
	KioskAppUserModelId *string `json:"kioskAppUserModelId,omitempty"`
	// MaintenanceStartTime Specifies the daily start time of maintenance hour.
	MaintenanceStartTime *time.Time `json:"maintenanceStartTime,omitempty"`
}

// SharepointIds undocumented
type SharepointIds struct {
	// ListId undocumented
	ListId *string `json:"listId,omitempty"`
	// ListItemId undocumented
	ListItemId *string `json:"listItemId,omitempty"`
	// ListItemUniqueId undocumented
	ListItemUniqueId *string `json:"listItemUniqueId,omitempty"`
	// SiteId undocumented
	SiteId *string `json:"siteId,omitempty"`
	// SiteUrl undocumented
	SiteUrl *string `json:"siteUrl,omitempty"`
	// WebId undocumented
	WebId *string `json:"webId,omitempty"`
}

// SharingDetail undocumented
type SharingDetail struct {
	// SharedBy undocumented
	SharedBy *InsightIdentity `json:"sharedBy,omitempty"`
	// SharedDateTime undocumented
	SharedDateTime *time.Time `json:"sharedDateTime,omitempty"`
	// SharingSubject undocumented
	SharingSubject *string `json:"sharingSubject,omitempty"`
	// SharingType undocumented
	SharingType *string `json:"sharingType,omitempty"`
	// SharingReference undocumented
	SharingReference *ResourceReference `json:"sharingReference,omitempty"`
}

// SharingInvitation undocumented
type SharingInvitation struct {
	// Email undocumented
	Email *string `json:"email,omitempty"`
	// InvitedBy undocumented
	InvitedBy *IdentitySet `json:"invitedBy,omitempty"`
	// RedeemedBy undocumented
	RedeemedBy *string `json:"redeemedBy,omitempty"`
	// SignInRequired undocumented
	SignInRequired *bool `json:"signInRequired,omitempty"`
}

// SharingLink undocumented
type SharingLink struct {
	// Application undocumented
	Application *Identity `json:"application,omitempty"`
	// Scope undocumented
	Scope *string `json:"scope,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// WebUrl undocumented
	WebUrl *string `json:"webUrl,omitempty"`
}

// SignIn undocumented
type SignIn struct {
	Entity
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// UserDisplayName undocumented
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// UserId undocumented
	UserId *string `json:"userId,omitempty"`
	// AppId undocumented
	AppId *string `json:"appId,omitempty"`
	// AppDisplayName undocumented
	AppDisplayName *string `json:"appDisplayName,omitempty"`
	// IpAddress undocumented
	IpAddress *string `json:"ipAddress,omitempty"`
	// Status undocumented
	Status *SignInStatus `json:"status,omitempty"`
	// ClientAppUsed undocumented
	ClientAppUsed *string `json:"clientAppUsed,omitempty"`
	// DeviceDetail undocumented
	DeviceDetail *DeviceDetail `json:"deviceDetail,omitempty"`
	// Location undocumented
	Location *SignInLocation `json:"location,omitempty"`
	// CorrelationId undocumented
	CorrelationId *string `json:"correlationId,omitempty"`
	// ConditionalAccessStatus undocumented
	ConditionalAccessStatus *ConditionalAccessStatus `json:"conditionalAccessStatus,omitempty"`
	// AppliedConditionalAccessPolicies undocumented
	AppliedConditionalAccessPolicies []AppliedConditionalAccessPolicy `json:"appliedConditionalAccessPolicies,omitempty"`
	// IsInteractive undocumented
	IsInteractive *bool `json:"isInteractive,omitempty"`
	// RiskDetail undocumented
	RiskDetail *RiskDetail `json:"riskDetail,omitempty"`
	// RiskLevelAggregated undocumented
	RiskLevelAggregated *RiskLevel `json:"riskLevelAggregated,omitempty"`
	// RiskLevelDuringSignIn undocumented
	RiskLevelDuringSignIn *RiskLevel `json:"riskLevelDuringSignIn,omitempty"`
	// RiskState undocumented
	RiskState *RiskState `json:"riskState,omitempty"`
	// RiskEventTypes undocumented
	RiskEventTypes []RiskEventType `json:"riskEventTypes,omitempty"`
	// ResourceDisplayName undocumented
	ResourceDisplayName *string `json:"resourceDisplayName,omitempty"`
	// ResourceId undocumented
	ResourceId *string `json:"resourceId,omitempty"`
}

// SignInLocation undocumented
type SignInLocation struct {
	// City undocumented
	City *string `json:"city,omitempty"`
	// State undocumented
	State *string `json:"state,omitempty"`
	// CountryOrRegion undocumented
	CountryOrRegion *string `json:"countryOrRegion,omitempty"`
	// GeoCoordinates undocumented
	GeoCoordinates *GeoCoordinates `json:"geoCoordinates,omitempty"`
}

// SignInStatus undocumented
type SignInStatus struct {
	// ErrorCode undocumented
	ErrorCode *int `json:"errorCode,omitempty"`
	// FailureReason undocumented
	FailureReason *string `json:"failureReason,omitempty"`
	// AdditionalDetails undocumented
	AdditionalDetails *string `json:"additionalDetails,omitempty"`
}

// SingleValueLegacyExtendedProperty undocumented
type SingleValueLegacyExtendedProperty struct {
	Entity
	// Value undocumented
	Value *string `json:"value,omitempty"`
}

// Site undocumented
type Site struct {
	BaseItem
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Root undocumented
	Root *Root `json:"root,omitempty"`
	// SharepointIds undocumented
	SharepointIds *SharepointIds `json:"sharepointIds,omitempty"`
	// SiteCollection undocumented
	SiteCollection *SiteCollection `json:"siteCollection,omitempty"`
}

// SiteCollection undocumented
type SiteCollection struct {
	// Hostname undocumented
	Hostname *string `json:"hostname,omitempty"`
	// Root undocumented
	Root *Root `json:"root,omitempty"`
}

// SizeRange undocumented
type SizeRange struct {
	// MinimumSize undocumented
	MinimumSize *int `json:"minimumSize,omitempty"`
	// MaximumSize undocumented
	MaximumSize *int `json:"maximumSize,omitempty"`
}

// SoftwareUpdateStatusSummary undocumented
type SoftwareUpdateStatusSummary struct {
	Entity
	// DisplayName The name of the policy.
	DisplayName *string `json:"displayName,omitempty"`
	// CompliantDeviceCount Number of compliant devices.
	CompliantDeviceCount *int `json:"compliantDeviceCount,omitempty"`
	// NonCompliantDeviceCount Number of non compliant devices.
	NonCompliantDeviceCount *int `json:"nonCompliantDeviceCount,omitempty"`
	// RemediatedDeviceCount Number of remediated devices.
	RemediatedDeviceCount *int `json:"remediatedDeviceCount,omitempty"`
	// ErrorDeviceCount Number of devices had error.
	ErrorDeviceCount *int `json:"errorDeviceCount,omitempty"`
	// UnknownDeviceCount Number of unknown devices.
	UnknownDeviceCount *int `json:"unknownDeviceCount,omitempty"`
	// ConflictDeviceCount Number of conflict devices.
	ConflictDeviceCount *int `json:"conflictDeviceCount,omitempty"`
	// NotApplicableDeviceCount Number of not applicable devices.
	NotApplicableDeviceCount *int `json:"notApplicableDeviceCount,omitempty"`
	// CompliantUserCount Number of compliant users.
	CompliantUserCount *int `json:"compliantUserCount,omitempty"`
	// NonCompliantUserCount Number of non compliant users.
	NonCompliantUserCount *int `json:"nonCompliantUserCount,omitempty"`
	// RemediatedUserCount Number of remediated users.
	RemediatedUserCount *int `json:"remediatedUserCount,omitempty"`
	// ErrorUserCount Number of users had error.
	ErrorUserCount *int `json:"errorUserCount,omitempty"`
	// UnknownUserCount Number of unknown users.
	UnknownUserCount *int `json:"unknownUserCount,omitempty"`
	// ConflictUserCount Number of conflict users.
	ConflictUserCount *int `json:"conflictUserCount,omitempty"`
	// NotApplicableUserCount Number of not applicable users.
	NotApplicableUserCount *int `json:"notApplicableUserCount,omitempty"`
}

// SpecialFolder undocumented
type SpecialFolder struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

// StandardTimeZoneOffset undocumented
type StandardTimeZoneOffset struct {
	// Time undocumented
	Time *time.Time `json:"time,omitempty"`
	// DayOccurrence undocumented
	DayOccurrence *int `json:"dayOccurrence,omitempty"`
	// DayOfWeek undocumented
	DayOfWeek *DayOfWeek `json:"dayOfWeek,omitempty"`
	// Month undocumented
	Month *int `json:"month,omitempty"`
	// Year undocumented
	Year *int `json:"year,omitempty"`
}

// SubscribeToToneOperation undocumented
type SubscribeToToneOperation struct {
	CommsOperation
}

// SubscribedSku undocumented
type SubscribedSku struct {
	Entity
	// CapabilityStatus undocumented
	CapabilityStatus *string `json:"capabilityStatus,omitempty"`
	// ConsumedUnits undocumented
	ConsumedUnits *int `json:"consumedUnits,omitempty"`
	// PrepaidUnits undocumented
	PrepaidUnits *LicenseUnitsDetail `json:"prepaidUnits,omitempty"`
	// ServicePlans undocumented
	ServicePlans []ServicePlanInfo `json:"servicePlans,omitempty"`
	// SkuId undocumented
	SkuId *UUID `json:"skuId,omitempty"`
	// SkuPartNumber undocumented
	SkuPartNumber *string `json:"skuPartNumber,omitempty"`
	// AppliesTo undocumented
	AppliesTo *string `json:"appliesTo,omitempty"`
}

// Subscription undocumented
type Subscription struct {
	Entity
	// Resource undocumented
	Resource *string `json:"resource,omitempty"`
	// ChangeType undocumented
	ChangeType *string `json:"changeType,omitempty"`
	// ClientState undocumented
	ClientState *string `json:"clientState,omitempty"`
	// NotificationUrl undocumented
	NotificationUrl *string `json:"notificationUrl,omitempty"`
	// ExpirationDateTime undocumented
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// ApplicationId undocumented
	ApplicationId *string `json:"applicationId,omitempty"`
	// CreatorId undocumented
	CreatorId *string `json:"creatorId,omitempty"`
}

// SystemFacet undocumented
type SystemFacet struct {
}

// TargetResource undocumented
type TargetResource struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// GroupType undocumented
	GroupType *GroupType `json:"groupType,omitempty"`
	// ModifiedProperties undocumented
	ModifiedProperties []ModifiedProperty `json:"modifiedProperties,omitempty"`
}

// TargetedManagedAppConfiguration Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
type TargetedManagedAppConfiguration struct {
	ManagedAppConfiguration
	// DeployedAppCount Count of apps to which the current policy is deployed.
	DeployedAppCount *int `json:"deployedAppCount,omitempty"`
	// IsAssigned Indicates if the policy is deployed to any inclusion groups or not.
	IsAssigned *bool `json:"isAssigned,omitempty"`
}

// TargetedManagedAppPolicyAssignment The type for deployment of groups or apps.
type TargetedManagedAppPolicyAssignment struct {
	Entity
	// Target Identifier for deployment of a group or app
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// TargetedManagedAppProtection Policy used to configure detailed management settings targeted to specific security groups
type TargetedManagedAppProtection struct {
	ManagedAppProtection
	// IsAssigned Indicates if the policy is deployed to any inclusion groups or not.
	IsAssigned *bool `json:"isAssigned,omitempty"`
}

// Team undocumented
type Team struct {
	Entity
	// WebUrl undocumented
	WebUrl *string `json:"webUrl,omitempty"`
	// MemberSettings undocumented
	MemberSettings *TeamMemberSettings `json:"memberSettings,omitempty"`
	// GuestSettings undocumented
	GuestSettings *TeamGuestSettings `json:"guestSettings,omitempty"`
	// MessagingSettings undocumented
	MessagingSettings *TeamMessagingSettings `json:"messagingSettings,omitempty"`
	// FunSettings undocumented
	FunSettings *TeamFunSettings `json:"funSettings,omitempty"`
	// IsArchived undocumented
	IsArchived *bool `json:"isArchived,omitempty"`
}

// TeamClassSettings undocumented
type TeamClassSettings struct {
	// NotifyGuardiansAboutAssignments undocumented
	NotifyGuardiansAboutAssignments *bool `json:"notifyGuardiansAboutAssignments,omitempty"`
}

// TeamFunSettings undocumented
type TeamFunSettings struct {
	// AllowGiphy undocumented
	AllowGiphy *bool `json:"allowGiphy,omitempty"`
	// GiphyContentRating undocumented
	GiphyContentRating *GiphyRatingType `json:"giphyContentRating,omitempty"`
	// AllowStickersAndMemes undocumented
	AllowStickersAndMemes *bool `json:"allowStickersAndMemes,omitempty"`
	// AllowCustomMemes undocumented
	AllowCustomMemes *bool `json:"allowCustomMemes,omitempty"`
}

// TeamGuestSettings undocumented
type TeamGuestSettings struct {
	// AllowCreateUpdateChannels undocumented
	AllowCreateUpdateChannels *bool `json:"allowCreateUpdateChannels,omitempty"`
	// AllowDeleteChannels undocumented
	AllowDeleteChannels *bool `json:"allowDeleteChannels,omitempty"`
}

// TeamMemberSettings undocumented
type TeamMemberSettings struct {
	// AllowCreateUpdateChannels undocumented
	AllowCreateUpdateChannels *bool `json:"allowCreateUpdateChannels,omitempty"`
	// AllowDeleteChannels undocumented
	AllowDeleteChannels *bool `json:"allowDeleteChannels,omitempty"`
	// AllowAddRemoveApps undocumented
	AllowAddRemoveApps *bool `json:"allowAddRemoveApps,omitempty"`
	// AllowCreateUpdateRemoveTabs undocumented
	AllowCreateUpdateRemoveTabs *bool `json:"allowCreateUpdateRemoveTabs,omitempty"`
	// AllowCreateUpdateRemoveConnectors undocumented
	AllowCreateUpdateRemoveConnectors *bool `json:"allowCreateUpdateRemoveConnectors,omitempty"`
}

// TeamMessagingSettings undocumented
type TeamMessagingSettings struct {
	// AllowUserEditMessages undocumented
	AllowUserEditMessages *bool `json:"allowUserEditMessages,omitempty"`
	// AllowUserDeleteMessages undocumented
	AllowUserDeleteMessages *bool `json:"allowUserDeleteMessages,omitempty"`
	// AllowOwnerDeleteMessages undocumented
	AllowOwnerDeleteMessages *bool `json:"allowOwnerDeleteMessages,omitempty"`
	// AllowTeamMentions undocumented
	AllowTeamMentions *bool `json:"allowTeamMentions,omitempty"`
	// AllowChannelMentions undocumented
	AllowChannelMentions *bool `json:"allowChannelMentions,omitempty"`
}

// TeamsApp undocumented
type TeamsApp struct {
	Entity
	// ExternalId undocumented
	ExternalId *string `json:"externalId,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// DistributionMethod undocumented
	DistributionMethod *TeamsAppDistributionMethod `json:"distributionMethod,omitempty"`
}

// TeamsAppDefinition undocumented
type TeamsAppDefinition struct {
	Entity
	// TeamsAppId undocumented
	TeamsAppId *string `json:"teamsAppId,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Version undocumented
	Version *string `json:"version,omitempty"`
}

// TeamsAppInstallation undocumented
type TeamsAppInstallation struct {
	Entity
}

// TeamsAsyncOperation undocumented
type TeamsAsyncOperation struct {
	Entity
	// OperationType undocumented
	OperationType *TeamsAsyncOperationType `json:"operationType,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Status undocumented
	Status *TeamsAsyncOperationStatus `json:"status,omitempty"`
	// LastActionDateTime undocumented
	LastActionDateTime *time.Time `json:"lastActionDateTime,omitempty"`
	// AttemptsCount undocumented
	AttemptsCount *int `json:"attemptsCount,omitempty"`
	// TargetResourceId undocumented
	TargetResourceId *string `json:"targetResourceId,omitempty"`
	// TargetResourceLocation undocumented
	TargetResourceLocation *string `json:"targetResourceLocation,omitempty"`
	// Error undocumented
	Error *OperationError `json:"error,omitempty"`
}

// TeamsTab undocumented
type TeamsTab struct {
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// WebUrl undocumented
	WebUrl *string `json:"webUrl,omitempty"`
	// Configuration undocumented
	Configuration *TeamsTabConfiguration `json:"configuration,omitempty"`
}

// TeamsTabConfiguration undocumented
type TeamsTabConfiguration struct {
	// EntityId undocumented
	EntityId *string `json:"entityId,omitempty"`
	// ContentUrl undocumented
	ContentUrl *string `json:"contentUrl,omitempty"`
	// RemoveUrl undocumented
	RemoveUrl *string `json:"removeUrl,omitempty"`
	// WebsiteUrl undocumented
	WebsiteUrl *string `json:"websiteUrl,omitempty"`
}

// TelecomExpenseManagementPartner telecomExpenseManagementPartner resources represent the metadata and status of a given TEM service. Once your organization has onboarded with a partner, the partner can be enabled or disabled to switch TEM functionality on or off.
type TelecomExpenseManagementPartner struct {
	Entity
	// DisplayName Display name of the TEM partner.
	DisplayName *string `json:"displayName,omitempty"`
	// Url URL of the TEM partner's administrative control panel, where an administrator can configure their TEM service.
	Url *string `json:"url,omitempty"`
	// AppAuthorized Whether the partner's AAD app has been authorized to access Intune.
	AppAuthorized *bool `json:"appAuthorized,omitempty"`
	// Enabled Whether Intune's connection to the TEM service is currently enabled or disabled.
	Enabled *bool `json:"enabled,omitempty"`
	// LastConnectionDateTime Timestamp of the last request sent to Intune by the TEM partner.
	LastConnectionDateTime *time.Time `json:"lastConnectionDateTime,omitempty"`
}

// TermsAndConditions A termsAndConditions entity represents the metadata and contents of a given Terms and Conditions (T&C) policy. T&C policies’ contents are presented to users upon their first attempt to enroll into Intune and subsequently upon edits where an administrator has required re-acceptance. They enable administrators to communicate the provisions to which a user must agree in order to have devices enrolled into Intune.
type TermsAndConditions struct {
	Entity
	// CreatedDateTime DateTime the object was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastModifiedDateTime DateTime the object was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// DisplayName Administrator-supplied name for the T&C policy.
	DisplayName *string `json:"displayName,omitempty"`
	// Description Administrator-supplied description of the T&C policy.
	Description *string `json:"description,omitempty"`
	// Title Administrator-supplied title of the terms and conditions. This is shown to the user on prompts to accept the T&C policy.
	Title *string `json:"title,omitempty"`
	// BodyText Administrator-supplied body text of the terms and conditions, typically the terms themselves. This is shown to the user on prompts to accept the T&C policy.
	BodyText *string `json:"bodyText,omitempty"`
	// AcceptanceStatement Administrator-supplied explanation of the terms and conditions, typically describing what it means to accept the terms and conditions set out in the T&C policy. This is shown to the user on prompts to accept the T&C policy.
	AcceptanceStatement *string `json:"acceptanceStatement,omitempty"`
	// Version Integer indicating the current version of the terms. Incremented when an administrator makes a change to the terms and wishes to require users to re-accept the modified T&C policy.
	Version *int `json:"version,omitempty"`
}

// TermsAndConditionsAcceptanceStatus A termsAndConditionsAcceptanceStatus entity represents the acceptance status of a given Terms and Conditions (T&C) policy by a given user. Users must accept the most up-to-date version of the terms in order to retain access to the Company Portal.
type TermsAndConditionsAcceptanceStatus struct {
	Entity
	// UserDisplayName Display name of the user whose acceptance the entity represents.
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// AcceptedVersion Most recent version number of the T&C accepted by the user.
	AcceptedVersion *int `json:"acceptedVersion,omitempty"`
	// AcceptedDateTime DateTime when the terms were last accepted by the user.
	AcceptedDateTime *time.Time `json:"acceptedDateTime,omitempty"`
}

// TermsAndConditionsAssignment A termsAndConditionsAssignment entity represents the assignment of a given Terms and Conditions (T&C) policy to a given group. Users in the group will be required to accept the terms in order to have devices enrolled into Intune.
type TermsAndConditionsAssignment struct {
	Entity
	// Target Assignment target that the T&C policy is assigned to.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// TextColumn undocumented
type TextColumn struct {
	// AllowMultipleLines undocumented
	AllowMultipleLines *bool `json:"allowMultipleLines,omitempty"`
	// AppendChangesToExistingText undocumented
	AppendChangesToExistingText *bool `json:"appendChangesToExistingText,omitempty"`
	// LinesForEditing undocumented
	LinesForEditing *int `json:"linesForEditing,omitempty"`
	// MaxLength undocumented
	MaxLength *int `json:"maxLength,omitempty"`
	// TextType undocumented
	TextType *string `json:"textType,omitempty"`
}

// Thumbnail undocumented
type Thumbnail struct {
	// Content undocumented
	Content *Stream `json:"content,omitempty"`
	// Height undocumented
	Height *int `json:"height,omitempty"`
	// SourceItemId undocumented
	SourceItemId *string `json:"sourceItemId,omitempty"`
	// Url undocumented
	Url *string `json:"url,omitempty"`
	// Width undocumented
	Width *int `json:"width,omitempty"`
}

// ThumbnailSet undocumented
type ThumbnailSet struct {
	Entity
	// Large undocumented
	Large *Thumbnail `json:"large,omitempty"`
	// Medium undocumented
	Medium *Thumbnail `json:"medium,omitempty"`
	// Small undocumented
	Small *Thumbnail `json:"small,omitempty"`
	// Source undocumented
	Source *Thumbnail `json:"source,omitempty"`
}

// TimeConstraint undocumented
type TimeConstraint struct {
	// ActivityDomain undocumented
	ActivityDomain *ActivityDomain `json:"activityDomain,omitempty"`
	// TimeSlots undocumented
	TimeSlots []TimeSlot `json:"timeSlots,omitempty"`
}

// TimeSlot undocumented
type TimeSlot struct {
	// Start undocumented
	Start *DateTimeTimeZone `json:"start,omitempty"`
	// End undocumented
	End *DateTimeTimeZone `json:"end,omitempty"`
}

// TimeZoneBase undocumented
type TimeZoneBase struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

// TimeZoneInformation undocumented
type TimeZoneInformation struct {
	// Alias undocumented
	Alias *string `json:"alias,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// TokenMeetingInfo undocumented
type TokenMeetingInfo struct {
	MeetingInfo
	// Token undocumented
	Token *string `json:"token,omitempty"`
}

// ToneInfo undocumented
type ToneInfo struct {
	// SequenceId undocumented
	SequenceId *int `json:"sequenceId,omitempty"`
	// Tone undocumented
	Tone *Tone `json:"tone,omitempty"`
}

// Trending undocumented
type Trending struct {
	Entity
	// Weight undocumented
	Weight *float64 `json:"weight,omitempty"`
	// ResourceVisualization undocumented
	ResourceVisualization *ResourceVisualization `json:"resourceVisualization,omitempty"`
	// ResourceReference undocumented
	ResourceReference *ResourceReference `json:"resourceReference,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// UnmuteParticipantOperation undocumented
type UnmuteParticipantOperation struct {
	CommsOperation
}

// UpdateWindowsDeviceAccountActionParameter undocumented
type UpdateWindowsDeviceAccountActionParameter struct {
	// DeviceAccount undocumented
	DeviceAccount *WindowsDeviceAccount `json:"deviceAccount,omitempty"`
	// PasswordRotationEnabled undocumented
	PasswordRotationEnabled *bool `json:"passwordRotationEnabled,omitempty"`
	// CalendarSyncEnabled undocumented
	CalendarSyncEnabled *bool `json:"calendarSyncEnabled,omitempty"`
	// DeviceAccountEmail undocumented
	DeviceAccountEmail *string `json:"deviceAccountEmail,omitempty"`
	// ExchangeServer undocumented
	ExchangeServer *string `json:"exchangeServer,omitempty"`
	// SessionInitiationProtocalAddress undocumented
	SessionInitiationProtocalAddress *string `json:"sessionInitiationProtocalAddress,omitempty"`
}

// UploadSession undocumented
type UploadSession struct {
	// ExpirationDateTime undocumented
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// NextExpectedRanges undocumented
	NextExpectedRanges []string `json:"nextExpectedRanges,omitempty"`
	// UploadUrl undocumented
	UploadUrl *string `json:"uploadUrl,omitempty"`
}

// UsageDetails undocumented
type UsageDetails struct {
	// LastAccessedDateTime undocumented
	LastAccessedDateTime *time.Time `json:"lastAccessedDateTime,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// UsedInsight undocumented
type UsedInsight struct {
	Entity
	// LastUsed undocumented
	LastUsed *UsageDetails `json:"lastUsed,omitempty"`
	// ResourceVisualization undocumented
	ResourceVisualization *ResourceVisualization `json:"resourceVisualization,omitempty"`
	// ResourceReference undocumented
	ResourceReference *ResourceReference `json:"resourceReference,omitempty"`
}

// User Represents an Azure Active Directory user object.
type User struct {
	DirectoryObject
	// AccountEnabled undocumented
	AccountEnabled *bool `json:"accountEnabled,omitempty"`
	// AgeGroup undocumented
	AgeGroup *string `json:"ageGroup,omitempty"`
	// AssignedLicenses undocumented
	AssignedLicenses []AssignedLicense `json:"assignedLicenses,omitempty"`
	// AssignedPlans undocumented
	AssignedPlans []AssignedPlan `json:"assignedPlans,omitempty"`
	// BusinessPhones undocumented
	BusinessPhones []string `json:"businessPhones,omitempty"`
	// City undocumented
	City *string `json:"city,omitempty"`
	// CompanyName undocumented
	CompanyName *string `json:"companyName,omitempty"`
	// ConsentProvidedForMinor undocumented
	ConsentProvidedForMinor *string `json:"consentProvidedForMinor,omitempty"`
	// Country undocumented
	Country *string `json:"country,omitempty"`
	// Department undocumented
	Department *string `json:"department,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// EmployeeId undocumented
	EmployeeId *string `json:"employeeId,omitempty"`
	// FaxNumber undocumented
	FaxNumber *string `json:"faxNumber,omitempty"`
	// GivenName undocumented
	GivenName *string `json:"givenName,omitempty"`
	// ImAddresses undocumented
	ImAddresses []string `json:"imAddresses,omitempty"`
	// IsResourceAccount undocumented
	IsResourceAccount *bool `json:"isResourceAccount,omitempty"`
	// JobTitle undocumented
	JobTitle *string `json:"jobTitle,omitempty"`
	// LegalAgeGroupClassification undocumented
	LegalAgeGroupClassification *string `json:"legalAgeGroupClassification,omitempty"`
	// LicenseAssignmentStates undocumented
	LicenseAssignmentStates []LicenseAssignmentState `json:"licenseAssignmentStates,omitempty"`
	// Mail undocumented
	Mail *string `json:"mail,omitempty"`
	// MailNickname undocumented
	MailNickname *string `json:"mailNickname,omitempty"`
	// MobilePhone undocumented
	MobilePhone *string `json:"mobilePhone,omitempty"`
	// OnPremisesDistinguishedName undocumented
	OnPremisesDistinguishedName *string `json:"onPremisesDistinguishedName,omitempty"`
	// OnPremisesExtensionAttributes undocumented
	OnPremisesExtensionAttributes *OnPremisesExtensionAttributes `json:"onPremisesExtensionAttributes,omitempty"`
	// OnPremisesImmutableId undocumented
	OnPremisesImmutableId *string `json:"onPremisesImmutableId,omitempty"`
	// OnPremisesLastSyncDateTime undocumented
	OnPremisesLastSyncDateTime *time.Time `json:"onPremisesLastSyncDateTime,omitempty"`
	// OnPremisesProvisioningErrors undocumented
	OnPremisesProvisioningErrors []OnPremisesProvisioningError `json:"onPremisesProvisioningErrors,omitempty"`
	// OnPremisesSecurityIdentifier undocumented
	OnPremisesSecurityIdentifier *string `json:"onPremisesSecurityIdentifier,omitempty"`
	// OnPremisesSyncEnabled undocumented
	OnPremisesSyncEnabled *bool `json:"onPremisesSyncEnabled,omitempty"`
	// OnPremisesDomainName undocumented
	OnPremisesDomainName *string `json:"onPremisesDomainName,omitempty"`
	// OnPremisesSamAccountName undocumented
	OnPremisesSamAccountName *string `json:"onPremisesSamAccountName,omitempty"`
	// OnPremisesUserPrincipalName undocumented
	OnPremisesUserPrincipalName *string `json:"onPremisesUserPrincipalName,omitempty"`
	// OtherMails undocumented
	OtherMails []string `json:"otherMails,omitempty"`
	// PasswordPolicies undocumented
	PasswordPolicies *string `json:"passwordPolicies,omitempty"`
	// PasswordProfile undocumented
	PasswordProfile *PasswordProfile `json:"passwordProfile,omitempty"`
	// OfficeLocation undocumented
	OfficeLocation *string `json:"officeLocation,omitempty"`
	// PostalCode undocumented
	PostalCode *string `json:"postalCode,omitempty"`
	// PreferredLanguage undocumented
	PreferredLanguage *string `json:"preferredLanguage,omitempty"`
	// ProvisionedPlans undocumented
	ProvisionedPlans []ProvisionedPlan `json:"provisionedPlans,omitempty"`
	// ProxyAddresses undocumented
	ProxyAddresses []string `json:"proxyAddresses,omitempty"`
	// ShowInAddressList undocumented
	ShowInAddressList *bool `json:"showInAddressList,omitempty"`
	// SignInSessionsValidFromDateTime undocumented
	SignInSessionsValidFromDateTime *time.Time `json:"signInSessionsValidFromDateTime,omitempty"`
	// State undocumented
	State *string `json:"state,omitempty"`
	// StreetAddress undocumented
	StreetAddress *string `json:"streetAddress,omitempty"`
	// Surname undocumented
	Surname *string `json:"surname,omitempty"`
	// UsageLocation undocumented
	UsageLocation *string `json:"usageLocation,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// UserType undocumented
	UserType *string `json:"userType,omitempty"`
	// MailboxSettings undocumented
	MailboxSettings *MailboxSettings `json:"mailboxSettings,omitempty"`
	// DeviceEnrollmentLimit The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
	DeviceEnrollmentLimit *int `json:"deviceEnrollmentLimit,omitempty"`
	// AboutMe undocumented
	AboutMe *string `json:"aboutMe,omitempty"`
	// Birthday undocumented
	Birthday *time.Time `json:"birthday,omitempty"`
	// HireDate undocumented
	HireDate *time.Time `json:"hireDate,omitempty"`
	// Interests undocumented
	Interests []string `json:"interests,omitempty"`
	// MySite undocumented
	MySite *string `json:"mySite,omitempty"`
	// PastProjects undocumented
	PastProjects []string `json:"pastProjects,omitempty"`
	// PreferredName undocumented
	PreferredName *string `json:"preferredName,omitempty"`
	// Responsibilities undocumented
	Responsibilities []string `json:"responsibilities,omitempty"`
	// Schools undocumented
	Schools []string `json:"schools,omitempty"`
	// Skills undocumented
	Skills []string `json:"skills,omitempty"`
}

// UserActivity undocumented
type UserActivity struct {
	Entity
	// VisualElements undocumented
	VisualElements *VisualInfo `json:"visualElements,omitempty"`
	// ActivitySourceHost undocumented
	ActivitySourceHost *string `json:"activitySourceHost,omitempty"`
	// ActivationUrl undocumented
	ActivationUrl *string `json:"activationUrl,omitempty"`
	// AppActivityId undocumented
	AppActivityId *string `json:"appActivityId,omitempty"`
	// AppDisplayName undocumented
	AppDisplayName *string `json:"appDisplayName,omitempty"`
	// ContentUrl undocumented
	ContentUrl *string `json:"contentUrl,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// ExpirationDateTime undocumented
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// FallbackUrl undocumented
	FallbackUrl *string `json:"fallbackUrl,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// UserTimezone undocumented
	UserTimezone *string `json:"userTimezone,omitempty"`
	// ContentInfo undocumented
	ContentInfo json.RawMessage `json:"contentInfo,omitempty"`
	// Status undocumented
	Status *Status `json:"status,omitempty"`
}

// UserIdentity undocumented
type UserIdentity struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// IpAddress undocumented
	IpAddress *string `json:"ipAddress,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// UserInstallStateSummary Contains properties for the installation state summary for a user.
type UserInstallStateSummary struct {
	Entity
	// UserName User name.
	UserName *string `json:"userName,omitempty"`
	// InstalledDeviceCount Installed Device Count.
	InstalledDeviceCount *int `json:"installedDeviceCount,omitempty"`
	// FailedDeviceCount Failed Device Count.
	FailedDeviceCount *int `json:"failedDeviceCount,omitempty"`
	// NotInstalledDeviceCount Not installed device count.
	NotInstalledDeviceCount *int `json:"notInstalledDeviceCount,omitempty"`
}

// UserSecurityState undocumented
type UserSecurityState struct {
	// AadUserId undocumented
	AadUserId *string `json:"aadUserId,omitempty"`
	// AccountName undocumented
	AccountName *string `json:"accountName,omitempty"`
	// DomainName undocumented
	DomainName *string `json:"domainName,omitempty"`
	// EmailRole undocumented
	EmailRole *EmailRole `json:"emailRole,omitempty"`
	// IsVpn undocumented
	IsVpn *bool `json:"isVpn,omitempty"`
	// LogonDateTime undocumented
	LogonDateTime *time.Time `json:"logonDateTime,omitempty"`
	// LogonId undocumented
	LogonId *string `json:"logonId,omitempty"`
	// LogonIp undocumented
	LogonIp *string `json:"logonIp,omitempty"`
	// LogonLocation undocumented
	LogonLocation *string `json:"logonLocation,omitempty"`
	// LogonType undocumented
	LogonType *LogonType `json:"logonType,omitempty"`
	// OnPremisesSecurityIdentifier undocumented
	OnPremisesSecurityIdentifier *string `json:"onPremisesSecurityIdentifier,omitempty"`
	// RiskScore undocumented
	RiskScore *string `json:"riskScore,omitempty"`
	// UserAccountType undocumented
	UserAccountType *UserAccountSecurityType `json:"userAccountType,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// UserSettings undocumented
type UserSettings struct {
	Entity
	// ContributionToContentDiscoveryDisabled undocumented
	ContributionToContentDiscoveryDisabled *bool `json:"contributionToContentDiscoveryDisabled,omitempty"`
	// ContributionToContentDiscoveryAsOrganizationDisabled undocumented
	ContributionToContentDiscoveryAsOrganizationDisabled *bool `json:"contributionToContentDiscoveryAsOrganizationDisabled,omitempty"`
}

// VerifiedDomain undocumented
type VerifiedDomain struct {
	// Capabilities undocumented
	Capabilities *string `json:"capabilities,omitempty"`
	// IsDefault undocumented
	IsDefault *bool `json:"isDefault,omitempty"`
	// IsInitial undocumented
	IsInitial *bool `json:"isInitial,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
}

// Video undocumented
type Video struct {
	// AudioBitsPerSample undocumented
	AudioBitsPerSample *int `json:"audioBitsPerSample,omitempty"`
	// AudioChannels undocumented
	AudioChannels *int `json:"audioChannels,omitempty"`
	// AudioFormat undocumented
	AudioFormat *string `json:"audioFormat,omitempty"`
	// AudioSamplesPerSecond undocumented
	AudioSamplesPerSecond *int `json:"audioSamplesPerSecond,omitempty"`
	// Bitrate undocumented
	Bitrate *int `json:"bitrate,omitempty"`
	// Duration undocumented
	Duration *int `json:"duration,omitempty"`
	// FourCC undocumented
	FourCC *string `json:"fourCC,omitempty"`
	// FrameRate undocumented
	FrameRate *float64 `json:"frameRate,omitempty"`
	// Height undocumented
	Height *int `json:"height,omitempty"`
	// Width undocumented
	Width *int `json:"width,omitempty"`
}

// VisualInfo undocumented
type VisualInfo struct {
	// Attribution undocumented
	Attribution *ImageInfo `json:"attribution,omitempty"`
	// BackgroundColor undocumented
	BackgroundColor *string `json:"backgroundColor,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// DisplayText undocumented
	DisplayText *string `json:"displayText,omitempty"`
	// Content undocumented
	Content json.RawMessage `json:"content,omitempty"`
}

// VppLicensingType undocumented
type VppLicensingType struct {
	// SupportsUserLicensing Whether the program supports the user licensing type.
	SupportsUserLicensing *bool `json:"supportsUserLicensing,omitempty"`
	// SupportsDeviceLicensing Whether the program supports the device licensing type.
	SupportsDeviceLicensing *bool `json:"supportsDeviceLicensing,omitempty"`
}

// VppToken You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education. This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune. You can then synchronize your volume purchase information with Intune and track your volume-purchased app use. You can upload multiple Apple VPP Business or Education tokens.
type VppToken struct {
	Entity
	// OrganizationName The organization associated with the Apple Volume Purchase Program Token
	OrganizationName *string `json:"organizationName,omitempty"`
	// VppTokenAccountType The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: `business`, `education`.
	VppTokenAccountType *VppTokenAccountType `json:"vppTokenAccountType,omitempty"`
	// AppleId The apple Id associated with the given Apple Volume Purchase Program Token.
	AppleId *string `json:"appleId,omitempty"`
	// ExpirationDateTime The expiration date time of the Apple Volume Purchase Program Token.
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// LastSyncDateTime The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// Token The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
	Token *string `json:"token,omitempty"`
	// LastModifiedDateTime Last modification date time associated with the Apple Volume Purchase Program Token.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// State Current state of the Apple Volume Purchase Program Token. Possible values are: `unknown`, `valid`, `expired`, `invalid`, `assignedToExternalMDM`.
	State *VppTokenState `json:"state,omitempty"`
	// LastSyncStatus Current sync status of the last application sync which was triggered using the Apple Volume Purchase Program Token. Possible values are: `none`, `inProgress`, `completed`, `failed`.
	LastSyncStatus *VppTokenSyncStatus `json:"lastSyncStatus,omitempty"`
	// AutomaticallyUpdateApps Whether or not apps for the VPP token will be automatically updated.
	AutomaticallyUpdateApps *bool `json:"automaticallyUpdateApps,omitempty"`
	// CountryOrRegion Whether or not apps for the VPP token will be automatically updated.
	CountryOrRegion *string `json:"countryOrRegion,omitempty"`
}

// VulnerabilityState undocumented
type VulnerabilityState struct {
	// Cve undocumented
	Cve *string `json:"cve,omitempty"`
	// Severity undocumented
	Severity *string `json:"severity,omitempty"`
	// WasRunning undocumented
	WasRunning *bool `json:"wasRunning,omitempty"`
}

// WebApp Contains properties and inherited properties for web apps.
type WebApp struct {
	MobileApp
	// AppUrl The web app URL.
	AppUrl *string `json:"appUrl,omitempty"`
	// UseManagedBrowser Whether or not to use managed browser. This property is only applicable for Android and IOS.
	UseManagedBrowser *bool `json:"useManagedBrowser,omitempty"`
}

// Website undocumented
type Website struct {
	// Type undocumented
	Type *WebsiteType `json:"type,omitempty"`
	// Address undocumented
	Address *string `json:"address,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// Windows10CompliancePolicy This class contains compliance settings for Windows 10.
type Windows10CompliancePolicy struct {
	DeviceCompliancePolicy
	// PasswordRequired Require a password to unlock Windows device.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// PasswordBlockSimple Indicates whether or not to block simple password.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`
	// PasswordRequiredToUnlockFromIdle Require a password to unlock an idle device.
	PasswordRequiredToUnlockFromIdle *bool `json:"passwordRequiredToUnlockFromIdle,omitempty"`
	// PasswordMinutesOfInactivityBeforeLock Minutes of inactivity before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	// PasswordExpirationDays The password expiration in days.
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength The minimum password length.
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinimumCharacterSetCount The number of character sets required in the password.
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordRequiredType The required password type.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordPreviousPasswordBlockCount The number of previous passwords to prevent re-use of.
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// RequireHealthyDeviceReport Require devices to be reported as healthy by Windows Device Health Attestation.
	RequireHealthyDeviceReport *bool `json:"requireHealthyDeviceReport,omitempty"`
	// OsMinimumVersion Minimum Windows 10 version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Maximum Windows 10 version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// MobileOsMinimumVersion Minimum Windows Phone version.
	MobileOsMinimumVersion *string `json:"mobileOsMinimumVersion,omitempty"`
	// MobileOsMaximumVersion Maximum Windows Phone version.
	MobileOsMaximumVersion *string `json:"mobileOsMaximumVersion,omitempty"`
	// EarlyLaunchAntiMalwareDriverEnabled Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.
	EarlyLaunchAntiMalwareDriverEnabled *bool `json:"earlyLaunchAntiMalwareDriverEnabled,omitempty"`
	// BitLockerEnabled Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled
	BitLockerEnabled *bool `json:"bitLockerEnabled,omitempty"`
	// SecureBootEnabled Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.
	SecureBootEnabled *bool `json:"secureBootEnabled,omitempty"`
	// CodeIntegrityEnabled Require devices to be reported as healthy by Windows Device Health Attestation.
	CodeIntegrityEnabled *bool `json:"codeIntegrityEnabled,omitempty"`
	// StorageRequireEncryption Require encryption on windows devices.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`
}

// Windows10CustomConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10CustomConfiguration resource.
type Windows10CustomConfiguration struct {
	DeviceConfiguration
	// OmaSettings OMA settings. This collection can contain a maximum of 1000 elements.
	OmaSettings []OmaSetting `json:"omaSettings,omitempty"`
}

// Windows10EndpointProtectionConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the Windows10EndpointProtectionConfiguration resource.
type Windows10EndpointProtectionConfiguration struct {
	DeviceConfiguration
	// FirewallBlockStatefulFTP Blocks stateful FTP connections to the device
	FirewallBlockStatefulFTP *bool `json:"firewallBlockStatefulFTP,omitempty"`
	// FirewallIdleTimeoutForSecurityAssociationInSeconds Configures the idle timeout for security associations, in seconds, from 300 to 3600 inclusive. This is the period after which security associations will expire and be deleted. Valid values 300 to 3600
	FirewallIdleTimeoutForSecurityAssociationInSeconds *int `json:"firewallIdleTimeoutForSecurityAssociationInSeconds,omitempty"`
	// FirewallPreSharedKeyEncodingMethod Select the preshared key encoding to be used
	FirewallPreSharedKeyEncodingMethod *FirewallPreSharedKeyEncodingMethodType `json:"firewallPreSharedKeyEncodingMethod,omitempty"`
	// FirewallIPSecExemptionsAllowNeighborDiscovery Configures IPSec exemptions to allow neighbor discovery IPv6 ICMP type-codes
	FirewallIPSecExemptionsAllowNeighborDiscovery *bool `json:"firewallIPSecExemptionsAllowNeighborDiscovery,omitempty"`
	// FirewallIPSecExemptionsAllowICMP Configures IPSec exemptions to allow ICMP
	FirewallIPSecExemptionsAllowICMP *bool `json:"firewallIPSecExemptionsAllowICMP,omitempty"`
	// FirewallIPSecExemptionsAllowRouterDiscovery Configures IPSec exemptions to allow router discovery IPv6 ICMP type-codes
	FirewallIPSecExemptionsAllowRouterDiscovery *bool `json:"firewallIPSecExemptionsAllowRouterDiscovery,omitempty"`
	// FirewallIPSecExemptionsAllowDHCP Configures IPSec exemptions to allow both IPv4 and IPv6 DHCP traffic
	FirewallIPSecExemptionsAllowDHCP *bool `json:"firewallIPSecExemptionsAllowDHCP,omitempty"`
	// FirewallCertificateRevocationListCheckMethod Specify how the certificate revocation list is to be enforced
	FirewallCertificateRevocationListCheckMethod *FirewallCertificateRevocationListCheckMethodType `json:"firewallCertificateRevocationListCheckMethod,omitempty"`
	// FirewallMergeKeyingModuleSettings If an authentication set is not fully supported by a keying module, direct the module to ignore only unsupported authentication suites rather than the entire set
	FirewallMergeKeyingModuleSettings *bool `json:"firewallMergeKeyingModuleSettings,omitempty"`
	// FirewallPacketQueueingMethod Configures how packet queueing should be applied in the tunnel gateway scenario
	FirewallPacketQueueingMethod *FirewallPacketQueueingMethodType `json:"firewallPacketQueueingMethod,omitempty"`
	// FirewallProfileDomain Configures the firewall profile settings for domain networks
	FirewallProfileDomain *WindowsFirewallNetworkProfile `json:"firewallProfileDomain,omitempty"`
	// FirewallProfilePublic Configures the firewall profile settings for public networks
	FirewallProfilePublic *WindowsFirewallNetworkProfile `json:"firewallProfilePublic,omitempty"`
	// FirewallProfilePrivate Configures the firewall profile settings for private networks
	FirewallProfilePrivate *WindowsFirewallNetworkProfile `json:"firewallProfilePrivate,omitempty"`
	// DefenderAttackSurfaceReductionExcludedPaths List of exe files and folders to be excluded from attack surface reduction rules
	DefenderAttackSurfaceReductionExcludedPaths []string `json:"defenderAttackSurfaceReductionExcludedPaths,omitempty"`
	// DefenderGuardedFoldersAllowedAppPaths List of paths to exe that are allowed to access protected folders
	DefenderGuardedFoldersAllowedAppPaths []string `json:"defenderGuardedFoldersAllowedAppPaths,omitempty"`
	// DefenderAdditionalGuardedFolders List of folder paths to be added to the list of protected folders
	DefenderAdditionalGuardedFolders []string `json:"defenderAdditionalGuardedFolders,omitempty"`
	// DefenderExploitProtectionXml Xml content containing information regarding exploit protection details.
	DefenderExploitProtectionXml *Binary `json:"defenderExploitProtectionXml,omitempty"`
	// DefenderExploitProtectionXmlFileName Name of the file from which DefenderExploitProtectionXml was obtained.
	DefenderExploitProtectionXmlFileName *string `json:"defenderExploitProtectionXmlFileName,omitempty"`
	// DefenderSecurityCenterBlockExploitProtectionOverride Indicates whether or not to block user from overriding Exploit Protection settings.
	DefenderSecurityCenterBlockExploitProtectionOverride *bool `json:"defenderSecurityCenterBlockExploitProtectionOverride,omitempty"`
	// AppLockerApplicationControl Enables the Admin to choose what types of app to allow on devices.
	AppLockerApplicationControl *AppLockerApplicationControlType `json:"appLockerApplicationControl,omitempty"`
	// SmartScreenEnableInShell Allows IT Admins to configure SmartScreen for Windows.
	SmartScreenEnableInShell *bool `json:"smartScreenEnableInShell,omitempty"`
	// SmartScreenBlockOverrideForFiles Allows IT Admins to control whether users can can ignore SmartScreen warnings and run malicious files.
	SmartScreenBlockOverrideForFiles *bool `json:"smartScreenBlockOverrideForFiles,omitempty"`
	// ApplicationGuardEnabled Enable Windows Defender Application Guard
	ApplicationGuardEnabled *bool `json:"applicationGuardEnabled,omitempty"`
	// ApplicationGuardBlockFileTransfer Block clipboard to transfer image file, text file or neither of them
	ApplicationGuardBlockFileTransfer *ApplicationGuardBlockFileTransferType `json:"applicationGuardBlockFileTransfer,omitempty"`
	// ApplicationGuardBlockNonEnterpriseContent Block enterprise sites to load non-enterprise content, such as third party plug-ins
	ApplicationGuardBlockNonEnterpriseContent *bool `json:"applicationGuardBlockNonEnterpriseContent,omitempty"`
	// ApplicationGuardAllowPersistence Allow persisting user generated data inside the App Guard Containter (favorites, cookies, web passwords, etc.)
	ApplicationGuardAllowPersistence *bool `json:"applicationGuardAllowPersistence,omitempty"`
	// ApplicationGuardForceAuditing Force auditing will persist Windows logs and events to meet security/compliance criteria (sample events are user login-logoff, use of privilege rights, software installation, system changes, etc.)
	ApplicationGuardForceAuditing *bool `json:"applicationGuardForceAuditing,omitempty"`
	// ApplicationGuardBlockClipboardSharing Block clipboard to share data from Host to Container, or from Container to Host, or both ways, or neither ways.
	ApplicationGuardBlockClipboardSharing *ApplicationGuardBlockClipboardSharingType `json:"applicationGuardBlockClipboardSharing,omitempty"`
	// ApplicationGuardAllowPrintToPDF Allow printing to PDF from Container
	ApplicationGuardAllowPrintToPDF *bool `json:"applicationGuardAllowPrintToPDF,omitempty"`
	// ApplicationGuardAllowPrintToXPS Allow printing to XPS from Container
	ApplicationGuardAllowPrintToXPS *bool `json:"applicationGuardAllowPrintToXPS,omitempty"`
	// ApplicationGuardAllowPrintToLocalPrinters Allow printing to Local Printers from Container
	ApplicationGuardAllowPrintToLocalPrinters *bool `json:"applicationGuardAllowPrintToLocalPrinters,omitempty"`
	// ApplicationGuardAllowPrintToNetworkPrinters Allow printing to Network Printers from Container
	ApplicationGuardAllowPrintToNetworkPrinters *bool `json:"applicationGuardAllowPrintToNetworkPrinters,omitempty"`
	// BitLockerDisableWarningForOtherDiskEncryption Allows the Admin to disable the warning prompt for other disk encryption on the user machines.
	BitLockerDisableWarningForOtherDiskEncryption *bool `json:"bitLockerDisableWarningForOtherDiskEncryption,omitempty"`
	// BitLockerEnableStorageCardEncryptionOnMobile Allows the admin to require encryption to be turned on using BitLocker. This policy is valid only for a mobile SKU.
	BitLockerEnableStorageCardEncryptionOnMobile *bool `json:"bitLockerEnableStorageCardEncryptionOnMobile,omitempty"`
	// BitLockerEncryptDevice Allows the admin to require encryption to be turned on using BitLocker.
	BitLockerEncryptDevice *bool `json:"bitLockerEncryptDevice,omitempty"`
	// BitLockerRemovableDrivePolicy BitLocker Removable Drive Policy.
	BitLockerRemovableDrivePolicy *BitLockerRemovableDrivePolicy `json:"bitLockerRemovableDrivePolicy,omitempty"`
}

// Windows10EnterpriseModernAppManagementConfiguration Windows10 Enterprise Modern App Management Configuration.
type Windows10EnterpriseModernAppManagementConfiguration struct {
	DeviceConfiguration
	// UninstallBuiltInApps Indicates whether or not to uninstall a fixed list of built-in Windows apps.
	UninstallBuiltInApps *bool `json:"uninstallBuiltInApps,omitempty"`
}

// Windows10GeneralConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10GeneralConfiguration resource.
type Windows10GeneralConfiguration struct {
	DeviceConfiguration
	// EnterpriseCloudPrintDiscoveryEndPoint Endpoint for discovering cloud printers.
	EnterpriseCloudPrintDiscoveryEndPoint *string `json:"enterpriseCloudPrintDiscoveryEndPoint,omitempty"`
	// EnterpriseCloudPrintOAuthAuthority Authentication endpoint for acquiring OAuth tokens.
	EnterpriseCloudPrintOAuthAuthority *string `json:"enterpriseCloudPrintOAuthAuthority,omitempty"`
	// EnterpriseCloudPrintOAuthClientIdentifier GUID of a client application authorized to retrieve OAuth tokens from the OAuth Authority.
	EnterpriseCloudPrintOAuthClientIdentifier *string `json:"enterpriseCloudPrintOAuthClientIdentifier,omitempty"`
	// EnterpriseCloudPrintResourceIdentifier OAuth resource URI for print service as configured in the Azure portal.
	EnterpriseCloudPrintResourceIdentifier *string `json:"enterpriseCloudPrintResourceIdentifier,omitempty"`
	// EnterpriseCloudPrintDiscoveryMaxLimit Maximum number of printers that should be queried from a discovery endpoint. This is a mobile only setting. Valid values 1 to 65535
	EnterpriseCloudPrintDiscoveryMaxLimit *int `json:"enterpriseCloudPrintDiscoveryMaxLimit,omitempty"`
	// EnterpriseCloudPrintMopriaDiscoveryResourceIdentifier OAuth resource URI for printer discovery service as configured in Azure portal.
	EnterpriseCloudPrintMopriaDiscoveryResourceIdentifier *string `json:"enterpriseCloudPrintMopriaDiscoveryResourceIdentifier,omitempty"`
	// SearchBlockDiacritics Specifies if search can use diacritics.
	SearchBlockDiacritics *bool `json:"searchBlockDiacritics,omitempty"`
	// SearchDisableAutoLanguageDetection Specifies whether to use automatic language detection when indexing content and properties.
	SearchDisableAutoLanguageDetection *bool `json:"searchDisableAutoLanguageDetection,omitempty"`
	// SearchDisableIndexingEncryptedItems Indicates whether or not to block indexing of WIP-protected items to prevent them from appearing in search results for Cortana or Explorer.
	SearchDisableIndexingEncryptedItems *bool `json:"searchDisableIndexingEncryptedItems,omitempty"`
	// SearchEnableRemoteQueries Indicates whether or not to block remote queries of this computer’s index.
	SearchEnableRemoteQueries *bool `json:"searchEnableRemoteQueries,omitempty"`
	// SearchDisableIndexerBackoff Indicates whether or not to disable the search indexer backoff feature.
	SearchDisableIndexerBackoff *bool `json:"searchDisableIndexerBackoff,omitempty"`
	// SearchDisableIndexingRemovableDrive Indicates whether or not to allow users to add locations on removable drives to libraries and to be indexed.
	SearchDisableIndexingRemovableDrive *bool `json:"searchDisableIndexingRemovableDrive,omitempty"`
	// SearchEnableAutomaticIndexSizeManangement Specifies minimum amount of hard drive space on the same drive as the index location before indexing stops.
	SearchEnableAutomaticIndexSizeManangement *bool `json:"searchEnableAutomaticIndexSizeManangement,omitempty"`
	// DiagnosticsDataSubmissionMode Gets or sets a value allowing the device to send diagnostic and usage telemetry data, such as Watson.
	DiagnosticsDataSubmissionMode *DiagnosticDataSubmissionMode `json:"diagnosticsDataSubmissionMode,omitempty"`
	// OneDriveDisableFileSync Gets or sets a value allowing IT admins to prevent apps and features from working with files on OneDrive.
	OneDriveDisableFileSync *bool `json:"oneDriveDisableFileSync,omitempty"`
	// SmartScreenEnableAppInstallControl Allows IT Admins to control whether users are allowed to install apps from places other than the Store.
	SmartScreenEnableAppInstallControl *bool `json:"smartScreenEnableAppInstallControl,omitempty"`
	// PersonalizationDesktopImageUrl A http or https Url to a jpg, jpeg or png image that needs to be downloaded and used as the Desktop Image or a file Url to a local image on the file system that needs to used as the Desktop Image.
	PersonalizationDesktopImageUrl *string `json:"personalizationDesktopImageUrl,omitempty"`
	// PersonalizationLockScreenImageUrl A http or https Url to a jpg, jpeg or png image that neeeds to be downloaded and used as the Lock Screen Image or a file Url to a local image on the file system that needs to be used as the Lock Screen Image.
	PersonalizationLockScreenImageUrl *string `json:"personalizationLockScreenImageUrl,omitempty"`
	// BluetoothAllowedServices Specify a list of allowed Bluetooth services and profiles in hex formatted strings.
	BluetoothAllowedServices []string `json:"bluetoothAllowedServices,omitempty"`
	// BluetoothBlockAdvertising Whether or not to Block the user from using bluetooth advertising.
	BluetoothBlockAdvertising *bool `json:"bluetoothBlockAdvertising,omitempty"`
	// BluetoothBlockDiscoverableMode Whether or not to Block the user from using bluetooth discoverable mode.
	BluetoothBlockDiscoverableMode *bool `json:"bluetoothBlockDiscoverableMode,omitempty"`
	// BluetoothBlockPrePairing Whether or not to block specific bundled Bluetooth peripherals to automatically pair with the host device.
	BluetoothBlockPrePairing *bool `json:"bluetoothBlockPrePairing,omitempty"`
	// EdgeBlockAutofill Indicates whether or not to block auto fill.
	EdgeBlockAutofill *bool `json:"edgeBlockAutofill,omitempty"`
	// EdgeBlocked Indicates whether or not to Block the user from using the Edge browser.
	EdgeBlocked *bool `json:"edgeBlocked,omitempty"`
	// EdgeCookiePolicy Indicates which cookies to block in the Edge browser.
	EdgeCookiePolicy *EdgeCookiePolicy `json:"edgeCookiePolicy,omitempty"`
	// EdgeBlockDeveloperTools Indicates whether or not to block developer tools in the Edge browser.
	EdgeBlockDeveloperTools *bool `json:"edgeBlockDeveloperTools,omitempty"`
	// EdgeBlockSendingDoNotTrackHeader Indicates whether or not to Block the user from sending the do not track header.
	EdgeBlockSendingDoNotTrackHeader *bool `json:"edgeBlockSendingDoNotTrackHeader,omitempty"`
	// EdgeBlockExtensions Indicates whether or not to block extensions in the Edge browser.
	EdgeBlockExtensions *bool `json:"edgeBlockExtensions,omitempty"`
	// EdgeBlockInPrivateBrowsing Indicates whether or not to block InPrivate browsing on corporate networks, in the Edge browser.
	EdgeBlockInPrivateBrowsing *bool `json:"edgeBlockInPrivateBrowsing,omitempty"`
	// EdgeBlockJavaScript Indicates whether or not to Block the user from using JavaScript.
	EdgeBlockJavaScript *bool `json:"edgeBlockJavaScript,omitempty"`
	// EdgeBlockPasswordManager Indicates whether or not to Block password manager.
	EdgeBlockPasswordManager *bool `json:"edgeBlockPasswordManager,omitempty"`
	// EdgeBlockAddressBarDropdown Block the address bar dropdown functionality in Microsoft Edge. Disable this settings to minimize network connections from Microsoft Edge to Microsoft services.
	EdgeBlockAddressBarDropdown *bool `json:"edgeBlockAddressBarDropdown,omitempty"`
	// EdgeBlockCompatibilityList Block Microsoft compatibility list in Microsoft Edge. This list from Microsoft helps Edge properly display sites with known compatibility issues.
	EdgeBlockCompatibilityList *bool `json:"edgeBlockCompatibilityList,omitempty"`
	// EdgeClearBrowsingDataOnExit Clear browsing data on exiting Microsoft Edge.
	EdgeClearBrowsingDataOnExit *bool `json:"edgeClearBrowsingDataOnExit,omitempty"`
	// EdgeAllowStartPagesModification Allow users to change Start pages on Edge. Use the EdgeHomepageUrls to specify the Start pages that the user would see by default when they open Edge.
	EdgeAllowStartPagesModification *bool `json:"edgeAllowStartPagesModification,omitempty"`
	// EdgeDisableFirstRunPage Block the Microsoft web page that opens on the first use of Microsoft Edge. This policy allows enterprises, like those enrolled in zero emissions configurations, to block this page.
	EdgeDisableFirstRunPage *bool `json:"edgeDisableFirstRunPage,omitempty"`
	// EdgeBlockLiveTileDataCollection Block the collection of information by Microsoft for live tile creation when users pin a site to Start from Microsoft Edge.
	EdgeBlockLiveTileDataCollection *bool `json:"edgeBlockLiveTileDataCollection,omitempty"`
	// EdgeSyncFavoritesWithInternetExplorer Enable favorites sync between Internet Explorer and Microsoft Edge. Additions, deletions, modifications and order changes to favorites are shared between browsers.
	EdgeSyncFavoritesWithInternetExplorer *bool `json:"edgeSyncFavoritesWithInternetExplorer,omitempty"`
	// CellularBlockDataWhenRoaming Whether or not to Block the user from using data over cellular while roaming.
	CellularBlockDataWhenRoaming *bool `json:"cellularBlockDataWhenRoaming,omitempty"`
	// CellularBlockVpn Whether or not to Block the user from using VPN over cellular.
	CellularBlockVpn *bool `json:"cellularBlockVpn,omitempty"`
	// CellularBlockVpnWhenRoaming Whether or not to Block the user from using VPN when roaming over cellular.
	CellularBlockVpnWhenRoaming *bool `json:"cellularBlockVpnWhenRoaming,omitempty"`
	// DefenderBlockEndUserAccess Whether or not to block end user access to Defender.
	DefenderBlockEndUserAccess *bool `json:"defenderBlockEndUserAccess,omitempty"`
	// DefenderDaysBeforeDeletingQuarantinedMalware Number of days before deleting quarantined malware. Valid values 0 to 90
	DefenderDaysBeforeDeletingQuarantinedMalware *int `json:"defenderDaysBeforeDeletingQuarantinedMalware,omitempty"`
	// DefenderDetectedMalwareActions Gets or sets Defender’s actions to take on detected Malware per threat level.
	DefenderDetectedMalwareActions *DefenderDetectedMalwareActions `json:"defenderDetectedMalwareActions,omitempty"`
	// DefenderSystemScanSchedule Defender day of the week for the system scan.
	DefenderSystemScanSchedule *WeeklySchedule `json:"defenderSystemScanSchedule,omitempty"`
	// DefenderFilesAndFoldersToExclude Files and folder to exclude from scans and real time protection.
	DefenderFilesAndFoldersToExclude []string `json:"defenderFilesAndFoldersToExclude,omitempty"`
	// DefenderFileExtensionsToExclude File extensions to exclude from scans and real time protection.
	DefenderFileExtensionsToExclude []string `json:"defenderFileExtensionsToExclude,omitempty"`
	// DefenderScanMaxCpu Max CPU usage percentage during scan. Valid values 0 to 100
	DefenderScanMaxCpu *int `json:"defenderScanMaxCpu,omitempty"`
	// DefenderMonitorFileActivity Value for monitoring file activity.
	DefenderMonitorFileActivity *DefenderMonitorFileActivity `json:"defenderMonitorFileActivity,omitempty"`
	// DefenderProcessesToExclude Processes to exclude from scans and real time protection.
	DefenderProcessesToExclude []string `json:"defenderProcessesToExclude,omitempty"`
	// DefenderPromptForSampleSubmission The configuration for how to prompt user for sample submission.
	DefenderPromptForSampleSubmission *DefenderPromptForSampleSubmission `json:"defenderPromptForSampleSubmission,omitempty"`
	// DefenderRequireBehaviorMonitoring Indicates whether or not to require behavior monitoring.
	DefenderRequireBehaviorMonitoring *bool `json:"defenderRequireBehaviorMonitoring,omitempty"`
	// DefenderRequireCloudProtection Indicates whether or not to require cloud protection.
	DefenderRequireCloudProtection *bool `json:"defenderRequireCloudProtection,omitempty"`
	// DefenderRequireNetworkInspectionSystem Indicates whether or not to require network inspection system.
	DefenderRequireNetworkInspectionSystem *bool `json:"defenderRequireNetworkInspectionSystem,omitempty"`
	// DefenderRequireRealTimeMonitoring Indicates whether or not to require real time monitoring.
	DefenderRequireRealTimeMonitoring *bool `json:"defenderRequireRealTimeMonitoring,omitempty"`
	// DefenderScanArchiveFiles Indicates whether or not to scan archive files.
	DefenderScanArchiveFiles *bool `json:"defenderScanArchiveFiles,omitempty"`
	// DefenderScanDownloads Indicates whether or not to scan downloads.
	DefenderScanDownloads *bool `json:"defenderScanDownloads,omitempty"`
	// DefenderScanNetworkFiles Indicates whether or not to scan files opened from a network folder.
	DefenderScanNetworkFiles *bool `json:"defenderScanNetworkFiles,omitempty"`
	// DefenderScanIncomingMail Indicates whether or not to scan incoming mail messages.
	DefenderScanIncomingMail *bool `json:"defenderScanIncomingMail,omitempty"`
	// DefenderScanMappedNetworkDrivesDuringFullScan Indicates whether or not to scan mapped network drives during full scan.
	DefenderScanMappedNetworkDrivesDuringFullScan *bool `json:"defenderScanMappedNetworkDrivesDuringFullScan,omitempty"`
	// DefenderScanRemovableDrivesDuringFullScan Indicates whether or not to scan removable drives during full scan.
	DefenderScanRemovableDrivesDuringFullScan *bool `json:"defenderScanRemovableDrivesDuringFullScan,omitempty"`
	// DefenderScanScriptsLoadedInInternetExplorer Indicates whether or not to scan scripts loaded in Internet Explorer browser.
	DefenderScanScriptsLoadedInInternetExplorer *bool `json:"defenderScanScriptsLoadedInInternetExplorer,omitempty"`
	// DefenderSignatureUpdateIntervalInHours The signature update interval in hours. Specify 0 not to check. Valid values 0 to 24
	DefenderSignatureUpdateIntervalInHours *int `json:"defenderSignatureUpdateIntervalInHours,omitempty"`
	// DefenderScanType The defender system scan type.
	DefenderScanType *DefenderScanType `json:"defenderScanType,omitempty"`
	// DefenderScheduledScanTime The defender time for the system scan.
	DefenderScheduledScanTime *time.Time `json:"defenderScheduledScanTime,omitempty"`
	// DefenderScheduledQuickScanTime The time to perform a daily quick scan.
	DefenderScheduledQuickScanTime *time.Time `json:"defenderScheduledQuickScanTime,omitempty"`
	// DefenderCloudBlockLevel Specifies the level of cloud-delivered protection.
	DefenderCloudBlockLevel *DefenderCloudBlockLevelType `json:"defenderCloudBlockLevel,omitempty"`
	// LockScreenAllowTimeoutConfiguration Specify whether to show a user-configurable setting to control the screen timeout while on the lock screen of Windows 10 Mobile devices. If this policy is set to Allow, the value set by lockScreenTimeoutInSeconds is ignored.
	LockScreenAllowTimeoutConfiguration *bool `json:"lockScreenAllowTimeoutConfiguration,omitempty"`
	// LockScreenBlockActionCenterNotifications Indicates whether or not to block action center notifications over lock screen.
	LockScreenBlockActionCenterNotifications *bool `json:"lockScreenBlockActionCenterNotifications,omitempty"`
	// LockScreenBlockCortana Indicates whether or not the user can interact with Cortana using speech while the system is locked.
	LockScreenBlockCortana *bool `json:"lockScreenBlockCortana,omitempty"`
	// LockScreenBlockToastNotifications Indicates whether to allow toast notifications above the device lock screen.
	LockScreenBlockToastNotifications *bool `json:"lockScreenBlockToastNotifications,omitempty"`
	// LockScreenTimeoutInSeconds Set the duration (in seconds) from the screen locking to the screen turning off for Windows 10 Mobile devices. Supported values are 11-1800. Valid values 11 to 1800
	LockScreenTimeoutInSeconds *int `json:"lockScreenTimeoutInSeconds,omitempty"`
	// PasswordBlockSimple Specify whether PINs or passwords such as "1111" or "1234" are allowed. For Windows 10 desktops, it also controls the use of picture passwords.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`
	// PasswordExpirationDays The password expiration in days. Valid values 0 to 730
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength The minimum password length. Valid values 4 to 16
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeScreenTimeout The minutes of inactivity before the screen times out.
	PasswordMinutesOfInactivityBeforeScreenTimeout *int `json:"passwordMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	// PasswordMinimumCharacterSetCount The number of character sets required in the password.
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordPreviousPasswordBlockCount The number of previous passwords to prevent reuse of. Valid values 0 to 50
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordRequired Indicates whether or not to require the user to have a password.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// PasswordRequireWhenResumeFromIdleState Indicates whether or not to require a password upon resuming from an idle state.
	PasswordRequireWhenResumeFromIdleState *bool `json:"passwordRequireWhenResumeFromIdleState,omitempty"`
	// PasswordRequiredType The required password type.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordSignInFailureCountBeforeFactoryReset The number of sign in failures before factory reset. Valid values 0 to 999
	PasswordSignInFailureCountBeforeFactoryReset *int `json:"passwordSignInFailureCountBeforeFactoryReset,omitempty"`
	// PrivacyAdvertisingId Enables or disables the use of advertising ID. Added in Windows 10, version 1607.
	PrivacyAdvertisingId *StateManagementSetting `json:"privacyAdvertisingId,omitempty"`
	// PrivacyAutoAcceptPairingAndConsentPrompts Indicates whether or not to allow the automatic acceptance of the pairing and privacy user consent dialog when launching apps.
	PrivacyAutoAcceptPairingAndConsentPrompts *bool `json:"privacyAutoAcceptPairingAndConsentPrompts,omitempty"`
	// PrivacyBlockInputPersonalization Indicates whether or not to block the usage of cloud based speech services for Cortana, Dictation, or Store applications.
	PrivacyBlockInputPersonalization *bool `json:"privacyBlockInputPersonalization,omitempty"`
	// StartBlockUnpinningAppsFromTaskbar Indicates whether or not to block the user from unpinning apps from taskbar.
	StartBlockUnpinningAppsFromTaskbar *bool `json:"startBlockUnpinningAppsFromTaskbar,omitempty"`
	// StartMenuAppListVisibility Setting the value of this collapses the app list, removes the app list entirely, or disables the corresponding toggle in the Settings app.
	StartMenuAppListVisibility *WindowsStartMenuAppListVisibilityType `json:"startMenuAppListVisibility,omitempty"`
	// StartMenuHideChangeAccountSettings Enabling this policy hides the change account setting from appearing in the user tile in the start menu.
	StartMenuHideChangeAccountSettings *bool `json:"startMenuHideChangeAccountSettings,omitempty"`
	// StartMenuHideFrequentlyUsedApps Enabling this policy hides the most used apps from appearing on the start menu and disables the corresponding toggle in the Settings app.
	StartMenuHideFrequentlyUsedApps *bool `json:"startMenuHideFrequentlyUsedApps,omitempty"`
	// StartMenuHideHibernate Enabling this policy hides hibernate from appearing in the power button in the start menu.
	StartMenuHideHibernate *bool `json:"startMenuHideHibernate,omitempty"`
	// StartMenuHideLock Enabling this policy hides lock from appearing in the user tile in the start menu.
	StartMenuHideLock *bool `json:"startMenuHideLock,omitempty"`
	// StartMenuHidePowerButton Enabling this policy hides the power button from appearing in the start menu.
	StartMenuHidePowerButton *bool `json:"startMenuHidePowerButton,omitempty"`
	// StartMenuHideRecentJumpLists Enabling this policy hides recent jump lists from appearing on the start menu/taskbar and disables the corresponding toggle in the Settings app.
	StartMenuHideRecentJumpLists *bool `json:"startMenuHideRecentJumpLists,omitempty"`
	// StartMenuHideRecentlyAddedApps Enabling this policy hides recently added apps from appearing on the start menu and disables the corresponding toggle in the Settings app.
	StartMenuHideRecentlyAddedApps *bool `json:"startMenuHideRecentlyAddedApps,omitempty"`
	// StartMenuHideRestartOptions Enabling this policy hides “Restart/Update and Restart” from appearing in the power button in the start menu.
	StartMenuHideRestartOptions *bool `json:"startMenuHideRestartOptions,omitempty"`
	// StartMenuHideShutDown Enabling this policy hides shut down/update and shut down from appearing in the power button in the start menu.
	StartMenuHideShutDown *bool `json:"startMenuHideShutDown,omitempty"`
	// StartMenuHideSignOut Enabling this policy hides sign out from appearing in the user tile in the start menu.
	StartMenuHideSignOut *bool `json:"startMenuHideSignOut,omitempty"`
	// StartMenuHideSleep Enabling this policy hides sleep from appearing in the power button in the start menu.
	StartMenuHideSleep *bool `json:"startMenuHideSleep,omitempty"`
	// StartMenuHideSwitchAccount Enabling this policy hides switch account from appearing in the user tile in the start menu.
	StartMenuHideSwitchAccount *bool `json:"startMenuHideSwitchAccount,omitempty"`
	// StartMenuHideUserTile Enabling this policy hides the user tile from appearing in the start menu.
	StartMenuHideUserTile *bool `json:"startMenuHideUserTile,omitempty"`
	// StartMenuLayoutEdgeAssetsXml This policy setting allows you to import Edge assets to be used with startMenuLayoutXml policy. Start layout can contain secondary tile from Edge app which looks for Edge local asset file. Edge local asset would not exist and cause Edge secondary tile to appear empty in this case. This policy only gets applied when startMenuLayoutXml policy is modified. The value should be a UTF-8 Base64 encoded byte array.
	StartMenuLayoutEdgeAssetsXml *Binary `json:"startMenuLayoutEdgeAssetsXml,omitempty"`
	// StartMenuLayoutXml Allows admins to override the default Start menu layout and prevents the user from changing it. The layout is modified by specifying an XML file based on a layout modification schema. XML needs to be in a UTF8 encoded byte array format.
	StartMenuLayoutXml *Binary `json:"startMenuLayoutXml,omitempty"`
	// StartMenuMode Allows admins to decide how the Start menu is displayed.
	StartMenuMode *WindowsStartMenuModeType `json:"startMenuMode,omitempty"`
	// StartMenuPinnedFolderDocuments Enforces the visibility (Show/Hide) of the Documents folder shortcut on the Start menu.
	StartMenuPinnedFolderDocuments *VisibilitySetting `json:"startMenuPinnedFolderDocuments,omitempty"`
	// StartMenuPinnedFolderDownloads Enforces the visibility (Show/Hide) of the Downloads folder shortcut on the Start menu.
	StartMenuPinnedFolderDownloads *VisibilitySetting `json:"startMenuPinnedFolderDownloads,omitempty"`
	// StartMenuPinnedFolderFileExplorer Enforces the visibility (Show/Hide) of the FileExplorer shortcut on the Start menu.
	StartMenuPinnedFolderFileExplorer *VisibilitySetting `json:"startMenuPinnedFolderFileExplorer,omitempty"`
	// StartMenuPinnedFolderHomeGroup Enforces the visibility (Show/Hide) of the HomeGroup folder shortcut on the Start menu.
	StartMenuPinnedFolderHomeGroup *VisibilitySetting `json:"startMenuPinnedFolderHomeGroup,omitempty"`
	// StartMenuPinnedFolderMusic Enforces the visibility (Show/Hide) of the Music folder shortcut on the Start menu.
	StartMenuPinnedFolderMusic *VisibilitySetting `json:"startMenuPinnedFolderMusic,omitempty"`
	// StartMenuPinnedFolderNetwork Enforces the visibility (Show/Hide) of the Network folder shortcut on the Start menu.
	StartMenuPinnedFolderNetwork *VisibilitySetting `json:"startMenuPinnedFolderNetwork,omitempty"`
	// StartMenuPinnedFolderPersonalFolder Enforces the visibility (Show/Hide) of the PersonalFolder shortcut on the Start menu.
	StartMenuPinnedFolderPersonalFolder *VisibilitySetting `json:"startMenuPinnedFolderPersonalFolder,omitempty"`
	// StartMenuPinnedFolderPictures Enforces the visibility (Show/Hide) of the Pictures folder shortcut on the Start menu.
	StartMenuPinnedFolderPictures *VisibilitySetting `json:"startMenuPinnedFolderPictures,omitempty"`
	// StartMenuPinnedFolderSettings Enforces the visibility (Show/Hide) of the Settings folder shortcut on the Start menu.
	StartMenuPinnedFolderSettings *VisibilitySetting `json:"startMenuPinnedFolderSettings,omitempty"`
	// StartMenuPinnedFolderVideos Enforces the visibility (Show/Hide) of the Videos folder shortcut on the Start menu.
	StartMenuPinnedFolderVideos *VisibilitySetting `json:"startMenuPinnedFolderVideos,omitempty"`
	// SettingsBlockSettingsApp Indicates whether or not to block access to Settings app.
	SettingsBlockSettingsApp *bool `json:"settingsBlockSettingsApp,omitempty"`
	// SettingsBlockSystemPage Indicates whether or not to block access to System in Settings app.
	SettingsBlockSystemPage *bool `json:"settingsBlockSystemPage,omitempty"`
	// SettingsBlockDevicesPage Indicates whether or not to block access to Devices in Settings app.
	SettingsBlockDevicesPage *bool `json:"settingsBlockDevicesPage,omitempty"`
	// SettingsBlockNetworkInternetPage Indicates whether or not to block access to Network & Internet in Settings app.
	SettingsBlockNetworkInternetPage *bool `json:"settingsBlockNetworkInternetPage,omitempty"`
	// SettingsBlockPersonalizationPage Indicates whether or not to block access to Personalization in Settings app.
	SettingsBlockPersonalizationPage *bool `json:"settingsBlockPersonalizationPage,omitempty"`
	// SettingsBlockAccountsPage Indicates whether or not to block access to Accounts in Settings app.
	SettingsBlockAccountsPage *bool `json:"settingsBlockAccountsPage,omitempty"`
	// SettingsBlockTimeLanguagePage Indicates whether or not to block access to Time & Language in Settings app.
	SettingsBlockTimeLanguagePage *bool `json:"settingsBlockTimeLanguagePage,omitempty"`
	// SettingsBlockEaseOfAccessPage Indicates whether or not to block access to Ease of Access in Settings app.
	SettingsBlockEaseOfAccessPage *bool `json:"settingsBlockEaseOfAccessPage,omitempty"`
	// SettingsBlockPrivacyPage Indicates whether or not to block access to Privacy in Settings app.
	SettingsBlockPrivacyPage *bool `json:"settingsBlockPrivacyPage,omitempty"`
	// SettingsBlockUpdateSecurityPage Indicates whether or not to block access to Update & Security in Settings app.
	SettingsBlockUpdateSecurityPage *bool `json:"settingsBlockUpdateSecurityPage,omitempty"`
	// SettingsBlockAppsPage Indicates whether or not to block access to Apps in Settings app.
	SettingsBlockAppsPage *bool `json:"settingsBlockAppsPage,omitempty"`
	// SettingsBlockGamingPage Indicates whether or not to block access to Gaming in Settings app.
	SettingsBlockGamingPage *bool `json:"settingsBlockGamingPage,omitempty"`
	// WindowsSpotlightBlockConsumerSpecificFeatures Allows IT admins to block experiences that are typically for consumers only, such as Start suggestions, Membership notifications, Post-OOBE app install and redirect tiles.
	WindowsSpotlightBlockConsumerSpecificFeatures *bool `json:"windowsSpotlightBlockConsumerSpecificFeatures,omitempty"`
	// WindowsSpotlightBlocked Allows IT admins to turn off all Windows Spotlight features
	WindowsSpotlightBlocked *bool `json:"windowsSpotlightBlocked,omitempty"`
	// WindowsSpotlightBlockOnActionCenter Block suggestions from Microsoft that show after each OS clean install, upgrade or in an on-going basis to introduce users to what is new or changed
	WindowsSpotlightBlockOnActionCenter *bool `json:"windowsSpotlightBlockOnActionCenter,omitempty"`
	// WindowsSpotlightBlockTailoredExperiences Block personalized content in Windows spotlight based on user’s device usage.
	WindowsSpotlightBlockTailoredExperiences *bool `json:"windowsSpotlightBlockTailoredExperiences,omitempty"`
	// WindowsSpotlightBlockThirdPartyNotifications Block third party content delivered via Windows Spotlight
	WindowsSpotlightBlockThirdPartyNotifications *bool `json:"windowsSpotlightBlockThirdPartyNotifications,omitempty"`
	// WindowsSpotlightBlockWelcomeExperience Block Windows Spotlight Windows welcome experience
	WindowsSpotlightBlockWelcomeExperience *bool `json:"windowsSpotlightBlockWelcomeExperience,omitempty"`
	// WindowsSpotlightBlockWindowsTips Allows IT admins to turn off the popup of Windows Tips.
	WindowsSpotlightBlockWindowsTips *bool `json:"windowsSpotlightBlockWindowsTips,omitempty"`
	// WindowsSpotlightConfigureOnLockScreen Specifies the type of Spotlight
	WindowsSpotlightConfigureOnLockScreen *WindowsSpotlightEnablementSettings `json:"windowsSpotlightConfigureOnLockScreen,omitempty"`
	// NetworkProxyApplySettingsDeviceWide If set, proxy settings will be applied to all processes and accounts in the device. Otherwise, it will be applied to the user account that’s enrolled into MDM.
	NetworkProxyApplySettingsDeviceWide *bool `json:"networkProxyApplySettingsDeviceWide,omitempty"`
	// NetworkProxyDisableAutoDetect Disable automatic detection of settings. If enabled, the system will try to find the path to a proxy auto-config (PAC) script.
	NetworkProxyDisableAutoDetect *bool `json:"networkProxyDisableAutoDetect,omitempty"`
	// NetworkProxyAutomaticConfigurationUrl Address to the proxy auto-config (PAC) script you want to use.
	NetworkProxyAutomaticConfigurationUrl *string `json:"networkProxyAutomaticConfigurationUrl,omitempty"`
	// NetworkProxyServer Specifies manual proxy server settings.
	NetworkProxyServer *Windows10NetworkProxyServer `json:"networkProxyServer,omitempty"`
	// AccountsBlockAddingNonMicrosoftAccountEmail Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account.
	AccountsBlockAddingNonMicrosoftAccountEmail *bool `json:"accountsBlockAddingNonMicrosoftAccountEmail,omitempty"`
	// AntiTheftModeBlocked Indicates whether or not to block the user from selecting an AntiTheft mode preference (Windows 10 Mobile only).
	AntiTheftModeBlocked *bool `json:"antiTheftModeBlocked,omitempty"`
	// BluetoothBlocked Whether or not to Block the user from using bluetooth.
	BluetoothBlocked *bool `json:"bluetoothBlocked,omitempty"`
	// CameraBlocked Whether or not to Block the user from accessing the camera of the device.
	CameraBlocked *bool `json:"cameraBlocked,omitempty"`
	// ConnectedDevicesServiceBlocked Whether or not to block Connected Devices Service which enables discovery and connection to other devices, remote messaging, remote app sessions and other cross-device experiences.
	ConnectedDevicesServiceBlocked *bool `json:"connectedDevicesServiceBlocked,omitempty"`
	// CertificatesBlockManualRootCertificateInstallation Whether or not to Block the user from doing manual root certificate installation.
	CertificatesBlockManualRootCertificateInstallation *bool `json:"certificatesBlockManualRootCertificateInstallation,omitempty"`
	// CopyPasteBlocked Whether or not to Block the user from using copy paste.
	CopyPasteBlocked *bool `json:"copyPasteBlocked,omitempty"`
	// CortanaBlocked Whether or not to Block the user from using Cortana.
	CortanaBlocked *bool `json:"cortanaBlocked,omitempty"`
	// DeviceManagementBlockFactoryResetOnMobile Indicates whether or not to Block the user from resetting their phone.
	DeviceManagementBlockFactoryResetOnMobile *bool `json:"deviceManagementBlockFactoryResetOnMobile,omitempty"`
	// DeviceManagementBlockManualUnenroll Indicates whether or not to Block the user from doing manual un-enrollment from device management.
	DeviceManagementBlockManualUnenroll *bool `json:"deviceManagementBlockManualUnenroll,omitempty"`
	// SafeSearchFilter Specifies what filter level of safe search is required.
	SafeSearchFilter *SafeSearchFilterType `json:"safeSearchFilter,omitempty"`
	// EdgeBlockPopups Indicates whether or not to block popups.
	EdgeBlockPopups *bool `json:"edgeBlockPopups,omitempty"`
	// EdgeBlockSearchSuggestions Indicates whether or not to block the user from using the search suggestions in the address bar.
	EdgeBlockSearchSuggestions *bool `json:"edgeBlockSearchSuggestions,omitempty"`
	// EdgeBlockSendingIntranetTrafficToInternetExplorer Indicates whether or not to switch the intranet traffic from Edge to Internet Explorer. Note: the name of this property is misleading; the property is obsolete, use EdgeSendIntranetTrafficToInternetExplorer instead.
	EdgeBlockSendingIntranetTrafficToInternetExplorer *bool `json:"edgeBlockSendingIntranetTrafficToInternetExplorer,omitempty"`
	// EdgeSendIntranetTrafficToInternetExplorer Indicates whether or not to switch the intranet traffic from Edge to Internet Explorer.
	EdgeSendIntranetTrafficToInternetExplorer *bool `json:"edgeSendIntranetTrafficToInternetExplorer,omitempty"`
	// EdgeRequireSmartScreen Indicates whether or not to Require the user to use the smart screen filter.
	EdgeRequireSmartScreen *bool `json:"edgeRequireSmartScreen,omitempty"`
	// EdgeEnterpriseModeSiteListLocation Indicates the enterprise mode site list location. Could be a local file, local network or http location.
	EdgeEnterpriseModeSiteListLocation *string `json:"edgeEnterpriseModeSiteListLocation,omitempty"`
	// EdgeFirstRunUrl The first run URL for when Edge browser is opened for the first time.
	EdgeFirstRunUrl *string `json:"edgeFirstRunUrl,omitempty"`
	// EdgeSearchEngine Allows IT admins to set a default search engine for MDM-Controlled devices. Users can override this and change their default search engine provided the AllowSearchEngineCustomization policy is not set.
	EdgeSearchEngine *EdgeSearchEngineBase `json:"edgeSearchEngine,omitempty"`
	// EdgeHomepageUrls The list of URLs for homepages shodwn on MDM-enrolled devices on Edge browser.
	EdgeHomepageUrls []string `json:"edgeHomepageUrls,omitempty"`
	// EdgeBlockAccessToAboutFlags Indicates whether or not to prevent access to about flags on Edge browser.
	EdgeBlockAccessToAboutFlags *bool `json:"edgeBlockAccessToAboutFlags,omitempty"`
	// SmartScreenBlockPromptOverride Indicates whether or not users can override SmartScreen Filter warnings about potentially malicious websites.
	SmartScreenBlockPromptOverride *bool `json:"smartScreenBlockPromptOverride,omitempty"`
	// SmartScreenBlockPromptOverrideForFiles Indicates whether or not users can override the SmartScreen Filter warnings about downloading unverified files
	SmartScreenBlockPromptOverrideForFiles *bool `json:"smartScreenBlockPromptOverrideForFiles,omitempty"`
	// WebRtcBlockLocalhostIpAddress Indicates whether or not user's localhost IP address is displayed while making phone calls using the WebRTC
	WebRtcBlockLocalhostIpAddress *bool `json:"webRtcBlockLocalhostIpAddress,omitempty"`
	// InternetSharingBlocked Indicates whether or not to Block the user from using internet sharing.
	InternetSharingBlocked *bool `json:"internetSharingBlocked,omitempty"`
	// SettingsBlockAddProvisioningPackage Indicates whether or not to block the user from installing provisioning packages.
	SettingsBlockAddProvisioningPackage *bool `json:"settingsBlockAddProvisioningPackage,omitempty"`
	// SettingsBlockRemoveProvisioningPackage Indicates whether or not to block the runtime configuration agent from removing provisioning packages.
	SettingsBlockRemoveProvisioningPackage *bool `json:"settingsBlockRemoveProvisioningPackage,omitempty"`
	// SettingsBlockChangeSystemTime Indicates whether or not to block the user from changing date and time settings.
	SettingsBlockChangeSystemTime *bool `json:"settingsBlockChangeSystemTime,omitempty"`
	// SettingsBlockEditDeviceName Indicates whether or not to block the user from editing the device name.
	SettingsBlockEditDeviceName *bool `json:"settingsBlockEditDeviceName,omitempty"`
	// SettingsBlockChangeRegion Indicates whether or not to block the user from changing the region settings.
	SettingsBlockChangeRegion *bool `json:"settingsBlockChangeRegion,omitempty"`
	// SettingsBlockChangeLanguage Indicates whether or not to block the user from changing the language settings.
	SettingsBlockChangeLanguage *bool `json:"settingsBlockChangeLanguage,omitempty"`
	// SettingsBlockChangePowerSleep Indicates whether or not to block the user from changing power and sleep settings.
	SettingsBlockChangePowerSleep *bool `json:"settingsBlockChangePowerSleep,omitempty"`
	// LocationServicesBlocked Indicates whether or not to Block the user from location services.
	LocationServicesBlocked *bool `json:"locationServicesBlocked,omitempty"`
	// MicrosoftAccountBlocked Indicates whether or not to Block a Microsoft account.
	MicrosoftAccountBlocked *bool `json:"microsoftAccountBlocked,omitempty"`
	// MicrosoftAccountBlockSettingsSync Indicates whether or not to Block Microsoft account settings sync.
	MicrosoftAccountBlockSettingsSync *bool `json:"microsoftAccountBlockSettingsSync,omitempty"`
	// NfcBlocked Indicates whether or not to Block the user from using near field communication.
	NfcBlocked *bool `json:"nfcBlocked,omitempty"`
	// ResetProtectionModeBlocked Indicates whether or not to Block the user from reset protection mode.
	ResetProtectionModeBlocked *bool `json:"resetProtectionModeBlocked,omitempty"`
	// ScreenCaptureBlocked Indicates whether or not to Block the user from taking Screenshots.
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`
	// StorageBlockRemovableStorage Indicates whether or not to Block the user from using removable storage.
	StorageBlockRemovableStorage *bool `json:"storageBlockRemovableStorage,omitempty"`
	// StorageRequireMobileDeviceEncryption Indicating whether or not to require encryption on a mobile device.
	StorageRequireMobileDeviceEncryption *bool `json:"storageRequireMobileDeviceEncryption,omitempty"`
	// UsbBlocked Indicates whether or not to Block the user from USB connection.
	UsbBlocked *bool `json:"usbBlocked,omitempty"`
	// VoiceRecordingBlocked Indicates whether or not to Block the user from voice recording.
	VoiceRecordingBlocked *bool `json:"voiceRecordingBlocked,omitempty"`
	// WiFiBlockAutomaticConnectHotspots Indicating whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.
	WiFiBlockAutomaticConnectHotspots *bool `json:"wiFiBlockAutomaticConnectHotspots,omitempty"`
	// WiFiBlocked Indicates whether or not to Block the user from using Wi-Fi.
	WiFiBlocked *bool `json:"wiFiBlocked,omitempty"`
	// WiFiBlockManualConfiguration Indicates whether or not to Block the user from using Wi-Fi manual configuration.
	WiFiBlockManualConfiguration *bool `json:"wiFiBlockManualConfiguration,omitempty"`
	// WiFiScanInterval Specify how often devices scan for Wi-Fi networks. Supported values are 1-500, where 100 = default, and 500 = low frequency. Valid values 1 to 500
	WiFiScanInterval *int `json:"wiFiScanInterval,omitempty"`
	// WirelessDisplayBlockProjectionToThisDevice Indicates whether or not to allow other devices from discovering this PC for projection.
	WirelessDisplayBlockProjectionToThisDevice *bool `json:"wirelessDisplayBlockProjectionToThisDevice,omitempty"`
	// WirelessDisplayBlockUserInputFromReceiver Indicates whether or not to allow user input from wireless display receiver.
	WirelessDisplayBlockUserInputFromReceiver *bool `json:"wirelessDisplayBlockUserInputFromReceiver,omitempty"`
	// WirelessDisplayRequirePinForPairing Indicates whether or not to require a PIN for new devices to initiate pairing.
	WirelessDisplayRequirePinForPairing *bool `json:"wirelessDisplayRequirePinForPairing,omitempty"`
	// WindowsStoreBlocked Indicates whether or not to Block the user from using the Windows store.
	WindowsStoreBlocked *bool `json:"windowsStoreBlocked,omitempty"`
	// AppsAllowTrustedAppsSideloading Indicates whether apps from AppX packages signed with a trusted certificate can be side loaded.
	AppsAllowTrustedAppsSideloading *StateManagementSetting `json:"appsAllowTrustedAppsSideloading,omitempty"`
	// WindowsStoreBlockAutoUpdate Indicates whether or not to block automatic update of apps from Windows Store.
	WindowsStoreBlockAutoUpdate *bool `json:"windowsStoreBlockAutoUpdate,omitempty"`
	// DeveloperUnlockSetting Indicates whether or not to allow developer unlock.
	DeveloperUnlockSetting *StateManagementSetting `json:"developerUnlockSetting,omitempty"`
	// SharedUserAppDataAllowed Indicates whether or not to block multiple users of the same app to share data.
	SharedUserAppDataAllowed *bool `json:"sharedUserAppDataAllowed,omitempty"`
	// AppsBlockWindowsStoreOriginatedApps Indicates whether or not to disable the launch of all apps from Windows Store that came pre-installed or were downloaded.
	AppsBlockWindowsStoreOriginatedApps *bool `json:"appsBlockWindowsStoreOriginatedApps,omitempty"`
	// WindowsStoreEnablePrivateStoreOnly Indicates whether or not to enable Private Store Only.
	WindowsStoreEnablePrivateStoreOnly *bool `json:"windowsStoreEnablePrivateStoreOnly,omitempty"`
	// StorageRestrictAppDataToSystemVolume Indicates whether application data is restricted to the system drive.
	StorageRestrictAppDataToSystemVolume *bool `json:"storageRestrictAppDataToSystemVolume,omitempty"`
	// StorageRestrictAppInstallToSystemVolume Indicates whether the installation of applications is restricted to the system drive.
	StorageRestrictAppInstallToSystemVolume *bool `json:"storageRestrictAppInstallToSystemVolume,omitempty"`
	// GameDvrBlocked Indicates whether or not to block DVR and broadcasting.
	GameDvrBlocked *bool `json:"gameDvrBlocked,omitempty"`
	// ExperienceBlockDeviceDiscovery Indicates whether or not to enable device discovery UX.
	ExperienceBlockDeviceDiscovery *bool `json:"experienceBlockDeviceDiscovery,omitempty"`
	// ExperienceBlockErrorDialogWhenNoSIM Indicates whether or not to allow the error dialog from displaying if no SIM card is detected.
	ExperienceBlockErrorDialogWhenNoSIM *bool `json:"experienceBlockErrorDialogWhenNoSIM,omitempty"`
	// ExperienceBlockTaskSwitcher Indicates whether or not to enable task switching on the device.
	ExperienceBlockTaskSwitcher *bool `json:"experienceBlockTaskSwitcher,omitempty"`
	// LogonBlockFastUserSwitching Disables the ability to quickly switch between users that are logged on simultaneously without logging off.
	LogonBlockFastUserSwitching *bool `json:"logonBlockFastUserSwitching,omitempty"`
	// TenantLockdownRequireNetworkDuringOutOfBoxExperience Whether the device is required to connect to the network.
	TenantLockdownRequireNetworkDuringOutOfBoxExperience *bool `json:"tenantLockdownRequireNetworkDuringOutOfBoxExperience,omitempty"`
}

// Windows10MobileCompliancePolicy This class contains compliance settings for Windows 10 Mobile.
type Windows10MobileCompliancePolicy struct {
	DeviceCompliancePolicy
	// PasswordRequired Require a password to unlock Windows Phone device.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// PasswordBlockSimple Whether or not to block syncing the calendar.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`
	// PasswordMinimumLength Minimum password length. Valid values 4 to 16
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinimumCharacterSetCount The number of character sets required in the password.
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordRequiredType The required password type.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordPreviousPasswordBlockCount The number of previous passwords to prevent re-use of.
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordExpirationDays Number of days before password expiration. Valid values 1 to 255
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinutesOfInactivityBeforeLock Minutes of inactivity before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	// PasswordRequireToUnlockFromIdle Require a password to unlock an idle device.
	PasswordRequireToUnlockFromIdle *bool `json:"passwordRequireToUnlockFromIdle,omitempty"`
	// OsMinimumVersion Minimum Windows Phone version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Maximum Windows Phone version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// EarlyLaunchAntiMalwareDriverEnabled Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.
	EarlyLaunchAntiMalwareDriverEnabled *bool `json:"earlyLaunchAntiMalwareDriverEnabled,omitempty"`
	// BitLockerEnabled Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled
	BitLockerEnabled *bool `json:"bitLockerEnabled,omitempty"`
	// SecureBootEnabled Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.
	SecureBootEnabled *bool `json:"secureBootEnabled,omitempty"`
	// CodeIntegrityEnabled Require devices to be reported as healthy by Windows Device Health Attestation.
	CodeIntegrityEnabled *bool `json:"codeIntegrityEnabled,omitempty"`
	// StorageRequireEncryption Require encryption on windows devices.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`
}

// Windows10NetworkProxyServer undocumented
type Windows10NetworkProxyServer struct {
	// Address Address to the proxy server. Specify an address in the format <server>[“:”<port>]
	Address *string `json:"address,omitempty"`
	// Exceptions Addresses that should not use the proxy server. The system will not use the proxy server for addresses beginning with what is specified in this node.
	Exceptions []string `json:"exceptions,omitempty"`
	// UseForLocalAddresses Specifies whether the proxy server should be used for local (intranet) addresses.
	UseForLocalAddresses *bool `json:"useForLocalAddresses,omitempty"`
}

// Windows10SecureAssessmentConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the secureAssessment resource.
type Windows10SecureAssessmentConfiguration struct {
	DeviceConfiguration
	// LaunchUri Url link to an assessment that's automatically loaded when the secure assessment browser is launched. It has to be a valid Url (http[s]://msdn.microsoft.com/).
	LaunchUri *string `json:"launchUri,omitempty"`
	// ConfigurationAccount The account used to configure the Windows device for taking the test. The user can be a domain account (domain\user), an AAD account (username@tenant.com) or a local account (username).
	ConfigurationAccount *string `json:"configurationAccount,omitempty"`
	// AllowPrinting Indicates whether or not to allow the app from printing during the test.
	AllowPrinting *bool `json:"allowPrinting,omitempty"`
	// AllowScreenCapture Indicates whether or not to allow screen capture capability during a test.
	AllowScreenCapture *bool `json:"allowScreenCapture,omitempty"`
	// AllowTextSuggestion Indicates whether or not to allow text suggestions during the test.
	AllowTextSuggestion *bool `json:"allowTextSuggestion,omitempty"`
}

// Windows10TeamGeneralConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the windows10TeamGeneralConfiguration resource.
type Windows10TeamGeneralConfiguration struct {
	DeviceConfiguration
	// AzureOperationalInsightsBlockTelemetry Indicates whether or not to Block Azure Operational Insights.
	AzureOperationalInsightsBlockTelemetry *bool `json:"azureOperationalInsightsBlockTelemetry,omitempty"`
	// AzureOperationalInsightsWorkspaceId The Azure Operational Insights workspace id.
	AzureOperationalInsightsWorkspaceId *string `json:"azureOperationalInsightsWorkspaceId,omitempty"`
	// AzureOperationalInsightsWorkspaceKey The Azure Operational Insights Workspace key.
	AzureOperationalInsightsWorkspaceKey *string `json:"azureOperationalInsightsWorkspaceKey,omitempty"`
	// ConnectAppBlockAutoLaunch Specifies whether to automatically launch the Connect app whenever a projection is initiated.
	ConnectAppBlockAutoLaunch *bool `json:"connectAppBlockAutoLaunch,omitempty"`
	// MaintenanceWindowBlocked Indicates whether or not to Block setting a maintenance window for device updates.
	MaintenanceWindowBlocked *bool `json:"maintenanceWindowBlocked,omitempty"`
	// MaintenanceWindowDurationInHours Maintenance window duration for device updates. Valid values 0 to 5
	MaintenanceWindowDurationInHours *int `json:"maintenanceWindowDurationInHours,omitempty"`
	// MaintenanceWindowStartTime Maintenance window start time for device updates.
	MaintenanceWindowStartTime *time.Time `json:"maintenanceWindowStartTime,omitempty"`
	// MiracastChannel The channel.
	MiracastChannel *MiracastChannel `json:"miracastChannel,omitempty"`
	// MiracastBlocked Indicates whether or not to Block wireless projection.
	MiracastBlocked *bool `json:"miracastBlocked,omitempty"`
	// MiracastRequirePin Indicates whether or not to require a pin for wireless projection.
	MiracastRequirePin *bool `json:"miracastRequirePin,omitempty"`
	// SettingsBlockMyMeetingsAndFiles Specifies whether to disable the "My meetings and files" feature in the Start menu, which shows the signed-in user's meetings and files from Office 365.
	SettingsBlockMyMeetingsAndFiles *bool `json:"settingsBlockMyMeetingsAndFiles,omitempty"`
	// SettingsBlockSessionResume Specifies whether to allow the ability to resume a session when the session times out.
	SettingsBlockSessionResume *bool `json:"settingsBlockSessionResume,omitempty"`
	// SettingsBlockSigninSuggestions Specifies whether to disable auto-populating of the sign-in dialog with invitees from scheduled meetings.
	SettingsBlockSigninSuggestions *bool `json:"settingsBlockSigninSuggestions,omitempty"`
	// SettingsDefaultVolume Specifies the default volume value for a new session. Permitted values are 0-100. The default is 45. Valid values 0 to 100
	SettingsDefaultVolume *int `json:"settingsDefaultVolume,omitempty"`
	// SettingsScreenTimeoutInMinutes Specifies the number of minutes until the Hub screen turns off.
	SettingsScreenTimeoutInMinutes *int `json:"settingsScreenTimeoutInMinutes,omitempty"`
	// SettingsSessionTimeoutInMinutes Specifies the number of minutes until the session times out.
	SettingsSessionTimeoutInMinutes *int `json:"settingsSessionTimeoutInMinutes,omitempty"`
	// SettingsSleepTimeoutInMinutes Specifies the number of minutes until the Hub enters sleep mode.
	SettingsSleepTimeoutInMinutes *int `json:"settingsSleepTimeoutInMinutes,omitempty"`
	// WelcomeScreenBlockAutomaticWakeUp Indicates whether or not to Block the welcome screen from waking up automatically when someone enters the room.
	WelcomeScreenBlockAutomaticWakeUp *bool `json:"welcomeScreenBlockAutomaticWakeUp,omitempty"`
	// WelcomeScreenBackgroundImageUrl The welcome screen background image URL. The URL must use the HTTPS protocol and return a PNG image.
	WelcomeScreenBackgroundImageUrl *string `json:"welcomeScreenBackgroundImageUrl,omitempty"`
	// WelcomeScreenMeetingInformation The welcome screen meeting information shown.
	WelcomeScreenMeetingInformation *WelcomeScreenMeetingInformation `json:"welcomeScreenMeetingInformation,omitempty"`
}

// Windows81CompliancePolicy This class contains compliance settings for Windows 8.1.
type Windows81CompliancePolicy struct {
	DeviceCompliancePolicy
	// PasswordRequired Require a password to unlock Windows device.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// PasswordBlockSimple Indicates whether or not to block simple password.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`
	// PasswordExpirationDays Password expiration in days.
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength The minimum password length.
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeLock Minutes of inactivity before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	// PasswordMinimumCharacterSetCount The number of character sets required in the password.
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordRequiredType The required password type.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordPreviousPasswordBlockCount The number of previous passwords to prevent re-use of. Valid values 0 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// OsMinimumVersion Minimum Windows 8.1 version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Maximum Windows 8.1 version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// StorageRequireEncryption Indicates whether or not to require encryption on a windows 8.1 device.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`
}

// Windows81GeneralConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the windows81GeneralConfiguration resource.
type Windows81GeneralConfiguration struct {
	DeviceConfiguration
	// AccountsBlockAddingNonMicrosoftAccountEmail Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account.
	AccountsBlockAddingNonMicrosoftAccountEmail *bool `json:"accountsBlockAddingNonMicrosoftAccountEmail,omitempty"`
	// ApplyOnlyToWindows81 Value indicating whether this policy only applies to Windows 8.1. This property is read-only.
	ApplyOnlyToWindows81 *bool `json:"applyOnlyToWindows81,omitempty"`
	// BrowserBlockAutofill Indicates whether or not to block auto fill.
	BrowserBlockAutofill *bool `json:"browserBlockAutofill,omitempty"`
	// BrowserBlockAutomaticDetectionOfIntranetSites Indicates whether or not to block automatic detection of Intranet sites.
	BrowserBlockAutomaticDetectionOfIntranetSites *bool `json:"browserBlockAutomaticDetectionOfIntranetSites,omitempty"`
	// BrowserBlockEnterpriseModeAccess Indicates whether or not to block enterprise mode access.
	BrowserBlockEnterpriseModeAccess *bool `json:"browserBlockEnterpriseModeAccess,omitempty"`
	// BrowserBlockJavaScript Indicates whether or not to Block the user from using JavaScript.
	BrowserBlockJavaScript *bool `json:"browserBlockJavaScript,omitempty"`
	// BrowserBlockPlugins Indicates whether or not to block plug-ins.
	BrowserBlockPlugins *bool `json:"browserBlockPlugins,omitempty"`
	// BrowserBlockPopups Indicates whether or not to block popups.
	BrowserBlockPopups *bool `json:"browserBlockPopups,omitempty"`
	// BrowserBlockSendingDoNotTrackHeader Indicates whether or not to Block the user from sending the do not track header.
	BrowserBlockSendingDoNotTrackHeader *bool `json:"browserBlockSendingDoNotTrackHeader,omitempty"`
	// BrowserBlockSingleWordEntryOnIntranetSites Indicates whether or not to block a single word entry on Intranet sites.
	BrowserBlockSingleWordEntryOnIntranetSites *bool `json:"browserBlockSingleWordEntryOnIntranetSites,omitempty"`
	// BrowserRequireSmartScreen Indicates whether or not to require the user to use the smart screen filter.
	BrowserRequireSmartScreen *bool `json:"browserRequireSmartScreen,omitempty"`
	// BrowserEnterpriseModeSiteListLocation The enterprise mode site list location. Could be a local file, local network or http location.
	BrowserEnterpriseModeSiteListLocation *string `json:"browserEnterpriseModeSiteListLocation,omitempty"`
	// BrowserInternetSecurityLevel The internet security level.
	BrowserInternetSecurityLevel *InternetSiteSecurityLevel `json:"browserInternetSecurityLevel,omitempty"`
	// BrowserIntranetSecurityLevel The Intranet security level.
	BrowserIntranetSecurityLevel *SiteSecurityLevel `json:"browserIntranetSecurityLevel,omitempty"`
	// BrowserLoggingReportLocation The logging report location.
	BrowserLoggingReportLocation *string `json:"browserLoggingReportLocation,omitempty"`
	// BrowserRequireHighSecurityForRestrictedSites Indicates whether or not to require high security for restricted sites.
	BrowserRequireHighSecurityForRestrictedSites *bool `json:"browserRequireHighSecurityForRestrictedSites,omitempty"`
	// BrowserRequireFirewall Indicates whether or not to require a firewall.
	BrowserRequireFirewall *bool `json:"browserRequireFirewall,omitempty"`
	// BrowserRequireFraudWarning Indicates whether or not to require fraud warning.
	BrowserRequireFraudWarning *bool `json:"browserRequireFraudWarning,omitempty"`
	// BrowserTrustedSitesSecurityLevel The trusted sites security level.
	BrowserTrustedSitesSecurityLevel *SiteSecurityLevel `json:"browserTrustedSitesSecurityLevel,omitempty"`
	// CellularBlockDataRoaming Indicates whether or not to block data roaming.
	CellularBlockDataRoaming *bool `json:"cellularBlockDataRoaming,omitempty"`
	// DiagnosticsBlockDataSubmission Indicates whether or not to block diagnostic data submission.
	DiagnosticsBlockDataSubmission *bool `json:"diagnosticsBlockDataSubmission,omitempty"`
	// PasswordBlockPicturePasswordAndPin Indicates whether or not to Block the user from using a pictures password and pin.
	PasswordBlockPicturePasswordAndPin *bool `json:"passwordBlockPicturePasswordAndPin,omitempty"`
	// PasswordExpirationDays Password expiration in days.
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength The minimum password length.
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeScreenTimeout The minutes of inactivity before the screen times out.
	PasswordMinutesOfInactivityBeforeScreenTimeout *int `json:"passwordMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	// PasswordMinimumCharacterSetCount The number of character sets required in the password.
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordPreviousPasswordBlockCount The number of previous passwords to prevent re-use of. Valid values 0 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordRequiredType The required password type.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordSignInFailureCountBeforeFactoryReset The number of sign in failures before factory reset.
	PasswordSignInFailureCountBeforeFactoryReset *int `json:"passwordSignInFailureCountBeforeFactoryReset,omitempty"`
	// StorageRequireDeviceEncryption Indicates whether or not to require encryption on a mobile device.
	StorageRequireDeviceEncryption *bool `json:"storageRequireDeviceEncryption,omitempty"`
	// UpdatesRequireAutomaticUpdates Indicates whether or not to require automatic updates.
	UpdatesRequireAutomaticUpdates *bool `json:"updatesRequireAutomaticUpdates,omitempty"`
	// UserAccountControlSettings The user account control settings.
	UserAccountControlSettings *WindowsUserAccountControlSettings `json:"userAccountControlSettings,omitempty"`
	// WorkFoldersUrl The work folders url.
	WorkFoldersUrl *string `json:"workFoldersUrl,omitempty"`
}

// WindowsDefenderAdvancedThreatProtectionConfiguration Windows Defender AdvancedThreatProtection Configuration.
type WindowsDefenderAdvancedThreatProtectionConfiguration struct {
	DeviceConfiguration
	// AllowSampleSharing Windows Defender AdvancedThreatProtection "Allow Sample Sharing" Rule
	AllowSampleSharing *bool `json:"allowSampleSharing,omitempty"`
	// EnableExpeditedTelemetryReporting Expedite Windows Defender Advanced Threat Protection telemetry reporting frequency.
	EnableExpeditedTelemetryReporting *bool `json:"enableExpeditedTelemetryReporting,omitempty"`
}

// WindowsDefenderScanActionResult undocumented
type WindowsDefenderScanActionResult struct {
	DeviceActionResult
	// ScanType Scan type either full scan or quick scan
	ScanType *string `json:"scanType,omitempty"`
}

// WindowsDeviceADAccount undocumented
type WindowsDeviceADAccount struct {
	WindowsDeviceAccount
	// DomainName undocumented
	DomainName *string `json:"domainName,omitempty"`
	// UserName undocumented
	UserName *string `json:"userName,omitempty"`
}

// WindowsDeviceAccount undocumented
type WindowsDeviceAccount struct {
	// Password undocumented
	Password *string `json:"password,omitempty"`
}

// WindowsDeviceAzureADAccount undocumented
type WindowsDeviceAzureADAccount struct {
	WindowsDeviceAccount
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// WindowsFirewallNetworkProfile undocumented
type WindowsFirewallNetworkProfile struct {
	// FirewallEnabled Configures the host device to allow or block the firewall and advanced security enforcement for the network profile.
	FirewallEnabled *StateManagementSetting `json:"firewallEnabled,omitempty"`
	// StealthModeBlocked Prevent the server from operating in stealth mode. When StealthModeRequired and StealthModeBlocked are both true, StealthModeBlocked takes priority.
	StealthModeBlocked *bool `json:"stealthModeBlocked,omitempty"`
	// IncomingTrafficBlocked Configures the firewall to block all incoming traffic regardless of other policy settings. When IncomingTrafficRequired and IncomingTrafficBlocked are both true, IncomingTrafficBlocked takes priority.
	IncomingTrafficBlocked *bool `json:"incomingTrafficBlocked,omitempty"`
	// UnicastResponsesToMulticastBroadcastsBlocked Configures the firewall to block unicast responses to multicast broadcast traffic. When UnicastResponsesToMulticastBroadcastsRequired and UnicastResponsesToMulticastBroadcastsBlocked are both true, UnicastResponsesToMulticastBroadcastsBlocked takes priority.
	UnicastResponsesToMulticastBroadcastsBlocked *bool `json:"unicastResponsesToMulticastBroadcastsBlocked,omitempty"`
	// InboundNotificationsBlocked Prevents the firewall from displaying notifications when an application is blocked from listening on a port. When InboundNotificationsRequired and InboundNotificationsBlocked are both true, InboundNotificationsBlocked takes priority.
	InboundNotificationsBlocked *bool `json:"inboundNotificationsBlocked,omitempty"`
	// AuthorizedApplicationRulesFromGroupPolicyMerged Configures the firewall to merge authorized application rules from group policy with those from local store instead of ignoring the local store rules. When AuthorizedApplicationRulesFromGroupPolicyNotMerged and AuthorizedApplicationRulesFromGroupPolicyMerged are both true, AuthorizedApplicationRulesFromGroupPolicyMerged takes priority.
	AuthorizedApplicationRulesFromGroupPolicyMerged *bool `json:"authorizedApplicationRulesFromGroupPolicyMerged,omitempty"`
	// GlobalPortRulesFromGroupPolicyMerged Configures the firewall to merge global port rules from group policy with those from local store instead of ignoring the local store rules. When GlobalPortRulesFromGroupPolicyNotMerged and GlobalPortRulesFromGroupPolicyMerged are both true, GlobalPortRulesFromGroupPolicyMerged takes priority.
	GlobalPortRulesFromGroupPolicyMerged *bool `json:"globalPortRulesFromGroupPolicyMerged,omitempty"`
	// ConnectionSecurityRulesFromGroupPolicyMerged Configures the firewall to merge connection security rules from group policy with those from local store instead of ignoring the local store rules. When ConnectionSecurityRulesFromGroupPolicyNotMerged and ConnectionSecurityRulesFromGroupPolicyMerged are both true, ConnectionSecurityRulesFromGroupPolicyMerged takes priority.
	ConnectionSecurityRulesFromGroupPolicyMerged *bool `json:"connectionSecurityRulesFromGroupPolicyMerged,omitempty"`
	// OutboundConnectionsBlocked Configures the firewall to block all outgoing connections by default. When OutboundConnectionsRequired and OutboundConnectionsBlocked are both true, OutboundConnectionsBlocked takes priority.
	OutboundConnectionsBlocked *bool `json:"outboundConnectionsBlocked,omitempty"`
	// InboundConnectionsBlocked Configures the firewall to block all incoming connections by default. When InboundConnectionsRequired and InboundConnectionsBlocked are both true, InboundConnectionsBlocked takes priority.
	InboundConnectionsBlocked *bool `json:"inboundConnectionsBlocked,omitempty"`
	// SecuredPacketExemptionAllowed Configures the firewall to allow the host computer to respond to unsolicited network traffic of that traffic is secured by IPSec even when stealthModeBlocked is set to true. When SecuredPacketExemptionBlocked and SecuredPacketExemptionAllowed are both true, SecuredPacketExemptionAllowed takes priority.
	SecuredPacketExemptionAllowed *bool `json:"securedPacketExemptionAllowed,omitempty"`
	// PolicyRulesFromGroupPolicyMerged Configures the firewall to merge Firewall Rule policies from group policy with those from local store instead of ignoring the local store rules. When PolicyRulesFromGroupPolicyNotMerged and PolicyRulesFromGroupPolicyMerged are both true, PolicyRulesFromGroupPolicyMerged takes priority.
	PolicyRulesFromGroupPolicyMerged *bool `json:"policyRulesFromGroupPolicyMerged,omitempty"`
}

// WindowsInformationProtection Policy for Windows information protection to configure detailed management settings
type WindowsInformationProtection struct {
	ManagedAppPolicy
	// EnforcementLevel WIP enforcement level.See the Enum definition for supported values
	EnforcementLevel *WindowsInformationProtectionEnforcementLevel `json:"enforcementLevel,omitempty"`
	// EnterpriseDomain Primary enterprise domain
	EnterpriseDomain *string `json:"enterpriseDomain,omitempty"`
	// EnterpriseProtectedDomainNames List of enterprise domains to be protected
	EnterpriseProtectedDomainNames []WindowsInformationProtectionResourceCollection `json:"enterpriseProtectedDomainNames,omitempty"`
	// ProtectionUnderLockConfigRequired Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
	ProtectionUnderLockConfigRequired *bool `json:"protectionUnderLockConfigRequired,omitempty"`
	// DataRecoveryCertificate Specifies a recovery certificate that can be used for data recovery of encrypted files. This is the same as the data recovery agent(DRA) certificate for encrypting file system(EFS)
	DataRecoveryCertificate *WindowsInformationProtectionDataRecoveryCertificate `json:"dataRecoveryCertificate,omitempty"`
	// RevokeOnUnenrollDisabled This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
	RevokeOnUnenrollDisabled *bool `json:"revokeOnUnenrollDisabled,omitempty"`
	// RightsManagementServicesTemplateId TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
	RightsManagementServicesTemplateId *UUID `json:"rightsManagementServicesTemplateId,omitempty"`
	// AzureRightsManagementServicesAllowed Specifies whether to allow Azure RMS encryption for WIP
	AzureRightsManagementServicesAllowed *bool `json:"azureRightsManagementServicesAllowed,omitempty"`
	// IconsVisible Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
	IconsVisible *bool `json:"iconsVisible,omitempty"`
	// ProtectedApps Protected applications can access enterprise data and the data handled by those applications are protected with encryption
	ProtectedApps []WindowsInformationProtectionApp `json:"protectedApps,omitempty"`
	// ExemptApps Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
	ExemptApps []WindowsInformationProtectionApp `json:"exemptApps,omitempty"`
	// EnterpriseNetworkDomainNames This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
	EnterpriseNetworkDomainNames []WindowsInformationProtectionResourceCollection `json:"enterpriseNetworkDomainNames,omitempty"`
	// EnterpriseProxiedDomains Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
	EnterpriseProxiedDomains []WindowsInformationProtectionProxiedDomainCollection `json:"enterpriseProxiedDomains,omitempty"`
	// EnterpriseIPRanges Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
	EnterpriseIPRanges []WindowsInformationProtectionIPRangeCollection `json:"enterpriseIPRanges,omitempty"`
	// EnterpriseIPRangesAreAuthoritative Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
	EnterpriseIPRangesAreAuthoritative *bool `json:"enterpriseIPRangesAreAuthoritative,omitempty"`
	// EnterpriseProxyServers This is a list of proxy servers. Any server not on this list is considered non-enterprise
	EnterpriseProxyServers []WindowsInformationProtectionResourceCollection `json:"enterpriseProxyServers,omitempty"`
	// EnterpriseInternalProxyServers This is the comma-separated list of internal proxy servers. For example, "157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59". These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
	EnterpriseInternalProxyServers []WindowsInformationProtectionResourceCollection `json:"enterpriseInternalProxyServers,omitempty"`
	// EnterpriseProxyServersAreAuthoritative Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
	EnterpriseProxyServersAreAuthoritative *bool `json:"enterpriseProxyServersAreAuthoritative,omitempty"`
	// NeutralDomainResources List of domain names that can used for work or personal resource
	NeutralDomainResources []WindowsInformationProtectionResourceCollection `json:"neutralDomainResources,omitempty"`
	// IndexingEncryptedStoresOrItemsBlocked This switch is for the Windows Search Indexer, to allow or disallow indexing of items
	IndexingEncryptedStoresOrItemsBlocked *bool `json:"indexingEncryptedStoresOrItemsBlocked,omitempty"`
	// SmbAutoEncryptedFileExtensions Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
	SmbAutoEncryptedFileExtensions []WindowsInformationProtectionResourceCollection `json:"smbAutoEncryptedFileExtensions,omitempty"`
	// IsAssigned Indicates if the policy is deployed to any inclusion groups or not.
	IsAssigned *bool `json:"isAssigned,omitempty"`
}

// WindowsInformationProtectionApp undocumented
type WindowsInformationProtectionApp struct {
	// DisplayName App display name.
	DisplayName *string `json:"displayName,omitempty"`
	// Description The app's description.
	Description *string `json:"description,omitempty"`
	// PublisherName The publisher name
	PublisherName *string `json:"publisherName,omitempty"`
	// ProductName The product name.
	ProductName *string `json:"productName,omitempty"`
	// Denied If true, app is denied protection or exemption.
	Denied *bool `json:"denied,omitempty"`
}

// WindowsInformationProtectionAppLearningSummary Windows Information Protection AppLearning Summary entity.
type WindowsInformationProtectionAppLearningSummary struct {
	Entity
	// ApplicationName Application Name
	ApplicationName *string `json:"applicationName,omitempty"`
	// ApplicationType Application Type
	ApplicationType *ApplicationType `json:"applicationType,omitempty"`
	// DeviceCount Device Count
	DeviceCount *int `json:"deviceCount,omitempty"`
}

// WindowsInformationProtectionAppLockerFile Windows Information Protection AppLocker File
type WindowsInformationProtectionAppLockerFile struct {
	Entity
	// DisplayName The friendly name
	DisplayName *string `json:"displayName,omitempty"`
	// FileHash SHA256 hash of the file
	FileHash *string `json:"fileHash,omitempty"`
	// File File as a byte array
	File *Binary `json:"file,omitempty"`
	// Version Version of the entity.
	Version *string `json:"version,omitempty"`
}

// WindowsInformationProtectionDataRecoveryCertificate undocumented
type WindowsInformationProtectionDataRecoveryCertificate struct {
	// SubjectName Data recovery Certificate subject name
	SubjectName *string `json:"subjectName,omitempty"`
	// Description Data recovery Certificate description
	Description *string `json:"description,omitempty"`
	// ExpirationDateTime Data recovery Certificate expiration datetime
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// Certificate Data recovery Certificate
	Certificate *Binary `json:"certificate,omitempty"`
}

// WindowsInformationProtectionDesktopApp undocumented
type WindowsInformationProtectionDesktopApp struct {
	WindowsInformationProtectionApp
	// BinaryName The binary name.
	BinaryName *string `json:"binaryName,omitempty"`
	// BinaryVersionLow The lower binary version.
	BinaryVersionLow *string `json:"binaryVersionLow,omitempty"`
	// BinaryVersionHigh The high binary version.
	BinaryVersionHigh *string `json:"binaryVersionHigh,omitempty"`
}

// WindowsInformationProtectionIPRangeCollection undocumented
type WindowsInformationProtectionIPRangeCollection struct {
	// DisplayName Display name
	DisplayName *string `json:"displayName,omitempty"`
	// Ranges Collection of ip ranges
	Ranges []IpRange `json:"ranges,omitempty"`
}

// WindowsInformationProtectionNetworkLearningSummary Windows Information Protection Network learning Summary entity.
type WindowsInformationProtectionNetworkLearningSummary struct {
	Entity
	// Url Website url
	Url *string `json:"url,omitempty"`
	// DeviceCount Device Count
	DeviceCount *int `json:"deviceCount,omitempty"`
}

// WindowsInformationProtectionPolicy Policy for Windows information protection without MDM
type WindowsInformationProtectionPolicy struct {
	WindowsInformationProtection
	// RevokeOnMdmHandoffDisabled New property in RS2, pending documentation
	RevokeOnMdmHandoffDisabled *bool `json:"revokeOnMdmHandoffDisabled,omitempty"`
	// MdmEnrollmentUrl Enrollment url for the MDM
	MdmEnrollmentUrl *string `json:"mdmEnrollmentUrl,omitempty"`
	// WindowsHelloForBusinessBlocked Boolean value that sets Windows Hello for Business as a method for signing into Windows.
	WindowsHelloForBusinessBlocked *bool `json:"windowsHelloForBusinessBlocked,omitempty"`
	// PinMinimumLength Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
	PinMinimumLength *int `json:"pinMinimumLength,omitempty"`
	// PinUppercaseLetters Integer value that configures the use of uppercase letters in the Windows Hello for Business PIN. Default is NotAllow.
	PinUppercaseLetters *WindowsInformationProtectionPinCharacterRequirements `json:"pinUppercaseLetters,omitempty"`
	// PinLowercaseLetters Integer value that configures the use of lowercase letters in the Windows Hello for Business PIN. Default is NotAllow.
	PinLowercaseLetters *WindowsInformationProtectionPinCharacterRequirements `json:"pinLowercaseLetters,omitempty"`
	// PinSpecialCharacters Integer value that configures the use of special characters in the Windows Hello for Business PIN. Valid special characters for Windows Hello for Business PIN gestures include: ! " # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \ ] ^ _ ` { | } ~. Default is NotAllow.
	PinSpecialCharacters *WindowsInformationProtectionPinCharacterRequirements `json:"pinSpecialCharacters,omitempty"`
	// PinExpirationDays Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
	PinExpirationDays *int `json:"pinExpirationDays,omitempty"`
	// NumberOfPastPinsRemembered Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
	NumberOfPastPinsRemembered *int `json:"numberOfPastPinsRemembered,omitempty"`
	// PasswordMaximumAttemptCount The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
	PasswordMaximumAttemptCount *int `json:"passwordMaximumAttemptCount,omitempty"`
	// MinutesOfInactivityBeforeDeviceLock Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
	MinutesOfInactivityBeforeDeviceLock *int `json:"minutesOfInactivityBeforeDeviceLock,omitempty"`
	// DaysWithoutContactBeforeUnenroll Offline interval before app data is wiped (days)
	DaysWithoutContactBeforeUnenroll *int `json:"daysWithoutContactBeforeUnenroll,omitempty"`
}

// WindowsInformationProtectionProxiedDomainCollection undocumented
type WindowsInformationProtectionProxiedDomainCollection struct {
	// DisplayName Display name
	DisplayName *string `json:"displayName,omitempty"`
	// ProxiedDomains Collection of proxied domains
	ProxiedDomains []ProxiedDomain `json:"proxiedDomains,omitempty"`
}

// WindowsInformationProtectionResourceCollection undocumented
type WindowsInformationProtectionResourceCollection struct {
	// DisplayName Display name
	DisplayName *string `json:"displayName,omitempty"`
	// Resources Collection of resources
	Resources []string `json:"resources,omitempty"`
}

// WindowsInformationProtectionStoreApp undocumented
type WindowsInformationProtectionStoreApp struct {
	WindowsInformationProtectionApp
}

// WindowsMinimumOperatingSystem undocumented
type WindowsMinimumOperatingSystem struct {
	// V8_0 Windows version 8.0 or later.
	V8_0 *bool `json:"v8_0,omitempty"`
	// V8_1 Windows version 8.1 or later.
	V8_1 *bool `json:"v8_1,omitempty"`
	// V10_0 Windows version 10.0 or later.
	V10_0 *bool `json:"v10_0,omitempty"`
}

// WindowsMobileMSI Contains properties and inherited properties for Windows Mobile MSI Line Of Business apps.
type WindowsMobileMSI struct {
	MobileLobApp
	// CommandLine The command line.
	CommandLine *string `json:"commandLine,omitempty"`
	// ProductCode The product code.
	ProductCode *string `json:"productCode,omitempty"`
	// ProductVersion The product version of Windows Mobile MSI Line of Business (LoB) app.
	ProductVersion *string `json:"productVersion,omitempty"`
	// IgnoreVersionDetection A boolean to control whether the app's version will be used to detect the app after it is installed on a device. Set this to true for Windows Mobile MSI Line of Business (LoB) apps that use a self update feature.
	IgnoreVersionDetection *bool `json:"ignoreVersionDetection,omitempty"`
}

// WindowsPhone81CompliancePolicy This class contains compliance settings for Windows 8.1 Mobile.
type WindowsPhone81CompliancePolicy struct {
	DeviceCompliancePolicy
	// PasswordBlockSimple Whether or not to block syncing the calendar.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`
	// PasswordExpirationDays Number of days before the password expires.
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength Minimum length of passwords.
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeLock Minutes of inactivity before a password is required.
	PasswordMinutesOfInactivityBeforeLock *int `json:"passwordMinutesOfInactivityBeforeLock,omitempty"`
	// PasswordMinimumCharacterSetCount The number of character sets required in the password.
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordRequiredType The required password type.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordPreviousPasswordBlockCount Number of previous passwords to block. Valid values 0 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordRequired Whether or not to require a password.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// OsMinimumVersion Minimum Windows Phone version.
	OsMinimumVersion *string `json:"osMinimumVersion,omitempty"`
	// OsMaximumVersion Maximum Windows Phone version.
	OsMaximumVersion *string `json:"osMaximumVersion,omitempty"`
	// StorageRequireEncryption Require encryption on windows phone devices.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`
}

// WindowsPhone81CustomConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the windowsPhone81CustomConfiguration resource.
type WindowsPhone81CustomConfiguration struct {
	DeviceConfiguration
	// OmaSettings OMA settings. This collection can contain a maximum of 1000 elements.
	OmaSettings []OmaSetting `json:"omaSettings,omitempty"`
}

// WindowsPhone81GeneralConfiguration This topic provides descriptions of the declared methods, properties and relationships exposed by the windowsPhone81GeneralConfiguration resource.
type WindowsPhone81GeneralConfiguration struct {
	DeviceConfiguration
	// ApplyOnlyToWindowsPhone81 Value indicating whether this policy only applies to Windows Phone 8.1. This property is read-only.
	ApplyOnlyToWindowsPhone81 *bool `json:"applyOnlyToWindowsPhone81,omitempty"`
	// AppsBlockCopyPaste Indicates whether or not to block copy paste.
	AppsBlockCopyPaste *bool `json:"appsBlockCopyPaste,omitempty"`
	// BluetoothBlocked Indicates whether or not to block bluetooth.
	BluetoothBlocked *bool `json:"bluetoothBlocked,omitempty"`
	// CameraBlocked Indicates whether or not to block camera.
	CameraBlocked *bool `json:"cameraBlocked,omitempty"`
	// CellularBlockWifiTethering Indicates whether or not to block Wi-Fi tethering. Has no impact if Wi-Fi is blocked.
	CellularBlockWifiTethering *bool `json:"cellularBlockWifiTethering,omitempty"`
	// CompliantAppsList List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.
	CompliantAppsList []AppListItem `json:"compliantAppsList,omitempty"`
	// CompliantAppListType List that is in the AppComplianceList.
	CompliantAppListType *AppListType `json:"compliantAppListType,omitempty"`
	// DiagnosticDataBlockSubmission Indicates whether or not to block diagnostic data submission.
	DiagnosticDataBlockSubmission *bool `json:"diagnosticDataBlockSubmission,omitempty"`
	// EmailBlockAddingAccounts Indicates whether or not to block custom email accounts.
	EmailBlockAddingAccounts *bool `json:"emailBlockAddingAccounts,omitempty"`
	// LocationServicesBlocked Indicates whether or not to block location services.
	LocationServicesBlocked *bool `json:"locationServicesBlocked,omitempty"`
	// MicrosoftAccountBlocked Indicates whether or not to block using a Microsoft Account.
	MicrosoftAccountBlocked *bool `json:"microsoftAccountBlocked,omitempty"`
	// NfcBlocked Indicates whether or not to block Near-Field Communication.
	NfcBlocked *bool `json:"nfcBlocked,omitempty"`
	// PasswordBlockSimple Indicates whether or not to block syncing the calendar.
	PasswordBlockSimple *bool `json:"passwordBlockSimple,omitempty"`
	// PasswordExpirationDays Number of days before the password expires.
	PasswordExpirationDays *int `json:"passwordExpirationDays,omitempty"`
	// PasswordMinimumLength Minimum length of passwords.
	PasswordMinimumLength *int `json:"passwordMinimumLength,omitempty"`
	// PasswordMinutesOfInactivityBeforeScreenTimeout Minutes of inactivity before screen timeout.
	PasswordMinutesOfInactivityBeforeScreenTimeout *int `json:"passwordMinutesOfInactivityBeforeScreenTimeout,omitempty"`
	// PasswordMinimumCharacterSetCount Number of character sets a password must contain.
	PasswordMinimumCharacterSetCount *int `json:"passwordMinimumCharacterSetCount,omitempty"`
	// PasswordPreviousPasswordBlockCount Number of previous passwords to block. Valid values 0 to 24
	PasswordPreviousPasswordBlockCount *int `json:"passwordPreviousPasswordBlockCount,omitempty"`
	// PasswordSignInFailureCountBeforeFactoryReset Number of sign in failures allowed before factory reset.
	PasswordSignInFailureCountBeforeFactoryReset *int `json:"passwordSignInFailureCountBeforeFactoryReset,omitempty"`
	// PasswordRequiredType Password type that is required.
	PasswordRequiredType *RequiredPasswordType `json:"passwordRequiredType,omitempty"`
	// PasswordRequired Indicates whether or not to require a password.
	PasswordRequired *bool `json:"passwordRequired,omitempty"`
	// ScreenCaptureBlocked Indicates whether or not to block screenshots.
	ScreenCaptureBlocked *bool `json:"screenCaptureBlocked,omitempty"`
	// StorageBlockRemovableStorage Indicates whether or not to block removable storage.
	StorageBlockRemovableStorage *bool `json:"storageBlockRemovableStorage,omitempty"`
	// StorageRequireEncryption Indicates whether or not to require encryption.
	StorageRequireEncryption *bool `json:"storageRequireEncryption,omitempty"`
	// WebBrowserBlocked Indicates whether or not to block the web browser.
	WebBrowserBlocked *bool `json:"webBrowserBlocked,omitempty"`
	// WifiBlocked Indicates whether or not to block Wi-Fi.
	WifiBlocked *bool `json:"wifiBlocked,omitempty"`
	// WifiBlockAutomaticConnectHotspots Indicates whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.
	WifiBlockAutomaticConnectHotspots *bool `json:"wifiBlockAutomaticConnectHotspots,omitempty"`
	// WifiBlockHotspotReporting Indicates whether or not to block Wi-Fi hotspot reporting. Has no impact if Wi-Fi is blocked.
	WifiBlockHotspotReporting *bool `json:"wifiBlockHotspotReporting,omitempty"`
	// WindowsStoreBlocked Indicates whether or not to block the Windows Store.
	WindowsStoreBlocked *bool `json:"windowsStoreBlocked,omitempty"`
}

// WindowsUniversalAppX Contains properties and inherited properties for Windows Universal AppX Line Of Business apps.
type WindowsUniversalAppX struct {
	MobileLobApp
	// ApplicableArchitectures The Windows architecture(s) for which this app can run on.
	ApplicableArchitectures *WindowsArchitecture `json:"applicableArchitectures,omitempty"`
	// ApplicableDeviceTypes The Windows device type(s) for which this app can run on.
	ApplicableDeviceTypes *WindowsDeviceType `json:"applicableDeviceTypes,omitempty"`
	// IdentityName The Identity Name.
	IdentityName *string `json:"identityName,omitempty"`
	// IdentityPublisherHash The Identity Publisher Hash.
	IdentityPublisherHash *string `json:"identityPublisherHash,omitempty"`
	// IdentityResourceIdentifier The Identity Resource Identifier.
	IdentityResourceIdentifier *string `json:"identityResourceIdentifier,omitempty"`
	// IsBundle Whether or not the app is a bundle.
	IsBundle *bool `json:"isBundle,omitempty"`
	// MinimumSupportedOperatingSystem The value for the minimum applicable operating system.
	MinimumSupportedOperatingSystem *WindowsMinimumOperatingSystem `json:"minimumSupportedOperatingSystem,omitempty"`
	// IdentityVersion The identity version.
	IdentityVersion *string `json:"identityVersion,omitempty"`
}

// WindowsUpdateActiveHoursInstall undocumented
type WindowsUpdateActiveHoursInstall struct {
	WindowsUpdateInstallScheduleType
	// ActiveHoursStart Active Hours Start
	ActiveHoursStart *time.Time `json:"activeHoursStart,omitempty"`
	// ActiveHoursEnd Active Hours End
	ActiveHoursEnd *time.Time `json:"activeHoursEnd,omitempty"`
}

// WindowsUpdateForBusinessConfiguration Windows Update for business configuration.
type WindowsUpdateForBusinessConfiguration struct {
	DeviceConfiguration
	// DeliveryOptimizationMode Delivery Optimization Mode
	DeliveryOptimizationMode *WindowsDeliveryOptimizationMode `json:"deliveryOptimizationMode,omitempty"`
	// PrereleaseFeatures The pre-release features.
	PrereleaseFeatures *PrereleaseFeatures `json:"prereleaseFeatures,omitempty"`
	// AutomaticUpdateMode Automatic update mode.
	AutomaticUpdateMode *AutomaticUpdateMode `json:"automaticUpdateMode,omitempty"`
	// MicrosoftUpdateServiceAllowed Allow Microsoft Update Service
	MicrosoftUpdateServiceAllowed *bool `json:"microsoftUpdateServiceAllowed,omitempty"`
	// DriversExcluded Exclude Windows update Drivers
	DriversExcluded *bool `json:"driversExcluded,omitempty"`
	// InstallationSchedule Installation schedule
	InstallationSchedule *WindowsUpdateInstallScheduleType `json:"installationSchedule,omitempty"`
	// QualityUpdatesDeferralPeriodInDays Defer Quality Updates by these many days
	QualityUpdatesDeferralPeriodInDays *int `json:"qualityUpdatesDeferralPeriodInDays,omitempty"`
	// FeatureUpdatesDeferralPeriodInDays Defer Feature Updates by these many days
	FeatureUpdatesDeferralPeriodInDays *int `json:"featureUpdatesDeferralPeriodInDays,omitempty"`
	// QualityUpdatesPaused Pause Quality Updates
	QualityUpdatesPaused *bool `json:"qualityUpdatesPaused,omitempty"`
	// FeatureUpdatesPaused Pause Feature Updates
	FeatureUpdatesPaused *bool `json:"featureUpdatesPaused,omitempty"`
	// QualityUpdatesPauseExpiryDateTime Quality Updates Pause Expiry datetime
	QualityUpdatesPauseExpiryDateTime *time.Time `json:"qualityUpdatesPauseExpiryDateTime,omitempty"`
	// FeatureUpdatesPauseExpiryDateTime Feature Updates Pause Expiry datetime
	FeatureUpdatesPauseExpiryDateTime *time.Time `json:"featureUpdatesPauseExpiryDateTime,omitempty"`
	// BusinessReadyUpdatesOnly Determines which branch devices will receive their updates from
	BusinessReadyUpdatesOnly *WindowsUpdateType `json:"businessReadyUpdatesOnly,omitempty"`
}

// WindowsUpdateInstallScheduleType undocumented
type WindowsUpdateInstallScheduleType struct {
}

// WindowsUpdateScheduledInstall undocumented
type WindowsUpdateScheduledInstall struct {
	WindowsUpdateInstallScheduleType
	// ScheduledInstallDay Scheduled Install Day in week
	ScheduledInstallDay *WeeklySchedule `json:"scheduledInstallDay,omitempty"`
	// ScheduledInstallTime Scheduled Install Time during day
	ScheduledInstallTime *time.Time `json:"scheduledInstallTime,omitempty"`
}

// Workbook undocumented
type Workbook struct {
	Entity
}

// WorkbookApplication undocumented
type WorkbookApplication struct {
	Entity
	// CalculationMode undocumented
	CalculationMode *string `json:"calculationMode,omitempty"`
}

// WorkbookChart undocumented
type WorkbookChart struct {
	Entity
	// Height undocumented
	Height *float64 `json:"height,omitempty"`
	// Left undocumented
	Left *float64 `json:"left,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Top undocumented
	Top *float64 `json:"top,omitempty"`
	// Width undocumented
	Width *float64 `json:"width,omitempty"`
}

// WorkbookChartAreaFormat undocumented
type WorkbookChartAreaFormat struct {
	Entity
}

// WorkbookChartAxes undocumented
type WorkbookChartAxes struct {
	Entity
}

// WorkbookChartAxis undocumented
type WorkbookChartAxis struct {
	Entity
	// MajorUnit undocumented
	MajorUnit json.RawMessage `json:"majorUnit,omitempty"`
	// Maximum undocumented
	Maximum json.RawMessage `json:"maximum,omitempty"`
	// Minimum undocumented
	Minimum json.RawMessage `json:"minimum,omitempty"`
	// MinorUnit undocumented
	MinorUnit json.RawMessage `json:"minorUnit,omitempty"`
}

// WorkbookChartAxisFormat undocumented
type WorkbookChartAxisFormat struct {
	Entity
}

// WorkbookChartAxisTitle undocumented
type WorkbookChartAxisTitle struct {
	Entity
	// Text undocumented
	Text *string `json:"text,omitempty"`
	// Visible undocumented
	Visible *bool `json:"visible,omitempty"`
}

// WorkbookChartAxisTitleFormat undocumented
type WorkbookChartAxisTitleFormat struct {
	Entity
}

// WorkbookChartDataLabelFormat undocumented
type WorkbookChartDataLabelFormat struct {
	Entity
}

// WorkbookChartDataLabels undocumented
type WorkbookChartDataLabels struct {
	Entity
	// Position undocumented
	Position *string `json:"position,omitempty"`
	// Separator undocumented
	Separator *string `json:"separator,omitempty"`
	// ShowBubbleSize undocumented
	ShowBubbleSize *bool `json:"showBubbleSize,omitempty"`
	// ShowCategoryName undocumented
	ShowCategoryName *bool `json:"showCategoryName,omitempty"`
	// ShowLegendKey undocumented
	ShowLegendKey *bool `json:"showLegendKey,omitempty"`
	// ShowPercentage undocumented
	ShowPercentage *bool `json:"showPercentage,omitempty"`
	// ShowSeriesName undocumented
	ShowSeriesName *bool `json:"showSeriesName,omitempty"`
	// ShowValue undocumented
	ShowValue *bool `json:"showValue,omitempty"`
}

// WorkbookChartFill undocumented
type WorkbookChartFill struct {
	Entity
}

// WorkbookChartFont undocumented
type WorkbookChartFont struct {
	Entity
	// Bold undocumented
	Bold *bool `json:"bold,omitempty"`
	// Color undocumented
	Color *string `json:"color,omitempty"`
	// Italic undocumented
	Italic *bool `json:"italic,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Size undocumented
	Size *float64 `json:"size,omitempty"`
	// Underline undocumented
	Underline *string `json:"underline,omitempty"`
}

// WorkbookChartGridlines undocumented
type WorkbookChartGridlines struct {
	Entity
	// Visible undocumented
	Visible *bool `json:"visible,omitempty"`
}

// WorkbookChartGridlinesFormat undocumented
type WorkbookChartGridlinesFormat struct {
	Entity
}

// WorkbookChartLegend undocumented
type WorkbookChartLegend struct {
	Entity
	// Overlay undocumented
	Overlay *bool `json:"overlay,omitempty"`
	// Position undocumented
	Position *string `json:"position,omitempty"`
	// Visible undocumented
	Visible *bool `json:"visible,omitempty"`
}

// WorkbookChartLegendFormat undocumented
type WorkbookChartLegendFormat struct {
	Entity
}

// WorkbookChartLineFormat undocumented
type WorkbookChartLineFormat struct {
	Entity
	// Color undocumented
	Color *string `json:"color,omitempty"`
}

// WorkbookChartPoint undocumented
type WorkbookChartPoint struct {
	Entity
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookChartPointFormat undocumented
type WorkbookChartPointFormat struct {
	Entity
}

// WorkbookChartSeries undocumented
type WorkbookChartSeries struct {
	Entity
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

// WorkbookChartSeriesFormat undocumented
type WorkbookChartSeriesFormat struct {
	Entity
}

// WorkbookChartTitle undocumented
type WorkbookChartTitle struct {
	Entity
	// Overlay undocumented
	Overlay *bool `json:"overlay,omitempty"`
	// Text undocumented
	Text *string `json:"text,omitempty"`
	// Visible undocumented
	Visible *bool `json:"visible,omitempty"`
}

// WorkbookChartTitleFormat undocumented
type WorkbookChartTitleFormat struct {
	Entity
}

// WorkbookComment undocumented
type WorkbookComment struct {
	Entity
	// Content undocumented
	Content *string `json:"content,omitempty"`
	// ContentType undocumented
	ContentType *string `json:"contentType,omitempty"`
}

// WorkbookCommentReply undocumented
type WorkbookCommentReply struct {
	Entity
	// Content undocumented
	Content *string `json:"content,omitempty"`
	// ContentType undocumented
	ContentType *string `json:"contentType,omitempty"`
}

// WorkbookFilter undocumented
type WorkbookFilter struct {
	Entity
	// Criteria undocumented
	Criteria *WorkbookFilterCriteria `json:"criteria,omitempty"`
}

// WorkbookFilterCriteria undocumented
type WorkbookFilterCriteria struct {
	// Color undocumented
	Color *string `json:"color,omitempty"`
	// Criterion1 undocumented
	Criterion1 *string `json:"criterion1,omitempty"`
	// Criterion2 undocumented
	Criterion2 *string `json:"criterion2,omitempty"`
	// DynamicCriteria undocumented
	DynamicCriteria *string `json:"dynamicCriteria,omitempty"`
	// FilterOn undocumented
	FilterOn *string `json:"filterOn,omitempty"`
	// Icon undocumented
	Icon *WorkbookIcon `json:"icon,omitempty"`
	// Operator undocumented
	Operator *string `json:"operator,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFilterDatetime undocumented
type WorkbookFilterDatetime struct {
	// Date undocumented
	Date *string `json:"date,omitempty"`
	// Specificity undocumented
	Specificity *string `json:"specificity,omitempty"`
}

// WorkbookFormatProtection undocumented
type WorkbookFormatProtection struct {
	Entity
	// FormulaHidden undocumented
	FormulaHidden *bool `json:"formulaHidden,omitempty"`
	// Locked undocumented
	Locked *bool `json:"locked,omitempty"`
}

// WorkbookFunctionResult undocumented
type WorkbookFunctionResult struct {
	Entity
	// Error undocumented
	Error *string `json:"error,omitempty"`
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctions undocumented
type WorkbookFunctions struct {
	Entity
}

// WorkbookIcon undocumented
type WorkbookIcon struct {
	// Index undocumented
	Index *int `json:"index,omitempty"`
	// Set undocumented
	Set *string `json:"set,omitempty"`
}

// WorkbookNamedItem undocumented
type WorkbookNamedItem struct {
	Entity
	// Comment undocumented
	Comment *string `json:"comment,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Scope undocumented
	Scope *string `json:"scope,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
	// Visible undocumented
	Visible *bool `json:"visible,omitempty"`
}

// WorkbookPivotTable undocumented
type WorkbookPivotTable struct {
	Entity
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

// WorkbookRange undocumented
type WorkbookRange struct {
	Entity
	// Address undocumented
	Address *string `json:"address,omitempty"`
	// AddressLocal undocumented
	AddressLocal *string `json:"addressLocal,omitempty"`
	// CellCount undocumented
	CellCount *int `json:"cellCount,omitempty"`
	// ColumnCount undocumented
	ColumnCount *int `json:"columnCount,omitempty"`
	// ColumnHidden undocumented
	ColumnHidden *bool `json:"columnHidden,omitempty"`
	// ColumnIndex undocumented
	ColumnIndex *int `json:"columnIndex,omitempty"`
	// Formulas undocumented
	Formulas json.RawMessage `json:"formulas,omitempty"`
	// FormulasLocal undocumented
	FormulasLocal json.RawMessage `json:"formulasLocal,omitempty"`
	// FormulasR1C1 undocumented
	FormulasR1C1 json.RawMessage `json:"formulasR1C1,omitempty"`
	// Hidden undocumented
	Hidden *bool `json:"hidden,omitempty"`
	// NumberFormat undocumented
	NumberFormat json.RawMessage `json:"numberFormat,omitempty"`
	// RowCount undocumented
	RowCount *int `json:"rowCount,omitempty"`
	// RowHidden undocumented
	RowHidden *bool `json:"rowHidden,omitempty"`
	// RowIndex undocumented
	RowIndex *int `json:"rowIndex,omitempty"`
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// ValueTypes undocumented
	ValueTypes json.RawMessage `json:"valueTypes,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookRangeBorder undocumented
type WorkbookRangeBorder struct {
	Entity
	// Color undocumented
	Color *string `json:"color,omitempty"`
	// SideIndex undocumented
	SideIndex *string `json:"sideIndex,omitempty"`
	// Style undocumented
	Style *string `json:"style,omitempty"`
	// Weight undocumented
	Weight *string `json:"weight,omitempty"`
}

// WorkbookRangeFill undocumented
type WorkbookRangeFill struct {
	Entity
	// Color undocumented
	Color *string `json:"color,omitempty"`
}

// WorkbookRangeFont undocumented
type WorkbookRangeFont struct {
	Entity
	// Bold undocumented
	Bold *bool `json:"bold,omitempty"`
	// Color undocumented
	Color *string `json:"color,omitempty"`
	// Italic undocumented
	Italic *bool `json:"italic,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Size undocumented
	Size *float64 `json:"size,omitempty"`
	// Underline undocumented
	Underline *string `json:"underline,omitempty"`
}

// WorkbookRangeFormat undocumented
type WorkbookRangeFormat struct {
	Entity
	// ColumnWidth undocumented
	ColumnWidth *float64 `json:"columnWidth,omitempty"`
	// HorizontalAlignment undocumented
	HorizontalAlignment *string `json:"horizontalAlignment,omitempty"`
	// RowHeight undocumented
	RowHeight *float64 `json:"rowHeight,omitempty"`
	// VerticalAlignment undocumented
	VerticalAlignment *string `json:"verticalAlignment,omitempty"`
	// WrapText undocumented
	WrapText *bool `json:"wrapText,omitempty"`
}

// WorkbookRangeReference undocumented
type WorkbookRangeReference struct {
	// Address undocumented
	Address *string `json:"address,omitempty"`
}

// WorkbookRangeSort undocumented
type WorkbookRangeSort struct {
	Entity
}

// WorkbookRangeView undocumented
type WorkbookRangeView struct {
	Entity
	// CellAddresses undocumented
	CellAddresses json.RawMessage `json:"cellAddresses,omitempty"`
	// ColumnCount undocumented
	ColumnCount *int `json:"columnCount,omitempty"`
	// Formulas undocumented
	Formulas json.RawMessage `json:"formulas,omitempty"`
	// FormulasLocal undocumented
	FormulasLocal json.RawMessage `json:"formulasLocal,omitempty"`
	// FormulasR1C1 undocumented
	FormulasR1C1 json.RawMessage `json:"formulasR1C1,omitempty"`
	// Index undocumented
	Index *int `json:"index,omitempty"`
	// NumberFormat undocumented
	NumberFormat json.RawMessage `json:"numberFormat,omitempty"`
	// RowCount undocumented
	RowCount *int `json:"rowCount,omitempty"`
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// ValueTypes undocumented
	ValueTypes json.RawMessage `json:"valueTypes,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookSessionInfo undocumented
type WorkbookSessionInfo struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// PersistChanges undocumented
	PersistChanges *bool `json:"persistChanges,omitempty"`
}

// WorkbookSortField undocumented
type WorkbookSortField struct {
	// Ascending undocumented
	Ascending *bool `json:"ascending,omitempty"`
	// Color undocumented
	Color *string `json:"color,omitempty"`
	// DataOption undocumented
	DataOption *string `json:"dataOption,omitempty"`
	// Icon undocumented
	Icon *WorkbookIcon `json:"icon,omitempty"`
	// Key undocumented
	Key *int `json:"key,omitempty"`
	// SortOn undocumented
	SortOn *string `json:"sortOn,omitempty"`
}

// WorkbookTable undocumented
type WorkbookTable struct {
	Entity
	// HighlightFirstColumn undocumented
	HighlightFirstColumn *bool `json:"highlightFirstColumn,omitempty"`
	// HighlightLastColumn undocumented
	HighlightLastColumn *bool `json:"highlightLastColumn,omitempty"`
	// LegacyId undocumented
	LegacyId *string `json:"legacyId,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// ShowBandedColumns undocumented
	ShowBandedColumns *bool `json:"showBandedColumns,omitempty"`
	// ShowBandedRows undocumented
	ShowBandedRows *bool `json:"showBandedRows,omitempty"`
	// ShowFilterButton undocumented
	ShowFilterButton *bool `json:"showFilterButton,omitempty"`
	// ShowHeaders undocumented
	ShowHeaders *bool `json:"showHeaders,omitempty"`
	// ShowTotals undocumented
	ShowTotals *bool `json:"showTotals,omitempty"`
	// Style undocumented
	Style *string `json:"style,omitempty"`
}

// WorkbookTableColumn undocumented
type WorkbookTableColumn struct {
	Entity
	// Index undocumented
	Index *int `json:"index,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookTableRow undocumented
type WorkbookTableRow struct {
	Entity
	// Index undocumented
	Index *int `json:"index,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookTableSort undocumented
type WorkbookTableSort struct {
	Entity
	// Fields undocumented
	Fields []WorkbookSortField `json:"fields,omitempty"`
	// MatchCase undocumented
	MatchCase *bool `json:"matchCase,omitempty"`
	// Method undocumented
	Method *string `json:"method,omitempty"`
}

// WorkbookWorksheet undocumented
type WorkbookWorksheet struct {
	Entity
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Position undocumented
	Position *int `json:"position,omitempty"`
	// Visibility undocumented
	Visibility *string `json:"visibility,omitempty"`
}

// WorkbookWorksheetProtection undocumented
type WorkbookWorksheetProtection struct {
	Entity
	// Options undocumented
	Options *WorkbookWorksheetProtectionOptions `json:"options,omitempty"`
	// Protected undocumented
	Protected *bool `json:"protected,omitempty"`
}

// WorkbookWorksheetProtectionOptions undocumented
type WorkbookWorksheetProtectionOptions struct {
	// AllowAutoFilter undocumented
	AllowAutoFilter *bool `json:"allowAutoFilter,omitempty"`
	// AllowDeleteColumns undocumented
	AllowDeleteColumns *bool `json:"allowDeleteColumns,omitempty"`
	// AllowDeleteRows undocumented
	AllowDeleteRows *bool `json:"allowDeleteRows,omitempty"`
	// AllowFormatCells undocumented
	AllowFormatCells *bool `json:"allowFormatCells,omitempty"`
	// AllowFormatColumns undocumented
	AllowFormatColumns *bool `json:"allowFormatColumns,omitempty"`
	// AllowFormatRows undocumented
	AllowFormatRows *bool `json:"allowFormatRows,omitempty"`
	// AllowInsertColumns undocumented
	AllowInsertColumns *bool `json:"allowInsertColumns,omitempty"`
	// AllowInsertHyperlinks undocumented
	AllowInsertHyperlinks *bool `json:"allowInsertHyperlinks,omitempty"`
	// AllowInsertRows undocumented
	AllowInsertRows *bool `json:"allowInsertRows,omitempty"`
	// AllowPivotTables undocumented
	AllowPivotTables *bool `json:"allowPivotTables,omitempty"`
	// AllowSort undocumented
	AllowSort *bool `json:"allowSort,omitempty"`
}

// WorkingHours undocumented
type WorkingHours struct {
	// DaysOfWeek undocumented
	DaysOfWeek []DayOfWeek `json:"daysOfWeek,omitempty"`
	// StartTime undocumented
	StartTime *time.Time `json:"startTime,omitempty"`
	// EndTime undocumented
	EndTime *time.Time `json:"endTime,omitempty"`
	// TimeZone undocumented
	TimeZone *TimeZoneBase `json:"timeZone,omitempty"`
}

// MobileAppAssignRequestObject undocumented
type MobileAppAssignRequestObject struct {
	// MobileAppAssignments undocumented
	MobileAppAssignments []MobileAppAssignment `json:"mobileAppAssignments,omitempty"`
}

// CallAnswerRequestObject undocumented
type CallAnswerRequestObject struct {
	// CallbackUri undocumented
	CallbackUri *string `json:"callbackUri,omitempty"`
	// MediaConfig undocumented
	MediaConfig *MediaConfig `json:"mediaConfig,omitempty"`
	// AcceptedModalities undocumented
	AcceptedModalities []Modality `json:"acceptedModalities,omitempty"`
}

// CallChangeScreenSharingRoleRequestObject undocumented
type CallChangeScreenSharingRoleRequestObject struct {
	// Role undocumented
	Role *ScreenSharingRole `json:"role,omitempty"`
}

// CallMuteRequestObject undocumented
type CallMuteRequestObject struct {
	// ClientContext undocumented
	ClientContext *string `json:"clientContext,omitempty"`
}

// CallPlayPromptRequestObject undocumented
type CallPlayPromptRequestObject struct {
	// Prompts undocumented
	Prompts []Prompt `json:"prompts,omitempty"`
	// ClientContext undocumented
	ClientContext *string `json:"clientContext,omitempty"`
}

// CallRecordRequestObject undocumented
type CallRecordRequestObject struct {
	// Prompts undocumented
	Prompts []Prompt `json:"prompts,omitempty"`
	// BargeInAllowed undocumented
	BargeInAllowed *bool `json:"bargeInAllowed,omitempty"`
	// InitialSilenceTimeoutInSeconds undocumented
	InitialSilenceTimeoutInSeconds *int `json:"initialSilenceTimeoutInSeconds,omitempty"`
	// MaxSilenceTimeoutInSeconds undocumented
	MaxSilenceTimeoutInSeconds *int `json:"maxSilenceTimeoutInSeconds,omitempty"`
	// MaxRecordDurationInSeconds undocumented
	MaxRecordDurationInSeconds *int `json:"maxRecordDurationInSeconds,omitempty"`
	// PlayBeep undocumented
	PlayBeep *bool `json:"playBeep,omitempty"`
	// StopTones undocumented
	StopTones []string `json:"stopTones,omitempty"`
	// ClientContext undocumented
	ClientContext *string `json:"clientContext,omitempty"`
}

// CallRedirectRequestObject undocumented
type CallRedirectRequestObject struct {
	// Targets undocumented
	Targets []InvitationParticipantInfo `json:"targets,omitempty"`
	// Timeout undocumented
	Timeout *int `json:"timeout,omitempty"`
	// CallbackUri undocumented
	CallbackUri *string `json:"callbackUri,omitempty"`
}

// CallRejectRequestObject undocumented
type CallRejectRequestObject struct {
	// Reason undocumented
	Reason *RejectReason `json:"reason,omitempty"`
	// CallbackUri undocumented
	CallbackUri *string `json:"callbackUri,omitempty"`
}

// CallSubscribeToToneRequestObject undocumented
type CallSubscribeToToneRequestObject struct {
	// ClientContext undocumented
	ClientContext *string `json:"clientContext,omitempty"`
}

// CallTransferRequestObject undocumented
type CallTransferRequestObject struct {
	// TransferTarget undocumented
	TransferTarget *InvitationParticipantInfo `json:"transferTarget,omitempty"`
}

// CallUnmuteRequestObject undocumented
type CallUnmuteRequestObject struct {
	// ClientContext undocumented
	ClientContext *string `json:"clientContext,omitempty"`
}

// DirectoryObjectGetByIdsRequestObject undocumented
type DirectoryObjectGetByIdsRequestObject struct {
	// Ids undocumented
	Ids []string `json:"ids,omitempty"`
	// Types undocumented
	Types []string `json:"types,omitempty"`
}

// DirectoryObjectValidatePropertiesRequestObject undocumented
type DirectoryObjectValidatePropertiesRequestObject struct {
	// EntityType undocumented
	EntityType *string `json:"entityType,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// MailNickname undocumented
	MailNickname *string `json:"mailNickname,omitempty"`
	// OnBehalfOfUserId undocumented
	OnBehalfOfUserId *UUID `json:"onBehalfOfUserId,omitempty"`
}

// WorkbookChartFillClearRequestObject undocumented
type WorkbookChartFillClearRequestObject struct {
}

// WorkbookChartFillSetSolidColorRequestObject undocumented
type WorkbookChartFillSetSolidColorRequestObject struct {
	// Color undocumented
	Color *string `json:"color,omitempty"`
}

// WorkbookChartLineFormatClearRequestObject undocumented
type WorkbookChartLineFormatClearRequestObject struct {
}

// WorkbookWorksheetProtectionProtectRequestObject undocumented
type WorkbookWorksheetProtectionProtectRequestObject struct {
	// Options undocumented
	Options *WorkbookWorksheetProtectionOptions `json:"options,omitempty"`
}

// WorkbookWorksheetProtectionUnprotectRequestObject undocumented
type WorkbookWorksheetProtectionUnprotectRequestObject struct {
}

// EventDismissReminderRequestObject undocumented
type EventDismissReminderRequestObject struct {
}

// EventSnoozeReminderRequestObject undocumented
type EventSnoozeReminderRequestObject struct {
	// NewReminderTime undocumented
	NewReminderTime *DateTimeTimeZone `json:"NewReminderTime,omitempty"`
}

// EventAcceptRequestObject undocumented
type EventAcceptRequestObject struct {
	// SendResponse undocumented
	SendResponse *bool `json:"SendResponse,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// EventDeclineRequestObject undocumented
type EventDeclineRequestObject struct {
	// SendResponse undocumented
	SendResponse *bool `json:"SendResponse,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// EventTentativelyAcceptRequestObject undocumented
type EventTentativelyAcceptRequestObject struct {
	// SendResponse undocumented
	SendResponse *bool `json:"SendResponse,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// RemoteAssistancePartnerBeginOnboardingRequestObject undocumented
type RemoteAssistancePartnerBeginOnboardingRequestObject struct {
}

// RemoteAssistancePartnerDisconnectRequestObject undocumented
type RemoteAssistancePartnerDisconnectRequestObject struct {
}

// NotebookCopyNotebookRequestObject undocumented
type NotebookCopyNotebookRequestObject struct {
	// GroupId undocumented
	GroupId *string `json:"groupId,omitempty"`
	// RenameAs undocumented
	RenameAs *string `json:"renameAs,omitempty"`
	// NotebookFolder undocumented
	NotebookFolder *string `json:"notebookFolder,omitempty"`
	// SiteCollectionId undocumented
	SiteCollectionId *string `json:"siteCollectionId,omitempty"`
	// SiteId undocumented
	SiteId *string `json:"siteId,omitempty"`
}

// WorkbookRangeSortApplyRequestObject undocumented
type WorkbookRangeSortApplyRequestObject struct {
	// Fields undocumented
	Fields []WorkbookSortField `json:"fields,omitempty"`
	// MatchCase undocumented
	MatchCase *bool `json:"matchCase,omitempty"`
	// HasHeaders undocumented
	HasHeaders *bool `json:"hasHeaders,omitempty"`
	// Orientation undocumented
	Orientation *string `json:"orientation,omitempty"`
	// Method undocumented
	Method *string `json:"method,omitempty"`
}

// DeviceConfigurationAssignRequestObject undocumented
type DeviceConfigurationAssignRequestObject struct {
	// Assignments undocumented
	Assignments []DeviceConfigurationAssignment `json:"assignments,omitempty"`
}

// WorkbookFunctionsAbsRequestObject undocumented
type WorkbookFunctionsAbsRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAccrIntRequestObject undocumented
type WorkbookFunctionsAccrIntRequestObject struct {
	// Issue undocumented
	Issue json.RawMessage `json:"issue,omitempty"`
	// FirstInterest undocumented
	FirstInterest json.RawMessage `json:"firstInterest,omitempty"`
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Par undocumented
	Par json.RawMessage `json:"par,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
	// CalcMethod undocumented
	CalcMethod json.RawMessage `json:"calcMethod,omitempty"`
}

// WorkbookFunctionsAccrIntMRequestObject undocumented
type WorkbookFunctionsAccrIntMRequestObject struct {
	// Issue undocumented
	Issue json.RawMessage `json:"issue,omitempty"`
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Par undocumented
	Par json.RawMessage `json:"par,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsAcosRequestObject undocumented
type WorkbookFunctionsAcosRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAcoshRequestObject undocumented
type WorkbookFunctionsAcoshRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAcotRequestObject undocumented
type WorkbookFunctionsAcotRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAcothRequestObject undocumented
type WorkbookFunctionsAcothRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAmorDegrcRequestObject undocumented
type WorkbookFunctionsAmorDegrcRequestObject struct {
	// Cost undocumented
	Cost json.RawMessage `json:"cost,omitempty"`
	// DatePurchased undocumented
	DatePurchased json.RawMessage `json:"datePurchased,omitempty"`
	// FirstPeriod undocumented
	FirstPeriod json.RawMessage `json:"firstPeriod,omitempty"`
	// Salvage undocumented
	Salvage json.RawMessage `json:"salvage,omitempty"`
	// Period undocumented
	Period json.RawMessage `json:"period,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsAmorLincRequestObject undocumented
type WorkbookFunctionsAmorLincRequestObject struct {
	// Cost undocumented
	Cost json.RawMessage `json:"cost,omitempty"`
	// DatePurchased undocumented
	DatePurchased json.RawMessage `json:"datePurchased,omitempty"`
	// FirstPeriod undocumented
	FirstPeriod json.RawMessage `json:"firstPeriod,omitempty"`
	// Salvage undocumented
	Salvage json.RawMessage `json:"salvage,omitempty"`
	// Period undocumented
	Period json.RawMessage `json:"period,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsAndRequestObject undocumented
type WorkbookFunctionsAndRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsArabicRequestObject undocumented
type WorkbookFunctionsArabicRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsAreasRequestObject undocumented
type WorkbookFunctionsAreasRequestObject struct {
	// Reference undocumented
	Reference json.RawMessage `json:"reference,omitempty"`
}

// WorkbookFunctionsAscRequestObject undocumented
type WorkbookFunctionsAscRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsAsinRequestObject undocumented
type WorkbookFunctionsAsinRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAsinhRequestObject undocumented
type WorkbookFunctionsAsinhRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAtanRequestObject undocumented
type WorkbookFunctionsAtanRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAtan2RequestObject undocumented
type WorkbookFunctionsAtan2RequestObject struct {
	// XNum undocumented
	XNum json.RawMessage `json:"xNum,omitempty"`
	// YNum undocumented
	YNum json.RawMessage `json:"yNum,omitempty"`
}

// WorkbookFunctionsAtanhRequestObject undocumented
type WorkbookFunctionsAtanhRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsAveDevRequestObject undocumented
type WorkbookFunctionsAveDevRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsAverageRequestObject undocumented
type WorkbookFunctionsAverageRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsAverageARequestObject undocumented
type WorkbookFunctionsAverageARequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsAverageIfRequestObject undocumented
type WorkbookFunctionsAverageIfRequestObject struct {
	// Range undocumented
	Range json.RawMessage `json:"range,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
	// AverageRange undocumented
	AverageRange json.RawMessage `json:"averageRange,omitempty"`
}

// WorkbookFunctionsAverageIfsRequestObject undocumented
type WorkbookFunctionsAverageIfsRequestObject struct {
	// AverageRange undocumented
	AverageRange json.RawMessage `json:"averageRange,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsBahtTextRequestObject undocumented
type WorkbookFunctionsBahtTextRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsBaseRequestObject undocumented
type WorkbookFunctionsBaseRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Radix undocumented
	Radix json.RawMessage `json:"radix,omitempty"`
	// MinLength undocumented
	MinLength json.RawMessage `json:"minLength,omitempty"`
}

// WorkbookFunctionsBesselIRequestObject undocumented
type WorkbookFunctionsBesselIRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// N undocumented
	N json.RawMessage `json:"n,omitempty"`
}

// WorkbookFunctionsBesselJRequestObject undocumented
type WorkbookFunctionsBesselJRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// N undocumented
	N json.RawMessage `json:"n,omitempty"`
}

// WorkbookFunctionsBesselKRequestObject undocumented
type WorkbookFunctionsBesselKRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// N undocumented
	N json.RawMessage `json:"n,omitempty"`
}

// WorkbookFunctionsBesselYRequestObject undocumented
type WorkbookFunctionsBesselYRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// N undocumented
	N json.RawMessage `json:"n,omitempty"`
}

// WorkbookFunctionsBeta_DistRequestObject undocumented
type WorkbookFunctionsBeta_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Alpha undocumented
	Alpha json.RawMessage `json:"alpha,omitempty"`
	// Beta undocumented
	Beta json.RawMessage `json:"beta,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
	// A undocumented
	A json.RawMessage `json:"A,omitempty"`
	// B undocumented
	B json.RawMessage `json:"B,omitempty"`
}

// WorkbookFunctionsBeta_InvRequestObject undocumented
type WorkbookFunctionsBeta_InvRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// Alpha undocumented
	Alpha json.RawMessage `json:"alpha,omitempty"`
	// Beta undocumented
	Beta json.RawMessage `json:"beta,omitempty"`
	// A undocumented
	A json.RawMessage `json:"A,omitempty"`
	// B undocumented
	B json.RawMessage `json:"B,omitempty"`
}

// WorkbookFunctionsBin2DecRequestObject undocumented
type WorkbookFunctionsBin2DecRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsBin2HexRequestObject undocumented
type WorkbookFunctionsBin2HexRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsBin2OctRequestObject undocumented
type WorkbookFunctionsBin2OctRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsBinom_DistRequestObject undocumented
type WorkbookFunctionsBinom_DistRequestObject struct {
	// NumberS undocumented
	NumberS json.RawMessage `json:"numberS,omitempty"`
	// Trials undocumented
	Trials json.RawMessage `json:"trials,omitempty"`
	// ProbabilityS undocumented
	ProbabilityS json.RawMessage `json:"probabilityS,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsBinom_Dist_RangeRequestObject undocumented
type WorkbookFunctionsBinom_Dist_RangeRequestObject struct {
	// Trials undocumented
	Trials json.RawMessage `json:"trials,omitempty"`
	// ProbabilityS undocumented
	ProbabilityS json.RawMessage `json:"probabilityS,omitempty"`
	// NumberS undocumented
	NumberS json.RawMessage `json:"numberS,omitempty"`
	// NumberS2 undocumented
	NumberS2 json.RawMessage `json:"numberS2,omitempty"`
}

// WorkbookFunctionsBinom_InvRequestObject undocumented
type WorkbookFunctionsBinom_InvRequestObject struct {
	// Trials undocumented
	Trials json.RawMessage `json:"trials,omitempty"`
	// ProbabilityS undocumented
	ProbabilityS json.RawMessage `json:"probabilityS,omitempty"`
	// Alpha undocumented
	Alpha json.RawMessage `json:"alpha,omitempty"`
}

// WorkbookFunctionsBitandRequestObject undocumented
type WorkbookFunctionsBitandRequestObject struct {
	// Number1 undocumented
	Number1 json.RawMessage `json:"number1,omitempty"`
	// Number2 undocumented
	Number2 json.RawMessage `json:"number2,omitempty"`
}

// WorkbookFunctionsBitlshiftRequestObject undocumented
type WorkbookFunctionsBitlshiftRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// ShiftAmount undocumented
	ShiftAmount json.RawMessage `json:"shiftAmount,omitempty"`
}

// WorkbookFunctionsBitorRequestObject undocumented
type WorkbookFunctionsBitorRequestObject struct {
	// Number1 undocumented
	Number1 json.RawMessage `json:"number1,omitempty"`
	// Number2 undocumented
	Number2 json.RawMessage `json:"number2,omitempty"`
}

// WorkbookFunctionsBitrshiftRequestObject undocumented
type WorkbookFunctionsBitrshiftRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// ShiftAmount undocumented
	ShiftAmount json.RawMessage `json:"shiftAmount,omitempty"`
}

// WorkbookFunctionsBitxorRequestObject undocumented
type WorkbookFunctionsBitxorRequestObject struct {
	// Number1 undocumented
	Number1 json.RawMessage `json:"number1,omitempty"`
	// Number2 undocumented
	Number2 json.RawMessage `json:"number2,omitempty"`
}

// WorkbookFunctionsCeiling_MathRequestObject undocumented
type WorkbookFunctionsCeiling_MathRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Significance undocumented
	Significance json.RawMessage `json:"significance,omitempty"`
	// Mode undocumented
	Mode json.RawMessage `json:"mode,omitempty"`
}

// WorkbookFunctionsCeiling_PreciseRequestObject undocumented
type WorkbookFunctionsCeiling_PreciseRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Significance undocumented
	Significance json.RawMessage `json:"significance,omitempty"`
}

// WorkbookFunctionsCharRequestObject undocumented
type WorkbookFunctionsCharRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsChiSq_DistRequestObject undocumented
type WorkbookFunctionsChiSq_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsChiSq_Dist_RTRequestObject undocumented
type WorkbookFunctionsChiSq_Dist_RTRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
}

// WorkbookFunctionsChiSq_InvRequestObject undocumented
type WorkbookFunctionsChiSq_InvRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
}

// WorkbookFunctionsChiSq_Inv_RTRequestObject undocumented
type WorkbookFunctionsChiSq_Inv_RTRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
}

// WorkbookFunctionsChooseRequestObject undocumented
type WorkbookFunctionsChooseRequestObject struct {
	// IndexNum undocumented
	IndexNum json.RawMessage `json:"indexNum,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsCleanRequestObject undocumented
type WorkbookFunctionsCleanRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsCodeRequestObject undocumented
type WorkbookFunctionsCodeRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsColumnsRequestObject undocumented
type WorkbookFunctionsColumnsRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
}

// WorkbookFunctionsCombinRequestObject undocumented
type WorkbookFunctionsCombinRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// NumberChosen undocumented
	NumberChosen json.RawMessage `json:"numberChosen,omitempty"`
}

// WorkbookFunctionsCombinaRequestObject undocumented
type WorkbookFunctionsCombinaRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// NumberChosen undocumented
	NumberChosen json.RawMessage `json:"numberChosen,omitempty"`
}

// WorkbookFunctionsComplexRequestObject undocumented
type WorkbookFunctionsComplexRequestObject struct {
	// RealNum undocumented
	RealNum json.RawMessage `json:"realNum,omitempty"`
	// INum undocumented
	INum json.RawMessage `json:"iNum,omitempty"`
	// Suffix undocumented
	Suffix json.RawMessage `json:"suffix,omitempty"`
}

// WorkbookFunctionsConcatenateRequestObject undocumented
type WorkbookFunctionsConcatenateRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsConfidence_NormRequestObject undocumented
type WorkbookFunctionsConfidence_NormRequestObject struct {
	// Alpha undocumented
	Alpha json.RawMessage `json:"alpha,omitempty"`
	// StandardDev undocumented
	StandardDev json.RawMessage `json:"standardDev,omitempty"`
	// Size undocumented
	Size json.RawMessage `json:"size,omitempty"`
}

// WorkbookFunctionsConfidence_TRequestObject undocumented
type WorkbookFunctionsConfidence_TRequestObject struct {
	// Alpha undocumented
	Alpha json.RawMessage `json:"alpha,omitempty"`
	// StandardDev undocumented
	StandardDev json.RawMessage `json:"standardDev,omitempty"`
	// Size undocumented
	Size json.RawMessage `json:"size,omitempty"`
}

// WorkbookFunctionsConvertRequestObject undocumented
type WorkbookFunctionsConvertRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// FromUnit undocumented
	FromUnit json.RawMessage `json:"fromUnit,omitempty"`
	// ToUnit undocumented
	ToUnit json.RawMessage `json:"toUnit,omitempty"`
}

// WorkbookFunctionsCosRequestObject undocumented
type WorkbookFunctionsCosRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsCoshRequestObject undocumented
type WorkbookFunctionsCoshRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsCotRequestObject undocumented
type WorkbookFunctionsCotRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsCothRequestObject undocumented
type WorkbookFunctionsCothRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsCountRequestObject undocumented
type WorkbookFunctionsCountRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsCountARequestObject undocumented
type WorkbookFunctionsCountARequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsCountBlankRequestObject undocumented
type WorkbookFunctionsCountBlankRequestObject struct {
	// Range undocumented
	Range json.RawMessage `json:"range,omitempty"`
}

// WorkbookFunctionsCountIfRequestObject undocumented
type WorkbookFunctionsCountIfRequestObject struct {
	// Range undocumented
	Range json.RawMessage `json:"range,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsCountIfsRequestObject undocumented
type WorkbookFunctionsCountIfsRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsCoupDayBsRequestObject undocumented
type WorkbookFunctionsCoupDayBsRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsCoupDaysRequestObject undocumented
type WorkbookFunctionsCoupDaysRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsCoupDaysNcRequestObject undocumented
type WorkbookFunctionsCoupDaysNcRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsCoupNcdRequestObject undocumented
type WorkbookFunctionsCoupNcdRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsCoupNumRequestObject undocumented
type WorkbookFunctionsCoupNumRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsCoupPcdRequestObject undocumented
type WorkbookFunctionsCoupPcdRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsCscRequestObject undocumented
type WorkbookFunctionsCscRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsCschRequestObject undocumented
type WorkbookFunctionsCschRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsCumIPmtRequestObject undocumented
type WorkbookFunctionsCumIPmtRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// StartPeriod undocumented
	StartPeriod json.RawMessage `json:"startPeriod,omitempty"`
	// EndPeriod undocumented
	EndPeriod json.RawMessage `json:"endPeriod,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
}

// WorkbookFunctionsCumPrincRequestObject undocumented
type WorkbookFunctionsCumPrincRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// StartPeriod undocumented
	StartPeriod json.RawMessage `json:"startPeriod,omitempty"`
	// EndPeriod undocumented
	EndPeriod json.RawMessage `json:"endPeriod,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
}

// WorkbookFunctionsDaverageRequestObject undocumented
type WorkbookFunctionsDaverageRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDcountRequestObject undocumented
type WorkbookFunctionsDcountRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDcountARequestObject undocumented
type WorkbookFunctionsDcountARequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDgetRequestObject undocumented
type WorkbookFunctionsDgetRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDmaxRequestObject undocumented
type WorkbookFunctionsDmaxRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDminRequestObject undocumented
type WorkbookFunctionsDminRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDproductRequestObject undocumented
type WorkbookFunctionsDproductRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDstDevRequestObject undocumented
type WorkbookFunctionsDstDevRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDstDevPRequestObject undocumented
type WorkbookFunctionsDstDevPRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDsumRequestObject undocumented
type WorkbookFunctionsDsumRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDvarRequestObject undocumented
type WorkbookFunctionsDvarRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDvarPRequestObject undocumented
type WorkbookFunctionsDvarPRequestObject struct {
	// Database undocumented
	Database json.RawMessage `json:"database,omitempty"`
	// Field undocumented
	Field json.RawMessage `json:"field,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
}

// WorkbookFunctionsDateRequestObject undocumented
type WorkbookFunctionsDateRequestObject struct {
	// Year undocumented
	Year json.RawMessage `json:"year,omitempty"`
	// Month undocumented
	Month json.RawMessage `json:"month,omitempty"`
	// Day undocumented
	Day json.RawMessage `json:"day,omitempty"`
}

// WorkbookFunctionsDatevalueRequestObject undocumented
type WorkbookFunctionsDatevalueRequestObject struct {
	// DateText undocumented
	DateText json.RawMessage `json:"dateText,omitempty"`
}

// WorkbookFunctionsDayRequestObject undocumented
type WorkbookFunctionsDayRequestObject struct {
	// SerialNumber undocumented
	SerialNumber json.RawMessage `json:"serialNumber,omitempty"`
}

// WorkbookFunctionsDaysRequestObject undocumented
type WorkbookFunctionsDaysRequestObject struct {
	// EndDate undocumented
	EndDate json.RawMessage `json:"endDate,omitempty"`
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
}

// WorkbookFunctionsDays360RequestObject undocumented
type WorkbookFunctionsDays360RequestObject struct {
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
	// EndDate undocumented
	EndDate json.RawMessage `json:"endDate,omitempty"`
	// Method undocumented
	Method json.RawMessage `json:"method,omitempty"`
}

// WorkbookFunctionsDbRequestObject undocumented
type WorkbookFunctionsDbRequestObject struct {
	// Cost undocumented
	Cost json.RawMessage `json:"cost,omitempty"`
	// Salvage undocumented
	Salvage json.RawMessage `json:"salvage,omitempty"`
	// Life undocumented
	Life json.RawMessage `json:"life,omitempty"`
	// Period undocumented
	Period json.RawMessage `json:"period,omitempty"`
	// Month undocumented
	Month json.RawMessage `json:"month,omitempty"`
}

// WorkbookFunctionsDbcsRequestObject undocumented
type WorkbookFunctionsDbcsRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsDdbRequestObject undocumented
type WorkbookFunctionsDdbRequestObject struct {
	// Cost undocumented
	Cost json.RawMessage `json:"cost,omitempty"`
	// Salvage undocumented
	Salvage json.RawMessage `json:"salvage,omitempty"`
	// Life undocumented
	Life json.RawMessage `json:"life,omitempty"`
	// Period undocumented
	Period json.RawMessage `json:"period,omitempty"`
	// Factor undocumented
	Factor json.RawMessage `json:"factor,omitempty"`
}

// WorkbookFunctionsDec2BinRequestObject undocumented
type WorkbookFunctionsDec2BinRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsDec2HexRequestObject undocumented
type WorkbookFunctionsDec2HexRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsDec2OctRequestObject undocumented
type WorkbookFunctionsDec2OctRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsDecimalRequestObject undocumented
type WorkbookFunctionsDecimalRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Radix undocumented
	Radix json.RawMessage `json:"radix,omitempty"`
}

// WorkbookFunctionsDegreesRequestObject undocumented
type WorkbookFunctionsDegreesRequestObject struct {
	// Angle undocumented
	Angle json.RawMessage `json:"angle,omitempty"`
}

// WorkbookFunctionsDeltaRequestObject undocumented
type WorkbookFunctionsDeltaRequestObject struct {
	// Number1 undocumented
	Number1 json.RawMessage `json:"number1,omitempty"`
	// Number2 undocumented
	Number2 json.RawMessage `json:"number2,omitempty"`
}

// WorkbookFunctionsDevSqRequestObject undocumented
type WorkbookFunctionsDevSqRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsDiscRequestObject undocumented
type WorkbookFunctionsDiscRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Pr undocumented
	Pr json.RawMessage `json:"pr,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsDollarRequestObject undocumented
type WorkbookFunctionsDollarRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Decimals undocumented
	Decimals json.RawMessage `json:"decimals,omitempty"`
}

// WorkbookFunctionsDollarDeRequestObject undocumented
type WorkbookFunctionsDollarDeRequestObject struct {
	// FractionalDollar undocumented
	FractionalDollar json.RawMessage `json:"fractionalDollar,omitempty"`
	// Fraction undocumented
	Fraction json.RawMessage `json:"fraction,omitempty"`
}

// WorkbookFunctionsDollarFrRequestObject undocumented
type WorkbookFunctionsDollarFrRequestObject struct {
	// DecimalDollar undocumented
	DecimalDollar json.RawMessage `json:"decimalDollar,omitempty"`
	// Fraction undocumented
	Fraction json.RawMessage `json:"fraction,omitempty"`
}

// WorkbookFunctionsDurationRequestObject undocumented
type WorkbookFunctionsDurationRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Coupon undocumented
	Coupon json.RawMessage `json:"coupon,omitempty"`
	// Yld undocumented
	Yld json.RawMessage `json:"yld,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsEcma_CeilingRequestObject undocumented
type WorkbookFunctionsEcma_CeilingRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Significance undocumented
	Significance json.RawMessage `json:"significance,omitempty"`
}

// WorkbookFunctionsEdateRequestObject undocumented
type WorkbookFunctionsEdateRequestObject struct {
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
	// Months undocumented
	Months json.RawMessage `json:"months,omitempty"`
}

// WorkbookFunctionsEffectRequestObject undocumented
type WorkbookFunctionsEffectRequestObject struct {
	// NominalRate undocumented
	NominalRate json.RawMessage `json:"nominalRate,omitempty"`
	// Npery undocumented
	Npery json.RawMessage `json:"npery,omitempty"`
}

// WorkbookFunctionsEoMonthRequestObject undocumented
type WorkbookFunctionsEoMonthRequestObject struct {
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
	// Months undocumented
	Months json.RawMessage `json:"months,omitempty"`
}

// WorkbookFunctionsErfRequestObject undocumented
type WorkbookFunctionsErfRequestObject struct {
	// LowerLimit undocumented
	LowerLimit json.RawMessage `json:"lowerLimit,omitempty"`
	// UpperLimit undocumented
	UpperLimit json.RawMessage `json:"upperLimit,omitempty"`
}

// WorkbookFunctionsErfCRequestObject undocumented
type WorkbookFunctionsErfCRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
}

// WorkbookFunctionsErfC_PreciseRequestObject undocumented
type WorkbookFunctionsErfC_PreciseRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"X,omitempty"`
}

// WorkbookFunctionsErf_PreciseRequestObject undocumented
type WorkbookFunctionsErf_PreciseRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"X,omitempty"`
}

// WorkbookFunctionsError_TypeRequestObject undocumented
type WorkbookFunctionsError_TypeRequestObject struct {
	// ErrorVal undocumented
	ErrorVal json.RawMessage `json:"errorVal,omitempty"`
}

// WorkbookFunctionsEvenRequestObject undocumented
type WorkbookFunctionsEvenRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsExactRequestObject undocumented
type WorkbookFunctionsExactRequestObject struct {
	// Text1 undocumented
	Text1 json.RawMessage `json:"text1,omitempty"`
	// Text2 undocumented
	Text2 json.RawMessage `json:"text2,omitempty"`
}

// WorkbookFunctionsExpRequestObject undocumented
type WorkbookFunctionsExpRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsExpon_DistRequestObject undocumented
type WorkbookFunctionsExpon_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Lambda undocumented
	Lambda json.RawMessage `json:"lambda,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsFvscheduleRequestObject undocumented
type WorkbookFunctionsFvscheduleRequestObject struct {
	// Principal undocumented
	Principal json.RawMessage `json:"principal,omitempty"`
	// Schedule undocumented
	Schedule json.RawMessage `json:"schedule,omitempty"`
}

// WorkbookFunctionsF_DistRequestObject undocumented
type WorkbookFunctionsF_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// DegFreedom1 undocumented
	DegFreedom1 json.RawMessage `json:"degFreedom1,omitempty"`
	// DegFreedom2 undocumented
	DegFreedom2 json.RawMessage `json:"degFreedom2,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsF_Dist_RTRequestObject undocumented
type WorkbookFunctionsF_Dist_RTRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// DegFreedom1 undocumented
	DegFreedom1 json.RawMessage `json:"degFreedom1,omitempty"`
	// DegFreedom2 undocumented
	DegFreedom2 json.RawMessage `json:"degFreedom2,omitempty"`
}

// WorkbookFunctionsF_InvRequestObject undocumented
type WorkbookFunctionsF_InvRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// DegFreedom1 undocumented
	DegFreedom1 json.RawMessage `json:"degFreedom1,omitempty"`
	// DegFreedom2 undocumented
	DegFreedom2 json.RawMessage `json:"degFreedom2,omitempty"`
}

// WorkbookFunctionsF_Inv_RTRequestObject undocumented
type WorkbookFunctionsF_Inv_RTRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// DegFreedom1 undocumented
	DegFreedom1 json.RawMessage `json:"degFreedom1,omitempty"`
	// DegFreedom2 undocumented
	DegFreedom2 json.RawMessage `json:"degFreedom2,omitempty"`
}

// WorkbookFunctionsFactRequestObject undocumented
type WorkbookFunctionsFactRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsFactDoubleRequestObject undocumented
type WorkbookFunctionsFactDoubleRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsFalseRequestObject undocumented
type WorkbookFunctionsFalseRequestObject struct {
}

// WorkbookFunctionsFindRequestObject undocumented
type WorkbookFunctionsFindRequestObject struct {
	// FindText undocumented
	FindText json.RawMessage `json:"findText,omitempty"`
	// WithinText undocumented
	WithinText json.RawMessage `json:"withinText,omitempty"`
	// StartNum undocumented
	StartNum json.RawMessage `json:"startNum,omitempty"`
}

// WorkbookFunctionsFindBRequestObject undocumented
type WorkbookFunctionsFindBRequestObject struct {
	// FindText undocumented
	FindText json.RawMessage `json:"findText,omitempty"`
	// WithinText undocumented
	WithinText json.RawMessage `json:"withinText,omitempty"`
	// StartNum undocumented
	StartNum json.RawMessage `json:"startNum,omitempty"`
}

// WorkbookFunctionsFisherRequestObject undocumented
type WorkbookFunctionsFisherRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
}

// WorkbookFunctionsFisherInvRequestObject undocumented
type WorkbookFunctionsFisherInvRequestObject struct {
	// Y undocumented
	Y json.RawMessage `json:"y,omitempty"`
}

// WorkbookFunctionsFixedRequestObject undocumented
type WorkbookFunctionsFixedRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Decimals undocumented
	Decimals json.RawMessage `json:"decimals,omitempty"`
	// NoCommas undocumented
	NoCommas json.RawMessage `json:"noCommas,omitempty"`
}

// WorkbookFunctionsFloor_MathRequestObject undocumented
type WorkbookFunctionsFloor_MathRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Significance undocumented
	Significance json.RawMessage `json:"significance,omitempty"`
	// Mode undocumented
	Mode json.RawMessage `json:"mode,omitempty"`
}

// WorkbookFunctionsFloor_PreciseRequestObject undocumented
type WorkbookFunctionsFloor_PreciseRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Significance undocumented
	Significance json.RawMessage `json:"significance,omitempty"`
}

// WorkbookFunctionsFvRequestObject undocumented
type WorkbookFunctionsFvRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pmt undocumented
	Pmt json.RawMessage `json:"pmt,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
}

// WorkbookFunctionsGammaRequestObject undocumented
type WorkbookFunctionsGammaRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
}

// WorkbookFunctionsGammaLnRequestObject undocumented
type WorkbookFunctionsGammaLnRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
}

// WorkbookFunctionsGammaLn_PreciseRequestObject undocumented
type WorkbookFunctionsGammaLn_PreciseRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
}

// WorkbookFunctionsGamma_DistRequestObject undocumented
type WorkbookFunctionsGamma_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Alpha undocumented
	Alpha json.RawMessage `json:"alpha,omitempty"`
	// Beta undocumented
	Beta json.RawMessage `json:"beta,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsGamma_InvRequestObject undocumented
type WorkbookFunctionsGamma_InvRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// Alpha undocumented
	Alpha json.RawMessage `json:"alpha,omitempty"`
	// Beta undocumented
	Beta json.RawMessage `json:"beta,omitempty"`
}

// WorkbookFunctionsGaussRequestObject undocumented
type WorkbookFunctionsGaussRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
}

// WorkbookFunctionsGcdRequestObject undocumented
type WorkbookFunctionsGcdRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsGeStepRequestObject undocumented
type WorkbookFunctionsGeStepRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Step undocumented
	Step json.RawMessage `json:"step,omitempty"`
}

// WorkbookFunctionsGeoMeanRequestObject undocumented
type WorkbookFunctionsGeoMeanRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsHlookupRequestObject undocumented
type WorkbookFunctionsHlookupRequestObject struct {
	// LookupValue undocumented
	LookupValue json.RawMessage `json:"lookupValue,omitempty"`
	// TableArray undocumented
	TableArray json.RawMessage `json:"tableArray,omitempty"`
	// RowIndexNum undocumented
	RowIndexNum json.RawMessage `json:"rowIndexNum,omitempty"`
	// RangeLookup undocumented
	RangeLookup json.RawMessage `json:"rangeLookup,omitempty"`
}

// WorkbookFunctionsHarMeanRequestObject undocumented
type WorkbookFunctionsHarMeanRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsHex2BinRequestObject undocumented
type WorkbookFunctionsHex2BinRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsHex2DecRequestObject undocumented
type WorkbookFunctionsHex2DecRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsHex2OctRequestObject undocumented
type WorkbookFunctionsHex2OctRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsHourRequestObject undocumented
type WorkbookFunctionsHourRequestObject struct {
	// SerialNumber undocumented
	SerialNumber json.RawMessage `json:"serialNumber,omitempty"`
}

// WorkbookFunctionsHypGeom_DistRequestObject undocumented
type WorkbookFunctionsHypGeom_DistRequestObject struct {
	// SampleS undocumented
	SampleS json.RawMessage `json:"sampleS,omitempty"`
	// NumberSample undocumented
	NumberSample json.RawMessage `json:"numberSample,omitempty"`
	// PopulationS undocumented
	PopulationS json.RawMessage `json:"populationS,omitempty"`
	// NumberPop undocumented
	NumberPop json.RawMessage `json:"numberPop,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsHyperlinkRequestObject undocumented
type WorkbookFunctionsHyperlinkRequestObject struct {
	// LinkLocation undocumented
	LinkLocation json.RawMessage `json:"linkLocation,omitempty"`
	// FriendlyName undocumented
	FriendlyName json.RawMessage `json:"friendlyName,omitempty"`
}

// WorkbookFunctionsIso_CeilingRequestObject undocumented
type WorkbookFunctionsIso_CeilingRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Significance undocumented
	Significance json.RawMessage `json:"significance,omitempty"`
}

// WorkbookFunctionsIfRequestObject undocumented
type WorkbookFunctionsIfRequestObject struct {
	// LogicalTest undocumented
	LogicalTest json.RawMessage `json:"logicalTest,omitempty"`
	// ValueIfTrue undocumented
	ValueIfTrue json.RawMessage `json:"valueIfTrue,omitempty"`
	// ValueIfFalse undocumented
	ValueIfFalse json.RawMessage `json:"valueIfFalse,omitempty"`
}

// WorkbookFunctionsImAbsRequestObject undocumented
type WorkbookFunctionsImAbsRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImArgumentRequestObject undocumented
type WorkbookFunctionsImArgumentRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImConjugateRequestObject undocumented
type WorkbookFunctionsImConjugateRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImCosRequestObject undocumented
type WorkbookFunctionsImCosRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImCoshRequestObject undocumented
type WorkbookFunctionsImCoshRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImCotRequestObject undocumented
type WorkbookFunctionsImCotRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImCscRequestObject undocumented
type WorkbookFunctionsImCscRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImCschRequestObject undocumented
type WorkbookFunctionsImCschRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImDivRequestObject undocumented
type WorkbookFunctionsImDivRequestObject struct {
	// Inumber1 undocumented
	Inumber1 json.RawMessage `json:"inumber1,omitempty"`
	// Inumber2 undocumented
	Inumber2 json.RawMessage `json:"inumber2,omitempty"`
}

// WorkbookFunctionsImExpRequestObject undocumented
type WorkbookFunctionsImExpRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImLnRequestObject undocumented
type WorkbookFunctionsImLnRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImLog10RequestObject undocumented
type WorkbookFunctionsImLog10RequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImLog2RequestObject undocumented
type WorkbookFunctionsImLog2RequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImPowerRequestObject undocumented
type WorkbookFunctionsImPowerRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsImProductRequestObject undocumented
type WorkbookFunctionsImProductRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsImRealRequestObject undocumented
type WorkbookFunctionsImRealRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImSecRequestObject undocumented
type WorkbookFunctionsImSecRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImSechRequestObject undocumented
type WorkbookFunctionsImSechRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImSinRequestObject undocumented
type WorkbookFunctionsImSinRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImSinhRequestObject undocumented
type WorkbookFunctionsImSinhRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImSqrtRequestObject undocumented
type WorkbookFunctionsImSqrtRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImSubRequestObject undocumented
type WorkbookFunctionsImSubRequestObject struct {
	// Inumber1 undocumented
	Inumber1 json.RawMessage `json:"inumber1,omitempty"`
	// Inumber2 undocumented
	Inumber2 json.RawMessage `json:"inumber2,omitempty"`
}

// WorkbookFunctionsImSumRequestObject undocumented
type WorkbookFunctionsImSumRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsImTanRequestObject undocumented
type WorkbookFunctionsImTanRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsImaginaryRequestObject undocumented
type WorkbookFunctionsImaginaryRequestObject struct {
	// Inumber undocumented
	Inumber json.RawMessage `json:"inumber,omitempty"`
}

// WorkbookFunctionsIntRequestObject undocumented
type WorkbookFunctionsIntRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsIntRateRequestObject undocumented
type WorkbookFunctionsIntRateRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Investment undocumented
	Investment json.RawMessage `json:"investment,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsIpmtRequestObject undocumented
type WorkbookFunctionsIpmtRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Per undocumented
	Per json.RawMessage `json:"per,omitempty"`
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// Fv undocumented
	Fv json.RawMessage `json:"fv,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
}

// WorkbookFunctionsIrrRequestObject undocumented
type WorkbookFunctionsIrrRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
	// Guess undocumented
	Guess json.RawMessage `json:"guess,omitempty"`
}

// WorkbookFunctionsIsErrRequestObject undocumented
type WorkbookFunctionsIsErrRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsIsErrorRequestObject undocumented
type WorkbookFunctionsIsErrorRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsIsEvenRequestObject undocumented
type WorkbookFunctionsIsEvenRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsIsFormulaRequestObject undocumented
type WorkbookFunctionsIsFormulaRequestObject struct {
	// Reference undocumented
	Reference json.RawMessage `json:"reference,omitempty"`
}

// WorkbookFunctionsIsLogicalRequestObject undocumented
type WorkbookFunctionsIsLogicalRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsIsNARequestObject undocumented
type WorkbookFunctionsIsNARequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsIsNonTextRequestObject undocumented
type WorkbookFunctionsIsNonTextRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsIsNumberRequestObject undocumented
type WorkbookFunctionsIsNumberRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsIsOddRequestObject undocumented
type WorkbookFunctionsIsOddRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsIsTextRequestObject undocumented
type WorkbookFunctionsIsTextRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsIsoWeekNumRequestObject undocumented
type WorkbookFunctionsIsoWeekNumRequestObject struct {
	// Date undocumented
	Date json.RawMessage `json:"date,omitempty"`
}

// WorkbookFunctionsIspmtRequestObject undocumented
type WorkbookFunctionsIspmtRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Per undocumented
	Per json.RawMessage `json:"per,omitempty"`
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
}

// WorkbookFunctionsIsrefRequestObject undocumented
type WorkbookFunctionsIsrefRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsKurtRequestObject undocumented
type WorkbookFunctionsKurtRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsLargeRequestObject undocumented
type WorkbookFunctionsLargeRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// K undocumented
	K json.RawMessage `json:"k,omitempty"`
}

// WorkbookFunctionsLcmRequestObject undocumented
type WorkbookFunctionsLcmRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsLeftRequestObject undocumented
type WorkbookFunctionsLeftRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// NumChars undocumented
	NumChars json.RawMessage `json:"numChars,omitempty"`
}

// WorkbookFunctionsLeftbRequestObject undocumented
type WorkbookFunctionsLeftbRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// NumBytes undocumented
	NumBytes json.RawMessage `json:"numBytes,omitempty"`
}

// WorkbookFunctionsLenRequestObject undocumented
type WorkbookFunctionsLenRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsLenbRequestObject undocumented
type WorkbookFunctionsLenbRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsLnRequestObject undocumented
type WorkbookFunctionsLnRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsLogRequestObject undocumented
type WorkbookFunctionsLogRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Base undocumented
	Base json.RawMessage `json:"base,omitempty"`
}

// WorkbookFunctionsLog10RequestObject undocumented
type WorkbookFunctionsLog10RequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsLogNorm_DistRequestObject undocumented
type WorkbookFunctionsLogNorm_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Mean undocumented
	Mean json.RawMessage `json:"mean,omitempty"`
	// StandardDev undocumented
	StandardDev json.RawMessage `json:"standardDev,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsLogNorm_InvRequestObject undocumented
type WorkbookFunctionsLogNorm_InvRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// Mean undocumented
	Mean json.RawMessage `json:"mean,omitempty"`
	// StandardDev undocumented
	StandardDev json.RawMessage `json:"standardDev,omitempty"`
}

// WorkbookFunctionsLookupRequestObject undocumented
type WorkbookFunctionsLookupRequestObject struct {
	// LookupValue undocumented
	LookupValue json.RawMessage `json:"lookupValue,omitempty"`
	// LookupVector undocumented
	LookupVector json.RawMessage `json:"lookupVector,omitempty"`
	// ResultVector undocumented
	ResultVector json.RawMessage `json:"resultVector,omitempty"`
}

// WorkbookFunctionsLowerRequestObject undocumented
type WorkbookFunctionsLowerRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsMdurationRequestObject undocumented
type WorkbookFunctionsMdurationRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Coupon undocumented
	Coupon json.RawMessage `json:"coupon,omitempty"`
	// Yld undocumented
	Yld json.RawMessage `json:"yld,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsMirrRequestObject undocumented
type WorkbookFunctionsMirrRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
	// FinanceRate undocumented
	FinanceRate json.RawMessage `json:"financeRate,omitempty"`
	// ReinvestRate undocumented
	ReinvestRate json.RawMessage `json:"reinvestRate,omitempty"`
}

// WorkbookFunctionsMroundRequestObject undocumented
type WorkbookFunctionsMroundRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Multiple undocumented
	Multiple json.RawMessage `json:"multiple,omitempty"`
}

// WorkbookFunctionsMatchRequestObject undocumented
type WorkbookFunctionsMatchRequestObject struct {
	// LookupValue undocumented
	LookupValue json.RawMessage `json:"lookupValue,omitempty"`
	// LookupArray undocumented
	LookupArray json.RawMessage `json:"lookupArray,omitempty"`
	// MatchType undocumented
	MatchType json.RawMessage `json:"matchType,omitempty"`
}

// WorkbookFunctionsMaxRequestObject undocumented
type WorkbookFunctionsMaxRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsMaxARequestObject undocumented
type WorkbookFunctionsMaxARequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsMedianRequestObject undocumented
type WorkbookFunctionsMedianRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsMidRequestObject undocumented
type WorkbookFunctionsMidRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// StartNum undocumented
	StartNum json.RawMessage `json:"startNum,omitempty"`
	// NumChars undocumented
	NumChars json.RawMessage `json:"numChars,omitempty"`
}

// WorkbookFunctionsMidbRequestObject undocumented
type WorkbookFunctionsMidbRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// StartNum undocumented
	StartNum json.RawMessage `json:"startNum,omitempty"`
	// NumBytes undocumented
	NumBytes json.RawMessage `json:"numBytes,omitempty"`
}

// WorkbookFunctionsMinRequestObject undocumented
type WorkbookFunctionsMinRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsMinARequestObject undocumented
type WorkbookFunctionsMinARequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsMinuteRequestObject undocumented
type WorkbookFunctionsMinuteRequestObject struct {
	// SerialNumber undocumented
	SerialNumber json.RawMessage `json:"serialNumber,omitempty"`
}

// WorkbookFunctionsModRequestObject undocumented
type WorkbookFunctionsModRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Divisor undocumented
	Divisor json.RawMessage `json:"divisor,omitempty"`
}

// WorkbookFunctionsMonthRequestObject undocumented
type WorkbookFunctionsMonthRequestObject struct {
	// SerialNumber undocumented
	SerialNumber json.RawMessage `json:"serialNumber,omitempty"`
}

// WorkbookFunctionsMultiNomialRequestObject undocumented
type WorkbookFunctionsMultiNomialRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsNRequestObject undocumented
type WorkbookFunctionsNRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsNperRequestObject undocumented
type WorkbookFunctionsNperRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Pmt undocumented
	Pmt json.RawMessage `json:"pmt,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// Fv undocumented
	Fv json.RawMessage `json:"fv,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
}

// WorkbookFunctionsNaRequestObject undocumented
type WorkbookFunctionsNaRequestObject struct {
}

// WorkbookFunctionsNegBinom_DistRequestObject undocumented
type WorkbookFunctionsNegBinom_DistRequestObject struct {
	// NumberF undocumented
	NumberF json.RawMessage `json:"numberF,omitempty"`
	// NumberS undocumented
	NumberS json.RawMessage `json:"numberS,omitempty"`
	// ProbabilityS undocumented
	ProbabilityS json.RawMessage `json:"probabilityS,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsNetworkDaysRequestObject undocumented
type WorkbookFunctionsNetworkDaysRequestObject struct {
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
	// EndDate undocumented
	EndDate json.RawMessage `json:"endDate,omitempty"`
	// Holidays undocumented
	Holidays json.RawMessage `json:"holidays,omitempty"`
}

// WorkbookFunctionsNetworkDays_IntlRequestObject undocumented
type WorkbookFunctionsNetworkDays_IntlRequestObject struct {
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
	// EndDate undocumented
	EndDate json.RawMessage `json:"endDate,omitempty"`
	// Weekend undocumented
	Weekend json.RawMessage `json:"weekend,omitempty"`
	// Holidays undocumented
	Holidays json.RawMessage `json:"holidays,omitempty"`
}

// WorkbookFunctionsNominalRequestObject undocumented
type WorkbookFunctionsNominalRequestObject struct {
	// EffectRate undocumented
	EffectRate json.RawMessage `json:"effectRate,omitempty"`
	// Npery undocumented
	Npery json.RawMessage `json:"npery,omitempty"`
}

// WorkbookFunctionsNorm_DistRequestObject undocumented
type WorkbookFunctionsNorm_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Mean undocumented
	Mean json.RawMessage `json:"mean,omitempty"`
	// StandardDev undocumented
	StandardDev json.RawMessage `json:"standardDev,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsNorm_InvRequestObject undocumented
type WorkbookFunctionsNorm_InvRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// Mean undocumented
	Mean json.RawMessage `json:"mean,omitempty"`
	// StandardDev undocumented
	StandardDev json.RawMessage `json:"standardDev,omitempty"`
}

// WorkbookFunctionsNorm_S_DistRequestObject undocumented
type WorkbookFunctionsNorm_S_DistRequestObject struct {
	// Z undocumented
	Z json.RawMessage `json:"z,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsNorm_S_InvRequestObject undocumented
type WorkbookFunctionsNorm_S_InvRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
}

// WorkbookFunctionsNotRequestObject undocumented
type WorkbookFunctionsNotRequestObject struct {
	// Logical undocumented
	Logical json.RawMessage `json:"logical,omitempty"`
}

// WorkbookFunctionsNowRequestObject undocumented
type WorkbookFunctionsNowRequestObject struct {
}

// WorkbookFunctionsNpvRequestObject undocumented
type WorkbookFunctionsNpvRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsNumberValueRequestObject undocumented
type WorkbookFunctionsNumberValueRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// DecimalSeparator undocumented
	DecimalSeparator json.RawMessage `json:"decimalSeparator,omitempty"`
	// GroupSeparator undocumented
	GroupSeparator json.RawMessage `json:"groupSeparator,omitempty"`
}

// WorkbookFunctionsOct2BinRequestObject undocumented
type WorkbookFunctionsOct2BinRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsOct2DecRequestObject undocumented
type WorkbookFunctionsOct2DecRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsOct2HexRequestObject undocumented
type WorkbookFunctionsOct2HexRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Places undocumented
	Places json.RawMessage `json:"places,omitempty"`
}

// WorkbookFunctionsOddRequestObject undocumented
type WorkbookFunctionsOddRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsOddFPriceRequestObject undocumented
type WorkbookFunctionsOddFPriceRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Issue undocumented
	Issue json.RawMessage `json:"issue,omitempty"`
	// FirstCoupon undocumented
	FirstCoupon json.RawMessage `json:"firstCoupon,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Yld undocumented
	Yld json.RawMessage `json:"yld,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsOddFYieldRequestObject undocumented
type WorkbookFunctionsOddFYieldRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Issue undocumented
	Issue json.RawMessage `json:"issue,omitempty"`
	// FirstCoupon undocumented
	FirstCoupon json.RawMessage `json:"firstCoupon,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Pr undocumented
	Pr json.RawMessage `json:"pr,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsOddLPriceRequestObject undocumented
type WorkbookFunctionsOddLPriceRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// LastInterest undocumented
	LastInterest json.RawMessage `json:"lastInterest,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Yld undocumented
	Yld json.RawMessage `json:"yld,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsOddLYieldRequestObject undocumented
type WorkbookFunctionsOddLYieldRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// LastInterest undocumented
	LastInterest json.RawMessage `json:"lastInterest,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Pr undocumented
	Pr json.RawMessage `json:"pr,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsOrRequestObject undocumented
type WorkbookFunctionsOrRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsPdurationRequestObject undocumented
type WorkbookFunctionsPdurationRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// Fv undocumented
	Fv json.RawMessage `json:"fv,omitempty"`
}

// WorkbookFunctionsPercentRank_ExcRequestObject undocumented
type WorkbookFunctionsPercentRank_ExcRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Significance undocumented
	Significance json.RawMessage `json:"significance,omitempty"`
}

// WorkbookFunctionsPercentRank_IncRequestObject undocumented
type WorkbookFunctionsPercentRank_IncRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Significance undocumented
	Significance json.RawMessage `json:"significance,omitempty"`
}

// WorkbookFunctionsPercentile_ExcRequestObject undocumented
type WorkbookFunctionsPercentile_ExcRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// K undocumented
	K json.RawMessage `json:"k,omitempty"`
}

// WorkbookFunctionsPercentile_IncRequestObject undocumented
type WorkbookFunctionsPercentile_IncRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// K undocumented
	K json.RawMessage `json:"k,omitempty"`
}

// WorkbookFunctionsPermutRequestObject undocumented
type WorkbookFunctionsPermutRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// NumberChosen undocumented
	NumberChosen json.RawMessage `json:"numberChosen,omitempty"`
}

// WorkbookFunctionsPermutationaRequestObject undocumented
type WorkbookFunctionsPermutationaRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// NumberChosen undocumented
	NumberChosen json.RawMessage `json:"numberChosen,omitempty"`
}

// WorkbookFunctionsPhiRequestObject undocumented
type WorkbookFunctionsPhiRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
}

// WorkbookFunctionsPiRequestObject undocumented
type WorkbookFunctionsPiRequestObject struct {
}

// WorkbookFunctionsPmtRequestObject undocumented
type WorkbookFunctionsPmtRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// Fv undocumented
	Fv json.RawMessage `json:"fv,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
}

// WorkbookFunctionsPoisson_DistRequestObject undocumented
type WorkbookFunctionsPoisson_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Mean undocumented
	Mean json.RawMessage `json:"mean,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsPowerRequestObject undocumented
type WorkbookFunctionsPowerRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Power undocumented
	Power json.RawMessage `json:"power,omitempty"`
}

// WorkbookFunctionsPpmtRequestObject undocumented
type WorkbookFunctionsPpmtRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Per undocumented
	Per json.RawMessage `json:"per,omitempty"`
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// Fv undocumented
	Fv json.RawMessage `json:"fv,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
}

// WorkbookFunctionsPriceRequestObject undocumented
type WorkbookFunctionsPriceRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Yld undocumented
	Yld json.RawMessage `json:"yld,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsPriceDiscRequestObject undocumented
type WorkbookFunctionsPriceDiscRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Discount undocumented
	Discount json.RawMessage `json:"discount,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsPriceMatRequestObject undocumented
type WorkbookFunctionsPriceMatRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Issue undocumented
	Issue json.RawMessage `json:"issue,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Yld undocumented
	Yld json.RawMessage `json:"yld,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsProductRequestObject undocumented
type WorkbookFunctionsProductRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsProperRequestObject undocumented
type WorkbookFunctionsProperRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsPvRequestObject undocumented
type WorkbookFunctionsPvRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pmt undocumented
	Pmt json.RawMessage `json:"pmt,omitempty"`
	// Fv undocumented
	Fv json.RawMessage `json:"fv,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
}

// WorkbookFunctionsQuartile_ExcRequestObject undocumented
type WorkbookFunctionsQuartile_ExcRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// Quart undocumented
	Quart json.RawMessage `json:"quart,omitempty"`
}

// WorkbookFunctionsQuartile_IncRequestObject undocumented
type WorkbookFunctionsQuartile_IncRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// Quart undocumented
	Quart json.RawMessage `json:"quart,omitempty"`
}

// WorkbookFunctionsQuotientRequestObject undocumented
type WorkbookFunctionsQuotientRequestObject struct {
	// Numerator undocumented
	Numerator json.RawMessage `json:"numerator,omitempty"`
	// Denominator undocumented
	Denominator json.RawMessage `json:"denominator,omitempty"`
}

// WorkbookFunctionsRadiansRequestObject undocumented
type WorkbookFunctionsRadiansRequestObject struct {
	// Angle undocumented
	Angle json.RawMessage `json:"angle,omitempty"`
}

// WorkbookFunctionsRandRequestObject undocumented
type WorkbookFunctionsRandRequestObject struct {
}

// WorkbookFunctionsRandBetweenRequestObject undocumented
type WorkbookFunctionsRandBetweenRequestObject struct {
	// Bottom undocumented
	Bottom json.RawMessage `json:"bottom,omitempty"`
	// Top undocumented
	Top json.RawMessage `json:"top,omitempty"`
}

// WorkbookFunctionsRank_AvgRequestObject undocumented
type WorkbookFunctionsRank_AvgRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Ref undocumented
	Ref json.RawMessage `json:"ref,omitempty"`
	// Order undocumented
	Order json.RawMessage `json:"order,omitempty"`
}

// WorkbookFunctionsRank_EqRequestObject undocumented
type WorkbookFunctionsRank_EqRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Ref undocumented
	Ref json.RawMessage `json:"ref,omitempty"`
	// Order undocumented
	Order json.RawMessage `json:"order,omitempty"`
}

// WorkbookFunctionsRateRequestObject undocumented
type WorkbookFunctionsRateRequestObject struct {
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pmt undocumented
	Pmt json.RawMessage `json:"pmt,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// Fv undocumented
	Fv json.RawMessage `json:"fv,omitempty"`
	// Type undocumented
	Type json.RawMessage `json:"type,omitempty"`
	// Guess undocumented
	Guess json.RawMessage `json:"guess,omitempty"`
}

// WorkbookFunctionsReceivedRequestObject undocumented
type WorkbookFunctionsReceivedRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Investment undocumented
	Investment json.RawMessage `json:"investment,omitempty"`
	// Discount undocumented
	Discount json.RawMessage `json:"discount,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsReplaceRequestObject undocumented
type WorkbookFunctionsReplaceRequestObject struct {
	// OldText undocumented
	OldText json.RawMessage `json:"oldText,omitempty"`
	// StartNum undocumented
	StartNum json.RawMessage `json:"startNum,omitempty"`
	// NumChars undocumented
	NumChars json.RawMessage `json:"numChars,omitempty"`
	// NewText undocumented
	NewText json.RawMessage `json:"newText,omitempty"`
}

// WorkbookFunctionsReplaceBRequestObject undocumented
type WorkbookFunctionsReplaceBRequestObject struct {
	// OldText undocumented
	OldText json.RawMessage `json:"oldText,omitempty"`
	// StartNum undocumented
	StartNum json.RawMessage `json:"startNum,omitempty"`
	// NumBytes undocumented
	NumBytes json.RawMessage `json:"numBytes,omitempty"`
	// NewText undocumented
	NewText json.RawMessage `json:"newText,omitempty"`
}

// WorkbookFunctionsReptRequestObject undocumented
type WorkbookFunctionsReptRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// NumberTimes undocumented
	NumberTimes json.RawMessage `json:"numberTimes,omitempty"`
}

// WorkbookFunctionsRightRequestObject undocumented
type WorkbookFunctionsRightRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// NumChars undocumented
	NumChars json.RawMessage `json:"numChars,omitempty"`
}

// WorkbookFunctionsRightbRequestObject undocumented
type WorkbookFunctionsRightbRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// NumBytes undocumented
	NumBytes json.RawMessage `json:"numBytes,omitempty"`
}

// WorkbookFunctionsRomanRequestObject undocumented
type WorkbookFunctionsRomanRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Form undocumented
	Form json.RawMessage `json:"form,omitempty"`
}

// WorkbookFunctionsRoundRequestObject undocumented
type WorkbookFunctionsRoundRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// NumDigits undocumented
	NumDigits json.RawMessage `json:"numDigits,omitempty"`
}

// WorkbookFunctionsRoundDownRequestObject undocumented
type WorkbookFunctionsRoundDownRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// NumDigits undocumented
	NumDigits json.RawMessage `json:"numDigits,omitempty"`
}

// WorkbookFunctionsRoundUpRequestObject undocumented
type WorkbookFunctionsRoundUpRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// NumDigits undocumented
	NumDigits json.RawMessage `json:"numDigits,omitempty"`
}

// WorkbookFunctionsRowsRequestObject undocumented
type WorkbookFunctionsRowsRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
}

// WorkbookFunctionsRriRequestObject undocumented
type WorkbookFunctionsRriRequestObject struct {
	// Nper undocumented
	Nper json.RawMessage `json:"nper,omitempty"`
	// Pv undocumented
	Pv json.RawMessage `json:"pv,omitempty"`
	// Fv undocumented
	Fv json.RawMessage `json:"fv,omitempty"`
}

// WorkbookFunctionsSecRequestObject undocumented
type WorkbookFunctionsSecRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsSechRequestObject undocumented
type WorkbookFunctionsSechRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsSecondRequestObject undocumented
type WorkbookFunctionsSecondRequestObject struct {
	// SerialNumber undocumented
	SerialNumber json.RawMessage `json:"serialNumber,omitempty"`
}

// WorkbookFunctionsSeriesSumRequestObject undocumented
type WorkbookFunctionsSeriesSumRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// N undocumented
	N json.RawMessage `json:"n,omitempty"`
	// M undocumented
	M json.RawMessage `json:"m,omitempty"`
	// Coefficients undocumented
	Coefficients json.RawMessage `json:"coefficients,omitempty"`
}

// WorkbookFunctionsSheetRequestObject undocumented
type WorkbookFunctionsSheetRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsSheetsRequestObject undocumented
type WorkbookFunctionsSheetsRequestObject struct {
	// Reference undocumented
	Reference json.RawMessage `json:"reference,omitempty"`
}

// WorkbookFunctionsSignRequestObject undocumented
type WorkbookFunctionsSignRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsSinRequestObject undocumented
type WorkbookFunctionsSinRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsSinhRequestObject undocumented
type WorkbookFunctionsSinhRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsSkewRequestObject undocumented
type WorkbookFunctionsSkewRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsSkew_pRequestObject undocumented
type WorkbookFunctionsSkew_pRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsSlnRequestObject undocumented
type WorkbookFunctionsSlnRequestObject struct {
	// Cost undocumented
	Cost json.RawMessage `json:"cost,omitempty"`
	// Salvage undocumented
	Salvage json.RawMessage `json:"salvage,omitempty"`
	// Life undocumented
	Life json.RawMessage `json:"life,omitempty"`
}

// WorkbookFunctionsSmallRequestObject undocumented
type WorkbookFunctionsSmallRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// K undocumented
	K json.RawMessage `json:"k,omitempty"`
}

// WorkbookFunctionsSqrtRequestObject undocumented
type WorkbookFunctionsSqrtRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsSqrtPiRequestObject undocumented
type WorkbookFunctionsSqrtPiRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsStDevARequestObject undocumented
type WorkbookFunctionsStDevARequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsStDevPARequestObject undocumented
type WorkbookFunctionsStDevPARequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsStDev_PRequestObject undocumented
type WorkbookFunctionsStDev_PRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsStDev_SRequestObject undocumented
type WorkbookFunctionsStDev_SRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsStandardizeRequestObject undocumented
type WorkbookFunctionsStandardizeRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Mean undocumented
	Mean json.RawMessage `json:"mean,omitempty"`
	// StandardDev undocumented
	StandardDev json.RawMessage `json:"standardDev,omitempty"`
}

// WorkbookFunctionsSubstituteRequestObject undocumented
type WorkbookFunctionsSubstituteRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
	// OldText undocumented
	OldText json.RawMessage `json:"oldText,omitempty"`
	// NewText undocumented
	NewText json.RawMessage `json:"newText,omitempty"`
	// InstanceNum undocumented
	InstanceNum json.RawMessage `json:"instanceNum,omitempty"`
}

// WorkbookFunctionsSubtotalRequestObject undocumented
type WorkbookFunctionsSubtotalRequestObject struct {
	// FunctionNum undocumented
	FunctionNum json.RawMessage `json:"functionNum,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsSumRequestObject undocumented
type WorkbookFunctionsSumRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsSumIfRequestObject undocumented
type WorkbookFunctionsSumIfRequestObject struct {
	// Range undocumented
	Range json.RawMessage `json:"range,omitempty"`
	// Criteria undocumented
	Criteria json.RawMessage `json:"criteria,omitempty"`
	// SumRange undocumented
	SumRange json.RawMessage `json:"sumRange,omitempty"`
}

// WorkbookFunctionsSumIfsRequestObject undocumented
type WorkbookFunctionsSumIfsRequestObject struct {
	// SumRange undocumented
	SumRange json.RawMessage `json:"sumRange,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsSumSqRequestObject undocumented
type WorkbookFunctionsSumSqRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsSydRequestObject undocumented
type WorkbookFunctionsSydRequestObject struct {
	// Cost undocumented
	Cost json.RawMessage `json:"cost,omitempty"`
	// Salvage undocumented
	Salvage json.RawMessage `json:"salvage,omitempty"`
	// Life undocumented
	Life json.RawMessage `json:"life,omitempty"`
	// Per undocumented
	Per json.RawMessage `json:"per,omitempty"`
}

// WorkbookFunctionsTRequestObject undocumented
type WorkbookFunctionsTRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsTbillEqRequestObject undocumented
type WorkbookFunctionsTbillEqRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Discount undocumented
	Discount json.RawMessage `json:"discount,omitempty"`
}

// WorkbookFunctionsTbillPriceRequestObject undocumented
type WorkbookFunctionsTbillPriceRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Discount undocumented
	Discount json.RawMessage `json:"discount,omitempty"`
}

// WorkbookFunctionsTbillYieldRequestObject undocumented
type WorkbookFunctionsTbillYieldRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Pr undocumented
	Pr json.RawMessage `json:"pr,omitempty"`
}

// WorkbookFunctionsT_DistRequestObject undocumented
type WorkbookFunctionsT_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsT_Dist_2TRequestObject undocumented
type WorkbookFunctionsT_Dist_2TRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
}

// WorkbookFunctionsT_Dist_RTRequestObject undocumented
type WorkbookFunctionsT_Dist_RTRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
}

// WorkbookFunctionsT_InvRequestObject undocumented
type WorkbookFunctionsT_InvRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
}

// WorkbookFunctionsT_Inv_2TRequestObject undocumented
type WorkbookFunctionsT_Inv_2TRequestObject struct {
	// Probability undocumented
	Probability json.RawMessage `json:"probability,omitempty"`
	// DegFreedom undocumented
	DegFreedom json.RawMessage `json:"degFreedom,omitempty"`
}

// WorkbookFunctionsTanRequestObject undocumented
type WorkbookFunctionsTanRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsTanhRequestObject undocumented
type WorkbookFunctionsTanhRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsTextRequestObject undocumented
type WorkbookFunctionsTextRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
	// FormatText undocumented
	FormatText json.RawMessage `json:"formatText,omitempty"`
}

// WorkbookFunctionsTimeRequestObject undocumented
type WorkbookFunctionsTimeRequestObject struct {
	// Hour undocumented
	Hour json.RawMessage `json:"hour,omitempty"`
	// Minute undocumented
	Minute json.RawMessage `json:"minute,omitempty"`
	// Second undocumented
	Second json.RawMessage `json:"second,omitempty"`
}

// WorkbookFunctionsTimevalueRequestObject undocumented
type WorkbookFunctionsTimevalueRequestObject struct {
	// TimeText undocumented
	TimeText json.RawMessage `json:"timeText,omitempty"`
}

// WorkbookFunctionsTodayRequestObject undocumented
type WorkbookFunctionsTodayRequestObject struct {
}

// WorkbookFunctionsTrimRequestObject undocumented
type WorkbookFunctionsTrimRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsTrimMeanRequestObject undocumented
type WorkbookFunctionsTrimMeanRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// Percent undocumented
	Percent json.RawMessage `json:"percent,omitempty"`
}

// WorkbookFunctionsTrueRequestObject undocumented
type WorkbookFunctionsTrueRequestObject struct {
}

// WorkbookFunctionsTruncRequestObject undocumented
type WorkbookFunctionsTruncRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// NumDigits undocumented
	NumDigits json.RawMessage `json:"numDigits,omitempty"`
}

// WorkbookFunctionsTypeRequestObject undocumented
type WorkbookFunctionsTypeRequestObject struct {
	// Value undocumented
	Value json.RawMessage `json:"value,omitempty"`
}

// WorkbookFunctionsUsdollarRequestObject undocumented
type WorkbookFunctionsUsdollarRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
	// Decimals undocumented
	Decimals json.RawMessage `json:"decimals,omitempty"`
}

// WorkbookFunctionsUnicharRequestObject undocumented
type WorkbookFunctionsUnicharRequestObject struct {
	// Number undocumented
	Number json.RawMessage `json:"number,omitempty"`
}

// WorkbookFunctionsUnicodeRequestObject undocumented
type WorkbookFunctionsUnicodeRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsUpperRequestObject undocumented
type WorkbookFunctionsUpperRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsVlookupRequestObject undocumented
type WorkbookFunctionsVlookupRequestObject struct {
	// LookupValue undocumented
	LookupValue json.RawMessage `json:"lookupValue,omitempty"`
	// TableArray undocumented
	TableArray json.RawMessage `json:"tableArray,omitempty"`
	// ColIndexNum undocumented
	ColIndexNum json.RawMessage `json:"colIndexNum,omitempty"`
	// RangeLookup undocumented
	RangeLookup json.RawMessage `json:"rangeLookup,omitempty"`
}

// WorkbookFunctionsValueRequestObject undocumented
type WorkbookFunctionsValueRequestObject struct {
	// Text undocumented
	Text json.RawMessage `json:"text,omitempty"`
}

// WorkbookFunctionsVarARequestObject undocumented
type WorkbookFunctionsVarARequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsVarPARequestObject undocumented
type WorkbookFunctionsVarPARequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsVar_PRequestObject undocumented
type WorkbookFunctionsVar_PRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsVar_SRequestObject undocumented
type WorkbookFunctionsVar_SRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsVdbRequestObject undocumented
type WorkbookFunctionsVdbRequestObject struct {
	// Cost undocumented
	Cost json.RawMessage `json:"cost,omitempty"`
	// Salvage undocumented
	Salvage json.RawMessage `json:"salvage,omitempty"`
	// Life undocumented
	Life json.RawMessage `json:"life,omitempty"`
	// StartPeriod undocumented
	StartPeriod json.RawMessage `json:"startPeriod,omitempty"`
	// EndPeriod undocumented
	EndPeriod json.RawMessage `json:"endPeriod,omitempty"`
	// Factor undocumented
	Factor json.RawMessage `json:"factor,omitempty"`
	// NoSwitch undocumented
	NoSwitch json.RawMessage `json:"noSwitch,omitempty"`
}

// WorkbookFunctionsWeekNumRequestObject undocumented
type WorkbookFunctionsWeekNumRequestObject struct {
	// SerialNumber undocumented
	SerialNumber json.RawMessage `json:"serialNumber,omitempty"`
	// ReturnType undocumented
	ReturnType json.RawMessage `json:"returnType,omitempty"`
}

// WorkbookFunctionsWeekdayRequestObject undocumented
type WorkbookFunctionsWeekdayRequestObject struct {
	// SerialNumber undocumented
	SerialNumber json.RawMessage `json:"serialNumber,omitempty"`
	// ReturnType undocumented
	ReturnType json.RawMessage `json:"returnType,omitempty"`
}

// WorkbookFunctionsWeibull_DistRequestObject undocumented
type WorkbookFunctionsWeibull_DistRequestObject struct {
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Alpha undocumented
	Alpha json.RawMessage `json:"alpha,omitempty"`
	// Beta undocumented
	Beta json.RawMessage `json:"beta,omitempty"`
	// Cumulative undocumented
	Cumulative json.RawMessage `json:"cumulative,omitempty"`
}

// WorkbookFunctionsWorkDayRequestObject undocumented
type WorkbookFunctionsWorkDayRequestObject struct {
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
	// Days undocumented
	Days json.RawMessage `json:"days,omitempty"`
	// Holidays undocumented
	Holidays json.RawMessage `json:"holidays,omitempty"`
}

// WorkbookFunctionsWorkDay_IntlRequestObject undocumented
type WorkbookFunctionsWorkDay_IntlRequestObject struct {
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
	// Days undocumented
	Days json.RawMessage `json:"days,omitempty"`
	// Weekend undocumented
	Weekend json.RawMessage `json:"weekend,omitempty"`
	// Holidays undocumented
	Holidays json.RawMessage `json:"holidays,omitempty"`
}

// WorkbookFunctionsXirrRequestObject undocumented
type WorkbookFunctionsXirrRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
	// Dates undocumented
	Dates json.RawMessage `json:"dates,omitempty"`
	// Guess undocumented
	Guess json.RawMessage `json:"guess,omitempty"`
}

// WorkbookFunctionsXnpvRequestObject undocumented
type WorkbookFunctionsXnpvRequestObject struct {
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
	// Dates undocumented
	Dates json.RawMessage `json:"dates,omitempty"`
}

// WorkbookFunctionsXorRequestObject undocumented
type WorkbookFunctionsXorRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFunctionsYearRequestObject undocumented
type WorkbookFunctionsYearRequestObject struct {
	// SerialNumber undocumented
	SerialNumber json.RawMessage `json:"serialNumber,omitempty"`
}

// WorkbookFunctionsYearFracRequestObject undocumented
type WorkbookFunctionsYearFracRequestObject struct {
	// StartDate undocumented
	StartDate json.RawMessage `json:"startDate,omitempty"`
	// EndDate undocumented
	EndDate json.RawMessage `json:"endDate,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsYieldRequestObject undocumented
type WorkbookFunctionsYieldRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Pr undocumented
	Pr json.RawMessage `json:"pr,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Frequency undocumented
	Frequency json.RawMessage `json:"frequency,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsYieldDiscRequestObject undocumented
type WorkbookFunctionsYieldDiscRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Pr undocumented
	Pr json.RawMessage `json:"pr,omitempty"`
	// Redemption undocumented
	Redemption json.RawMessage `json:"redemption,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsYieldMatRequestObject undocumented
type WorkbookFunctionsYieldMatRequestObject struct {
	// Settlement undocumented
	Settlement json.RawMessage `json:"settlement,omitempty"`
	// Maturity undocumented
	Maturity json.RawMessage `json:"maturity,omitempty"`
	// Issue undocumented
	Issue json.RawMessage `json:"issue,omitempty"`
	// Rate undocumented
	Rate json.RawMessage `json:"rate,omitempty"`
	// Pr undocumented
	Pr json.RawMessage `json:"pr,omitempty"`
	// Basis undocumented
	Basis json.RawMessage `json:"basis,omitempty"`
}

// WorkbookFunctionsZ_TestRequestObject undocumented
type WorkbookFunctionsZ_TestRequestObject struct {
	// Array undocumented
	Array json.RawMessage `json:"array,omitempty"`
	// X undocumented
	X json.RawMessage `json:"x,omitempty"`
	// Sigma undocumented
	Sigma json.RawMessage `json:"sigma,omitempty"`
}

// WorkbookTableSortApplyRequestObject undocumented
type WorkbookTableSortApplyRequestObject struct {
	// Fields undocumented
	Fields []WorkbookSortField `json:"fields,omitempty"`
	// MatchCase undocumented
	MatchCase *bool `json:"matchCase,omitempty"`
	// Method undocumented
	Method *string `json:"method,omitempty"`
}

// WorkbookTableSortClearRequestObject undocumented
type WorkbookTableSortClearRequestObject struct {
}

// WorkbookTableSortReapplyRequestObject undocumented
type WorkbookTableSortReapplyRequestObject struct {
}

// OnenotePageOnenotePatchContentRequestObject undocumented
type OnenotePageOnenotePatchContentRequestObject struct {
	// Commands undocumented
	Commands []OnenotePatchContentCommand `json:"commands,omitempty"`
}

// OnenotePageCopyToSectionRequestObject undocumented
type OnenotePageCopyToSectionRequestObject struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// GroupId undocumented
	GroupId *string `json:"groupId,omitempty"`
	// SiteCollectionId undocumented
	SiteCollectionId *string `json:"siteCollectionId,omitempty"`
	// SiteId undocumented
	SiteId *string `json:"siteId,omitempty"`
}

// NotificationMessageTemplateSendTestMessageRequestObject undocumented
type NotificationMessageTemplateSendTestMessageRequestObject struct {
}

// TeamsAppInstallationUpgradeRequestObject undocumented
type TeamsAppInstallationUpgradeRequestObject struct {
}

// WorkbookCreateSessionRequestObject undocumented
type WorkbookCreateSessionRequestObject struct {
	// PersistChanges undocumented
	PersistChanges *bool `json:"persistChanges,omitempty"`
}

// WorkbookCloseSessionRequestObject undocumented
type WorkbookCloseSessionRequestObject struct {
}

// WorkbookRefreshSessionRequestObject undocumented
type WorkbookRefreshSessionRequestObject struct {
}

// MailFolderCopyRequestObject undocumented
type MailFolderCopyRequestObject struct {
	// DestinationId undocumented
	DestinationId *string `json:"DestinationId,omitempty"`
}

// MailFolderMoveRequestObject undocumented
type MailFolderMoveRequestObject struct {
	// DestinationId undocumented
	DestinationId *string `json:"DestinationId,omitempty"`
}

// ConversationThreadReplyRequestObject undocumented
type ConversationThreadReplyRequestObject struct {
	// Post undocumented
	Post *Post `json:"Post,omitempty"`
}

// OrganizationSetMobileDeviceManagementAuthorityRequestObject undocumented
type OrganizationSetMobileDeviceManagementAuthorityRequestObject struct {
}

// DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestObject undocumented
type DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestObject struct {
}

// DriveItemVersionRestoreVersionRequestObject undocumented
type DriveItemVersionRestoreVersionRequestObject struct {
}

// ManagedEBookAssignRequestObject undocumented
type ManagedEBookAssignRequestObject struct {
	// ManagedEBookAssignments undocumented
	ManagedEBookAssignments []ManagedEBookAssignment `json:"managedEBookAssignments,omitempty"`
}

// DeviceCompliancePolicyAssignRequestObject undocumented
type DeviceCompliancePolicyAssignRequestObject struct {
	// Assignments undocumented
	Assignments []DeviceCompliancePolicyAssignment `json:"assignments,omitempty"`
}

// DeviceCompliancePolicyScheduleActionsForRulesRequestObject undocumented
type DeviceCompliancePolicyScheduleActionsForRulesRequestObject struct {
	// DeviceComplianceScheduledActionForRules undocumented
	DeviceComplianceScheduledActionForRules []DeviceComplianceScheduledActionForRule `json:"deviceComplianceScheduledActionForRules,omitempty"`
}

// WorkbookApplicationCalculateRequestObject undocumented
type WorkbookApplicationCalculateRequestObject struct {
	// CalculationType undocumented
	CalculationType *string `json:"calculationType,omitempty"`
}

// WorkbookTableClearFiltersRequestObject undocumented
type WorkbookTableClearFiltersRequestObject struct {
}

// WorkbookTableConvertToRangeRequestObject undocumented
type WorkbookTableConvertToRangeRequestObject struct {
}

// WorkbookTableReapplyFiltersRequestObject undocumented
type WorkbookTableReapplyFiltersRequestObject struct {
}

// WindowsInformationProtectionAssignRequestObject undocumented
type WindowsInformationProtectionAssignRequestObject struct {
	// Assignments undocumented
	Assignments []TargetedManagedAppPolicyAssignment `json:"assignments,omitempty"`
}

// ManagedAppPolicyTargetAppsRequestObject undocumented
type ManagedAppPolicyTargetAppsRequestObject struct {
	// Apps undocumented
	Apps []ManagedMobileApp `json:"apps,omitempty"`
}

// OnenoteSectionCopyToNotebookRequestObject undocumented
type OnenoteSectionCopyToNotebookRequestObject struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// GroupId undocumented
	GroupId *string `json:"groupId,omitempty"`
	// RenameAs undocumented
	RenameAs *string `json:"renameAs,omitempty"`
	// SiteCollectionId undocumented
	SiteCollectionId *string `json:"siteCollectionId,omitempty"`
	// SiteId undocumented
	SiteId *string `json:"siteId,omitempty"`
}

// OnenoteSectionCopyToSectionGroupRequestObject undocumented
type OnenoteSectionCopyToSectionGroupRequestObject struct {
	// Id undocumented
	Id *string `json:"id,omitempty"`
	// GroupId undocumented
	GroupId *string `json:"groupId,omitempty"`
	// RenameAs undocumented
	RenameAs *string `json:"renameAs,omitempty"`
	// SiteCollectionId undocumented
	SiteCollectionId *string `json:"siteCollectionId,omitempty"`
	// SiteId undocumented
	SiteId *string `json:"siteId,omitempty"`
}

// WorkbookPivotTableRefreshRequestObject undocumented
type WorkbookPivotTableRefreshRequestObject struct {
}

// MessageCreateReplyRequestObject undocumented
type MessageCreateReplyRequestObject struct {
	// Message undocumented
	Message *Message `json:"Message,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// MessageCreateReplyAllRequestObject undocumented
type MessageCreateReplyAllRequestObject struct {
	// Message undocumented
	Message *Message `json:"Message,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// MessageCreateForwardRequestObject undocumented
type MessageCreateForwardRequestObject struct {
	// ToRecipients undocumented
	ToRecipients []Recipient `json:"ToRecipients,omitempty"`
	// Message undocumented
	Message *Message `json:"Message,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// MessageSendRequestObject undocumented
type MessageSendRequestObject struct {
}

// MessageCopyRequestObject undocumented
type MessageCopyRequestObject struct {
	// DestinationId undocumented
	DestinationId *string `json:"DestinationId,omitempty"`
}

// MessageMoveRequestObject undocumented
type MessageMoveRequestObject struct {
	// DestinationId undocumented
	DestinationId *string `json:"DestinationId,omitempty"`
}

// MessageReplyRequestObject undocumented
type MessageReplyRequestObject struct {
	// Message undocumented
	Message *Message `json:"Message,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// MessageReplyAllRequestObject undocumented
type MessageReplyAllRequestObject struct {
	// Message undocumented
	Message *Message `json:"Message,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// MessageForwardRequestObject undocumented
type MessageForwardRequestObject struct {
	// ToRecipients undocumented
	ToRecipients []Recipient `json:"ToRecipients,omitempty"`
	// Message undocumented
	Message *Message `json:"Message,omitempty"`
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
}

// DriveItemCheckinRequestObject undocumented
type DriveItemCheckinRequestObject struct {
	// CheckInAs undocumented
	CheckInAs *string `json:"checkInAs,omitempty"`
	// Comment undocumented
	Comment *string `json:"comment,omitempty"`
}

// DriveItemCheckoutRequestObject undocumented
type DriveItemCheckoutRequestObject struct {
}

// DriveItemCopyRequestObject undocumented
type DriveItemCopyRequestObject struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// ParentReference undocumented
	ParentReference *ItemReference `json:"parentReference,omitempty"`
}

// DriveItemCreateLinkRequestObject undocumented
type DriveItemCreateLinkRequestObject struct {
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// Scope undocumented
	Scope *string `json:"scope,omitempty"`
}

// DriveItemCreateUploadSessionRequestObject undocumented
type DriveItemCreateUploadSessionRequestObject struct {
	// Item undocumented
	Item *DriveItemUploadableProperties `json:"item,omitempty"`
}

// DriveItemInviteRequestObject undocumented
type DriveItemInviteRequestObject struct {
	// RequireSignIn undocumented
	RequireSignIn *bool `json:"requireSignIn,omitempty"`
	// Roles undocumented
	Roles []string `json:"roles,omitempty"`
	// SendInvitation undocumented
	SendInvitation *bool `json:"sendInvitation,omitempty"`
	// Message undocumented
	Message *string `json:"message,omitempty"`
	// Recipients undocumented
	Recipients []DriveRecipient `json:"recipients,omitempty"`
}

// DriveItemPreviewRequestObject undocumented
type DriveItemPreviewRequestObject struct {
	// Page undocumented
	Page *string `json:"page,omitempty"`
	// Zoom undocumented
	Zoom *float64 `json:"zoom,omitempty"`
}

// VppTokenSyncLicensesRequestObject undocumented
type VppTokenSyncLicensesRequestObject struct {
}

// DeviceEnrollmentConfigurationSetPriorityRequestObject undocumented
type DeviceEnrollmentConfigurationSetPriorityRequestObject struct {
	// Priority undocumented
	Priority *int `json:"priority,omitempty"`
}

// DeviceEnrollmentConfigurationAssignRequestObject undocumented
type DeviceEnrollmentConfigurationAssignRequestObject struct {
	// EnrollmentConfigurationAssignments undocumented
	EnrollmentConfigurationAssignments []EnrollmentConfigurationAssignment `json:"enrollmentConfigurationAssignments,omitempty"`
}

// UserAssignLicenseRequestObject undocumented
type UserAssignLicenseRequestObject struct {
	// AddLicenses undocumented
	AddLicenses []AssignedLicense `json:"addLicenses,omitempty"`
	// RemoveLicenses undocumented
	RemoveLicenses []UUID `json:"removeLicenses,omitempty"`
}

// UserChangePasswordRequestObject undocumented
type UserChangePasswordRequestObject struct {
	// CurrentPassword undocumented
	CurrentPassword *string `json:"currentPassword,omitempty"`
	// NewPassword undocumented
	NewPassword *string `json:"newPassword,omitempty"`
}

// UserRevokeSignInSessionsRequestObject undocumented
type UserRevokeSignInSessionsRequestObject struct {
}

// UserFindMeetingTimesRequestObject undocumented
type UserFindMeetingTimesRequestObject struct {
	// Attendees undocumented
	Attendees []AttendeeBase `json:"attendees,omitempty"`
	// LocationConstraint undocumented
	LocationConstraint *LocationConstraint `json:"locationConstraint,omitempty"`
	// TimeConstraint undocumented
	TimeConstraint *TimeConstraint `json:"timeConstraint,omitempty"`
	// MeetingDuration undocumented
	MeetingDuration *time.Duration `json:"meetingDuration,omitempty"`
	// MaxCandidates undocumented
	MaxCandidates *int `json:"maxCandidates,omitempty"`
	// IsOrganizerOptional undocumented
	IsOrganizerOptional *bool `json:"isOrganizerOptional,omitempty"`
	// ReturnSuggestionReasons undocumented
	ReturnSuggestionReasons *bool `json:"returnSuggestionReasons,omitempty"`
	// MinimumAttendeePercentage undocumented
	MinimumAttendeePercentage *float64 `json:"minimumAttendeePercentage,omitempty"`
}

// UserSendMailRequestObject undocumented
type UserSendMailRequestObject struct {
	// Message undocumented
	Message *Message `json:"Message,omitempty"`
	// SaveToSentItems undocumented
	SaveToSentItems *bool `json:"SaveToSentItems,omitempty"`
}

// UserGetMailTipsRequestObject undocumented
type UserGetMailTipsRequestObject struct {
	// EmailAddresses undocumented
	EmailAddresses []string `json:"EmailAddresses,omitempty"`
	// MailTipsOptions undocumented
	MailTipsOptions *MailTipsType `json:"MailTipsOptions,omitempty"`
}

// UserTranslateExchangeIdsRequestObject undocumented
type UserTranslateExchangeIdsRequestObject struct {
	// InputIds undocumented
	InputIds []string `json:"InputIds,omitempty"`
	// TargetIdType undocumented
	TargetIdType *ExchangeIdFormat `json:"TargetIdType,omitempty"`
	// SourceIdType undocumented
	SourceIdType *ExchangeIdFormat `json:"SourceIdType,omitempty"`
}

// UserRemoveAllDevicesFromManagementRequestObject undocumented
type UserRemoveAllDevicesFromManagementRequestObject struct {
}

// UserWipeManagedAppRegistrationsByDeviceTagRequestObject undocumented
type UserWipeManagedAppRegistrationsByDeviceTagRequestObject struct {
	// DeviceTag undocumented
	DeviceTag *string `json:"deviceTag,omitempty"`
}

// UserExportPersonalDataRequestObject undocumented
type UserExportPersonalDataRequestObject struct {
	// StorageLocation undocumented
	StorageLocation *string `json:"storageLocation,omitempty"`
}

// WorkbookChartSetDataRequestObject undocumented
type WorkbookChartSetDataRequestObject struct {
	// SourceData undocumented
	SourceData json.RawMessage `json:"sourceData,omitempty"`
	// SeriesBy undocumented
	SeriesBy *string `json:"seriesBy,omitempty"`
}

// WorkbookChartSetPositionRequestObject undocumented
type WorkbookChartSetPositionRequestObject struct {
	// StartCell undocumented
	StartCell json.RawMessage `json:"startCell,omitempty"`
	// EndCell undocumented
	EndCell json.RawMessage `json:"endCell,omitempty"`
}

// WorkbookNamedItemAddRequestObject undocumented
type WorkbookNamedItemAddRequestObject struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Reference undocumented
	Reference json.RawMessage `json:"reference,omitempty"`
	// Comment undocumented
	Comment *string `json:"comment,omitempty"`
}

// WorkbookNamedItemAddFormulaLocalRequestObject undocumented
type WorkbookNamedItemAddFormulaLocalRequestObject struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Formula undocumented
	Formula *string `json:"formula,omitempty"`
	// Comment undocumented
	Comment *string `json:"comment,omitempty"`
}

// WorkbookPivotTableRefreshAllRequestObject undocumented
type WorkbookPivotTableRefreshAllRequestObject struct {
}

// PostReplyRequestObject undocumented
type PostReplyRequestObject struct {
	// Post undocumented
	Post *Post `json:"Post,omitempty"`
}

// PostForwardRequestObject undocumented
type PostForwardRequestObject struct {
	// Comment undocumented
	Comment *string `json:"Comment,omitempty"`
	// ToRecipients undocumented
	ToRecipients []Recipient `json:"ToRecipients,omitempty"`
}

// ManagedDeviceMobileAppConfigurationAssignRequestObject undocumented
type ManagedDeviceMobileAppConfigurationAssignRequestObject struct {
	// Assignments undocumented
	Assignments []ManagedDeviceMobileAppConfigurationAssignment `json:"assignments,omitempty"`
}

// ManagedAppProtectionTargetAppsRequestObject undocumented
type ManagedAppProtectionTargetAppsRequestObject struct {
	// Apps undocumented
	Apps []ManagedMobileApp `json:"apps,omitempty"`
}

// WorkbookChartAddRequestObject undocumented
type WorkbookChartAddRequestObject struct {
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// SourceData undocumented
	SourceData json.RawMessage `json:"sourceData,omitempty"`
	// SeriesBy undocumented
	SeriesBy *string `json:"seriesBy,omitempty"`
}

// CalendarGetScheduleRequestObject undocumented
type CalendarGetScheduleRequestObject struct {
	// Schedules undocumented
	Schedules []string `json:"Schedules,omitempty"`
	// EndTime undocumented
	EndTime *DateTimeTimeZone `json:"EndTime,omitempty"`
	// StartTime undocumented
	StartTime *DateTimeTimeZone `json:"StartTime,omitempty"`
	// AvailabilityViewInterval undocumented
	AvailabilityViewInterval *int `json:"AvailabilityViewInterval,omitempty"`
}

// DeviceManagementExchangeConnectorSyncRequestObject undocumented
type DeviceManagementExchangeConnectorSyncRequestObject struct {
	// SyncType undocumented
	SyncType *DeviceManagementExchangeConnectorSyncType `json:"syncType,omitempty"`
}

// ManagedDeviceRetireRequestObject undocumented
type ManagedDeviceRetireRequestObject struct {
}

// ManagedDeviceWipeRequestObject undocumented
type ManagedDeviceWipeRequestObject struct {
	// KeepEnrollmentData undocumented
	KeepEnrollmentData *bool `json:"keepEnrollmentData,omitempty"`
	// KeepUserData undocumented
	KeepUserData *bool `json:"keepUserData,omitempty"`
	// MacOsUnlockCode undocumented
	MacOsUnlockCode *string `json:"macOsUnlockCode,omitempty"`
}

// ManagedDeviceResetPasscodeRequestObject undocumented
type ManagedDeviceResetPasscodeRequestObject struct {
}

// ManagedDeviceRemoteLockRequestObject undocumented
type ManagedDeviceRemoteLockRequestObject struct {
}

// ManagedDeviceRequestRemoteAssistanceRequestObject undocumented
type ManagedDeviceRequestRemoteAssistanceRequestObject struct {
}

// ManagedDeviceDisableLostModeRequestObject undocumented
type ManagedDeviceDisableLostModeRequestObject struct {
}

// ManagedDeviceLocateDeviceRequestObject undocumented
type ManagedDeviceLocateDeviceRequestObject struct {
}

// ManagedDeviceBypassActivationLockRequestObject undocumented
type ManagedDeviceBypassActivationLockRequestObject struct {
}

// ManagedDeviceRebootNowRequestObject undocumented
type ManagedDeviceRebootNowRequestObject struct {
}

// ManagedDeviceShutDownRequestObject undocumented
type ManagedDeviceShutDownRequestObject struct {
}

// ManagedDeviceRecoverPasscodeRequestObject undocumented
type ManagedDeviceRecoverPasscodeRequestObject struct {
}

// ManagedDeviceCleanWindowsDeviceRequestObject undocumented
type ManagedDeviceCleanWindowsDeviceRequestObject struct {
	// KeepUserData undocumented
	KeepUserData *bool `json:"keepUserData,omitempty"`
}

// ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestObject undocumented
type ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestObject struct {
}

// ManagedDeviceDeleteUserFromSharedAppleDeviceRequestObject undocumented
type ManagedDeviceDeleteUserFromSharedAppleDeviceRequestObject struct {
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
}

// ManagedDeviceSyncDeviceRequestObject undocumented
type ManagedDeviceSyncDeviceRequestObject struct {
}

// ManagedDeviceWindowsDefenderScanRequestObject undocumented
type ManagedDeviceWindowsDefenderScanRequestObject struct {
	// QuickScan undocumented
	QuickScan *bool `json:"quickScan,omitempty"`
}

// ManagedDeviceWindowsDefenderUpdateSignaturesRequestObject undocumented
type ManagedDeviceWindowsDefenderUpdateSignaturesRequestObject struct {
}

// ManagedDeviceUpdateWindowsDeviceAccountRequestObject undocumented
type ManagedDeviceUpdateWindowsDeviceAccountRequestObject struct {
	// UpdateWindowsDeviceAccountActionParameter undocumented
	UpdateWindowsDeviceAccountActionParameter *UpdateWindowsDeviceAccountActionParameter `json:"updateWindowsDeviceAccountActionParameter,omitempty"`
}

// GroupValidatePropertiesRequestObject undocumented
type GroupValidatePropertiesRequestObject struct {
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// MailNickname undocumented
	MailNickname *string `json:"mailNickname,omitempty"`
	// OnBehalfOfUserId undocumented
	OnBehalfOfUserId *UUID `json:"onBehalfOfUserId,omitempty"`
}

// GroupSubscribeByMailRequestObject undocumented
type GroupSubscribeByMailRequestObject struct {
}

// GroupUnsubscribeByMailRequestObject undocumented
type GroupUnsubscribeByMailRequestObject struct {
}

// GroupAddFavoriteRequestObject undocumented
type GroupAddFavoriteRequestObject struct {
}

// GroupRemoveFavoriteRequestObject undocumented
type GroupRemoveFavoriteRequestObject struct {
}

// GroupResetUnseenCountRequestObject undocumented
type GroupResetUnseenCountRequestObject struct {
}

// GroupRenewRequestObject undocumented
type GroupRenewRequestObject struct {
}

// WorkbookRangeClearRequestObject undocumented
type WorkbookRangeClearRequestObject struct {
	// ApplyTo undocumented
	ApplyTo *string `json:"applyTo,omitempty"`
}

// WorkbookRangeDeleteRequestObject undocumented
type WorkbookRangeDeleteRequestObject struct {
	// Shift undocumented
	Shift *string `json:"shift,omitempty"`
}

// WorkbookRangeInsertRequestObject undocumented
type WorkbookRangeInsertRequestObject struct {
	// Shift undocumented
	Shift *string `json:"shift,omitempty"`
}

// WorkbookRangeMergeRequestObject undocumented
type WorkbookRangeMergeRequestObject struct {
	// Across undocumented
	Across *bool `json:"across,omitempty"`
}

// WorkbookRangeUnmergeRequestObject undocumented
type WorkbookRangeUnmergeRequestObject struct {
}

// WorkbookRangeFillClearRequestObject undocumented
type WorkbookRangeFillClearRequestObject struct {
}

// WorkbookTableAddRequestObject undocumented
type WorkbookTableAddRequestObject struct {
	// Address undocumented
	Address *string `json:"address,omitempty"`
	// HasHeaders undocumented
	HasHeaders *bool `json:"hasHeaders,omitempty"`
}

// WorkbookTableRowAddRequestObject undocumented
type WorkbookTableRowAddRequestObject struct {
	// Index undocumented
	Index *int `json:"index,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookRangeFormatAutofitColumnsRequestObject undocumented
type WorkbookRangeFormatAutofitColumnsRequestObject struct {
}

// WorkbookRangeFormatAutofitRowsRequestObject undocumented
type WorkbookRangeFormatAutofitRowsRequestObject struct {
}

// WorkbookWorksheetAddRequestObject undocumented
type WorkbookWorksheetAddRequestObject struct {
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

// TargetedManagedAppConfigurationAssignRequestObject undocumented
type TargetedManagedAppConfigurationAssignRequestObject struct {
	// Assignments undocumented
	Assignments []TargetedManagedAppPolicyAssignment `json:"assignments,omitempty"`
}

// TargetedManagedAppConfigurationTargetAppsRequestObject undocumented
type TargetedManagedAppConfigurationTargetAppsRequestObject struct {
	// Apps undocumented
	Apps []ManagedMobileApp `json:"apps,omitempty"`
}

// TeamCloneRequestObject undocumented
type TeamCloneRequestObject struct {
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// MailNickname undocumented
	MailNickname *string `json:"mailNickname,omitempty"`
	// Classification undocumented
	Classification *string `json:"classification,omitempty"`
	// Visibility undocumented
	Visibility *TeamVisibilityType `json:"visibility,omitempty"`
	// PartsToClone undocumented
	PartsToClone *ClonableTeamParts `json:"partsToClone,omitempty"`
}

// TeamArchiveRequestObject undocumented
type TeamArchiveRequestObject struct {
	// ShouldSetSpoSiteReadOnlyForMembers undocumented
	ShouldSetSpoSiteReadOnlyForMembers *bool `json:"shouldSetSpoSiteReadOnlyForMembers,omitempty"`
}

// TeamUnarchiveRequestObject undocumented
type TeamUnarchiveRequestObject struct {
}

// DomainForceDeleteRequestObject undocumented
type DomainForceDeleteRequestObject struct {
	// DisableUserAccounts undocumented
	DisableUserAccounts *bool `json:"disableUserAccounts,omitempty"`
}

// DomainVerifyRequestObject undocumented
type DomainVerifyRequestObject struct {
}

// WorkbookFilterApplyRequestObject undocumented
type WorkbookFilterApplyRequestObject struct {
	// Criteria undocumented
	Criteria *WorkbookFilterCriteria `json:"criteria,omitempty"`
}

// WorkbookFilterApplyBottomItemsFilterRequestObject undocumented
type WorkbookFilterApplyBottomItemsFilterRequestObject struct {
	// Count undocumented
	Count *int `json:"count,omitempty"`
}

// WorkbookFilterApplyBottomPercentFilterRequestObject undocumented
type WorkbookFilterApplyBottomPercentFilterRequestObject struct {
	// Percent undocumented
	Percent *int `json:"percent,omitempty"`
}

// WorkbookFilterApplyCellColorFilterRequestObject undocumented
type WorkbookFilterApplyCellColorFilterRequestObject struct {
	// Color undocumented
	Color *string `json:"color,omitempty"`
}

// WorkbookFilterApplyCustomFilterRequestObject undocumented
type WorkbookFilterApplyCustomFilterRequestObject struct {
	// Criteria1 undocumented
	Criteria1 *string `json:"criteria1,omitempty"`
	// Criteria2 undocumented
	Criteria2 *string `json:"criteria2,omitempty"`
	// Oper undocumented
	Oper *string `json:"oper,omitempty"`
}

// WorkbookFilterApplyDynamicFilterRequestObject undocumented
type WorkbookFilterApplyDynamicFilterRequestObject struct {
	// Criteria undocumented
	Criteria *string `json:"criteria,omitempty"`
}

// WorkbookFilterApplyFontColorFilterRequestObject undocumented
type WorkbookFilterApplyFontColorFilterRequestObject struct {
	// Color undocumented
	Color *string `json:"color,omitempty"`
}

// WorkbookFilterApplyIconFilterRequestObject undocumented
type WorkbookFilterApplyIconFilterRequestObject struct {
	// Icon undocumented
	Icon *WorkbookIcon `json:"icon,omitempty"`
}

// WorkbookFilterApplyTopItemsFilterRequestObject undocumented
type WorkbookFilterApplyTopItemsFilterRequestObject struct {
	// Count undocumented
	Count *int `json:"count,omitempty"`
}

// WorkbookFilterApplyTopPercentFilterRequestObject undocumented
type WorkbookFilterApplyTopPercentFilterRequestObject struct {
	// Percent undocumented
	Percent *int `json:"percent,omitempty"`
}

// WorkbookFilterApplyValuesFilterRequestObject undocumented
type WorkbookFilterApplyValuesFilterRequestObject struct {
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
}

// WorkbookFilterClearRequestObject undocumented
type WorkbookFilterClearRequestObject struct {
}

// ListItemVersionRestoreVersionRequestObject undocumented
type ListItemVersionRestoreVersionRequestObject struct {
}

// MobileAppContentFileCommitRequestObject undocumented
type MobileAppContentFileCommitRequestObject struct {
	// FileEncryptionInfo undocumented
	FileEncryptionInfo *FileEncryptionInfo `json:"fileEncryptionInfo,omitempty"`
}

// MobileAppContentFileRenewUploadRequestObject undocumented
type MobileAppContentFileRenewUploadRequestObject struct {
}

// ParticipantInviteRequestObject undocumented
type ParticipantInviteRequestObject struct {
	// Participants undocumented
	Participants []InvitationParticipantInfo `json:"participants,omitempty"`
	// ClientContext undocumented
	ClientContext *string `json:"clientContext,omitempty"`
}

// TargetedManagedAppProtectionAssignRequestObject undocumented
type TargetedManagedAppProtectionAssignRequestObject struct {
	// Assignments undocumented
	Assignments []TargetedManagedAppPolicyAssignment `json:"assignments,omitempty"`
}

// DirectoryObjectCheckMemberGroupsRequestObject undocumented
type DirectoryObjectCheckMemberGroupsRequestObject struct {
	// GroupIds undocumented
	GroupIds []string `json:"groupIds,omitempty"`
}

// DirectoryObjectCheckMemberObjectsRequestObject undocumented
type DirectoryObjectCheckMemberObjectsRequestObject struct {
	// Ids undocumented
	Ids []string `json:"ids,omitempty"`
}

// DirectoryObjectGetMemberGroupsRequestObject undocumented
type DirectoryObjectGetMemberGroupsRequestObject struct {
	// SecurityEnabledOnly undocumented
	SecurityEnabledOnly *bool `json:"securityEnabledOnly,omitempty"`
}

// DirectoryObjectGetMemberObjectsRequestObject undocumented
type DirectoryObjectGetMemberObjectsRequestObject struct {
	// SecurityEnabledOnly undocumented
	SecurityEnabledOnly *bool `json:"securityEnabledOnly,omitempty"`
}

// DirectoryObjectRestoreRequestObject undocumented
type DirectoryObjectRestoreRequestObject struct {
}

// WorkbookTableColumnAddRequestObject undocumented
type WorkbookTableColumnAddRequestObject struct {
	// Index undocumented
	Index *int `json:"index,omitempty"`
	// Values undocumented
	Values json.RawMessage `json:"values,omitempty"`
	// Name undocumented
	Name *string `json:"name,omitempty"`
}

// GroupLifecyclePolicyAddGroupRequestObject undocumented
type GroupLifecyclePolicyAddGroupRequestObject struct {
	// GroupId undocumented
	GroupId *string `json:"groupId,omitempty"`
}

// GroupLifecyclePolicyRemoveGroupRequestObject undocumented
type GroupLifecyclePolicyRemoveGroupRequestObject struct {
	// GroupId undocumented
	GroupId *string `json:"groupId,omitempty"`
}

// NotebookGetNotebookFromWebUrlRequestObject undocumented
type NotebookGetNotebookFromWebUrlRequestObject struct {
	// WebUrl undocumented
	WebUrl *string `json:"webUrl,omitempty"`
}

// ParticipantMuteRequestObject undocumented
type ParticipantMuteRequestObject struct {
	// ClientContext undocumented
	ClientContext *string `json:"clientContext,omitempty"`
}

// ActivityHistoryItem
type ActivityHistoryItemRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ActivityHistoryItemRequestBuilder) Request() *ActivityHistoryItemRequest {
	return &ActivityHistoryItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ActivityHistoryItemRequest struct{ BaseRequest }

//
func (r *ActivityHistoryItemRequest) Do(method, path string, reqObj interface{}) (resObj *ActivityHistoryItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ActivityHistoryItemRequest) Get() (*ActivityHistoryItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ActivityHistoryItemRequest) Update(reqObj *ActivityHistoryItem) (*ActivityHistoryItem, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ActivityHistoryItemRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Alert
type AlertRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AlertRequestBuilder) Request() *AlertRequest {
	return &AlertRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type AlertRequest struct{ BaseRequest }

//
func (r *AlertRequest) Do(method, path string, reqObj interface{}) (resObj *Alert, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AlertRequest) Get() (*Alert, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *AlertRequest) Update(reqObj *Alert) (*Alert, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *AlertRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// AndroidManagedAppProtection
type AndroidManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AndroidManagedAppProtectionRequestBuilder) Request() *AndroidManagedAppProtectionRequest {
	return &AndroidManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type AndroidManagedAppProtectionRequest struct{ BaseRequest }

//
func (r *AndroidManagedAppProtectionRequest) Do(method, path string, reqObj interface{}) (resObj *AndroidManagedAppProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AndroidManagedAppProtectionRequest) Get() (*AndroidManagedAppProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *AndroidManagedAppProtectionRequest) Update(reqObj *AndroidManagedAppProtection) (*AndroidManagedAppProtection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *AndroidManagedAppProtectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// AppCatalogs
type AppCatalogsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AppCatalogsRequestBuilder) Request() *AppCatalogsRequest {
	return &AppCatalogsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type AppCatalogsRequest struct{ BaseRequest }

//
func (r *AppCatalogsRequest) Do(method, path string, reqObj interface{}) (resObj *AppCatalogs, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AppCatalogsRequest) Get() (*AppCatalogs, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *AppCatalogsRequest) Update(reqObj *AppCatalogs) (*AppCatalogs, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *AppCatalogsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ApplePushNotificationCertificate
type ApplePushNotificationCertificateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ApplePushNotificationCertificateRequestBuilder) Request() *ApplePushNotificationCertificateRequest {
	return &ApplePushNotificationCertificateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ApplePushNotificationCertificateRequest struct{ BaseRequest }

//
func (r *ApplePushNotificationCertificateRequest) Do(method, path string, reqObj interface{}) (resObj *ApplePushNotificationCertificate, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ApplePushNotificationCertificateRequest) Get() (*ApplePushNotificationCertificate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ApplePushNotificationCertificateRequest) Update(reqObj *ApplePushNotificationCertificate) (*ApplePushNotificationCertificate, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ApplePushNotificationCertificateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Attachment
type AttachmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AttachmentRequestBuilder) Request() *AttachmentRequest {
	return &AttachmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type AttachmentRequest struct{ BaseRequest }

//
func (r *AttachmentRequest) Do(method, path string, reqObj interface{}) (resObj *Attachment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AttachmentRequest) Get() (*Attachment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *AttachmentRequest) Update(reqObj *Attachment) (*Attachment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *AttachmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// AuditLogRoot
type AuditLogRootRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AuditLogRootRequestBuilder) Request() *AuditLogRootRequest {
	return &AuditLogRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type AuditLogRootRequest struct{ BaseRequest }

//
func (r *AuditLogRootRequest) Do(method, path string, reqObj interface{}) (resObj *AuditLogRoot, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AuditLogRootRequest) Get() (*AuditLogRoot, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *AuditLogRootRequest) Update(reqObj *AuditLogRoot) (*AuditLogRoot, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *AuditLogRootRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// BaseItem
type BaseItemRequestBuilder struct{ BaseRequestBuilder }

//
func (b *BaseItemRequestBuilder) Request() *BaseItemRequest {
	return &BaseItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type BaseItemRequest struct{ BaseRequest }

//
func (r *BaseItemRequest) Do(method, path string, reqObj interface{}) (resObj *BaseItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *BaseItemRequest) Get() (*BaseItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *BaseItemRequest) Update(reqObj *BaseItem) (*BaseItem, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *BaseItemRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Calendar
type CalendarRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CalendarRequestBuilder) Request() *CalendarRequest {
	return &CalendarRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type CalendarRequest struct{ BaseRequest }

//
func (r *CalendarRequest) Do(method, path string, reqObj interface{}) (resObj *Calendar, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CalendarRequest) Get() (*Calendar, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *CalendarRequest) Update(reqObj *Calendar) (*Calendar, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *CalendarRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// CalendarGroup
type CalendarGroupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CalendarGroupRequestBuilder) Request() *CalendarGroupRequest {
	return &CalendarGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type CalendarGroupRequest struct{ BaseRequest }

//
func (r *CalendarGroupRequest) Do(method, path string, reqObj interface{}) (resObj *CalendarGroup, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CalendarGroupRequest) Get() (*CalendarGroup, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *CalendarGroupRequest) Update(reqObj *CalendarGroup) (*CalendarGroup, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *CalendarGroupRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Call
type CallRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallRequestBuilder) Request() *CallRequest {
	return &CallRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type CallRequest struct{ BaseRequest }

//
func (r *CallRequest) Do(method, path string, reqObj interface{}) (resObj *Call, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CallRequest) Get() (*Call, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *CallRequest) Update(reqObj *Call) (*Call, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *CallRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// CertificateBasedAuthConfiguration
type CertificateBasedAuthConfigurationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CertificateBasedAuthConfigurationRequestBuilder) Request() *CertificateBasedAuthConfigurationRequest {
	return &CertificateBasedAuthConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type CertificateBasedAuthConfigurationRequest struct{ BaseRequest }

//
func (r *CertificateBasedAuthConfigurationRequest) Do(method, path string, reqObj interface{}) (resObj *CertificateBasedAuthConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CertificateBasedAuthConfigurationRequest) Get() (*CertificateBasedAuthConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *CertificateBasedAuthConfigurationRequest) Update(reqObj *CertificateBasedAuthConfiguration) (*CertificateBasedAuthConfiguration, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *CertificateBasedAuthConfigurationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Channel
type ChannelRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ChannelRequestBuilder) Request() *ChannelRequest {
	return &ChannelRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ChannelRequest struct{ BaseRequest }

//
func (r *ChannelRequest) Do(method, path string, reqObj interface{}) (resObj *Channel, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ChannelRequest) Get() (*Channel, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ChannelRequest) Update(reqObj *Channel) (*Channel, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ChannelRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// CloudCommunications
type CloudCommunicationsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CloudCommunicationsRequestBuilder) Request() *CloudCommunicationsRequest {
	return &CloudCommunicationsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type CloudCommunicationsRequest struct{ BaseRequest }

//
func (r *CloudCommunicationsRequest) Do(method, path string, reqObj interface{}) (resObj *CloudCommunications, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CloudCommunicationsRequest) Get() (*CloudCommunications, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *CloudCommunicationsRequest) Update(reqObj *CloudCommunications) (*CloudCommunications, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *CloudCommunicationsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ColumnDefinition
type ColumnDefinitionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ColumnDefinitionRequestBuilder) Request() *ColumnDefinitionRequest {
	return &ColumnDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ColumnDefinitionRequest struct{ BaseRequest }

//
func (r *ColumnDefinitionRequest) Do(method, path string, reqObj interface{}) (resObj *ColumnDefinition, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ColumnDefinitionRequest) Get() (*ColumnDefinition, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ColumnDefinitionRequest) Update(reqObj *ColumnDefinition) (*ColumnDefinition, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ColumnDefinitionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ColumnLink
type ColumnLinkRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ColumnLinkRequestBuilder) Request() *ColumnLinkRequest {
	return &ColumnLinkRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ColumnLinkRequest struct{ BaseRequest }

//
func (r *ColumnLinkRequest) Do(method, path string, reqObj interface{}) (resObj *ColumnLink, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ColumnLinkRequest) Get() (*ColumnLink, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ColumnLinkRequest) Update(reqObj *ColumnLink) (*ColumnLink, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ColumnLinkRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// CommsOperation
type CommsOperationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CommsOperationRequestBuilder) Request() *CommsOperationRequest {
	return &CommsOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type CommsOperationRequest struct{ BaseRequest }

//
func (r *CommsOperationRequest) Do(method, path string, reqObj interface{}) (resObj *CommsOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CommsOperationRequest) Get() (*CommsOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *CommsOperationRequest) Update(reqObj *CommsOperation) (*CommsOperation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *CommsOperationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Contact
type ContactRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactRequestBuilder) Request() *ContactRequest {
	return &ContactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ContactRequest struct{ BaseRequest }

//
func (r *ContactRequest) Do(method, path string, reqObj interface{}) (resObj *Contact, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactRequest) Get() (*Contact, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ContactRequest) Update(reqObj *Contact) (*Contact, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ContactRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ContactFolder
type ContactFolderRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactFolderRequestBuilder) Request() *ContactFolderRequest {
	return &ContactFolderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ContactFolderRequest struct{ BaseRequest }

//
func (r *ContactFolderRequest) Do(method, path string, reqObj interface{}) (resObj *ContactFolder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactFolderRequest) Get() (*ContactFolder, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ContactFolderRequest) Update(reqObj *ContactFolder) (*ContactFolder, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ContactFolderRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ContentType
type ContentTypeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContentTypeRequestBuilder) Request() *ContentTypeRequest {
	return &ContentTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ContentTypeRequest struct{ BaseRequest }

//
func (r *ContentTypeRequest) Do(method, path string, reqObj interface{}) (resObj *ContentType, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContentTypeRequest) Get() (*ContentType, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ContentTypeRequest) Update(reqObj *ContentType) (*ContentType, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ContentTypeRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Contract
type ContractRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContractRequestBuilder) Request() *ContractRequest {
	return &ContractRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ContractRequest struct{ BaseRequest }

//
func (r *ContractRequest) Do(method, path string, reqObj interface{}) (resObj *Contract, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContractRequest) Get() (*Contract, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ContractRequest) Update(reqObj *Contract) (*Contract, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ContractRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Conversation
type ConversationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ConversationRequestBuilder) Request() *ConversationRequest {
	return &ConversationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ConversationRequest struct{ BaseRequest }

//
func (r *ConversationRequest) Do(method, path string, reqObj interface{}) (resObj *Conversation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ConversationRequest) Get() (*Conversation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ConversationRequest) Update(reqObj *Conversation) (*Conversation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ConversationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ConversationThread
type ConversationThreadRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ConversationThreadRequestBuilder) Request() *ConversationThreadRequest {
	return &ConversationThreadRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ConversationThreadRequest struct{ BaseRequest }

//
func (r *ConversationThreadRequest) Do(method, path string, reqObj interface{}) (resObj *ConversationThread, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ConversationThreadRequest) Get() (*ConversationThread, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ConversationThreadRequest) Update(reqObj *ConversationThread) (*ConversationThread, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ConversationThreadRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DataPolicyOperation
type DataPolicyOperationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DataPolicyOperationRequestBuilder) Request() *DataPolicyOperationRequest {
	return &DataPolicyOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DataPolicyOperationRequest struct{ BaseRequest }

//
func (r *DataPolicyOperationRequest) Do(method, path string, reqObj interface{}) (resObj *DataPolicyOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DataPolicyOperationRequest) Get() (*DataPolicyOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DataPolicyOperationRequest) Update(reqObj *DataPolicyOperation) (*DataPolicyOperation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DataPolicyOperationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DefaultManagedAppProtection
type DefaultManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DefaultManagedAppProtectionRequestBuilder) Request() *DefaultManagedAppProtectionRequest {
	return &DefaultManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DefaultManagedAppProtectionRequest struct{ BaseRequest }

//
func (r *DefaultManagedAppProtectionRequest) Do(method, path string, reqObj interface{}) (resObj *DefaultManagedAppProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DefaultManagedAppProtectionRequest) Get() (*DefaultManagedAppProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DefaultManagedAppProtectionRequest) Update(reqObj *DefaultManagedAppProtection) (*DefaultManagedAppProtection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DefaultManagedAppProtectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DetectedApp
type DetectedAppRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DetectedAppRequestBuilder) Request() *DetectedAppRequest {
	return &DetectedAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DetectedAppRequest struct{ BaseRequest }

//
func (r *DetectedAppRequest) Do(method, path string, reqObj interface{}) (resObj *DetectedApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DetectedAppRequest) Get() (*DetectedApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DetectedAppRequest) Update(reqObj *DetectedApp) (*DetectedApp, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DetectedAppRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Device
type DeviceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceRequestBuilder) Request() *DeviceRequest {
	return &DeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceRequest struct{ BaseRequest }

//
func (r *DeviceRequest) Do(method, path string, reqObj interface{}) (resObj *Device, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceRequest) Get() (*Device, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceRequest) Update(reqObj *Device) (*Device, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceAndAppManagementRoleAssignment
type DeviceAndAppManagementRoleAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAndAppManagementRoleAssignmentRequestBuilder) Request() *DeviceAndAppManagementRoleAssignmentRequest {
	return &DeviceAndAppManagementRoleAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceAndAppManagementRoleAssignmentRequest struct{ BaseRequest }

//
func (r *DeviceAndAppManagementRoleAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceAndAppManagementRoleAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAndAppManagementRoleAssignmentRequest) Get() (*DeviceAndAppManagementRoleAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceAndAppManagementRoleAssignmentRequest) Update(reqObj *DeviceAndAppManagementRoleAssignment) (*DeviceAndAppManagementRoleAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceAndAppManagementRoleAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceAppManagement
type DeviceAppManagementRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementRequestBuilder) Request() *DeviceAppManagementRequest {
	return &DeviceAppManagementRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceAppManagementRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceAppManagement, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementRequest) Get() (*DeviceAppManagement, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceAppManagementRequest) Update(reqObj *DeviceAppManagement) (*DeviceAppManagement, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceAppManagementRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceCategory
type DeviceCategoryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCategoryRequestBuilder) Request() *DeviceCategoryRequest {
	return &DeviceCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceCategoryRequest struct{ BaseRequest }

//
func (r *DeviceCategoryRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCategory, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCategoryRequest) Get() (*DeviceCategory, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceCategoryRequest) Update(reqObj *DeviceCategory) (*DeviceCategory, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceCategoryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceComplianceActionItem
type DeviceComplianceActionItemRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceComplianceActionItemRequestBuilder) Request() *DeviceComplianceActionItemRequest {
	return &DeviceComplianceActionItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceComplianceActionItemRequest struct{ BaseRequest }

//
func (r *DeviceComplianceActionItemRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceActionItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceComplianceActionItemRequest) Get() (*DeviceComplianceActionItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceComplianceActionItemRequest) Update(reqObj *DeviceComplianceActionItem) (*DeviceComplianceActionItem, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceComplianceActionItemRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceComplianceDeviceOverview
type DeviceComplianceDeviceOverviewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceComplianceDeviceOverviewRequestBuilder) Request() *DeviceComplianceDeviceOverviewRequest {
	return &DeviceComplianceDeviceOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceComplianceDeviceOverviewRequest struct{ BaseRequest }

//
func (r *DeviceComplianceDeviceOverviewRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceDeviceOverview, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceComplianceDeviceOverviewRequest) Get() (*DeviceComplianceDeviceOverview, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceComplianceDeviceOverviewRequest) Update(reqObj *DeviceComplianceDeviceOverview) (*DeviceComplianceDeviceOverview, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceComplianceDeviceOverviewRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceComplianceDeviceStatus
type DeviceComplianceDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceComplianceDeviceStatusRequestBuilder) Request() *DeviceComplianceDeviceStatusRequest {
	return &DeviceComplianceDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceComplianceDeviceStatusRequest struct{ BaseRequest }

//
func (r *DeviceComplianceDeviceStatusRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceDeviceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceComplianceDeviceStatusRequest) Get() (*DeviceComplianceDeviceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceComplianceDeviceStatusRequest) Update(reqObj *DeviceComplianceDeviceStatus) (*DeviceComplianceDeviceStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceComplianceDeviceStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceCompliancePolicy
type DeviceCompliancePolicyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyRequestBuilder) Request() *DeviceCompliancePolicyRequest {
	return &DeviceCompliancePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceCompliancePolicyRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyRequest) Get() (*DeviceCompliancePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyRequest) Update(reqObj *DeviceCompliancePolicy) (*DeviceCompliancePolicy, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceCompliancePolicyRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceCompliancePolicyAssignment
type DeviceCompliancePolicyAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyAssignmentRequestBuilder) Request() *DeviceCompliancePolicyAssignmentRequest {
	return &DeviceCompliancePolicyAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceCompliancePolicyAssignmentRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicyAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyAssignmentRequest) Get() (*DeviceCompliancePolicyAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyAssignmentRequest) Update(reqObj *DeviceCompliancePolicyAssignment) (*DeviceCompliancePolicyAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceCompliancePolicyAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceCompliancePolicyDeviceStateSummary
type DeviceCompliancePolicyDeviceStateSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyDeviceStateSummaryRequestBuilder) Request() *DeviceCompliancePolicyDeviceStateSummaryRequest {
	return &DeviceCompliancePolicyDeviceStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceCompliancePolicyDeviceStateSummaryRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyDeviceStateSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicyDeviceStateSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyDeviceStateSummaryRequest) Get() (*DeviceCompliancePolicyDeviceStateSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyDeviceStateSummaryRequest) Update(reqObj *DeviceCompliancePolicyDeviceStateSummary) (*DeviceCompliancePolicyDeviceStateSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceCompliancePolicyDeviceStateSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceCompliancePolicySettingStateSummary
type DeviceCompliancePolicySettingStateSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicySettingStateSummaryRequestBuilder) Request() *DeviceCompliancePolicySettingStateSummaryRequest {
	return &DeviceCompliancePolicySettingStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceCompliancePolicySettingStateSummaryRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicySettingStateSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicySettingStateSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicySettingStateSummaryRequest) Get() (*DeviceCompliancePolicySettingStateSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceCompliancePolicySettingStateSummaryRequest) Update(reqObj *DeviceCompliancePolicySettingStateSummary) (*DeviceCompliancePolicySettingStateSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceCompliancePolicySettingStateSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceCompliancePolicyState
type DeviceCompliancePolicyStateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyStateRequestBuilder) Request() *DeviceCompliancePolicyStateRequest {
	return &DeviceCompliancePolicyStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceCompliancePolicyStateRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyStateRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicyState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyStateRequest) Get() (*DeviceCompliancePolicyState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyStateRequest) Update(reqObj *DeviceCompliancePolicyState) (*DeviceCompliancePolicyState, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceCompliancePolicyStateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceComplianceScheduledActionForRule
type DeviceComplianceScheduledActionForRuleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceComplianceScheduledActionForRuleRequestBuilder) Request() *DeviceComplianceScheduledActionForRuleRequest {
	return &DeviceComplianceScheduledActionForRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceComplianceScheduledActionForRuleRequest struct{ BaseRequest }

//
func (r *DeviceComplianceScheduledActionForRuleRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceScheduledActionForRule, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceComplianceScheduledActionForRuleRequest) Get() (*DeviceComplianceScheduledActionForRule, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceComplianceScheduledActionForRuleRequest) Update(reqObj *DeviceComplianceScheduledActionForRule) (*DeviceComplianceScheduledActionForRule, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceComplianceScheduledActionForRuleRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceComplianceSettingState
type DeviceComplianceSettingStateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceComplianceSettingStateRequestBuilder) Request() *DeviceComplianceSettingStateRequest {
	return &DeviceComplianceSettingStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceComplianceSettingStateRequest struct{ BaseRequest }

//
func (r *DeviceComplianceSettingStateRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceSettingState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceComplianceSettingStateRequest) Get() (*DeviceComplianceSettingState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceComplianceSettingStateRequest) Update(reqObj *DeviceComplianceSettingState) (*DeviceComplianceSettingState, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceComplianceSettingStateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceComplianceUserOverview
type DeviceComplianceUserOverviewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceComplianceUserOverviewRequestBuilder) Request() *DeviceComplianceUserOverviewRequest {
	return &DeviceComplianceUserOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceComplianceUserOverviewRequest struct{ BaseRequest }

//
func (r *DeviceComplianceUserOverviewRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceUserOverview, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceComplianceUserOverviewRequest) Get() (*DeviceComplianceUserOverview, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceComplianceUserOverviewRequest) Update(reqObj *DeviceComplianceUserOverview) (*DeviceComplianceUserOverview, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceComplianceUserOverviewRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceComplianceUserStatus
type DeviceComplianceUserStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceComplianceUserStatusRequestBuilder) Request() *DeviceComplianceUserStatusRequest {
	return &DeviceComplianceUserStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceComplianceUserStatusRequest struct{ BaseRequest }

//
func (r *DeviceComplianceUserStatusRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceUserStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceComplianceUserStatusRequest) Get() (*DeviceComplianceUserStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceComplianceUserStatusRequest) Update(reqObj *DeviceComplianceUserStatus) (*DeviceComplianceUserStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceComplianceUserStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceConfiguration
type DeviceConfigurationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationRequestBuilder) Request() *DeviceConfigurationRequest {
	return &DeviceConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceConfigurationRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationRequest) Get() (*DeviceConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceConfigurationRequest) Update(reqObj *DeviceConfiguration) (*DeviceConfiguration, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceConfigurationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceConfigurationAssignment
type DeviceConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationAssignmentRequestBuilder) Request() *DeviceConfigurationAssignmentRequest {
	return &DeviceConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceConfigurationAssignmentRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationAssignmentRequest) Get() (*DeviceConfigurationAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceConfigurationAssignmentRequest) Update(reqObj *DeviceConfigurationAssignment) (*DeviceConfigurationAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceConfigurationAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceConfigurationDeviceOverview
type DeviceConfigurationDeviceOverviewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationDeviceOverviewRequestBuilder) Request() *DeviceConfigurationDeviceOverviewRequest {
	return &DeviceConfigurationDeviceOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceConfigurationDeviceOverviewRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationDeviceOverviewRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationDeviceOverview, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationDeviceOverviewRequest) Get() (*DeviceConfigurationDeviceOverview, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceConfigurationDeviceOverviewRequest) Update(reqObj *DeviceConfigurationDeviceOverview) (*DeviceConfigurationDeviceOverview, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceConfigurationDeviceOverviewRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceConfigurationDeviceStateSummary
type DeviceConfigurationDeviceStateSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationDeviceStateSummaryRequestBuilder) Request() *DeviceConfigurationDeviceStateSummaryRequest {
	return &DeviceConfigurationDeviceStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceConfigurationDeviceStateSummaryRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationDeviceStateSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationDeviceStateSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationDeviceStateSummaryRequest) Get() (*DeviceConfigurationDeviceStateSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceConfigurationDeviceStateSummaryRequest) Update(reqObj *DeviceConfigurationDeviceStateSummary) (*DeviceConfigurationDeviceStateSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceConfigurationDeviceStateSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceConfigurationDeviceStatus
type DeviceConfigurationDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationDeviceStatusRequestBuilder) Request() *DeviceConfigurationDeviceStatusRequest {
	return &DeviceConfigurationDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceConfigurationDeviceStatusRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationDeviceStatusRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationDeviceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationDeviceStatusRequest) Get() (*DeviceConfigurationDeviceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceConfigurationDeviceStatusRequest) Update(reqObj *DeviceConfigurationDeviceStatus) (*DeviceConfigurationDeviceStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceConfigurationDeviceStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceConfigurationState
type DeviceConfigurationStateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationStateRequestBuilder) Request() *DeviceConfigurationStateRequest {
	return &DeviceConfigurationStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceConfigurationStateRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationStateRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationStateRequest) Get() (*DeviceConfigurationState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceConfigurationStateRequest) Update(reqObj *DeviceConfigurationState) (*DeviceConfigurationState, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceConfigurationStateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceConfigurationUserOverview
type DeviceConfigurationUserOverviewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationUserOverviewRequestBuilder) Request() *DeviceConfigurationUserOverviewRequest {
	return &DeviceConfigurationUserOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceConfigurationUserOverviewRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationUserOverviewRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationUserOverview, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationUserOverviewRequest) Get() (*DeviceConfigurationUserOverview, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceConfigurationUserOverviewRequest) Update(reqObj *DeviceConfigurationUserOverview) (*DeviceConfigurationUserOverview, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceConfigurationUserOverviewRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceConfigurationUserStatus
type DeviceConfigurationUserStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationUserStatusRequestBuilder) Request() *DeviceConfigurationUserStatusRequest {
	return &DeviceConfigurationUserStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceConfigurationUserStatusRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationUserStatusRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationUserStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationUserStatusRequest) Get() (*DeviceConfigurationUserStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceConfigurationUserStatusRequest) Update(reqObj *DeviceConfigurationUserStatus) (*DeviceConfigurationUserStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceConfigurationUserStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceEnrollmentConfiguration
type DeviceEnrollmentConfigurationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceEnrollmentConfigurationRequestBuilder) Request() *DeviceEnrollmentConfigurationRequest {
	return &DeviceEnrollmentConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceEnrollmentConfigurationRequest struct{ BaseRequest }

//
func (r *DeviceEnrollmentConfigurationRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceEnrollmentConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceEnrollmentConfigurationRequest) Get() (*DeviceEnrollmentConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceEnrollmentConfigurationRequest) Update(reqObj *DeviceEnrollmentConfiguration) (*DeviceEnrollmentConfiguration, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceEnrollmentConfigurationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceInstallState
type DeviceInstallStateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceInstallStateRequestBuilder) Request() *DeviceInstallStateRequest {
	return &DeviceInstallStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceInstallStateRequest struct{ BaseRequest }

//
func (r *DeviceInstallStateRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceInstallState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceInstallStateRequest) Get() (*DeviceInstallState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceInstallStateRequest) Update(reqObj *DeviceInstallState) (*DeviceInstallState, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceInstallStateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceManagement
type DeviceManagementRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementRequestBuilder) Request() *DeviceManagementRequest {
	return &DeviceManagementRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceManagementRequest struct{ BaseRequest }

//
func (r *DeviceManagementRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceManagement, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementRequest) Get() (*DeviceManagement, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceManagementRequest) Update(reqObj *DeviceManagement) (*DeviceManagement, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceManagementRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceManagementExchangeConnector
type DeviceManagementExchangeConnectorRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementExchangeConnectorRequestBuilder) Request() *DeviceManagementExchangeConnectorRequest {
	return &DeviceManagementExchangeConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceManagementExchangeConnectorRequest struct{ BaseRequest }

//
func (r *DeviceManagementExchangeConnectorRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceManagementExchangeConnector, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementExchangeConnectorRequest) Get() (*DeviceManagementExchangeConnector, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceManagementExchangeConnectorRequest) Update(reqObj *DeviceManagementExchangeConnector) (*DeviceManagementExchangeConnector, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceManagementExchangeConnectorRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceManagementPartner
type DeviceManagementPartnerRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementPartnerRequestBuilder) Request() *DeviceManagementPartnerRequest {
	return &DeviceManagementPartnerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceManagementPartnerRequest struct{ BaseRequest }

//
func (r *DeviceManagementPartnerRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceManagementPartner, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementPartnerRequest) Get() (*DeviceManagementPartner, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceManagementPartnerRequest) Update(reqObj *DeviceManagementPartner) (*DeviceManagementPartner, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceManagementPartnerRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DeviceManagementTroubleshootingEvent
type DeviceManagementTroubleshootingEventRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementTroubleshootingEventRequestBuilder) Request() *DeviceManagementTroubleshootingEventRequest {
	return &DeviceManagementTroubleshootingEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DeviceManagementTroubleshootingEventRequest struct{ BaseRequest }

//
func (r *DeviceManagementTroubleshootingEventRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceManagementTroubleshootingEvent, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementTroubleshootingEventRequest) Get() (*DeviceManagementTroubleshootingEvent, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DeviceManagementTroubleshootingEventRequest) Update(reqObj *DeviceManagementTroubleshootingEvent) (*DeviceManagementTroubleshootingEvent, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DeviceManagementTroubleshootingEventRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Directory
type DirectoryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryRequestBuilder) Request() *DirectoryRequest {
	return &DirectoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DirectoryRequest struct{ BaseRequest }

//
func (r *DirectoryRequest) Do(method, path string, reqObj interface{}) (resObj *Directory, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryRequest) Get() (*Directory, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DirectoryRequest) Update(reqObj *Directory) (*Directory, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DirectoryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DirectoryAudit
type DirectoryAuditRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryAuditRequestBuilder) Request() *DirectoryAuditRequest {
	return &DirectoryAuditRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DirectoryAuditRequest struct{ BaseRequest }

//
func (r *DirectoryAuditRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryAudit, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryAuditRequest) Get() (*DirectoryAudit, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DirectoryAuditRequest) Update(reqObj *DirectoryAudit) (*DirectoryAudit, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DirectoryAuditRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DirectoryObject
type DirectoryObjectRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryObjectRequestBuilder) Request() *DirectoryObjectRequest {
	return &DirectoryObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DirectoryObjectRequest struct{ BaseRequest }

//
func (r *DirectoryObjectRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryObjectRequest) Get() (*DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DirectoryObjectRequest) Update(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DirectoryObjectRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DirectoryRole
type DirectoryRoleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryRoleRequestBuilder) Request() *DirectoryRoleRequest {
	return &DirectoryRoleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DirectoryRoleRequest struct{ BaseRequest }

//
func (r *DirectoryRoleRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryRole, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryRoleRequest) Get() (*DirectoryRole, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DirectoryRoleRequest) Update(reqObj *DirectoryRole) (*DirectoryRole, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DirectoryRoleRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DirectoryRoleTemplate
type DirectoryRoleTemplateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryRoleTemplateRequestBuilder) Request() *DirectoryRoleTemplateRequest {
	return &DirectoryRoleTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DirectoryRoleTemplateRequest struct{ BaseRequest }

//
func (r *DirectoryRoleTemplateRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryRoleTemplate, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryRoleTemplateRequest) Get() (*DirectoryRoleTemplate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DirectoryRoleTemplateRequest) Update(reqObj *DirectoryRoleTemplate) (*DirectoryRoleTemplate, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DirectoryRoleTemplateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Domain
type DomainRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DomainRequestBuilder) Request() *DomainRequest {
	return &DomainRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DomainRequest struct{ BaseRequest }

//
func (r *DomainRequest) Do(method, path string, reqObj interface{}) (resObj *Domain, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DomainRequest) Get() (*Domain, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DomainRequest) Update(reqObj *Domain) (*Domain, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DomainRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DomainDnsRecord
type DomainDnsRecordRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DomainDnsRecordRequestBuilder) Request() *DomainDnsRecordRequest {
	return &DomainDnsRecordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DomainDnsRecordRequest struct{ BaseRequest }

//
func (r *DomainDnsRecordRequest) Do(method, path string, reqObj interface{}) (resObj *DomainDnsRecord, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DomainDnsRecordRequest) Get() (*DomainDnsRecord, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DomainDnsRecordRequest) Update(reqObj *DomainDnsRecord) (*DomainDnsRecord, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DomainDnsRecordRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Drive
type DriveRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveRequestBuilder) Request() *DriveRequest {
	return &DriveRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DriveRequest struct{ BaseRequest }

//
func (r *DriveRequest) Do(method, path string, reqObj interface{}) (resObj *Drive, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveRequest) Get() (*Drive, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DriveRequest) Update(reqObj *Drive) (*Drive, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DriveRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DriveItem
type DriveItemRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemRequestBuilder) Request() *DriveItemRequest {
	return &DriveItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DriveItemRequest struct{ BaseRequest }

//
func (r *DriveItemRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemRequest) Get() (*DriveItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DriveItemRequest) Update(reqObj *DriveItem) (*DriveItem, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DriveItemRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// DriveItemVersion
type DriveItemVersionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemVersionRequestBuilder) Request() *DriveItemVersionRequest {
	return &DriveItemVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type DriveItemVersionRequest struct{ BaseRequest }

//
func (r *DriveItemVersionRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItemVersion, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemVersionRequest) Get() (*DriveItemVersion, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *DriveItemVersionRequest) Update(reqObj *DriveItemVersion) (*DriveItemVersion, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *DriveItemVersionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// EBookInstallSummary
type EBookInstallSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EBookInstallSummaryRequestBuilder) Request() *EBookInstallSummaryRequest {
	return &EBookInstallSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EBookInstallSummaryRequest struct{ BaseRequest }

//
func (r *EBookInstallSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *EBookInstallSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EBookInstallSummaryRequest) Get() (*EBookInstallSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EBookInstallSummaryRequest) Update(reqObj *EBookInstallSummary) (*EBookInstallSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EBookInstallSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// EducationClass
type EducationClassRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationClassRequestBuilder) Request() *EducationClassRequest {
	return &EducationClassRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EducationClassRequest struct{ BaseRequest }

//
func (r *EducationClassRequest) Do(method, path string, reqObj interface{}) (resObj *EducationClass, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationClassRequest) Get() (*EducationClass, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EducationClassRequest) Update(reqObj *EducationClass) (*EducationClass, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EducationClassRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// EducationRoot
type EducationRootRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationRootRequestBuilder) Request() *EducationRootRequest {
	return &EducationRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EducationRootRequest struct{ BaseRequest }

//
func (r *EducationRootRequest) Do(method, path string, reqObj interface{}) (resObj *EducationRoot, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationRootRequest) Get() (*EducationRoot, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EducationRootRequest) Update(reqObj *EducationRoot) (*EducationRoot, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EducationRootRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// EducationSchool
type EducationSchoolRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationSchoolRequestBuilder) Request() *EducationSchoolRequest {
	return &EducationSchoolRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EducationSchoolRequest struct{ BaseRequest }

//
func (r *EducationSchoolRequest) Do(method, path string, reqObj interface{}) (resObj *EducationSchool, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationSchoolRequest) Get() (*EducationSchool, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EducationSchoolRequest) Update(reqObj *EducationSchool) (*EducationSchool, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EducationSchoolRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// EducationUser
type EducationUserRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationUserRequestBuilder) Request() *EducationUserRequest {
	return &EducationUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EducationUserRequest struct{ BaseRequest }

//
func (r *EducationUserRequest) Do(method, path string, reqObj interface{}) (resObj *EducationUser, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationUserRequest) Get() (*EducationUser, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EducationUserRequest) Update(reqObj *EducationUser) (*EducationUser, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EducationUserRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// EnrollmentConfigurationAssignment
type EnrollmentConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EnrollmentConfigurationAssignmentRequestBuilder) Request() *EnrollmentConfigurationAssignmentRequest {
	return &EnrollmentConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EnrollmentConfigurationAssignmentRequest struct{ BaseRequest }

//
func (r *EnrollmentConfigurationAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *EnrollmentConfigurationAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EnrollmentConfigurationAssignmentRequest) Get() (*EnrollmentConfigurationAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EnrollmentConfigurationAssignmentRequest) Update(reqObj *EnrollmentConfigurationAssignment) (*EnrollmentConfigurationAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EnrollmentConfigurationAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Entity
type EntityRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EntityRequestBuilder) Request() *EntityRequest {
	return &EntityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EntityRequest struct{ BaseRequest }

//
func (r *EntityRequest) Do(method, path string, reqObj interface{}) (resObj *Entity, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EntityRequest) Get() (*Entity, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EntityRequest) Update(reqObj *Entity) (*Entity, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EntityRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Event
type EventRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventRequestBuilder) Request() *EventRequest {
	return &EventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EventRequest struct{ BaseRequest }

//
func (r *EventRequest) Do(method, path string, reqObj interface{}) (resObj *Event, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EventRequest) Get() (*Event, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EventRequest) Update(reqObj *Event) (*Event, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EventRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// EventMessage
type EventMessageRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventMessageRequestBuilder) Request() *EventMessageRequest {
	return &EventMessageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type EventMessageRequest struct{ BaseRequest }

//
func (r *EventMessageRequest) Do(method, path string, reqObj interface{}) (resObj *EventMessage, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EventMessageRequest) Get() (*EventMessage, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *EventMessageRequest) Update(reqObj *EventMessage) (*EventMessage, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *EventMessageRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Extension
type ExtensionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ExtensionRequestBuilder) Request() *ExtensionRequest {
	return &ExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ExtensionRequest struct{ BaseRequest }

//
func (r *ExtensionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ExtensionRequest) Get() (*Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ExtensionRequest) Update(reqObj *Extension) (*Extension, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ExtensionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// FieldValueSet
type FieldValueSetRequestBuilder struct{ BaseRequestBuilder }

//
func (b *FieldValueSetRequestBuilder) Request() *FieldValueSetRequest {
	return &FieldValueSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type FieldValueSetRequest struct{ BaseRequest }

//
func (r *FieldValueSetRequest) Do(method, path string, reqObj interface{}) (resObj *FieldValueSet, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *FieldValueSetRequest) Get() (*FieldValueSet, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *FieldValueSetRequest) Update(reqObj *FieldValueSet) (*FieldValueSet, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *FieldValueSetRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Group
type GroupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupRequestBuilder) Request() *GroupRequest {
	return &GroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type GroupRequest struct{ BaseRequest }

//
func (r *GroupRequest) Do(method, path string, reqObj interface{}) (resObj *Group, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupRequest) Get() (*Group, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *GroupRequest) Update(reqObj *Group) (*Group, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *GroupRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// GroupLifecyclePolicy
type GroupLifecyclePolicyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupLifecyclePolicyRequestBuilder) Request() *GroupLifecyclePolicyRequest {
	return &GroupLifecyclePolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type GroupLifecyclePolicyRequest struct{ BaseRequest }

//
func (r *GroupLifecyclePolicyRequest) Do(method, path string, reqObj interface{}) (resObj *GroupLifecyclePolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupLifecyclePolicyRequest) Get() (*GroupLifecyclePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *GroupLifecyclePolicyRequest) Update(reqObj *GroupLifecyclePolicy) (*GroupLifecyclePolicy, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *GroupLifecyclePolicyRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// GroupSetting
type GroupSettingRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupSettingRequestBuilder) Request() *GroupSettingRequest {
	return &GroupSettingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type GroupSettingRequest struct{ BaseRequest }

//
func (r *GroupSettingRequest) Do(method, path string, reqObj interface{}) (resObj *GroupSetting, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupSettingRequest) Get() (*GroupSetting, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *GroupSettingRequest) Update(reqObj *GroupSetting) (*GroupSetting, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *GroupSettingRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// GroupSettingTemplate
type GroupSettingTemplateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupSettingTemplateRequestBuilder) Request() *GroupSettingTemplateRequest {
	return &GroupSettingTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type GroupSettingTemplateRequest struct{ BaseRequest }

//
func (r *GroupSettingTemplateRequest) Do(method, path string, reqObj interface{}) (resObj *GroupSettingTemplate, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupSettingTemplateRequest) Get() (*GroupSettingTemplate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *GroupSettingTemplateRequest) Update(reqObj *GroupSettingTemplate) (*GroupSettingTemplate, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *GroupSettingTemplateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// IdentityProvider
type IdentityProviderRequestBuilder struct{ BaseRequestBuilder }

//
func (b *IdentityProviderRequestBuilder) Request() *IdentityProviderRequest {
	return &IdentityProviderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type IdentityProviderRequest struct{ BaseRequest }

//
func (r *IdentityProviderRequest) Do(method, path string, reqObj interface{}) (resObj *IdentityProvider, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *IdentityProviderRequest) Get() (*IdentityProvider, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *IdentityProviderRequest) Update(reqObj *IdentityProvider) (*IdentityProvider, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *IdentityProviderRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// InferenceClassification
type InferenceClassificationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *InferenceClassificationRequestBuilder) Request() *InferenceClassificationRequest {
	return &InferenceClassificationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type InferenceClassificationRequest struct{ BaseRequest }

//
func (r *InferenceClassificationRequest) Do(method, path string, reqObj interface{}) (resObj *InferenceClassification, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *InferenceClassificationRequest) Get() (*InferenceClassification, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *InferenceClassificationRequest) Update(reqObj *InferenceClassification) (*InferenceClassification, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *InferenceClassificationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// InferenceClassificationOverride
type InferenceClassificationOverrideRequestBuilder struct{ BaseRequestBuilder }

//
func (b *InferenceClassificationOverrideRequestBuilder) Request() *InferenceClassificationOverrideRequest {
	return &InferenceClassificationOverrideRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type InferenceClassificationOverrideRequest struct{ BaseRequest }

//
func (r *InferenceClassificationOverrideRequest) Do(method, path string, reqObj interface{}) (resObj *InferenceClassificationOverride, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *InferenceClassificationOverrideRequest) Get() (*InferenceClassificationOverride, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *InferenceClassificationOverrideRequest) Update(reqObj *InferenceClassificationOverride) (*InferenceClassificationOverride, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *InferenceClassificationOverrideRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Invitation
type InvitationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *InvitationRequestBuilder) Request() *InvitationRequest {
	return &InvitationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type InvitationRequest struct{ BaseRequest }

//
func (r *InvitationRequest) Do(method, path string, reqObj interface{}) (resObj *Invitation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *InvitationRequest) Get() (*Invitation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *InvitationRequest) Update(reqObj *Invitation) (*Invitation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *InvitationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// IosManagedAppProtection
type IosManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *IosManagedAppProtectionRequestBuilder) Request() *IosManagedAppProtectionRequest {
	return &IosManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type IosManagedAppProtectionRequest struct{ BaseRequest }

//
func (r *IosManagedAppProtectionRequest) Do(method, path string, reqObj interface{}) (resObj *IosManagedAppProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *IosManagedAppProtectionRequest) Get() (*IosManagedAppProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *IosManagedAppProtectionRequest) Update(reqObj *IosManagedAppProtection) (*IosManagedAppProtection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *IosManagedAppProtectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// IosUpdateDeviceStatus
type IosUpdateDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *IosUpdateDeviceStatusRequestBuilder) Request() *IosUpdateDeviceStatusRequest {
	return &IosUpdateDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type IosUpdateDeviceStatusRequest struct{ BaseRequest }

//
func (r *IosUpdateDeviceStatusRequest) Do(method, path string, reqObj interface{}) (resObj *IosUpdateDeviceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *IosUpdateDeviceStatusRequest) Get() (*IosUpdateDeviceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *IosUpdateDeviceStatusRequest) Update(reqObj *IosUpdateDeviceStatus) (*IosUpdateDeviceStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *IosUpdateDeviceStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ItemActivity
type ItemActivityRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ItemActivityRequestBuilder) Request() *ItemActivityRequest {
	return &ItemActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ItemActivityRequest struct{ BaseRequest }

//
func (r *ItemActivityRequest) Do(method, path string, reqObj interface{}) (resObj *ItemActivity, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ItemActivityRequest) Get() (*ItemActivity, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ItemActivityRequest) Update(reqObj *ItemActivity) (*ItemActivity, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ItemActivityRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ItemActivityStat
type ItemActivityStatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ItemActivityStatRequestBuilder) Request() *ItemActivityStatRequest {
	return &ItemActivityStatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ItemActivityStatRequest struct{ BaseRequest }

//
func (r *ItemActivityStatRequest) Do(method, path string, reqObj interface{}) (resObj *ItemActivityStat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ItemActivityStatRequest) Get() (*ItemActivityStat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ItemActivityStatRequest) Update(reqObj *ItemActivityStat) (*ItemActivityStat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ItemActivityStatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ItemAnalytics
type ItemAnalyticsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ItemAnalyticsRequestBuilder) Request() *ItemAnalyticsRequest {
	return &ItemAnalyticsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ItemAnalyticsRequest struct{ BaseRequest }

//
func (r *ItemAnalyticsRequest) Do(method, path string, reqObj interface{}) (resObj *ItemAnalytics, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ItemAnalyticsRequest) Get() (*ItemAnalytics, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ItemAnalyticsRequest) Update(reqObj *ItemAnalytics) (*ItemAnalytics, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ItemAnalyticsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ItemAttachment
type ItemAttachmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ItemAttachmentRequestBuilder) Request() *ItemAttachmentRequest {
	return &ItemAttachmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ItemAttachmentRequest struct{ BaseRequest }

//
func (r *ItemAttachmentRequest) Do(method, path string, reqObj interface{}) (resObj *ItemAttachment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ItemAttachmentRequest) Get() (*ItemAttachment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ItemAttachmentRequest) Update(reqObj *ItemAttachment) (*ItemAttachment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ItemAttachmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// LicenseDetails
type LicenseDetailsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *LicenseDetailsRequestBuilder) Request() *LicenseDetailsRequest {
	return &LicenseDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type LicenseDetailsRequest struct{ BaseRequest }

//
func (r *LicenseDetailsRequest) Do(method, path string, reqObj interface{}) (resObj *LicenseDetails, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *LicenseDetailsRequest) Get() (*LicenseDetails, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *LicenseDetailsRequest) Update(reqObj *LicenseDetails) (*LicenseDetails, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *LicenseDetailsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// List
type ListRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ListRequestBuilder) Request() *ListRequest {
	return &ListRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ListRequest struct{ BaseRequest }

//
func (r *ListRequest) Do(method, path string, reqObj interface{}) (resObj *List, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ListRequest) Get() (*List, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ListRequest) Update(reqObj *List) (*List, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ListRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ListItem
type ListItemRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ListItemRequestBuilder) Request() *ListItemRequest {
	return &ListItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ListItemRequest struct{ BaseRequest }

//
func (r *ListItemRequest) Do(method, path string, reqObj interface{}) (resObj *ListItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ListItemRequest) Get() (*ListItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ListItemRequest) Update(reqObj *ListItem) (*ListItem, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ListItemRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ListItemVersion
type ListItemVersionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ListItemVersionRequestBuilder) Request() *ListItemVersionRequest {
	return &ListItemVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ListItemVersionRequest struct{ BaseRequest }

//
func (r *ListItemVersionRequest) Do(method, path string, reqObj interface{}) (resObj *ListItemVersion, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ListItemVersionRequest) Get() (*ListItemVersion, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ListItemVersionRequest) Update(reqObj *ListItemVersion) (*ListItemVersion, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ListItemVersionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// LocalizedNotificationMessage
type LocalizedNotificationMessageRequestBuilder struct{ BaseRequestBuilder }

//
func (b *LocalizedNotificationMessageRequestBuilder) Request() *LocalizedNotificationMessageRequest {
	return &LocalizedNotificationMessageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type LocalizedNotificationMessageRequest struct{ BaseRequest }

//
func (r *LocalizedNotificationMessageRequest) Do(method, path string, reqObj interface{}) (resObj *LocalizedNotificationMessage, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *LocalizedNotificationMessageRequest) Get() (*LocalizedNotificationMessage, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *LocalizedNotificationMessageRequest) Update(reqObj *LocalizedNotificationMessage) (*LocalizedNotificationMessage, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *LocalizedNotificationMessageRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MailFolder
type MailFolderRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MailFolderRequestBuilder) Request() *MailFolderRequest {
	return &MailFolderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MailFolderRequest struct{ BaseRequest }

//
func (r *MailFolderRequest) Do(method, path string, reqObj interface{}) (resObj *MailFolder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MailFolderRequest) Get() (*MailFolder, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MailFolderRequest) Update(reqObj *MailFolder) (*MailFolder, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MailFolderRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedAppOperation
type ManagedAppOperationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppOperationRequestBuilder) Request() *ManagedAppOperationRequest {
	return &ManagedAppOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedAppOperationRequest struct{ BaseRequest }

//
func (r *ManagedAppOperationRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppOperationRequest) Get() (*ManagedAppOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedAppOperationRequest) Update(reqObj *ManagedAppOperation) (*ManagedAppOperation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedAppOperationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedAppPolicy
type ManagedAppPolicyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppPolicyRequestBuilder) Request() *ManagedAppPolicyRequest {
	return &ManagedAppPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedAppPolicyRequest struct{ BaseRequest }

//
func (r *ManagedAppPolicyRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppPolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppPolicyRequest) Get() (*ManagedAppPolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedAppPolicyRequest) Update(reqObj *ManagedAppPolicy) (*ManagedAppPolicy, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedAppPolicyRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedAppPolicyDeploymentSummary
type ManagedAppPolicyDeploymentSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppPolicyDeploymentSummaryRequestBuilder) Request() *ManagedAppPolicyDeploymentSummaryRequest {
	return &ManagedAppPolicyDeploymentSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedAppPolicyDeploymentSummaryRequest struct{ BaseRequest }

//
func (r *ManagedAppPolicyDeploymentSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppPolicyDeploymentSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppPolicyDeploymentSummaryRequest) Get() (*ManagedAppPolicyDeploymentSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedAppPolicyDeploymentSummaryRequest) Update(reqObj *ManagedAppPolicyDeploymentSummary) (*ManagedAppPolicyDeploymentSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedAppPolicyDeploymentSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedAppProtection
type ManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppProtectionRequestBuilder) Request() *ManagedAppProtectionRequest {
	return &ManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedAppProtectionRequest struct{ BaseRequest }

//
func (r *ManagedAppProtectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppProtectionRequest) Get() (*ManagedAppProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedAppProtectionRequest) Update(reqObj *ManagedAppProtection) (*ManagedAppProtection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedAppProtectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedAppRegistration
type ManagedAppRegistrationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppRegistrationRequestBuilder) Request() *ManagedAppRegistrationRequest {
	return &ManagedAppRegistrationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedAppRegistrationRequest struct{ BaseRequest }

//
func (r *ManagedAppRegistrationRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppRegistration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppRegistrationRequest) Get() (*ManagedAppRegistration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedAppRegistrationRequest) Update(reqObj *ManagedAppRegistration) (*ManagedAppRegistration, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedAppRegistrationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedAppStatus
type ManagedAppStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppStatusRequestBuilder) Request() *ManagedAppStatusRequest {
	return &ManagedAppStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedAppStatusRequest struct{ BaseRequest }

//
func (r *ManagedAppStatusRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppStatusRequest) Get() (*ManagedAppStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedAppStatusRequest) Update(reqObj *ManagedAppStatus) (*ManagedAppStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedAppStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedDevice
type ManagedDeviceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceRequestBuilder) Request() *ManagedDeviceRequest {
	return &ManagedDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedDeviceRequest struct{ BaseRequest }

//
func (r *ManagedDeviceRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDevice, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceRequest) Get() (*ManagedDevice, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedDeviceRequest) Update(reqObj *ManagedDevice) (*ManagedDevice, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedDeviceRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfiguration
type ManagedDeviceMobileAppConfigurationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationRequest {
	return &ManagedDeviceMobileAppConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedDeviceMobileAppConfigurationRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationRequest) Get() (*ManagedDeviceMobileAppConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationRequest) Update(reqObj *ManagedDeviceMobileAppConfiguration) (*ManagedDeviceMobileAppConfiguration, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedDeviceMobileAppConfigurationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationAssignment
type ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationAssignmentRequest {
	return &ManagedDeviceMobileAppConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedDeviceMobileAppConfigurationAssignmentRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfigurationAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Get() (*ManagedDeviceMobileAppConfigurationAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Update(reqObj *ManagedDeviceMobileAppConfigurationAssignment) (*ManagedDeviceMobileAppConfigurationAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationDeviceStatus
type ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationDeviceStatusRequest {
	return &ManagedDeviceMobileAppConfigurationDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedDeviceMobileAppConfigurationDeviceStatusRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfigurationDeviceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Get() (*ManagedDeviceMobileAppConfigurationDeviceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Update(reqObj *ManagedDeviceMobileAppConfigurationDeviceStatus) (*ManagedDeviceMobileAppConfigurationDeviceStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationDeviceSummary
type ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest {
	return &ManagedDeviceMobileAppConfigurationDeviceSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedDeviceMobileAppConfigurationDeviceSummaryRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfigurationDeviceSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Get() (*ManagedDeviceMobileAppConfigurationDeviceSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Update(reqObj *ManagedDeviceMobileAppConfigurationDeviceSummary) (*ManagedDeviceMobileAppConfigurationDeviceSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationUserStatus
type ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationUserStatusRequest {
	return &ManagedDeviceMobileAppConfigurationUserStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedDeviceMobileAppConfigurationUserStatusRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfigurationUserStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Get() (*ManagedDeviceMobileAppConfigurationUserStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Update(reqObj *ManagedDeviceMobileAppConfigurationUserStatus) (*ManagedDeviceMobileAppConfigurationUserStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationUserSummary
type ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationUserSummaryRequest {
	return &ManagedDeviceMobileAppConfigurationUserSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedDeviceMobileAppConfigurationUserSummaryRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfigurationUserSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Get() (*ManagedDeviceMobileAppConfigurationUserSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Update(reqObj *ManagedDeviceMobileAppConfigurationUserSummary) (*ManagedDeviceMobileAppConfigurationUserSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedDeviceOverview
type ManagedDeviceOverviewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceOverviewRequestBuilder) Request() *ManagedDeviceOverviewRequest {
	return &ManagedDeviceOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedDeviceOverviewRequest struct{ BaseRequest }

//
func (r *ManagedDeviceOverviewRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceOverview, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceOverviewRequest) Get() (*ManagedDeviceOverview, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedDeviceOverviewRequest) Update(reqObj *ManagedDeviceOverview) (*ManagedDeviceOverview, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedDeviceOverviewRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedEBook
type ManagedEBookRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedEBookRequestBuilder) Request() *ManagedEBookRequest {
	return &ManagedEBookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedEBookRequest struct{ BaseRequest }

//
func (r *ManagedEBookRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedEBook, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedEBookRequest) Get() (*ManagedEBook, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedEBookRequest) Update(reqObj *ManagedEBook) (*ManagedEBook, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedEBookRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedEBookAssignment
type ManagedEBookAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedEBookAssignmentRequestBuilder) Request() *ManagedEBookAssignmentRequest {
	return &ManagedEBookAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedEBookAssignmentRequest struct{ BaseRequest }

//
func (r *ManagedEBookAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedEBookAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedEBookAssignmentRequest) Get() (*ManagedEBookAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedEBookAssignmentRequest) Update(reqObj *ManagedEBookAssignment) (*ManagedEBookAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedEBookAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedMobileApp
type ManagedMobileAppRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedMobileAppRequestBuilder) Request() *ManagedMobileAppRequest {
	return &ManagedMobileAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedMobileAppRequest struct{ BaseRequest }

//
func (r *ManagedMobileAppRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedMobileApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedMobileAppRequest) Get() (*ManagedMobileApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedMobileAppRequest) Update(reqObj *ManagedMobileApp) (*ManagedMobileApp, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedMobileAppRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ManagedMobileLobApp
type ManagedMobileLobAppRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedMobileLobAppRequestBuilder) Request() *ManagedMobileLobAppRequest {
	return &ManagedMobileLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ManagedMobileLobAppRequest struct{ BaseRequest }

//
func (r *ManagedMobileLobAppRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedMobileLobApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedMobileLobAppRequest) Get() (*ManagedMobileLobApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ManagedMobileLobAppRequest) Update(reqObj *ManagedMobileLobApp) (*ManagedMobileLobApp, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ManagedMobileLobAppRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MdmWindowsInformationProtectionPolicy
type MdmWindowsInformationProtectionPolicyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MdmWindowsInformationProtectionPolicyRequestBuilder) Request() *MdmWindowsInformationProtectionPolicyRequest {
	return &MdmWindowsInformationProtectionPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MdmWindowsInformationProtectionPolicyRequest struct{ BaseRequest }

//
func (r *MdmWindowsInformationProtectionPolicyRequest) Do(method, path string, reqObj interface{}) (resObj *MdmWindowsInformationProtectionPolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MdmWindowsInformationProtectionPolicyRequest) Get() (*MdmWindowsInformationProtectionPolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MdmWindowsInformationProtectionPolicyRequest) Update(reqObj *MdmWindowsInformationProtectionPolicy) (*MdmWindowsInformationProtectionPolicy, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MdmWindowsInformationProtectionPolicyRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Message
type MessageRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageRequestBuilder) Request() *MessageRequest {
	return &MessageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MessageRequest struct{ BaseRequest }

//
func (r *MessageRequest) Do(method, path string, reqObj interface{}) (resObj *Message, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageRequest) Get() (*Message, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MessageRequest) Update(reqObj *Message) (*Message, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MessageRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MessageRule
type MessageRuleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageRuleRequestBuilder) Request() *MessageRuleRequest {
	return &MessageRuleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MessageRuleRequest struct{ BaseRequest }

//
func (r *MessageRuleRequest) Do(method, path string, reqObj interface{}) (resObj *MessageRule, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageRuleRequest) Get() (*MessageRule, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MessageRuleRequest) Update(reqObj *MessageRule) (*MessageRule, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MessageRuleRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MobileApp
type MobileAppRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppRequestBuilder) Request() *MobileAppRequest {
	return &MobileAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MobileAppRequest struct{ BaseRequest }

//
func (r *MobileAppRequest) Do(method, path string, reqObj interface{}) (resObj *MobileApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileAppRequest) Get() (*MobileApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MobileAppRequest) Update(reqObj *MobileApp) (*MobileApp, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MobileAppRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MobileAppAssignment
type MobileAppAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppAssignmentRequestBuilder) Request() *MobileAppAssignmentRequest {
	return &MobileAppAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MobileAppAssignmentRequest struct{ BaseRequest }

//
func (r *MobileAppAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileAppAssignmentRequest) Get() (*MobileAppAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MobileAppAssignmentRequest) Update(reqObj *MobileAppAssignment) (*MobileAppAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MobileAppAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MobileAppCategory
type MobileAppCategoryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppCategoryRequestBuilder) Request() *MobileAppCategoryRequest {
	return &MobileAppCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MobileAppCategoryRequest struct{ BaseRequest }

//
func (r *MobileAppCategoryRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppCategory, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileAppCategoryRequest) Get() (*MobileAppCategory, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MobileAppCategoryRequest) Update(reqObj *MobileAppCategory) (*MobileAppCategory, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MobileAppCategoryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MobileAppContent
type MobileAppContentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppContentRequestBuilder) Request() *MobileAppContentRequest {
	return &MobileAppContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MobileAppContentRequest struct{ BaseRequest }

//
func (r *MobileAppContentRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppContent, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileAppContentRequest) Get() (*MobileAppContent, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MobileAppContentRequest) Update(reqObj *MobileAppContent) (*MobileAppContent, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MobileAppContentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MobileAppContentFile
type MobileAppContentFileRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppContentFileRequestBuilder) Request() *MobileAppContentFileRequest {
	return &MobileAppContentFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MobileAppContentFileRequest struct{ BaseRequest }

//
func (r *MobileAppContentFileRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppContentFile, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileAppContentFileRequest) Get() (*MobileAppContentFile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MobileAppContentFileRequest) Update(reqObj *MobileAppContentFile) (*MobileAppContentFile, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MobileAppContentFileRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MobileLobApp
type MobileLobAppRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileLobAppRequestBuilder) Request() *MobileLobAppRequest {
	return &MobileLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MobileLobAppRequest struct{ BaseRequest }

//
func (r *MobileLobAppRequest) Do(method, path string, reqObj interface{}) (resObj *MobileLobApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileLobAppRequest) Get() (*MobileLobApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MobileLobAppRequest) Update(reqObj *MobileLobApp) (*MobileLobApp, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MobileLobAppRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MobileThreatDefenseConnector
type MobileThreatDefenseConnectorRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileThreatDefenseConnectorRequestBuilder) Request() *MobileThreatDefenseConnectorRequest {
	return &MobileThreatDefenseConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MobileThreatDefenseConnectorRequest struct{ BaseRequest }

//
func (r *MobileThreatDefenseConnectorRequest) Do(method, path string, reqObj interface{}) (resObj *MobileThreatDefenseConnector, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileThreatDefenseConnectorRequest) Get() (*MobileThreatDefenseConnector, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MobileThreatDefenseConnectorRequest) Update(reqObj *MobileThreatDefenseConnector) (*MobileThreatDefenseConnector, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MobileThreatDefenseConnectorRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// MultiValueLegacyExtendedProperty
type MultiValueLegacyExtendedPropertyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MultiValueLegacyExtendedPropertyRequestBuilder) Request() *MultiValueLegacyExtendedPropertyRequest {
	return &MultiValueLegacyExtendedPropertyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type MultiValueLegacyExtendedPropertyRequest struct{ BaseRequest }

//
func (r *MultiValueLegacyExtendedPropertyRequest) Do(method, path string, reqObj interface{}) (resObj *MultiValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MultiValueLegacyExtendedPropertyRequest) Get() (*MultiValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *MultiValueLegacyExtendedPropertyRequest) Update(reqObj *MultiValueLegacyExtendedProperty) (*MultiValueLegacyExtendedProperty, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *MultiValueLegacyExtendedPropertyRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Notebook
type NotebookRequestBuilder struct{ BaseRequestBuilder }

//
func (b *NotebookRequestBuilder) Request() *NotebookRequest {
	return &NotebookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type NotebookRequest struct{ BaseRequest }

//
func (r *NotebookRequest) Do(method, path string, reqObj interface{}) (resObj *Notebook, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *NotebookRequest) Get() (*Notebook, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *NotebookRequest) Update(reqObj *Notebook) (*Notebook, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *NotebookRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// NotificationMessageTemplate
type NotificationMessageTemplateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *NotificationMessageTemplateRequestBuilder) Request() *NotificationMessageTemplateRequest {
	return &NotificationMessageTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type NotificationMessageTemplateRequest struct{ BaseRequest }

//
func (r *NotificationMessageTemplateRequest) Do(method, path string, reqObj interface{}) (resObj *NotificationMessageTemplate, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *NotificationMessageTemplateRequest) Get() (*NotificationMessageTemplate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *NotificationMessageTemplateRequest) Update(reqObj *NotificationMessageTemplate) (*NotificationMessageTemplate, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *NotificationMessageTemplateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OfficeGraphInsights
type OfficeGraphInsightsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OfficeGraphInsightsRequestBuilder) Request() *OfficeGraphInsightsRequest {
	return &OfficeGraphInsightsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OfficeGraphInsightsRequest struct{ BaseRequest }

//
func (r *OfficeGraphInsightsRequest) Do(method, path string, reqObj interface{}) (resObj *OfficeGraphInsights, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OfficeGraphInsightsRequest) Get() (*OfficeGraphInsights, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OfficeGraphInsightsRequest) Update(reqObj *OfficeGraphInsights) (*OfficeGraphInsights, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OfficeGraphInsightsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OnPremisesConditionalAccessSettings
type OnPremisesConditionalAccessSettingsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnPremisesConditionalAccessSettingsRequestBuilder) Request() *OnPremisesConditionalAccessSettingsRequest {
	return &OnPremisesConditionalAccessSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OnPremisesConditionalAccessSettingsRequest struct{ BaseRequest }

//
func (r *OnPremisesConditionalAccessSettingsRequest) Do(method, path string, reqObj interface{}) (resObj *OnPremisesConditionalAccessSettings, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnPremisesConditionalAccessSettingsRequest) Get() (*OnPremisesConditionalAccessSettings, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OnPremisesConditionalAccessSettingsRequest) Update(reqObj *OnPremisesConditionalAccessSettings) (*OnPremisesConditionalAccessSettings, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OnPremisesConditionalAccessSettingsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Onenote
type OnenoteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteRequestBuilder) Request() *OnenoteRequest {
	return &OnenoteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OnenoteRequest struct{ BaseRequest }

//
func (r *OnenoteRequest) Do(method, path string, reqObj interface{}) (resObj *Onenote, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteRequest) Get() (*Onenote, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OnenoteRequest) Update(reqObj *Onenote) (*Onenote, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OnenoteRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OnenoteOperation
type OnenoteOperationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteOperationRequestBuilder) Request() *OnenoteOperationRequest {
	return &OnenoteOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OnenoteOperationRequest struct{ BaseRequest }

//
func (r *OnenoteOperationRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteOperationRequest) Get() (*OnenoteOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OnenoteOperationRequest) Update(reqObj *OnenoteOperation) (*OnenoteOperation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OnenoteOperationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OnenotePage
type OnenotePageRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenotePageRequestBuilder) Request() *OnenotePageRequest {
	return &OnenotePageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OnenotePageRequest struct{ BaseRequest }

//
func (r *OnenotePageRequest) Do(method, path string, reqObj interface{}) (resObj *OnenotePage, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenotePageRequest) Get() (*OnenotePage, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OnenotePageRequest) Update(reqObj *OnenotePage) (*OnenotePage, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OnenotePageRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OnenoteResource
type OnenoteResourceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteResourceRequestBuilder) Request() *OnenoteResourceRequest {
	return &OnenoteResourceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OnenoteResourceRequest struct{ BaseRequest }

//
func (r *OnenoteResourceRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteResource, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteResourceRequest) Get() (*OnenoteResource, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OnenoteResourceRequest) Update(reqObj *OnenoteResource) (*OnenoteResource, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OnenoteResourceRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OnenoteSection
type OnenoteSectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteSectionRequestBuilder) Request() *OnenoteSectionRequest {
	return &OnenoteSectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OnenoteSectionRequest struct{ BaseRequest }

//
func (r *OnenoteSectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteSection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteSectionRequest) Get() (*OnenoteSection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OnenoteSectionRequest) Update(reqObj *OnenoteSection) (*OnenoteSection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OnenoteSectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OnlineMeeting
type OnlineMeetingRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnlineMeetingRequestBuilder) Request() *OnlineMeetingRequest {
	return &OnlineMeetingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OnlineMeetingRequest struct{ BaseRequest }

//
func (r *OnlineMeetingRequest) Do(method, path string, reqObj interface{}) (resObj *OnlineMeeting, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnlineMeetingRequest) Get() (*OnlineMeeting, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OnlineMeetingRequest) Update(reqObj *OnlineMeeting) (*OnlineMeeting, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OnlineMeetingRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Organization
type OrganizationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OrganizationRequestBuilder) Request() *OrganizationRequest {
	return &OrganizationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OrganizationRequest struct{ BaseRequest }

//
func (r *OrganizationRequest) Do(method, path string, reqObj interface{}) (resObj *Organization, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OrganizationRequest) Get() (*Organization, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OrganizationRequest) Update(reqObj *Organization) (*Organization, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OrganizationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OutlookCategory
type OutlookCategoryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OutlookCategoryRequestBuilder) Request() *OutlookCategoryRequest {
	return &OutlookCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OutlookCategoryRequest struct{ BaseRequest }

//
func (r *OutlookCategoryRequest) Do(method, path string, reqObj interface{}) (resObj *OutlookCategory, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OutlookCategoryRequest) Get() (*OutlookCategory, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OutlookCategoryRequest) Update(reqObj *OutlookCategory) (*OutlookCategory, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OutlookCategoryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OutlookItem
type OutlookItemRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OutlookItemRequestBuilder) Request() *OutlookItemRequest {
	return &OutlookItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OutlookItemRequest struct{ BaseRequest }

//
func (r *OutlookItemRequest) Do(method, path string, reqObj interface{}) (resObj *OutlookItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OutlookItemRequest) Get() (*OutlookItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OutlookItemRequest) Update(reqObj *OutlookItem) (*OutlookItem, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OutlookItemRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// OutlookUser
type OutlookUserRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OutlookUserRequestBuilder) Request() *OutlookUserRequest {
	return &OutlookUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type OutlookUserRequest struct{ BaseRequest }

//
func (r *OutlookUserRequest) Do(method, path string, reqObj interface{}) (resObj *OutlookUser, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OutlookUserRequest) Get() (*OutlookUser, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *OutlookUserRequest) Update(reqObj *OutlookUser) (*OutlookUser, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *OutlookUserRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Participant
type ParticipantRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ParticipantRequestBuilder) Request() *ParticipantRequest {
	return &ParticipantRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ParticipantRequest struct{ BaseRequest }

//
func (r *ParticipantRequest) Do(method, path string, reqObj interface{}) (resObj *Participant, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ParticipantRequest) Get() (*Participant, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ParticipantRequest) Update(reqObj *Participant) (*Participant, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ParticipantRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Permission
type PermissionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PermissionRequestBuilder) Request() *PermissionRequest {
	return &PermissionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PermissionRequest struct{ BaseRequest }

//
func (r *PermissionRequest) Do(method, path string, reqObj interface{}) (resObj *Permission, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PermissionRequest) Get() (*Permission, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PermissionRequest) Update(reqObj *Permission) (*Permission, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PermissionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Person
type PersonRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PersonRequestBuilder) Request() *PersonRequest {
	return &PersonRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PersonRequest struct{ BaseRequest }

//
func (r *PersonRequest) Do(method, path string, reqObj interface{}) (resObj *Person, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PersonRequest) Get() (*Person, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PersonRequest) Update(reqObj *Person) (*Person, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PersonRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Planner
type PlannerRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerRequestBuilder) Request() *PlannerRequest {
	return &PlannerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerRequest struct{ BaseRequest }

//
func (r *PlannerRequest) Do(method, path string, reqObj interface{}) (resObj *Planner, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerRequest) Get() (*Planner, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerRequest) Update(reqObj *Planner) (*Planner, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerAssignedToTaskBoardTaskFormat
type PlannerAssignedToTaskBoardTaskFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerAssignedToTaskBoardTaskFormatRequestBuilder) Request() *PlannerAssignedToTaskBoardTaskFormatRequest {
	return &PlannerAssignedToTaskBoardTaskFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerAssignedToTaskBoardTaskFormatRequest struct{ BaseRequest }

//
func (r *PlannerAssignedToTaskBoardTaskFormatRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerAssignedToTaskBoardTaskFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerAssignedToTaskBoardTaskFormatRequest) Get() (*PlannerAssignedToTaskBoardTaskFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerAssignedToTaskBoardTaskFormatRequest) Update(reqObj *PlannerAssignedToTaskBoardTaskFormat) (*PlannerAssignedToTaskBoardTaskFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerAssignedToTaskBoardTaskFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerBucket
type PlannerBucketRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerBucketRequestBuilder) Request() *PlannerBucketRequest {
	return &PlannerBucketRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerBucketRequest struct{ BaseRequest }

//
func (r *PlannerBucketRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerBucket, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerBucketRequest) Get() (*PlannerBucket, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerBucketRequest) Update(reqObj *PlannerBucket) (*PlannerBucket, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerBucketRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerBucketTaskBoardTaskFormat
type PlannerBucketTaskBoardTaskFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerBucketTaskBoardTaskFormatRequestBuilder) Request() *PlannerBucketTaskBoardTaskFormatRequest {
	return &PlannerBucketTaskBoardTaskFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerBucketTaskBoardTaskFormatRequest struct{ BaseRequest }

//
func (r *PlannerBucketTaskBoardTaskFormatRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerBucketTaskBoardTaskFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerBucketTaskBoardTaskFormatRequest) Get() (*PlannerBucketTaskBoardTaskFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerBucketTaskBoardTaskFormatRequest) Update(reqObj *PlannerBucketTaskBoardTaskFormat) (*PlannerBucketTaskBoardTaskFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerBucketTaskBoardTaskFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerGroup
type PlannerGroupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerGroupRequestBuilder) Request() *PlannerGroupRequest {
	return &PlannerGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerGroupRequest struct{ BaseRequest }

//
func (r *PlannerGroupRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerGroup, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerGroupRequest) Get() (*PlannerGroup, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerGroupRequest) Update(reqObj *PlannerGroup) (*PlannerGroup, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerGroupRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerPlan
type PlannerPlanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerPlanRequestBuilder) Request() *PlannerPlanRequest {
	return &PlannerPlanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerPlanRequest struct{ BaseRequest }

//
func (r *PlannerPlanRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerPlan, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerPlanRequest) Get() (*PlannerPlan, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerPlanRequest) Update(reqObj *PlannerPlan) (*PlannerPlan, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerPlanRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerPlanDetails
type PlannerPlanDetailsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerPlanDetailsRequestBuilder) Request() *PlannerPlanDetailsRequest {
	return &PlannerPlanDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerPlanDetailsRequest struct{ BaseRequest }

//
func (r *PlannerPlanDetailsRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerPlanDetails, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerPlanDetailsRequest) Get() (*PlannerPlanDetails, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerPlanDetailsRequest) Update(reqObj *PlannerPlanDetails) (*PlannerPlanDetails, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerPlanDetailsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerProgressTaskBoardTaskFormat
type PlannerProgressTaskBoardTaskFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerProgressTaskBoardTaskFormatRequestBuilder) Request() *PlannerProgressTaskBoardTaskFormatRequest {
	return &PlannerProgressTaskBoardTaskFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerProgressTaskBoardTaskFormatRequest struct{ BaseRequest }

//
func (r *PlannerProgressTaskBoardTaskFormatRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerProgressTaskBoardTaskFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerProgressTaskBoardTaskFormatRequest) Get() (*PlannerProgressTaskBoardTaskFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerProgressTaskBoardTaskFormatRequest) Update(reqObj *PlannerProgressTaskBoardTaskFormat) (*PlannerProgressTaskBoardTaskFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerProgressTaskBoardTaskFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerTask
type PlannerTaskRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerTaskRequestBuilder) Request() *PlannerTaskRequest {
	return &PlannerTaskRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerTaskRequest struct{ BaseRequest }

//
func (r *PlannerTaskRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerTask, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerTaskRequest) Get() (*PlannerTask, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerTaskRequest) Update(reqObj *PlannerTask) (*PlannerTask, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerTaskRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerTaskDetails
type PlannerTaskDetailsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerTaskDetailsRequestBuilder) Request() *PlannerTaskDetailsRequest {
	return &PlannerTaskDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerTaskDetailsRequest struct{ BaseRequest }

//
func (r *PlannerTaskDetailsRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerTaskDetails, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerTaskDetailsRequest) Get() (*PlannerTaskDetails, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerTaskDetailsRequest) Update(reqObj *PlannerTaskDetails) (*PlannerTaskDetails, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerTaskDetailsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// PlannerUser
type PlannerUserRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerUserRequestBuilder) Request() *PlannerUserRequest {
	return &PlannerUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PlannerUserRequest struct{ BaseRequest }

//
func (r *PlannerUserRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerUser, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerUserRequest) Get() (*PlannerUser, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PlannerUserRequest) Update(reqObj *PlannerUser) (*PlannerUser, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PlannerUserRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Post
type PostRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PostRequestBuilder) Request() *PostRequest {
	return &PostRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type PostRequest struct{ BaseRequest }

//
func (r *PostRequest) Do(method, path string, reqObj interface{}) (resObj *Post, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PostRequest) Get() (*Post, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *PostRequest) Update(reqObj *Post) (*Post, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *PostRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ProfilePhoto
type ProfilePhotoRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ProfilePhotoRequestBuilder) Request() *ProfilePhotoRequest {
	return &ProfilePhotoRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ProfilePhotoRequest struct{ BaseRequest }

//
func (r *ProfilePhotoRequest) Do(method, path string, reqObj interface{}) (resObj *ProfilePhoto, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ProfilePhotoRequest) Get() (*ProfilePhoto, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ProfilePhotoRequest) Update(reqObj *ProfilePhoto) (*ProfilePhoto, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ProfilePhotoRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// RemoteAssistancePartner
type RemoteAssistancePartnerRequestBuilder struct{ BaseRequestBuilder }

//
func (b *RemoteAssistancePartnerRequestBuilder) Request() *RemoteAssistancePartnerRequest {
	return &RemoteAssistancePartnerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type RemoteAssistancePartnerRequest struct{ BaseRequest }

//
func (r *RemoteAssistancePartnerRequest) Do(method, path string, reqObj interface{}) (resObj *RemoteAssistancePartner, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *RemoteAssistancePartnerRequest) Get() (*RemoteAssistancePartner, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *RemoteAssistancePartnerRequest) Update(reqObj *RemoteAssistancePartner) (*RemoteAssistancePartner, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *RemoteAssistancePartnerRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ReportRoot
type ReportRootRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ReportRootRequestBuilder) Request() *ReportRootRequest {
	return &ReportRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ReportRootRequest struct{ BaseRequest }

//
func (r *ReportRootRequest) Do(method, path string, reqObj interface{}) (resObj *ReportRoot, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ReportRootRequest) Get() (*ReportRoot, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ReportRootRequest) Update(reqObj *ReportRoot) (*ReportRoot, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ReportRootRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ResourceOperation
type ResourceOperationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ResourceOperationRequestBuilder) Request() *ResourceOperationRequest {
	return &ResourceOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ResourceOperationRequest struct{ BaseRequest }

//
func (r *ResourceOperationRequest) Do(method, path string, reqObj interface{}) (resObj *ResourceOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ResourceOperationRequest) Get() (*ResourceOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ResourceOperationRequest) Update(reqObj *ResourceOperation) (*ResourceOperation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ResourceOperationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// RestrictedSignIn
type RestrictedSignInRequestBuilder struct{ BaseRequestBuilder }

//
func (b *RestrictedSignInRequestBuilder) Request() *RestrictedSignInRequest {
	return &RestrictedSignInRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type RestrictedSignInRequest struct{ BaseRequest }

//
func (r *RestrictedSignInRequest) Do(method, path string, reqObj interface{}) (resObj *RestrictedSignIn, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *RestrictedSignInRequest) Get() (*RestrictedSignIn, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *RestrictedSignInRequest) Update(reqObj *RestrictedSignIn) (*RestrictedSignIn, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *RestrictedSignInRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// RoleAssignment
type RoleAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *RoleAssignmentRequestBuilder) Request() *RoleAssignmentRequest {
	return &RoleAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type RoleAssignmentRequest struct{ BaseRequest }

//
func (r *RoleAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *RoleAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *RoleAssignmentRequest) Get() (*RoleAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *RoleAssignmentRequest) Update(reqObj *RoleAssignment) (*RoleAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *RoleAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// RoleDefinition
type RoleDefinitionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *RoleDefinitionRequestBuilder) Request() *RoleDefinitionRequest {
	return &RoleDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type RoleDefinitionRequest struct{ BaseRequest }

//
func (r *RoleDefinitionRequest) Do(method, path string, reqObj interface{}) (resObj *RoleDefinition, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *RoleDefinitionRequest) Get() (*RoleDefinition, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *RoleDefinitionRequest) Update(reqObj *RoleDefinition) (*RoleDefinition, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *RoleDefinitionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SchemaExtension
type SchemaExtensionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SchemaExtensionRequestBuilder) Request() *SchemaExtensionRequest {
	return &SchemaExtensionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SchemaExtensionRequest struct{ BaseRequest }

//
func (r *SchemaExtensionRequest) Do(method, path string, reqObj interface{}) (resObj *SchemaExtension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SchemaExtensionRequest) Get() (*SchemaExtension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SchemaExtensionRequest) Update(reqObj *SchemaExtension) (*SchemaExtension, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SchemaExtensionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SectionGroup
type SectionGroupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SectionGroupRequestBuilder) Request() *SectionGroupRequest {
	return &SectionGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SectionGroupRequest struct{ BaseRequest }

//
func (r *SectionGroupRequest) Do(method, path string, reqObj interface{}) (resObj *SectionGroup, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SectionGroupRequest) Get() (*SectionGroup, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SectionGroupRequest) Update(reqObj *SectionGroup) (*SectionGroup, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SectionGroupRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SecureScore
type SecureScoreRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SecureScoreRequestBuilder) Request() *SecureScoreRequest {
	return &SecureScoreRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SecureScoreRequest struct{ BaseRequest }

//
func (r *SecureScoreRequest) Do(method, path string, reqObj interface{}) (resObj *SecureScore, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SecureScoreRequest) Get() (*SecureScore, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SecureScoreRequest) Update(reqObj *SecureScore) (*SecureScore, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SecureScoreRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SecureScoreControlProfile
type SecureScoreControlProfileRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SecureScoreControlProfileRequestBuilder) Request() *SecureScoreControlProfileRequest {
	return &SecureScoreControlProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SecureScoreControlProfileRequest struct{ BaseRequest }

//
func (r *SecureScoreControlProfileRequest) Do(method, path string, reqObj interface{}) (resObj *SecureScoreControlProfile, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SecureScoreControlProfileRequest) Get() (*SecureScoreControlProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SecureScoreControlProfileRequest) Update(reqObj *SecureScoreControlProfile) (*SecureScoreControlProfile, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SecureScoreControlProfileRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Security
type SecurityRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SecurityRequestBuilder) Request() *SecurityRequest {
	return &SecurityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SecurityRequest struct{ BaseRequest }

//
func (r *SecurityRequest) Do(method, path string, reqObj interface{}) (resObj *Security, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SecurityRequest) Get() (*Security, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SecurityRequest) Update(reqObj *Security) (*Security, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SecurityRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SettingStateDeviceSummary
type SettingStateDeviceSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SettingStateDeviceSummaryRequestBuilder) Request() *SettingStateDeviceSummaryRequest {
	return &SettingStateDeviceSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SettingStateDeviceSummaryRequest struct{ BaseRequest }

//
func (r *SettingStateDeviceSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *SettingStateDeviceSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SettingStateDeviceSummaryRequest) Get() (*SettingStateDeviceSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SettingStateDeviceSummaryRequest) Update(reqObj *SettingStateDeviceSummary) (*SettingStateDeviceSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SettingStateDeviceSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SharedDriveItem
type SharedDriveItemRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SharedDriveItemRequestBuilder) Request() *SharedDriveItemRequest {
	return &SharedDriveItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SharedDriveItemRequest struct{ BaseRequest }

//
func (r *SharedDriveItemRequest) Do(method, path string, reqObj interface{}) (resObj *SharedDriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SharedDriveItemRequest) Get() (*SharedDriveItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SharedDriveItemRequest) Update(reqObj *SharedDriveItem) (*SharedDriveItem, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SharedDriveItemRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SharedInsight
type SharedInsightRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SharedInsightRequestBuilder) Request() *SharedInsightRequest {
	return &SharedInsightRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SharedInsightRequest struct{ BaseRequest }

//
func (r *SharedInsightRequest) Do(method, path string, reqObj interface{}) (resObj *SharedInsight, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SharedInsightRequest) Get() (*SharedInsight, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SharedInsightRequest) Update(reqObj *SharedInsight) (*SharedInsight, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SharedInsightRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SignIn
type SignInRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SignInRequestBuilder) Request() *SignInRequest {
	return &SignInRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SignInRequest struct{ BaseRequest }

//
func (r *SignInRequest) Do(method, path string, reqObj interface{}) (resObj *SignIn, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SignInRequest) Get() (*SignIn, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SignInRequest) Update(reqObj *SignIn) (*SignIn, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SignInRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SingleValueLegacyExtendedProperty
type SingleValueLegacyExtendedPropertyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SingleValueLegacyExtendedPropertyRequestBuilder) Request() *SingleValueLegacyExtendedPropertyRequest {
	return &SingleValueLegacyExtendedPropertyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SingleValueLegacyExtendedPropertyRequest struct{ BaseRequest }

//
func (r *SingleValueLegacyExtendedPropertyRequest) Do(method, path string, reqObj interface{}) (resObj *SingleValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SingleValueLegacyExtendedPropertyRequest) Get() (*SingleValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SingleValueLegacyExtendedPropertyRequest) Update(reqObj *SingleValueLegacyExtendedProperty) (*SingleValueLegacyExtendedProperty, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SingleValueLegacyExtendedPropertyRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Site
type SiteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SiteRequestBuilder) Request() *SiteRequest {
	return &SiteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SiteRequest struct{ BaseRequest }

//
func (r *SiteRequest) Do(method, path string, reqObj interface{}) (resObj *Site, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SiteRequest) Get() (*Site, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SiteRequest) Update(reqObj *Site) (*Site, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SiteRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SoftwareUpdateStatusSummary
type SoftwareUpdateStatusSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SoftwareUpdateStatusSummaryRequestBuilder) Request() *SoftwareUpdateStatusSummaryRequest {
	return &SoftwareUpdateStatusSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SoftwareUpdateStatusSummaryRequest struct{ BaseRequest }

//
func (r *SoftwareUpdateStatusSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *SoftwareUpdateStatusSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SoftwareUpdateStatusSummaryRequest) Get() (*SoftwareUpdateStatusSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SoftwareUpdateStatusSummaryRequest) Update(reqObj *SoftwareUpdateStatusSummary) (*SoftwareUpdateStatusSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SoftwareUpdateStatusSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// SubscribedSku
type SubscribedSkuRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SubscribedSkuRequestBuilder) Request() *SubscribedSkuRequest {
	return &SubscribedSkuRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SubscribedSkuRequest struct{ BaseRequest }

//
func (r *SubscribedSkuRequest) Do(method, path string, reqObj interface{}) (resObj *SubscribedSku, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SubscribedSkuRequest) Get() (*SubscribedSku, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SubscribedSkuRequest) Update(reqObj *SubscribedSku) (*SubscribedSku, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SubscribedSkuRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Subscription
type SubscriptionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SubscriptionRequestBuilder) Request() *SubscriptionRequest {
	return &SubscriptionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type SubscriptionRequest struct{ BaseRequest }

//
func (r *SubscriptionRequest) Do(method, path string, reqObj interface{}) (resObj *Subscription, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SubscriptionRequest) Get() (*Subscription, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *SubscriptionRequest) Update(reqObj *Subscription) (*Subscription, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *SubscriptionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TargetedManagedAppConfiguration
type TargetedManagedAppConfigurationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppConfigurationRequestBuilder) Request() *TargetedManagedAppConfigurationRequest {
	return &TargetedManagedAppConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TargetedManagedAppConfigurationRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppConfigurationRequest) Do(method, path string, reqObj interface{}) (resObj *TargetedManagedAppConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TargetedManagedAppConfigurationRequest) Get() (*TargetedManagedAppConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TargetedManagedAppConfigurationRequest) Update(reqObj *TargetedManagedAppConfiguration) (*TargetedManagedAppConfiguration, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TargetedManagedAppConfigurationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TargetedManagedAppPolicyAssignment
type TargetedManagedAppPolicyAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppPolicyAssignmentRequestBuilder) Request() *TargetedManagedAppPolicyAssignmentRequest {
	return &TargetedManagedAppPolicyAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TargetedManagedAppPolicyAssignmentRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppPolicyAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *TargetedManagedAppPolicyAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TargetedManagedAppPolicyAssignmentRequest) Get() (*TargetedManagedAppPolicyAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TargetedManagedAppPolicyAssignmentRequest) Update(reqObj *TargetedManagedAppPolicyAssignment) (*TargetedManagedAppPolicyAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TargetedManagedAppPolicyAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TargetedManagedAppProtection
type TargetedManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppProtectionRequestBuilder) Request() *TargetedManagedAppProtectionRequest {
	return &TargetedManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TargetedManagedAppProtectionRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppProtectionRequest) Do(method, path string, reqObj interface{}) (resObj *TargetedManagedAppProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TargetedManagedAppProtectionRequest) Get() (*TargetedManagedAppProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TargetedManagedAppProtectionRequest) Update(reqObj *TargetedManagedAppProtection) (*TargetedManagedAppProtection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TargetedManagedAppProtectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Team
type TeamRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamRequestBuilder) Request() *TeamRequest {
	return &TeamRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TeamRequest struct{ BaseRequest }

//
func (r *TeamRequest) Do(method, path string, reqObj interface{}) (resObj *Team, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamRequest) Get() (*Team, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TeamRequest) Update(reqObj *Team) (*Team, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TeamRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TeamsApp
type TeamsAppRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamsAppRequestBuilder) Request() *TeamsAppRequest {
	return &TeamsAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TeamsAppRequest struct{ BaseRequest }

//
func (r *TeamsAppRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamsAppRequest) Get() (*TeamsApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TeamsAppRequest) Update(reqObj *TeamsApp) (*TeamsApp, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TeamsAppRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TeamsAppDefinition
type TeamsAppDefinitionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamsAppDefinitionRequestBuilder) Request() *TeamsAppDefinitionRequest {
	return &TeamsAppDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TeamsAppDefinitionRequest struct{ BaseRequest }

//
func (r *TeamsAppDefinitionRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsAppDefinition, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamsAppDefinitionRequest) Get() (*TeamsAppDefinition, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TeamsAppDefinitionRequest) Update(reqObj *TeamsAppDefinition) (*TeamsAppDefinition, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TeamsAppDefinitionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TeamsAppInstallation
type TeamsAppInstallationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamsAppInstallationRequestBuilder) Request() *TeamsAppInstallationRequest {
	return &TeamsAppInstallationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TeamsAppInstallationRequest struct{ BaseRequest }

//
func (r *TeamsAppInstallationRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsAppInstallation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamsAppInstallationRequest) Get() (*TeamsAppInstallation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TeamsAppInstallationRequest) Update(reqObj *TeamsAppInstallation) (*TeamsAppInstallation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TeamsAppInstallationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TeamsAsyncOperation
type TeamsAsyncOperationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamsAsyncOperationRequestBuilder) Request() *TeamsAsyncOperationRequest {
	return &TeamsAsyncOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TeamsAsyncOperationRequest struct{ BaseRequest }

//
func (r *TeamsAsyncOperationRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsAsyncOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamsAsyncOperationRequest) Get() (*TeamsAsyncOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TeamsAsyncOperationRequest) Update(reqObj *TeamsAsyncOperation) (*TeamsAsyncOperation, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TeamsAsyncOperationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TeamsTab
type TeamsTabRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamsTabRequestBuilder) Request() *TeamsTabRequest {
	return &TeamsTabRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TeamsTabRequest struct{ BaseRequest }

//
func (r *TeamsTabRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsTab, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamsTabRequest) Get() (*TeamsTab, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TeamsTabRequest) Update(reqObj *TeamsTab) (*TeamsTab, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TeamsTabRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TelecomExpenseManagementPartner
type TelecomExpenseManagementPartnerRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TelecomExpenseManagementPartnerRequestBuilder) Request() *TelecomExpenseManagementPartnerRequest {
	return &TelecomExpenseManagementPartnerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TelecomExpenseManagementPartnerRequest struct{ BaseRequest }

//
func (r *TelecomExpenseManagementPartnerRequest) Do(method, path string, reqObj interface{}) (resObj *TelecomExpenseManagementPartner, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TelecomExpenseManagementPartnerRequest) Get() (*TelecomExpenseManagementPartner, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TelecomExpenseManagementPartnerRequest) Update(reqObj *TelecomExpenseManagementPartner) (*TelecomExpenseManagementPartner, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TelecomExpenseManagementPartnerRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TermsAndConditions
type TermsAndConditionsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TermsAndConditionsRequestBuilder) Request() *TermsAndConditionsRequest {
	return &TermsAndConditionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TermsAndConditionsRequest struct{ BaseRequest }

//
func (r *TermsAndConditionsRequest) Do(method, path string, reqObj interface{}) (resObj *TermsAndConditions, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TermsAndConditionsRequest) Get() (*TermsAndConditions, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TermsAndConditionsRequest) Update(reqObj *TermsAndConditions) (*TermsAndConditions, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TermsAndConditionsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TermsAndConditionsAcceptanceStatus
type TermsAndConditionsAcceptanceStatusRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TermsAndConditionsAcceptanceStatusRequestBuilder) Request() *TermsAndConditionsAcceptanceStatusRequest {
	return &TermsAndConditionsAcceptanceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TermsAndConditionsAcceptanceStatusRequest struct{ BaseRequest }

//
func (r *TermsAndConditionsAcceptanceStatusRequest) Do(method, path string, reqObj interface{}) (resObj *TermsAndConditionsAcceptanceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TermsAndConditionsAcceptanceStatusRequest) Get() (*TermsAndConditionsAcceptanceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TermsAndConditionsAcceptanceStatusRequest) Update(reqObj *TermsAndConditionsAcceptanceStatus) (*TermsAndConditionsAcceptanceStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TermsAndConditionsAcceptanceStatusRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// TermsAndConditionsAssignment
type TermsAndConditionsAssignmentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TermsAndConditionsAssignmentRequestBuilder) Request() *TermsAndConditionsAssignmentRequest {
	return &TermsAndConditionsAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TermsAndConditionsAssignmentRequest struct{ BaseRequest }

//
func (r *TermsAndConditionsAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *TermsAndConditionsAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TermsAndConditionsAssignmentRequest) Get() (*TermsAndConditionsAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TermsAndConditionsAssignmentRequest) Update(reqObj *TermsAndConditionsAssignment) (*TermsAndConditionsAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TermsAndConditionsAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// ThumbnailSet
type ThumbnailSetRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ThumbnailSetRequestBuilder) Request() *ThumbnailSetRequest {
	return &ThumbnailSetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type ThumbnailSetRequest struct{ BaseRequest }

//
func (r *ThumbnailSetRequest) Do(method, path string, reqObj interface{}) (resObj *ThumbnailSet, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ThumbnailSetRequest) Get() (*ThumbnailSet, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *ThumbnailSetRequest) Update(reqObj *ThumbnailSet) (*ThumbnailSet, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *ThumbnailSetRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Trending
type TrendingRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TrendingRequestBuilder) Request() *TrendingRequest {
	return &TrendingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type TrendingRequest struct{ BaseRequest }

//
func (r *TrendingRequest) Do(method, path string, reqObj interface{}) (resObj *Trending, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TrendingRequest) Get() (*Trending, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *TrendingRequest) Update(reqObj *Trending) (*Trending, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *TrendingRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// UsedInsight
type UsedInsightRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UsedInsightRequestBuilder) Request() *UsedInsightRequest {
	return &UsedInsightRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type UsedInsightRequest struct{ BaseRequest }

//
func (r *UsedInsightRequest) Do(method, path string, reqObj interface{}) (resObj *UsedInsight, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UsedInsightRequest) Get() (*UsedInsight, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *UsedInsightRequest) Update(reqObj *UsedInsight) (*UsedInsight, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *UsedInsightRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// User
type UserRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserRequestBuilder) Request() *UserRequest {
	return &UserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type UserRequest struct{ BaseRequest }

//
func (r *UserRequest) Do(method, path string, reqObj interface{}) (resObj *User, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserRequest) Get() (*User, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *UserRequest) Update(reqObj *User) (*User, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *UserRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// UserActivity
type UserActivityRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserActivityRequestBuilder) Request() *UserActivityRequest {
	return &UserActivityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type UserActivityRequest struct{ BaseRequest }

//
func (r *UserActivityRequest) Do(method, path string, reqObj interface{}) (resObj *UserActivity, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserActivityRequest) Get() (*UserActivity, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *UserActivityRequest) Update(reqObj *UserActivity) (*UserActivity, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *UserActivityRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// UserInstallStateSummary
type UserInstallStateSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserInstallStateSummaryRequestBuilder) Request() *UserInstallStateSummaryRequest {
	return &UserInstallStateSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type UserInstallStateSummaryRequest struct{ BaseRequest }

//
func (r *UserInstallStateSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *UserInstallStateSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserInstallStateSummaryRequest) Get() (*UserInstallStateSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *UserInstallStateSummaryRequest) Update(reqObj *UserInstallStateSummary) (*UserInstallStateSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *UserInstallStateSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// UserSettings
type UserSettingsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserSettingsRequestBuilder) Request() *UserSettingsRequest {
	return &UserSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type UserSettingsRequest struct{ BaseRequest }

//
func (r *UserSettingsRequest) Do(method, path string, reqObj interface{}) (resObj *UserSettings, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserSettingsRequest) Get() (*UserSettings, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *UserSettingsRequest) Update(reqObj *UserSettings) (*UserSettings, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *UserSettingsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// VppToken
type VppTokenRequestBuilder struct{ BaseRequestBuilder }

//
func (b *VppTokenRequestBuilder) Request() *VppTokenRequest {
	return &VppTokenRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type VppTokenRequest struct{ BaseRequest }

//
func (r *VppTokenRequest) Do(method, path string, reqObj interface{}) (resObj *VppToken, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *VppTokenRequest) Get() (*VppToken, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *VppTokenRequest) Update(reqObj *VppToken) (*VppToken, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *VppTokenRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WindowsInformationProtection
type WindowsInformationProtectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionRequestBuilder) Request() *WindowsInformationProtectionRequest {
	return &WindowsInformationProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WindowsInformationProtectionRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WindowsInformationProtectionRequest) Get() (*WindowsInformationProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WindowsInformationProtectionRequest) Update(reqObj *WindowsInformationProtection) (*WindowsInformationProtection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WindowsInformationProtectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WindowsInformationProtectionAppLearningSummary
type WindowsInformationProtectionAppLearningSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionAppLearningSummaryRequestBuilder) Request() *WindowsInformationProtectionAppLearningSummaryRequest {
	return &WindowsInformationProtectionAppLearningSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WindowsInformationProtectionAppLearningSummaryRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionAppLearningSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionAppLearningSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WindowsInformationProtectionAppLearningSummaryRequest) Get() (*WindowsInformationProtectionAppLearningSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WindowsInformationProtectionAppLearningSummaryRequest) Update(reqObj *WindowsInformationProtectionAppLearningSummary) (*WindowsInformationProtectionAppLearningSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WindowsInformationProtectionAppLearningSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WindowsInformationProtectionAppLockerFile
type WindowsInformationProtectionAppLockerFileRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionAppLockerFileRequestBuilder) Request() *WindowsInformationProtectionAppLockerFileRequest {
	return &WindowsInformationProtectionAppLockerFileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WindowsInformationProtectionAppLockerFileRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionAppLockerFileRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionAppLockerFile, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WindowsInformationProtectionAppLockerFileRequest) Get() (*WindowsInformationProtectionAppLockerFile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WindowsInformationProtectionAppLockerFileRequest) Update(reqObj *WindowsInformationProtectionAppLockerFile) (*WindowsInformationProtectionAppLockerFile, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WindowsInformationProtectionAppLockerFileRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WindowsInformationProtectionNetworkLearningSummary
type WindowsInformationProtectionNetworkLearningSummaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionNetworkLearningSummaryRequestBuilder) Request() *WindowsInformationProtectionNetworkLearningSummaryRequest {
	return &WindowsInformationProtectionNetworkLearningSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WindowsInformationProtectionNetworkLearningSummaryRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionNetworkLearningSummaryRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionNetworkLearningSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WindowsInformationProtectionNetworkLearningSummaryRequest) Get() (*WindowsInformationProtectionNetworkLearningSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WindowsInformationProtectionNetworkLearningSummaryRequest) Update(reqObj *WindowsInformationProtectionNetworkLearningSummary) (*WindowsInformationProtectionNetworkLearningSummary, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WindowsInformationProtectionNetworkLearningSummaryRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WindowsInformationProtectionPolicy
type WindowsInformationProtectionPolicyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionPolicyRequestBuilder) Request() *WindowsInformationProtectionPolicyRequest {
	return &WindowsInformationProtectionPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WindowsInformationProtectionPolicyRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionPolicyRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionPolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WindowsInformationProtectionPolicyRequest) Get() (*WindowsInformationProtectionPolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WindowsInformationProtectionPolicyRequest) Update(reqObj *WindowsInformationProtectionPolicy) (*WindowsInformationProtectionPolicy, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WindowsInformationProtectionPolicyRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// Workbook
type WorkbookRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRequestBuilder) Request() *WorkbookRequest {
	return &WorkbookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookRequest struct{ BaseRequest }

//
func (r *WorkbookRequest) Do(method, path string, reqObj interface{}) (resObj *Workbook, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRequest) Get() (*Workbook, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookRequest) Update(reqObj *Workbook) (*Workbook, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookApplication
type WorkbookApplicationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookApplicationRequestBuilder) Request() *WorkbookApplicationRequest {
	return &WorkbookApplicationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookApplicationRequest struct{ BaseRequest }

//
func (r *WorkbookApplicationRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookApplication, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookApplicationRequest) Get() (*WorkbookApplication, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookApplicationRequest) Update(reqObj *WorkbookApplication) (*WorkbookApplication, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookApplicationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChart
type WorkbookChartRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartRequestBuilder) Request() *WorkbookChartRequest {
	return &WorkbookChartRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartRequest struct{ BaseRequest }

//
func (r *WorkbookChartRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChart, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartRequest) Get() (*WorkbookChart, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartRequest) Update(reqObj *WorkbookChart) (*WorkbookChart, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartAreaFormat
type WorkbookChartAreaFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartAreaFormatRequestBuilder) Request() *WorkbookChartAreaFormatRequest {
	return &WorkbookChartAreaFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartAreaFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartAreaFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartAreaFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartAreaFormatRequest) Get() (*WorkbookChartAreaFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartAreaFormatRequest) Update(reqObj *WorkbookChartAreaFormat) (*WorkbookChartAreaFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartAreaFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartAxes
type WorkbookChartAxesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartAxesRequestBuilder) Request() *WorkbookChartAxesRequest {
	return &WorkbookChartAxesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartAxesRequest struct{ BaseRequest }

//
func (r *WorkbookChartAxesRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartAxes, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartAxesRequest) Get() (*WorkbookChartAxes, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartAxesRequest) Update(reqObj *WorkbookChartAxes) (*WorkbookChartAxes, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartAxesRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartAxis
type WorkbookChartAxisRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartAxisRequestBuilder) Request() *WorkbookChartAxisRequest {
	return &WorkbookChartAxisRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartAxisRequest struct{ BaseRequest }

//
func (r *WorkbookChartAxisRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartAxis, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartAxisRequest) Get() (*WorkbookChartAxis, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartAxisRequest) Update(reqObj *WorkbookChartAxis) (*WorkbookChartAxis, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartAxisRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartAxisFormat
type WorkbookChartAxisFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartAxisFormatRequestBuilder) Request() *WorkbookChartAxisFormatRequest {
	return &WorkbookChartAxisFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartAxisFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartAxisFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartAxisFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartAxisFormatRequest) Get() (*WorkbookChartAxisFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartAxisFormatRequest) Update(reqObj *WorkbookChartAxisFormat) (*WorkbookChartAxisFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartAxisFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartAxisTitle
type WorkbookChartAxisTitleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartAxisTitleRequestBuilder) Request() *WorkbookChartAxisTitleRequest {
	return &WorkbookChartAxisTitleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartAxisTitleRequest struct{ BaseRequest }

//
func (r *WorkbookChartAxisTitleRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartAxisTitle, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartAxisTitleRequest) Get() (*WorkbookChartAxisTitle, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartAxisTitleRequest) Update(reqObj *WorkbookChartAxisTitle) (*WorkbookChartAxisTitle, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartAxisTitleRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartAxisTitleFormat
type WorkbookChartAxisTitleFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartAxisTitleFormatRequestBuilder) Request() *WorkbookChartAxisTitleFormatRequest {
	return &WorkbookChartAxisTitleFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartAxisTitleFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartAxisTitleFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartAxisTitleFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartAxisTitleFormatRequest) Get() (*WorkbookChartAxisTitleFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartAxisTitleFormatRequest) Update(reqObj *WorkbookChartAxisTitleFormat) (*WorkbookChartAxisTitleFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartAxisTitleFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartDataLabelFormat
type WorkbookChartDataLabelFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartDataLabelFormatRequestBuilder) Request() *WorkbookChartDataLabelFormatRequest {
	return &WorkbookChartDataLabelFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartDataLabelFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartDataLabelFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartDataLabelFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartDataLabelFormatRequest) Get() (*WorkbookChartDataLabelFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartDataLabelFormatRequest) Update(reqObj *WorkbookChartDataLabelFormat) (*WorkbookChartDataLabelFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartDataLabelFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartDataLabels
type WorkbookChartDataLabelsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartDataLabelsRequestBuilder) Request() *WorkbookChartDataLabelsRequest {
	return &WorkbookChartDataLabelsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartDataLabelsRequest struct{ BaseRequest }

//
func (r *WorkbookChartDataLabelsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartDataLabels, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartDataLabelsRequest) Get() (*WorkbookChartDataLabels, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartDataLabelsRequest) Update(reqObj *WorkbookChartDataLabels) (*WorkbookChartDataLabels, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartDataLabelsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartFill
type WorkbookChartFillRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartFillRequestBuilder) Request() *WorkbookChartFillRequest {
	return &WorkbookChartFillRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartFillRequest struct{ BaseRequest }

//
func (r *WorkbookChartFillRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartFill, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartFillRequest) Get() (*WorkbookChartFill, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartFillRequest) Update(reqObj *WorkbookChartFill) (*WorkbookChartFill, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartFillRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartFont
type WorkbookChartFontRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartFontRequestBuilder) Request() *WorkbookChartFontRequest {
	return &WorkbookChartFontRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartFontRequest struct{ BaseRequest }

//
func (r *WorkbookChartFontRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartFont, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartFontRequest) Get() (*WorkbookChartFont, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartFontRequest) Update(reqObj *WorkbookChartFont) (*WorkbookChartFont, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartFontRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartGridlines
type WorkbookChartGridlinesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartGridlinesRequestBuilder) Request() *WorkbookChartGridlinesRequest {
	return &WorkbookChartGridlinesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartGridlinesRequest struct{ BaseRequest }

//
func (r *WorkbookChartGridlinesRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartGridlines, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartGridlinesRequest) Get() (*WorkbookChartGridlines, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartGridlinesRequest) Update(reqObj *WorkbookChartGridlines) (*WorkbookChartGridlines, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartGridlinesRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartGridlinesFormat
type WorkbookChartGridlinesFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartGridlinesFormatRequestBuilder) Request() *WorkbookChartGridlinesFormatRequest {
	return &WorkbookChartGridlinesFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartGridlinesFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartGridlinesFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartGridlinesFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartGridlinesFormatRequest) Get() (*WorkbookChartGridlinesFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartGridlinesFormatRequest) Update(reqObj *WorkbookChartGridlinesFormat) (*WorkbookChartGridlinesFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartGridlinesFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartLegend
type WorkbookChartLegendRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartLegendRequestBuilder) Request() *WorkbookChartLegendRequest {
	return &WorkbookChartLegendRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartLegendRequest struct{ BaseRequest }

//
func (r *WorkbookChartLegendRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartLegend, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartLegendRequest) Get() (*WorkbookChartLegend, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartLegendRequest) Update(reqObj *WorkbookChartLegend) (*WorkbookChartLegend, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartLegendRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartLegendFormat
type WorkbookChartLegendFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartLegendFormatRequestBuilder) Request() *WorkbookChartLegendFormatRequest {
	return &WorkbookChartLegendFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartLegendFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartLegendFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartLegendFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartLegendFormatRequest) Get() (*WorkbookChartLegendFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartLegendFormatRequest) Update(reqObj *WorkbookChartLegendFormat) (*WorkbookChartLegendFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartLegendFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartLineFormat
type WorkbookChartLineFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartLineFormatRequestBuilder) Request() *WorkbookChartLineFormatRequest {
	return &WorkbookChartLineFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartLineFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartLineFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartLineFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartLineFormatRequest) Get() (*WorkbookChartLineFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartLineFormatRequest) Update(reqObj *WorkbookChartLineFormat) (*WorkbookChartLineFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartLineFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartPoint
type WorkbookChartPointRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartPointRequestBuilder) Request() *WorkbookChartPointRequest {
	return &WorkbookChartPointRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartPointRequest struct{ BaseRequest }

//
func (r *WorkbookChartPointRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartPoint, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartPointRequest) Get() (*WorkbookChartPoint, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartPointRequest) Update(reqObj *WorkbookChartPoint) (*WorkbookChartPoint, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartPointRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartPointFormat
type WorkbookChartPointFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartPointFormatRequestBuilder) Request() *WorkbookChartPointFormatRequest {
	return &WorkbookChartPointFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartPointFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartPointFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartPointFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartPointFormatRequest) Get() (*WorkbookChartPointFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartPointFormatRequest) Update(reqObj *WorkbookChartPointFormat) (*WorkbookChartPointFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartPointFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartSeries
type WorkbookChartSeriesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartSeriesRequestBuilder) Request() *WorkbookChartSeriesRequest {
	return &WorkbookChartSeriesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartSeriesRequest struct{ BaseRequest }

//
func (r *WorkbookChartSeriesRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartSeries, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartSeriesRequest) Get() (*WorkbookChartSeries, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartSeriesRequest) Update(reqObj *WorkbookChartSeries) (*WorkbookChartSeries, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartSeriesRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartSeriesFormat
type WorkbookChartSeriesFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartSeriesFormatRequestBuilder) Request() *WorkbookChartSeriesFormatRequest {
	return &WorkbookChartSeriesFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartSeriesFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartSeriesFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartSeriesFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartSeriesFormatRequest) Get() (*WorkbookChartSeriesFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartSeriesFormatRequest) Update(reqObj *WorkbookChartSeriesFormat) (*WorkbookChartSeriesFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartSeriesFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartTitle
type WorkbookChartTitleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartTitleRequestBuilder) Request() *WorkbookChartTitleRequest {
	return &WorkbookChartTitleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartTitleRequest struct{ BaseRequest }

//
func (r *WorkbookChartTitleRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartTitle, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartTitleRequest) Get() (*WorkbookChartTitle, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartTitleRequest) Update(reqObj *WorkbookChartTitle) (*WorkbookChartTitle, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartTitleRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookChartTitleFormat
type WorkbookChartTitleFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartTitleFormatRequestBuilder) Request() *WorkbookChartTitleFormatRequest {
	return &WorkbookChartTitleFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookChartTitleFormatRequest struct{ BaseRequest }

//
func (r *WorkbookChartTitleFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartTitleFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartTitleFormatRequest) Get() (*WorkbookChartTitleFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookChartTitleFormatRequest) Update(reqObj *WorkbookChartTitleFormat) (*WorkbookChartTitleFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookChartTitleFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookComment
type WorkbookCommentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookCommentRequestBuilder) Request() *WorkbookCommentRequest {
	return &WorkbookCommentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookCommentRequest struct{ BaseRequest }

//
func (r *WorkbookCommentRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookComment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookCommentRequest) Get() (*WorkbookComment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookCommentRequest) Update(reqObj *WorkbookComment) (*WorkbookComment, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookCommentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookCommentReply
type WorkbookCommentReplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookCommentReplyRequestBuilder) Request() *WorkbookCommentReplyRequest {
	return &WorkbookCommentReplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookCommentReplyRequest struct{ BaseRequest }

//
func (r *WorkbookCommentReplyRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookCommentReply, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookCommentReplyRequest) Get() (*WorkbookCommentReply, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookCommentReplyRequest) Update(reqObj *WorkbookCommentReply) (*WorkbookCommentReply, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookCommentReplyRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookFilter
type WorkbookFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterRequestBuilder) Request() *WorkbookFilterRequest {
	return &WorkbookFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFilter, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFilterRequest) Get() (*WorkbookFilter, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookFilterRequest) Update(reqObj *WorkbookFilter) (*WorkbookFilter, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookFilterRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookFormatProtection
type WorkbookFormatProtectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFormatProtectionRequestBuilder) Request() *WorkbookFormatProtectionRequest {
	return &WorkbookFormatProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookFormatProtectionRequest struct{ BaseRequest }

//
func (r *WorkbookFormatProtectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFormatProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFormatProtectionRequest) Get() (*WorkbookFormatProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookFormatProtectionRequest) Update(reqObj *WorkbookFormatProtection) (*WorkbookFormatProtection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookFormatProtectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookFunctions
type WorkbookFunctionsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRequestBuilder) Request() *WorkbookFunctionsRequest {
	return &WorkbookFunctionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookFunctionsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctions, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRequest) Get() (*WorkbookFunctions, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookFunctionsRequest) Update(reqObj *WorkbookFunctions) (*WorkbookFunctions, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookFunctionsRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookNamedItem
type WorkbookNamedItemRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookNamedItemRequestBuilder) Request() *WorkbookNamedItemRequest {
	return &WorkbookNamedItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookNamedItemRequest struct{ BaseRequest }

//
func (r *WorkbookNamedItemRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookNamedItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookNamedItemRequest) Get() (*WorkbookNamedItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookNamedItemRequest) Update(reqObj *WorkbookNamedItem) (*WorkbookNamedItem, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookNamedItemRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookPivotTable
type WorkbookPivotTableRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookPivotTableRequestBuilder) Request() *WorkbookPivotTableRequest {
	return &WorkbookPivotTableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookPivotTableRequest struct{ BaseRequest }

//
func (r *WorkbookPivotTableRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookPivotTable, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookPivotTableRequest) Get() (*WorkbookPivotTable, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookPivotTableRequest) Update(reqObj *WorkbookPivotTable) (*WorkbookPivotTable, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookPivotTableRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookRange
type WorkbookRangeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeRequestBuilder) Request() *WorkbookRangeRequest {
	return &WorkbookRangeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookRangeRequest struct{ BaseRequest }

//
func (r *WorkbookRangeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRange, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeRequest) Get() (*WorkbookRange, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookRangeRequest) Update(reqObj *WorkbookRange) (*WorkbookRange, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookRangeRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookRangeBorder
type WorkbookRangeBorderRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeBorderRequestBuilder) Request() *WorkbookRangeBorderRequest {
	return &WorkbookRangeBorderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookRangeBorderRequest struct{ BaseRequest }

//
func (r *WorkbookRangeBorderRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRangeBorder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeBorderRequest) Get() (*WorkbookRangeBorder, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookRangeBorderRequest) Update(reqObj *WorkbookRangeBorder) (*WorkbookRangeBorder, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookRangeBorderRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookRangeFill
type WorkbookRangeFillRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeFillRequestBuilder) Request() *WorkbookRangeFillRequest {
	return &WorkbookRangeFillRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookRangeFillRequest struct{ BaseRequest }

//
func (r *WorkbookRangeFillRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRangeFill, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeFillRequest) Get() (*WorkbookRangeFill, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookRangeFillRequest) Update(reqObj *WorkbookRangeFill) (*WorkbookRangeFill, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookRangeFillRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookRangeFont
type WorkbookRangeFontRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeFontRequestBuilder) Request() *WorkbookRangeFontRequest {
	return &WorkbookRangeFontRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookRangeFontRequest struct{ BaseRequest }

//
func (r *WorkbookRangeFontRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRangeFont, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeFontRequest) Get() (*WorkbookRangeFont, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookRangeFontRequest) Update(reqObj *WorkbookRangeFont) (*WorkbookRangeFont, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookRangeFontRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookRangeFormat
type WorkbookRangeFormatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeFormatRequestBuilder) Request() *WorkbookRangeFormatRequest {
	return &WorkbookRangeFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookRangeFormatRequest struct{ BaseRequest }

//
func (r *WorkbookRangeFormatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRangeFormat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeFormatRequest) Get() (*WorkbookRangeFormat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookRangeFormatRequest) Update(reqObj *WorkbookRangeFormat) (*WorkbookRangeFormat, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookRangeFormatRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookRangeSort
type WorkbookRangeSortRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeSortRequestBuilder) Request() *WorkbookRangeSortRequest {
	return &WorkbookRangeSortRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookRangeSortRequest struct{ BaseRequest }

//
func (r *WorkbookRangeSortRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRangeSort, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeSortRequest) Get() (*WorkbookRangeSort, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookRangeSortRequest) Update(reqObj *WorkbookRangeSort) (*WorkbookRangeSort, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookRangeSortRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookRangeView
type WorkbookRangeViewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeViewRequestBuilder) Request() *WorkbookRangeViewRequest {
	return &WorkbookRangeViewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookRangeViewRequest struct{ BaseRequest }

//
func (r *WorkbookRangeViewRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRangeView, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeViewRequest) Get() (*WorkbookRangeView, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookRangeViewRequest) Update(reqObj *WorkbookRangeView) (*WorkbookRangeView, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookRangeViewRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookTable
type WorkbookTableRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableRequestBuilder) Request() *WorkbookTableRequest {
	return &WorkbookTableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookTableRequest struct{ BaseRequest }

//
func (r *WorkbookTableRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTable, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableRequest) Get() (*WorkbookTable, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookTableRequest) Update(reqObj *WorkbookTable) (*WorkbookTable, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookTableRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookTableColumn
type WorkbookTableColumnRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableColumnRequestBuilder) Request() *WorkbookTableColumnRequest {
	return &WorkbookTableColumnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookTableColumnRequest struct{ BaseRequest }

//
func (r *WorkbookTableColumnRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTableColumn, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableColumnRequest) Get() (*WorkbookTableColumn, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookTableColumnRequest) Update(reqObj *WorkbookTableColumn) (*WorkbookTableColumn, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookTableColumnRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookTableRow
type WorkbookTableRowRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableRowRequestBuilder) Request() *WorkbookTableRowRequest {
	return &WorkbookTableRowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookTableRowRequest struct{ BaseRequest }

//
func (r *WorkbookTableRowRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTableRow, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableRowRequest) Get() (*WorkbookTableRow, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookTableRowRequest) Update(reqObj *WorkbookTableRow) (*WorkbookTableRow, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookTableRowRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookTableSort
type WorkbookTableSortRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableSortRequestBuilder) Request() *WorkbookTableSortRequest {
	return &WorkbookTableSortRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookTableSortRequest struct{ BaseRequest }

//
func (r *WorkbookTableSortRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTableSort, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableSortRequest) Get() (*WorkbookTableSort, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookTableSortRequest) Update(reqObj *WorkbookTableSort) (*WorkbookTableSort, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookTableSortRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookWorksheet
type WorkbookWorksheetRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetRequestBuilder) Request() *WorkbookWorksheetRequest {
	return &WorkbookWorksheetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookWorksheetRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookWorksheet, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookWorksheetRequest) Get() (*WorkbookWorksheet, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookWorksheetRequest) Update(reqObj *WorkbookWorksheet) (*WorkbookWorksheet, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookWorksheetRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// WorkbookWorksheetProtection
type WorkbookWorksheetProtectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetProtectionRequestBuilder) Request() *WorkbookWorksheetProtectionRequest {
	return &WorkbookWorksheetProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
type WorkbookWorksheetProtectionRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetProtectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookWorksheetProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookWorksheetProtectionRequest) Get() (*WorkbookWorksheetProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

//
func (r *WorkbookWorksheetProtectionRequest) Update(reqObj *WorkbookWorksheetProtection) (*WorkbookWorksheetProtection, error) {
	return r.Do("PATCH", "", reqObj)
}

//
func (r *WorkbookWorksheetProtectionRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

//
func (b *GraphServiceRequestBuilder) CertificateBasedAuthConfiguration() *GraphServiceCertificateBasedAuthConfigurationCollectionRequestBuilder {
	bb := &GraphServiceCertificateBasedAuthConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/certificateBasedAuthConfiguration"
	return bb
}

//
type GraphServiceCertificateBasedAuthConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceCertificateBasedAuthConfigurationCollectionRequestBuilder) Request() *GraphServiceCertificateBasedAuthConfigurationCollectionRequest {
	return &GraphServiceCertificateBasedAuthConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceCertificateBasedAuthConfigurationCollectionRequestBuilder) ID(id string) *CertificateBasedAuthConfigurationRequestBuilder {
	bb := &CertificateBasedAuthConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceCertificateBasedAuthConfigurationCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceCertificateBasedAuthConfigurationCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *CertificateBasedAuthConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceCertificateBasedAuthConfigurationCollectionRequest) Paging(method, path string, obj interface{}) ([]CertificateBasedAuthConfiguration, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []CertificateBasedAuthConfiguration
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []CertificateBasedAuthConfiguration
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceCertificateBasedAuthConfigurationCollectionRequest) Get() ([]CertificateBasedAuthConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceCertificateBasedAuthConfigurationCollectionRequest) Add(reqObj *CertificateBasedAuthConfiguration) (*CertificateBasedAuthConfiguration, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Contracts() *GraphServiceContractsCollectionRequestBuilder {
	bb := &GraphServiceContractsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/contracts"
	return bb
}

//
type GraphServiceContractsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceContractsCollectionRequestBuilder) Request() *GraphServiceContractsCollectionRequest {
	return &GraphServiceContractsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceContractsCollectionRequestBuilder) ID(id string) *ContractRequestBuilder {
	bb := &ContractRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceContractsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceContractsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Contract, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceContractsCollectionRequest) Paging(method, path string, obj interface{}) ([]Contract, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Contract
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Contract
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceContractsCollectionRequest) Get() ([]Contract, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceContractsCollectionRequest) Add(reqObj *Contract) (*Contract, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) DataPolicyOperations() *GraphServiceDataPolicyOperationsCollectionRequestBuilder {
	bb := &GraphServiceDataPolicyOperationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/dataPolicyOperations"
	return bb
}

//
type GraphServiceDataPolicyOperationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceDataPolicyOperationsCollectionRequestBuilder) Request() *GraphServiceDataPolicyOperationsCollectionRequest {
	return &GraphServiceDataPolicyOperationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceDataPolicyOperationsCollectionRequestBuilder) ID(id string) *DataPolicyOperationRequestBuilder {
	bb := &DataPolicyOperationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceDataPolicyOperationsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceDataPolicyOperationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DataPolicyOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceDataPolicyOperationsCollectionRequest) Paging(method, path string, obj interface{}) ([]DataPolicyOperation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DataPolicyOperation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DataPolicyOperation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceDataPolicyOperationsCollectionRequest) Get() ([]DataPolicyOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceDataPolicyOperationsCollectionRequest) Add(reqObj *DataPolicyOperation) (*DataPolicyOperation, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Devices() *GraphServiceDevicesCollectionRequestBuilder {
	bb := &GraphServiceDevicesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/devices"
	return bb
}

//
type GraphServiceDevicesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceDevicesCollectionRequestBuilder) Request() *GraphServiceDevicesCollectionRequest {
	return &GraphServiceDevicesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceDevicesCollectionRequestBuilder) ID(id string) *DeviceRequestBuilder {
	bb := &DeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceDevicesCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceDevicesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Device, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceDevicesCollectionRequest) Paging(method, path string, obj interface{}) ([]Device, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Device
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Device
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceDevicesCollectionRequest) Get() ([]Device, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceDevicesCollectionRequest) Add(reqObj *Device) (*Device, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) DirectoryObjects() *GraphServiceDirectoryObjectsCollectionRequestBuilder {
	bb := &GraphServiceDirectoryObjectsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/directoryObjects"
	return bb
}

//
type GraphServiceDirectoryObjectsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceDirectoryObjectsCollectionRequestBuilder) Request() *GraphServiceDirectoryObjectsCollectionRequest {
	return &GraphServiceDirectoryObjectsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceDirectoryObjectsCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceDirectoryObjectsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceDirectoryObjectsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceDirectoryObjectsCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceDirectoryObjectsCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceDirectoryObjectsCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) DirectoryRoleTemplates() *GraphServiceDirectoryRoleTemplatesCollectionRequestBuilder {
	bb := &GraphServiceDirectoryRoleTemplatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/directoryRoleTemplates"
	return bb
}

//
type GraphServiceDirectoryRoleTemplatesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceDirectoryRoleTemplatesCollectionRequestBuilder) Request() *GraphServiceDirectoryRoleTemplatesCollectionRequest {
	return &GraphServiceDirectoryRoleTemplatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceDirectoryRoleTemplatesCollectionRequestBuilder) ID(id string) *DirectoryRoleTemplateRequestBuilder {
	bb := &DirectoryRoleTemplateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceDirectoryRoleTemplatesCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceDirectoryRoleTemplatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryRoleTemplate, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceDirectoryRoleTemplatesCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryRoleTemplate, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryRoleTemplate
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryRoleTemplate
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceDirectoryRoleTemplatesCollectionRequest) Get() ([]DirectoryRoleTemplate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceDirectoryRoleTemplatesCollectionRequest) Add(reqObj *DirectoryRoleTemplate) (*DirectoryRoleTemplate, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) DirectoryRoles() *GraphServiceDirectoryRolesCollectionRequestBuilder {
	bb := &GraphServiceDirectoryRolesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/directoryRoles"
	return bb
}

//
type GraphServiceDirectoryRolesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceDirectoryRolesCollectionRequestBuilder) Request() *GraphServiceDirectoryRolesCollectionRequest {
	return &GraphServiceDirectoryRolesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceDirectoryRolesCollectionRequestBuilder) ID(id string) *DirectoryRoleRequestBuilder {
	bb := &DirectoryRoleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceDirectoryRolesCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceDirectoryRolesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryRole, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceDirectoryRolesCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryRole, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryRole
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryRole
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceDirectoryRolesCollectionRequest) Get() ([]DirectoryRole, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceDirectoryRolesCollectionRequest) Add(reqObj *DirectoryRole) (*DirectoryRole, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) DomainDnsRecords() *GraphServiceDomainDnsRecordsCollectionRequestBuilder {
	bb := &GraphServiceDomainDnsRecordsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/domainDnsRecords"
	return bb
}

//
type GraphServiceDomainDnsRecordsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceDomainDnsRecordsCollectionRequestBuilder) Request() *GraphServiceDomainDnsRecordsCollectionRequest {
	return &GraphServiceDomainDnsRecordsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceDomainDnsRecordsCollectionRequestBuilder) ID(id string) *DomainDnsRecordRequestBuilder {
	bb := &DomainDnsRecordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceDomainDnsRecordsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceDomainDnsRecordsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DomainDnsRecord, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceDomainDnsRecordsCollectionRequest) Paging(method, path string, obj interface{}) ([]DomainDnsRecord, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DomainDnsRecord
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DomainDnsRecord
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceDomainDnsRecordsCollectionRequest) Get() ([]DomainDnsRecord, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceDomainDnsRecordsCollectionRequest) Add(reqObj *DomainDnsRecord) (*DomainDnsRecord, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Domains() *GraphServiceDomainsCollectionRequestBuilder {
	bb := &GraphServiceDomainsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/domains"
	return bb
}

//
type GraphServiceDomainsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceDomainsCollectionRequestBuilder) Request() *GraphServiceDomainsCollectionRequest {
	return &GraphServiceDomainsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceDomainsCollectionRequestBuilder) ID(id string) *DomainRequestBuilder {
	bb := &DomainRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceDomainsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceDomainsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Domain, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceDomainsCollectionRequest) Paging(method, path string, obj interface{}) ([]Domain, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Domain
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Domain
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceDomainsCollectionRequest) Get() ([]Domain, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceDomainsCollectionRequest) Add(reqObj *Domain) (*Domain, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Drives() *GraphServiceDrivesCollectionRequestBuilder {
	bb := &GraphServiceDrivesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drives"
	return bb
}

//
type GraphServiceDrivesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceDrivesCollectionRequestBuilder) Request() *GraphServiceDrivesCollectionRequest {
	return &GraphServiceDrivesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceDrivesCollectionRequestBuilder) ID(id string) *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceDrivesCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceDrivesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Drive, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceDrivesCollectionRequest) Paging(method, path string, obj interface{}) ([]Drive, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Drive
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Drive
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceDrivesCollectionRequest) Get() ([]Drive, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceDrivesCollectionRequest) Add(reqObj *Drive) (*Drive, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) GroupLifecyclePolicies() *GraphServiceGroupLifecyclePoliciesCollectionRequestBuilder {
	bb := &GraphServiceGroupLifecyclePoliciesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/groupLifecyclePolicies"
	return bb
}

//
type GraphServiceGroupLifecyclePoliciesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceGroupLifecyclePoliciesCollectionRequestBuilder) Request() *GraphServiceGroupLifecyclePoliciesCollectionRequest {
	return &GraphServiceGroupLifecyclePoliciesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceGroupLifecyclePoliciesCollectionRequestBuilder) ID(id string) *GroupLifecyclePolicyRequestBuilder {
	bb := &GroupLifecyclePolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceGroupLifecyclePoliciesCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceGroupLifecyclePoliciesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *GroupLifecyclePolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceGroupLifecyclePoliciesCollectionRequest) Paging(method, path string, obj interface{}) ([]GroupLifecyclePolicy, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []GroupLifecyclePolicy
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []GroupLifecyclePolicy
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceGroupLifecyclePoliciesCollectionRequest) Get() ([]GroupLifecyclePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceGroupLifecyclePoliciesCollectionRequest) Add(reqObj *GroupLifecyclePolicy) (*GroupLifecyclePolicy, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) GroupSettingTemplates() *GraphServiceGroupSettingTemplatesCollectionRequestBuilder {
	bb := &GraphServiceGroupSettingTemplatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/groupSettingTemplates"
	return bb
}

//
type GraphServiceGroupSettingTemplatesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceGroupSettingTemplatesCollectionRequestBuilder) Request() *GraphServiceGroupSettingTemplatesCollectionRequest {
	return &GraphServiceGroupSettingTemplatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceGroupSettingTemplatesCollectionRequestBuilder) ID(id string) *GroupSettingTemplateRequestBuilder {
	bb := &GroupSettingTemplateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceGroupSettingTemplatesCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceGroupSettingTemplatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *GroupSettingTemplate, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceGroupSettingTemplatesCollectionRequest) Paging(method, path string, obj interface{}) ([]GroupSettingTemplate, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []GroupSettingTemplate
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []GroupSettingTemplate
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceGroupSettingTemplatesCollectionRequest) Get() ([]GroupSettingTemplate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceGroupSettingTemplatesCollectionRequest) Add(reqObj *GroupSettingTemplate) (*GroupSettingTemplate, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) GroupSettings() *GraphServiceGroupSettingsCollectionRequestBuilder {
	bb := &GraphServiceGroupSettingsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/groupSettings"
	return bb
}

//
type GraphServiceGroupSettingsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceGroupSettingsCollectionRequestBuilder) Request() *GraphServiceGroupSettingsCollectionRequest {
	return &GraphServiceGroupSettingsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceGroupSettingsCollectionRequestBuilder) ID(id string) *GroupSettingRequestBuilder {
	bb := &GroupSettingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceGroupSettingsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceGroupSettingsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *GroupSetting, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceGroupSettingsCollectionRequest) Paging(method, path string, obj interface{}) ([]GroupSetting, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []GroupSetting
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []GroupSetting
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceGroupSettingsCollectionRequest) Get() ([]GroupSetting, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceGroupSettingsCollectionRequest) Add(reqObj *GroupSetting) (*GroupSetting, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Groups() *GraphServiceGroupsCollectionRequestBuilder {
	bb := &GraphServiceGroupsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/groups"
	return bb
}

//
type GraphServiceGroupsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceGroupsCollectionRequestBuilder) Request() *GraphServiceGroupsCollectionRequest {
	return &GraphServiceGroupsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceGroupsCollectionRequestBuilder) ID(id string) *GroupRequestBuilder {
	bb := &GroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceGroupsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceGroupsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Group, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceGroupsCollectionRequest) Paging(method, path string, obj interface{}) ([]Group, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Group
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Group
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceGroupsCollectionRequest) Get() ([]Group, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceGroupsCollectionRequest) Add(reqObj *Group) (*Group, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) IdentityProviders() *GraphServiceIdentityProvidersCollectionRequestBuilder {
	bb := &GraphServiceIdentityProvidersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/identityProviders"
	return bb
}

//
type GraphServiceIdentityProvidersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceIdentityProvidersCollectionRequestBuilder) Request() *GraphServiceIdentityProvidersCollectionRequest {
	return &GraphServiceIdentityProvidersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceIdentityProvidersCollectionRequestBuilder) ID(id string) *IdentityProviderRequestBuilder {
	bb := &IdentityProviderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceIdentityProvidersCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceIdentityProvidersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *IdentityProvider, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceIdentityProvidersCollectionRequest) Paging(method, path string, obj interface{}) ([]IdentityProvider, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []IdentityProvider
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []IdentityProvider
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceIdentityProvidersCollectionRequest) Get() ([]IdentityProvider, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceIdentityProvidersCollectionRequest) Add(reqObj *IdentityProvider) (*IdentityProvider, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Invitations() *GraphServiceInvitationsCollectionRequestBuilder {
	bb := &GraphServiceInvitationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/invitations"
	return bb
}

//
type GraphServiceInvitationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceInvitationsCollectionRequestBuilder) Request() *GraphServiceInvitationsCollectionRequest {
	return &GraphServiceInvitationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceInvitationsCollectionRequestBuilder) ID(id string) *InvitationRequestBuilder {
	bb := &InvitationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceInvitationsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceInvitationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Invitation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceInvitationsCollectionRequest) Paging(method, path string, obj interface{}) ([]Invitation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Invitation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Invitation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceInvitationsCollectionRequest) Get() ([]Invitation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceInvitationsCollectionRequest) Add(reqObj *Invitation) (*Invitation, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Organization() *GraphServiceOrganizationCollectionRequestBuilder {
	bb := &GraphServiceOrganizationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/organization"
	return bb
}

//
type GraphServiceOrganizationCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceOrganizationCollectionRequestBuilder) Request() *GraphServiceOrganizationCollectionRequest {
	return &GraphServiceOrganizationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceOrganizationCollectionRequestBuilder) ID(id string) *OrganizationRequestBuilder {
	bb := &OrganizationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceOrganizationCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceOrganizationCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Organization, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceOrganizationCollectionRequest) Paging(method, path string, obj interface{}) ([]Organization, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Organization
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Organization
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceOrganizationCollectionRequest) Get() ([]Organization, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceOrganizationCollectionRequest) Add(reqObj *Organization) (*Organization, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) SchemaExtensions() *GraphServiceSchemaExtensionsCollectionRequestBuilder {
	bb := &GraphServiceSchemaExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/schemaExtensions"
	return bb
}

//
type GraphServiceSchemaExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceSchemaExtensionsCollectionRequestBuilder) Request() *GraphServiceSchemaExtensionsCollectionRequest {
	return &GraphServiceSchemaExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceSchemaExtensionsCollectionRequestBuilder) ID(id string) *SchemaExtensionRequestBuilder {
	bb := &SchemaExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceSchemaExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceSchemaExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SchemaExtension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceSchemaExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]SchemaExtension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SchemaExtension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SchemaExtension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceSchemaExtensionsCollectionRequest) Get() ([]SchemaExtension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceSchemaExtensionsCollectionRequest) Add(reqObj *SchemaExtension) (*SchemaExtension, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Shares() *GraphServiceSharesCollectionRequestBuilder {
	bb := &GraphServiceSharesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/shares"
	return bb
}

//
type GraphServiceSharesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceSharesCollectionRequestBuilder) Request() *GraphServiceSharesCollectionRequest {
	return &GraphServiceSharesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceSharesCollectionRequestBuilder) ID(id string) *SharedDriveItemRequestBuilder {
	bb := &SharedDriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceSharesCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceSharesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SharedDriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceSharesCollectionRequest) Paging(method, path string, obj interface{}) ([]SharedDriveItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SharedDriveItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SharedDriveItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceSharesCollectionRequest) Get() ([]SharedDriveItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceSharesCollectionRequest) Add(reqObj *SharedDriveItem) (*SharedDriveItem, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Sites() *GraphServiceSitesCollectionRequestBuilder {
	bb := &GraphServiceSitesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sites"
	return bb
}

//
type GraphServiceSitesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceSitesCollectionRequestBuilder) Request() *GraphServiceSitesCollectionRequest {
	return &GraphServiceSitesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceSitesCollectionRequestBuilder) ID(id string) *SiteRequestBuilder {
	bb := &SiteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceSitesCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceSitesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Site, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceSitesCollectionRequest) Paging(method, path string, obj interface{}) ([]Site, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Site
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Site
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceSitesCollectionRequest) Get() ([]Site, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceSitesCollectionRequest) Add(reqObj *Site) (*Site, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) SubscribedSkus() *GraphServiceSubscribedSkusCollectionRequestBuilder {
	bb := &GraphServiceSubscribedSkusCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/subscribedSkus"
	return bb
}

//
type GraphServiceSubscribedSkusCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceSubscribedSkusCollectionRequestBuilder) Request() *GraphServiceSubscribedSkusCollectionRequest {
	return &GraphServiceSubscribedSkusCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceSubscribedSkusCollectionRequestBuilder) ID(id string) *SubscribedSkuRequestBuilder {
	bb := &SubscribedSkuRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceSubscribedSkusCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceSubscribedSkusCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SubscribedSku, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceSubscribedSkusCollectionRequest) Paging(method, path string, obj interface{}) ([]SubscribedSku, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SubscribedSku
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SubscribedSku
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceSubscribedSkusCollectionRequest) Get() ([]SubscribedSku, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceSubscribedSkusCollectionRequest) Add(reqObj *SubscribedSku) (*SubscribedSku, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Subscriptions() *GraphServiceSubscriptionsCollectionRequestBuilder {
	bb := &GraphServiceSubscriptionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/subscriptions"
	return bb
}

//
type GraphServiceSubscriptionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceSubscriptionsCollectionRequestBuilder) Request() *GraphServiceSubscriptionsCollectionRequest {
	return &GraphServiceSubscriptionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceSubscriptionsCollectionRequestBuilder) ID(id string) *SubscriptionRequestBuilder {
	bb := &SubscriptionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceSubscriptionsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceSubscriptionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Subscription, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceSubscriptionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Subscription, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Subscription
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Subscription
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceSubscriptionsCollectionRequest) Get() ([]Subscription, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceSubscriptionsCollectionRequest) Add(reqObj *Subscription) (*Subscription, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Teams() *GraphServiceTeamsCollectionRequestBuilder {
	bb := &GraphServiceTeamsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/teams"
	return bb
}

//
type GraphServiceTeamsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceTeamsCollectionRequestBuilder) Request() *GraphServiceTeamsCollectionRequest {
	return &GraphServiceTeamsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceTeamsCollectionRequestBuilder) ID(id string) *TeamRequestBuilder {
	bb := &TeamRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceTeamsCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceTeamsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Team, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceTeamsCollectionRequest) Paging(method, path string, obj interface{}) ([]Team, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Team
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Team
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceTeamsCollectionRequest) Get() ([]Team, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceTeamsCollectionRequest) Add(reqObj *Team) (*Team, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Users() *GraphServiceUsersCollectionRequestBuilder {
	bb := &GraphServiceUsersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/users"
	return bb
}

//
type GraphServiceUsersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceUsersCollectionRequestBuilder) Request() *GraphServiceUsersCollectionRequest {
	return &GraphServiceUsersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceUsersCollectionRequestBuilder) ID(id string) *UserRequestBuilder {
	bb := &UserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceUsersCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceUsersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *User, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceUsersCollectionRequest) Paging(method, path string, obj interface{}) ([]User, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []User
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []User
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceUsersCollectionRequest) Get() ([]User, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceUsersCollectionRequest) Add(reqObj *User) (*User, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GraphServiceRequestBuilder) Workbooks() *GraphServiceWorkbooksCollectionRequestBuilder {
	bb := &GraphServiceWorkbooksCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/workbooks"
	return bb
}

//
type GraphServiceWorkbooksCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GraphServiceWorkbooksCollectionRequestBuilder) Request() *GraphServiceWorkbooksCollectionRequest {
	return &GraphServiceWorkbooksCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GraphServiceWorkbooksCollectionRequestBuilder) ID(id string) *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GraphServiceWorkbooksCollectionRequest struct{ BaseRequest }

//
func (r *GraphServiceWorkbooksCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GraphServiceWorkbooksCollectionRequest) Paging(method, path string, obj interface{}) ([]DriveItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DriveItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DriveItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GraphServiceWorkbooksCollectionRequest) Get() ([]DriveItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GraphServiceWorkbooksCollectionRequest) Add(reqObj *DriveItem) (*DriveItem, error) {
	return r.Do("POST", "", reqObj)
}

// Security returns service endpoint for Security
func (b *GraphServiceRequestBuilder) Security() *SecurityRequestBuilder {
	bb := &SecurityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/Security"
	return bb
}

// AppCatalogs returns service endpoint for AppCatalogs
func (b *GraphServiceRequestBuilder) AppCatalogs() *AppCatalogsRequestBuilder {
	bb := &AppCatalogsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/appCatalogs"
	return bb
}

// AuditLogs returns service endpoint for AuditLogRoot
func (b *GraphServiceRequestBuilder) AuditLogs() *AuditLogRootRequestBuilder {
	bb := &AuditLogRootRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/auditLogs"
	return bb
}

// Communications returns service endpoint for CloudCommunications
func (b *GraphServiceRequestBuilder) Communications() *CloudCommunicationsRequestBuilder {
	bb := &CloudCommunicationsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/communications"
	return bb
}

// DeviceAppManagement returns service endpoint for DeviceAppManagement
func (b *GraphServiceRequestBuilder) DeviceAppManagement() *DeviceAppManagementRequestBuilder {
	bb := &DeviceAppManagementRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceAppManagement"
	return bb
}

// DeviceManagement returns service endpoint for DeviceManagement
func (b *GraphServiceRequestBuilder) DeviceManagement() *DeviceManagementRequestBuilder {
	bb := &DeviceManagementRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceManagement"
	return bb
}

// Directory returns service endpoint for Directory
func (b *GraphServiceRequestBuilder) Directory() *DirectoryRequestBuilder {
	bb := &DirectoryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/directory"
	return bb
}

// Drive returns service endpoint for Drive
func (b *GraphServiceRequestBuilder) Drive() *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drive"
	return bb
}

// Education returns service endpoint for EducationRoot
func (b *GraphServiceRequestBuilder) Education() *EducationRootRequestBuilder {
	bb := &EducationRootRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/education"
	return bb
}

// Me returns service endpoint for User
func (b *GraphServiceRequestBuilder) Me() *UserRequestBuilder {
	bb := &UserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/me"
	return bb
}

// Planner returns service endpoint for Planner
func (b *GraphServiceRequestBuilder) Planner() *PlannerRequestBuilder {
	bb := &PlannerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/planner"
	return bb
}

// Reports returns service endpoint for ReportRoot
func (b *GraphServiceRequestBuilder) Reports() *ReportRootRequestBuilder {
	bb := &ReportRootRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/reports"
	return bb
}

// Activity returns service endpoint for UserActivity
func (b *ActivityHistoryItemRequestBuilder) Activity() *UserActivityRequestBuilder {
	bb := &UserActivityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/activity"
	return bb
}

//
func (b *AndroidManagedAppProtectionRequestBuilder) Apps() *AndroidManagedAppProtectionAppsCollectionRequestBuilder {
	bb := &AndroidManagedAppProtectionAppsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/apps"
	return bb
}

//
type AndroidManagedAppProtectionAppsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AndroidManagedAppProtectionAppsCollectionRequestBuilder) Request() *AndroidManagedAppProtectionAppsCollectionRequest {
	return &AndroidManagedAppProtectionAppsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *AndroidManagedAppProtectionAppsCollectionRequestBuilder) ID(id string) *ManagedMobileAppRequestBuilder {
	bb := &ManagedMobileAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type AndroidManagedAppProtectionAppsCollectionRequest struct{ BaseRequest }

//
func (r *AndroidManagedAppProtectionAppsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedMobileApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AndroidManagedAppProtectionAppsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedMobileApp, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedMobileApp
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedMobileApp
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *AndroidManagedAppProtectionAppsCollectionRequest) Get() ([]ManagedMobileApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *AndroidManagedAppProtectionAppsCollectionRequest) Add(reqObj *ManagedMobileApp) (*ManagedMobileApp, error) {
	return r.Do("POST", "", reqObj)
}

// DeploymentSummary returns service endpoint for ManagedAppPolicyDeploymentSummary
func (b *AndroidManagedAppProtectionRequestBuilder) DeploymentSummary() *ManagedAppPolicyDeploymentSummaryRequestBuilder {
	bb := &ManagedAppPolicyDeploymentSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deploymentSummary"
	return bb
}

//
func (b *AppCatalogsRequestBuilder) TeamsApps() *AppCatalogsTeamsAppsCollectionRequestBuilder {
	bb := &AppCatalogsTeamsAppsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/teamsApps"
	return bb
}

//
type AppCatalogsTeamsAppsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AppCatalogsTeamsAppsCollectionRequestBuilder) Request() *AppCatalogsTeamsAppsCollectionRequest {
	return &AppCatalogsTeamsAppsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *AppCatalogsTeamsAppsCollectionRequestBuilder) ID(id string) *TeamsAppRequestBuilder {
	bb := &TeamsAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type AppCatalogsTeamsAppsCollectionRequest struct{ BaseRequest }

//
func (r *AppCatalogsTeamsAppsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AppCatalogsTeamsAppsCollectionRequest) Paging(method, path string, obj interface{}) ([]TeamsApp, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TeamsApp
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TeamsApp
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *AppCatalogsTeamsAppsCollectionRequest) Get() ([]TeamsApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *AppCatalogsTeamsAppsCollectionRequest) Add(reqObj *TeamsApp) (*TeamsApp, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *AuditLogRootRequestBuilder) DirectoryAudits() *AuditLogRootDirectoryAuditsCollectionRequestBuilder {
	bb := &AuditLogRootDirectoryAuditsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/directoryAudits"
	return bb
}

//
type AuditLogRootDirectoryAuditsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AuditLogRootDirectoryAuditsCollectionRequestBuilder) Request() *AuditLogRootDirectoryAuditsCollectionRequest {
	return &AuditLogRootDirectoryAuditsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *AuditLogRootDirectoryAuditsCollectionRequestBuilder) ID(id string) *DirectoryAuditRequestBuilder {
	bb := &DirectoryAuditRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type AuditLogRootDirectoryAuditsCollectionRequest struct{ BaseRequest }

//
func (r *AuditLogRootDirectoryAuditsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryAudit, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AuditLogRootDirectoryAuditsCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryAudit, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryAudit
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryAudit
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *AuditLogRootDirectoryAuditsCollectionRequest) Get() ([]DirectoryAudit, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *AuditLogRootDirectoryAuditsCollectionRequest) Add(reqObj *DirectoryAudit) (*DirectoryAudit, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *AuditLogRootRequestBuilder) RestrictedSignIns() *AuditLogRootRestrictedSignInsCollectionRequestBuilder {
	bb := &AuditLogRootRestrictedSignInsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/restrictedSignIns"
	return bb
}

//
type AuditLogRootRestrictedSignInsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AuditLogRootRestrictedSignInsCollectionRequestBuilder) Request() *AuditLogRootRestrictedSignInsCollectionRequest {
	return &AuditLogRootRestrictedSignInsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *AuditLogRootRestrictedSignInsCollectionRequestBuilder) ID(id string) *RestrictedSignInRequestBuilder {
	bb := &RestrictedSignInRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type AuditLogRootRestrictedSignInsCollectionRequest struct{ BaseRequest }

//
func (r *AuditLogRootRestrictedSignInsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *RestrictedSignIn, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AuditLogRootRestrictedSignInsCollectionRequest) Paging(method, path string, obj interface{}) ([]RestrictedSignIn, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []RestrictedSignIn
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []RestrictedSignIn
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *AuditLogRootRestrictedSignInsCollectionRequest) Get() ([]RestrictedSignIn, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *AuditLogRootRestrictedSignInsCollectionRequest) Add(reqObj *RestrictedSignIn) (*RestrictedSignIn, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *AuditLogRootRequestBuilder) SignIns() *AuditLogRootSignInsCollectionRequestBuilder {
	bb := &AuditLogRootSignInsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/signIns"
	return bb
}

//
type AuditLogRootSignInsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *AuditLogRootSignInsCollectionRequestBuilder) Request() *AuditLogRootSignInsCollectionRequest {
	return &AuditLogRootSignInsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *AuditLogRootSignInsCollectionRequestBuilder) ID(id string) *SignInRequestBuilder {
	bb := &SignInRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type AuditLogRootSignInsCollectionRequest struct{ BaseRequest }

//
func (r *AuditLogRootSignInsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SignIn, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *AuditLogRootSignInsCollectionRequest) Paging(method, path string, obj interface{}) ([]SignIn, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SignIn
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SignIn
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *AuditLogRootSignInsCollectionRequest) Get() ([]SignIn, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *AuditLogRootSignInsCollectionRequest) Add(reqObj *SignIn) (*SignIn, error) {
	return r.Do("POST", "", reqObj)
}

// CreatedByUser returns service endpoint for User
func (b *BaseItemRequestBuilder) CreatedByUser() *UserRequestBuilder {
	bb := &UserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/createdByUser"
	return bb
}

// LastModifiedByUser returns service endpoint for User
func (b *BaseItemRequestBuilder) LastModifiedByUser() *UserRequestBuilder {
	bb := &UserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/lastModifiedByUser"
	return bb
}

//
func (b *CalendarRequestBuilder) CalendarView() *CalendarCalendarViewCollectionRequestBuilder {
	bb := &CalendarCalendarViewCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendarView"
	return bb
}

//
type CalendarCalendarViewCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CalendarCalendarViewCollectionRequestBuilder) Request() *CalendarCalendarViewCollectionRequest {
	return &CalendarCalendarViewCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CalendarCalendarViewCollectionRequestBuilder) ID(id string) *EventRequestBuilder {
	bb := &EventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CalendarCalendarViewCollectionRequest struct{ BaseRequest }

//
func (r *CalendarCalendarViewCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Event, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CalendarCalendarViewCollectionRequest) Paging(method, path string, obj interface{}) ([]Event, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Event
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Event
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CalendarCalendarViewCollectionRequest) Get() ([]Event, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CalendarCalendarViewCollectionRequest) Add(reqObj *Event) (*Event, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *CalendarRequestBuilder) Events() *CalendarEventsCollectionRequestBuilder {
	bb := &CalendarEventsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/events"
	return bb
}

//
type CalendarEventsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CalendarEventsCollectionRequestBuilder) Request() *CalendarEventsCollectionRequest {
	return &CalendarEventsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CalendarEventsCollectionRequestBuilder) ID(id string) *EventRequestBuilder {
	bb := &EventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CalendarEventsCollectionRequest struct{ BaseRequest }

//
func (r *CalendarEventsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Event, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CalendarEventsCollectionRequest) Paging(method, path string, obj interface{}) ([]Event, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Event
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Event
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CalendarEventsCollectionRequest) Get() ([]Event, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CalendarEventsCollectionRequest) Add(reqObj *Event) (*Event, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *CalendarRequestBuilder) MultiValueExtendedProperties() *CalendarMultiValueExtendedPropertiesCollectionRequestBuilder {
	bb := &CalendarMultiValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/multiValueExtendedProperties"
	return bb
}

//
type CalendarMultiValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CalendarMultiValueExtendedPropertiesCollectionRequestBuilder) Request() *CalendarMultiValueExtendedPropertiesCollectionRequest {
	return &CalendarMultiValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CalendarMultiValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *MultiValueLegacyExtendedPropertyRequestBuilder {
	bb := &MultiValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CalendarMultiValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *CalendarMultiValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MultiValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CalendarMultiValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]MultiValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MultiValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MultiValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CalendarMultiValueExtendedPropertiesCollectionRequest) Get() ([]MultiValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CalendarMultiValueExtendedPropertiesCollectionRequest) Add(reqObj *MultiValueLegacyExtendedProperty) (*MultiValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *CalendarRequestBuilder) SingleValueExtendedProperties() *CalendarSingleValueExtendedPropertiesCollectionRequestBuilder {
	bb := &CalendarSingleValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/singleValueExtendedProperties"
	return bb
}

//
type CalendarSingleValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CalendarSingleValueExtendedPropertiesCollectionRequestBuilder) Request() *CalendarSingleValueExtendedPropertiesCollectionRequest {
	return &CalendarSingleValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CalendarSingleValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *SingleValueLegacyExtendedPropertyRequestBuilder {
	bb := &SingleValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CalendarSingleValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *CalendarSingleValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SingleValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CalendarSingleValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]SingleValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SingleValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SingleValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CalendarSingleValueExtendedPropertiesCollectionRequest) Get() ([]SingleValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CalendarSingleValueExtendedPropertiesCollectionRequest) Add(reqObj *SingleValueLegacyExtendedProperty) (*SingleValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *CalendarGroupRequestBuilder) Calendars() *CalendarGroupCalendarsCollectionRequestBuilder {
	bb := &CalendarGroupCalendarsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendars"
	return bb
}

//
type CalendarGroupCalendarsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CalendarGroupCalendarsCollectionRequestBuilder) Request() *CalendarGroupCalendarsCollectionRequest {
	return &CalendarGroupCalendarsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CalendarGroupCalendarsCollectionRequestBuilder) ID(id string) *CalendarRequestBuilder {
	bb := &CalendarRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CalendarGroupCalendarsCollectionRequest struct{ BaseRequest }

//
func (r *CalendarGroupCalendarsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Calendar, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CalendarGroupCalendarsCollectionRequest) Paging(method, path string, obj interface{}) ([]Calendar, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Calendar
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Calendar
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CalendarGroupCalendarsCollectionRequest) Get() ([]Calendar, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CalendarGroupCalendarsCollectionRequest) Add(reqObj *Calendar) (*Calendar, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *CallRequestBuilder) Operations() *CallOperationsCollectionRequestBuilder {
	bb := &CallOperationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/operations"
	return bb
}

//
type CallOperationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallOperationsCollectionRequestBuilder) Request() *CallOperationsCollectionRequest {
	return &CallOperationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CallOperationsCollectionRequestBuilder) ID(id string) *CommsOperationRequestBuilder {
	bb := &CommsOperationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CallOperationsCollectionRequest struct{ BaseRequest }

//
func (r *CallOperationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *CommsOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CallOperationsCollectionRequest) Paging(method, path string, obj interface{}) ([]CommsOperation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []CommsOperation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []CommsOperation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CallOperationsCollectionRequest) Get() ([]CommsOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CallOperationsCollectionRequest) Add(reqObj *CommsOperation) (*CommsOperation, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *CallRequestBuilder) Participants() *CallParticipantsCollectionRequestBuilder {
	bb := &CallParticipantsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/participants"
	return bb
}

//
type CallParticipantsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallParticipantsCollectionRequestBuilder) Request() *CallParticipantsCollectionRequest {
	return &CallParticipantsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CallParticipantsCollectionRequestBuilder) ID(id string) *ParticipantRequestBuilder {
	bb := &ParticipantRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CallParticipantsCollectionRequest struct{ BaseRequest }

//
func (r *CallParticipantsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Participant, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CallParticipantsCollectionRequest) Paging(method, path string, obj interface{}) ([]Participant, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Participant
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Participant
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CallParticipantsCollectionRequest) Get() ([]Participant, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CallParticipantsCollectionRequest) Add(reqObj *Participant) (*Participant, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ChannelRequestBuilder) Tabs() *ChannelTabsCollectionRequestBuilder {
	bb := &ChannelTabsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/tabs"
	return bb
}

//
type ChannelTabsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ChannelTabsCollectionRequestBuilder) Request() *ChannelTabsCollectionRequest {
	return &ChannelTabsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ChannelTabsCollectionRequestBuilder) ID(id string) *TeamsTabRequestBuilder {
	bb := &TeamsTabRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ChannelTabsCollectionRequest struct{ BaseRequest }

//
func (r *ChannelTabsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsTab, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ChannelTabsCollectionRequest) Paging(method, path string, obj interface{}) ([]TeamsTab, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TeamsTab
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TeamsTab
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ChannelTabsCollectionRequest) Get() ([]TeamsTab, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ChannelTabsCollectionRequest) Add(reqObj *TeamsTab) (*TeamsTab, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *CloudCommunicationsRequestBuilder) Calls() *CloudCommunicationsCallsCollectionRequestBuilder {
	bb := &CloudCommunicationsCallsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calls"
	return bb
}

//
type CloudCommunicationsCallsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CloudCommunicationsCallsCollectionRequestBuilder) Request() *CloudCommunicationsCallsCollectionRequest {
	return &CloudCommunicationsCallsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CloudCommunicationsCallsCollectionRequestBuilder) ID(id string) *CallRequestBuilder {
	bb := &CallRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CloudCommunicationsCallsCollectionRequest struct{ BaseRequest }

//
func (r *CloudCommunicationsCallsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Call, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CloudCommunicationsCallsCollectionRequest) Paging(method, path string, obj interface{}) ([]Call, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Call
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Call
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CloudCommunicationsCallsCollectionRequest) Get() ([]Call, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CloudCommunicationsCallsCollectionRequest) Add(reqObj *Call) (*Call, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *CloudCommunicationsRequestBuilder) OnlineMeetings() *CloudCommunicationsOnlineMeetingsCollectionRequestBuilder {
	bb := &CloudCommunicationsOnlineMeetingsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/onlineMeetings"
	return bb
}

//
type CloudCommunicationsOnlineMeetingsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CloudCommunicationsOnlineMeetingsCollectionRequestBuilder) Request() *CloudCommunicationsOnlineMeetingsCollectionRequest {
	return &CloudCommunicationsOnlineMeetingsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *CloudCommunicationsOnlineMeetingsCollectionRequestBuilder) ID(id string) *OnlineMeetingRequestBuilder {
	bb := &OnlineMeetingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type CloudCommunicationsOnlineMeetingsCollectionRequest struct{ BaseRequest }

//
func (r *CloudCommunicationsOnlineMeetingsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnlineMeeting, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CloudCommunicationsOnlineMeetingsCollectionRequest) Paging(method, path string, obj interface{}) ([]OnlineMeeting, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnlineMeeting
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnlineMeeting
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CloudCommunicationsOnlineMeetingsCollectionRequest) Get() ([]OnlineMeeting, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *CloudCommunicationsOnlineMeetingsCollectionRequest) Add(reqObj *OnlineMeeting) (*OnlineMeeting, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ContactRequestBuilder) Extensions() *ContactExtensionsCollectionRequestBuilder {
	bb := &ContactExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/extensions"
	return bb
}

//
type ContactExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactExtensionsCollectionRequestBuilder) Request() *ContactExtensionsCollectionRequest {
	return &ContactExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ContactExtensionsCollectionRequestBuilder) ID(id string) *ExtensionRequestBuilder {
	bb := &ExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ContactExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *ContactExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Extension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Extension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Extension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ContactExtensionsCollectionRequest) Get() ([]Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ContactExtensionsCollectionRequest) Add(reqObj *Extension) (*Extension, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ContactRequestBuilder) MultiValueExtendedProperties() *ContactMultiValueExtendedPropertiesCollectionRequestBuilder {
	bb := &ContactMultiValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/multiValueExtendedProperties"
	return bb
}

//
type ContactMultiValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactMultiValueExtendedPropertiesCollectionRequestBuilder) Request() *ContactMultiValueExtendedPropertiesCollectionRequest {
	return &ContactMultiValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ContactMultiValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *MultiValueLegacyExtendedPropertyRequestBuilder {
	bb := &MultiValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ContactMultiValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *ContactMultiValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MultiValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactMultiValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]MultiValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MultiValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MultiValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ContactMultiValueExtendedPropertiesCollectionRequest) Get() ([]MultiValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ContactMultiValueExtendedPropertiesCollectionRequest) Add(reqObj *MultiValueLegacyExtendedProperty) (*MultiValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

// Photo returns service endpoint for ProfilePhoto
func (b *ContactRequestBuilder) Photo() *ProfilePhotoRequestBuilder {
	bb := &ProfilePhotoRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/photo"
	return bb
}

//
func (b *ContactRequestBuilder) SingleValueExtendedProperties() *ContactSingleValueExtendedPropertiesCollectionRequestBuilder {
	bb := &ContactSingleValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/singleValueExtendedProperties"
	return bb
}

//
type ContactSingleValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactSingleValueExtendedPropertiesCollectionRequestBuilder) Request() *ContactSingleValueExtendedPropertiesCollectionRequest {
	return &ContactSingleValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ContactSingleValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *SingleValueLegacyExtendedPropertyRequestBuilder {
	bb := &SingleValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ContactSingleValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *ContactSingleValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SingleValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactSingleValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]SingleValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SingleValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SingleValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ContactSingleValueExtendedPropertiesCollectionRequest) Get() ([]SingleValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ContactSingleValueExtendedPropertiesCollectionRequest) Add(reqObj *SingleValueLegacyExtendedProperty) (*SingleValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ContactFolderRequestBuilder) ChildFolders() *ContactFolderChildFoldersCollectionRequestBuilder {
	bb := &ContactFolderChildFoldersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/childFolders"
	return bb
}

//
type ContactFolderChildFoldersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactFolderChildFoldersCollectionRequestBuilder) Request() *ContactFolderChildFoldersCollectionRequest {
	return &ContactFolderChildFoldersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ContactFolderChildFoldersCollectionRequestBuilder) ID(id string) *ContactFolderRequestBuilder {
	bb := &ContactFolderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ContactFolderChildFoldersCollectionRequest struct{ BaseRequest }

//
func (r *ContactFolderChildFoldersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ContactFolder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactFolderChildFoldersCollectionRequest) Paging(method, path string, obj interface{}) ([]ContactFolder, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ContactFolder
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ContactFolder
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ContactFolderChildFoldersCollectionRequest) Get() ([]ContactFolder, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ContactFolderChildFoldersCollectionRequest) Add(reqObj *ContactFolder) (*ContactFolder, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ContactFolderRequestBuilder) Contacts() *ContactFolderContactsCollectionRequestBuilder {
	bb := &ContactFolderContactsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/contacts"
	return bb
}

//
type ContactFolderContactsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactFolderContactsCollectionRequestBuilder) Request() *ContactFolderContactsCollectionRequest {
	return &ContactFolderContactsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ContactFolderContactsCollectionRequestBuilder) ID(id string) *ContactRequestBuilder {
	bb := &ContactRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ContactFolderContactsCollectionRequest struct{ BaseRequest }

//
func (r *ContactFolderContactsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Contact, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactFolderContactsCollectionRequest) Paging(method, path string, obj interface{}) ([]Contact, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Contact
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Contact
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ContactFolderContactsCollectionRequest) Get() ([]Contact, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ContactFolderContactsCollectionRequest) Add(reqObj *Contact) (*Contact, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ContactFolderRequestBuilder) MultiValueExtendedProperties() *ContactFolderMultiValueExtendedPropertiesCollectionRequestBuilder {
	bb := &ContactFolderMultiValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/multiValueExtendedProperties"
	return bb
}

//
type ContactFolderMultiValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactFolderMultiValueExtendedPropertiesCollectionRequestBuilder) Request() *ContactFolderMultiValueExtendedPropertiesCollectionRequest {
	return &ContactFolderMultiValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ContactFolderMultiValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *MultiValueLegacyExtendedPropertyRequestBuilder {
	bb := &MultiValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ContactFolderMultiValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *ContactFolderMultiValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MultiValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactFolderMultiValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]MultiValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MultiValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MultiValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ContactFolderMultiValueExtendedPropertiesCollectionRequest) Get() ([]MultiValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ContactFolderMultiValueExtendedPropertiesCollectionRequest) Add(reqObj *MultiValueLegacyExtendedProperty) (*MultiValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ContactFolderRequestBuilder) SingleValueExtendedProperties() *ContactFolderSingleValueExtendedPropertiesCollectionRequestBuilder {
	bb := &ContactFolderSingleValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/singleValueExtendedProperties"
	return bb
}

//
type ContactFolderSingleValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContactFolderSingleValueExtendedPropertiesCollectionRequestBuilder) Request() *ContactFolderSingleValueExtendedPropertiesCollectionRequest {
	return &ContactFolderSingleValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ContactFolderSingleValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *SingleValueLegacyExtendedPropertyRequestBuilder {
	bb := &SingleValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ContactFolderSingleValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *ContactFolderSingleValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SingleValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContactFolderSingleValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]SingleValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SingleValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SingleValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ContactFolderSingleValueExtendedPropertiesCollectionRequest) Get() ([]SingleValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ContactFolderSingleValueExtendedPropertiesCollectionRequest) Add(reqObj *SingleValueLegacyExtendedProperty) (*SingleValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ContentTypeRequestBuilder) ColumnLinks() *ContentTypeColumnLinksCollectionRequestBuilder {
	bb := &ContentTypeColumnLinksCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/columnLinks"
	return bb
}

//
type ContentTypeColumnLinksCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ContentTypeColumnLinksCollectionRequestBuilder) Request() *ContentTypeColumnLinksCollectionRequest {
	return &ContentTypeColumnLinksCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ContentTypeColumnLinksCollectionRequestBuilder) ID(id string) *ColumnLinkRequestBuilder {
	bb := &ColumnLinkRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ContentTypeColumnLinksCollectionRequest struct{ BaseRequest }

//
func (r *ContentTypeColumnLinksCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ColumnLink, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ContentTypeColumnLinksCollectionRequest) Paging(method, path string, obj interface{}) ([]ColumnLink, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ColumnLink
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ColumnLink
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ContentTypeColumnLinksCollectionRequest) Get() ([]ColumnLink, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ContentTypeColumnLinksCollectionRequest) Add(reqObj *ColumnLink) (*ColumnLink, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ConversationRequestBuilder) Threads() *ConversationThreadsCollectionRequestBuilder {
	bb := &ConversationThreadsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/threads"
	return bb
}

//
type ConversationThreadsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ConversationThreadsCollectionRequestBuilder) Request() *ConversationThreadsCollectionRequest {
	return &ConversationThreadsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ConversationThreadsCollectionRequestBuilder) ID(id string) *ConversationThreadRequestBuilder {
	bb := &ConversationThreadRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ConversationThreadsCollectionRequest struct{ BaseRequest }

//
func (r *ConversationThreadsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ConversationThread, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ConversationThreadsCollectionRequest) Paging(method, path string, obj interface{}) ([]ConversationThread, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ConversationThread
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ConversationThread
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ConversationThreadsCollectionRequest) Get() ([]ConversationThread, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ConversationThreadsCollectionRequest) Add(reqObj *ConversationThread) (*ConversationThread, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ConversationThreadRequestBuilder) Posts() *ConversationThreadPostsCollectionRequestBuilder {
	bb := &ConversationThreadPostsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/posts"
	return bb
}

//
type ConversationThreadPostsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ConversationThreadPostsCollectionRequestBuilder) Request() *ConversationThreadPostsCollectionRequest {
	return &ConversationThreadPostsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ConversationThreadPostsCollectionRequestBuilder) ID(id string) *PostRequestBuilder {
	bb := &PostRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ConversationThreadPostsCollectionRequest struct{ BaseRequest }

//
func (r *ConversationThreadPostsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Post, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ConversationThreadPostsCollectionRequest) Paging(method, path string, obj interface{}) ([]Post, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Post
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Post
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ConversationThreadPostsCollectionRequest) Get() ([]Post, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ConversationThreadPostsCollectionRequest) Add(reqObj *Post) (*Post, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DefaultManagedAppProtectionRequestBuilder) Apps() *DefaultManagedAppProtectionAppsCollectionRequestBuilder {
	bb := &DefaultManagedAppProtectionAppsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/apps"
	return bb
}

//
type DefaultManagedAppProtectionAppsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DefaultManagedAppProtectionAppsCollectionRequestBuilder) Request() *DefaultManagedAppProtectionAppsCollectionRequest {
	return &DefaultManagedAppProtectionAppsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DefaultManagedAppProtectionAppsCollectionRequestBuilder) ID(id string) *ManagedMobileAppRequestBuilder {
	bb := &ManagedMobileAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DefaultManagedAppProtectionAppsCollectionRequest struct{ BaseRequest }

//
func (r *DefaultManagedAppProtectionAppsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedMobileApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DefaultManagedAppProtectionAppsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedMobileApp, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedMobileApp
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedMobileApp
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DefaultManagedAppProtectionAppsCollectionRequest) Get() ([]ManagedMobileApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DefaultManagedAppProtectionAppsCollectionRequest) Add(reqObj *ManagedMobileApp) (*ManagedMobileApp, error) {
	return r.Do("POST", "", reqObj)
}

// DeploymentSummary returns service endpoint for ManagedAppPolicyDeploymentSummary
func (b *DefaultManagedAppProtectionRequestBuilder) DeploymentSummary() *ManagedAppPolicyDeploymentSummaryRequestBuilder {
	bb := &ManagedAppPolicyDeploymentSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deploymentSummary"
	return bb
}

//
func (b *DetectedAppRequestBuilder) ManagedDevices() *DetectedAppManagedDevicesCollectionRequestBuilder {
	bb := &DetectedAppManagedDevicesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedDevices"
	return bb
}

//
type DetectedAppManagedDevicesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) Request() *DetectedAppManagedDevicesCollectionRequest {
	return &DetectedAppManagedDevicesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) ID(id string) *ManagedDeviceRequestBuilder {
	bb := &ManagedDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DetectedAppManagedDevicesCollectionRequest struct{ BaseRequest }

//
func (r *DetectedAppManagedDevicesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDevice, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DetectedAppManagedDevicesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedDevice, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDevice
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedDevice
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DetectedAppManagedDevicesCollectionRequest) Get() ([]ManagedDevice, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DetectedAppManagedDevicesCollectionRequest) Add(reqObj *ManagedDevice) (*ManagedDevice, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceRequestBuilder) Extensions() *DeviceExtensionsCollectionRequestBuilder {
	bb := &DeviceExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/extensions"
	return bb
}

//
type DeviceExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceExtensionsCollectionRequestBuilder) Request() *DeviceExtensionsCollectionRequest {
	return &DeviceExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceExtensionsCollectionRequestBuilder) ID(id string) *ExtensionRequestBuilder {
	bb := &ExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Extension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Extension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Extension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceExtensionsCollectionRequest) Get() ([]Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceExtensionsCollectionRequest) Add(reqObj *Extension) (*Extension, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceRequestBuilder) MemberOf() *DeviceMemberOfCollectionRequestBuilder {
	bb := &DeviceMemberOfCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/memberOf"
	return bb
}

//
type DeviceMemberOfCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceMemberOfCollectionRequestBuilder) Request() *DeviceMemberOfCollectionRequest {
	return &DeviceMemberOfCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceMemberOfCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceMemberOfCollectionRequest struct{ BaseRequest }

//
func (r *DeviceMemberOfCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceMemberOfCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceMemberOfCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceMemberOfCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceRequestBuilder) RegisteredOwners() *DeviceRegisteredOwnersCollectionRequestBuilder {
	bb := &DeviceRegisteredOwnersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/registeredOwners"
	return bb
}

//
type DeviceRegisteredOwnersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceRegisteredOwnersCollectionRequestBuilder) Request() *DeviceRegisteredOwnersCollectionRequest {
	return &DeviceRegisteredOwnersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceRegisteredOwnersCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceRegisteredOwnersCollectionRequest struct{ BaseRequest }

//
func (r *DeviceRegisteredOwnersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceRegisteredOwnersCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceRegisteredOwnersCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceRegisteredOwnersCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceRequestBuilder) RegisteredUsers() *DeviceRegisteredUsersCollectionRequestBuilder {
	bb := &DeviceRegisteredUsersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/registeredUsers"
	return bb
}

//
type DeviceRegisteredUsersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceRegisteredUsersCollectionRequestBuilder) Request() *DeviceRegisteredUsersCollectionRequest {
	return &DeviceRegisteredUsersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceRegisteredUsersCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceRegisteredUsersCollectionRequest struct{ BaseRequest }

//
func (r *DeviceRegisteredUsersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceRegisteredUsersCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceRegisteredUsersCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceRegisteredUsersCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceRequestBuilder) TransitiveMemberOf() *DeviceTransitiveMemberOfCollectionRequestBuilder {
	bb := &DeviceTransitiveMemberOfCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/transitiveMemberOf"
	return bb
}

//
type DeviceTransitiveMemberOfCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceTransitiveMemberOfCollectionRequestBuilder) Request() *DeviceTransitiveMemberOfCollectionRequest {
	return &DeviceTransitiveMemberOfCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceTransitiveMemberOfCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceTransitiveMemberOfCollectionRequest struct{ BaseRequest }

//
func (r *DeviceTransitiveMemberOfCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceTransitiveMemberOfCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceTransitiveMemberOfCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceTransitiveMemberOfCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) AndroidManagedAppProtections() *DeviceAppManagementAndroidManagedAppProtectionsCollectionRequestBuilder {
	bb := &DeviceAppManagementAndroidManagedAppProtectionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/androidManagedAppProtections"
	return bb
}

//
type DeviceAppManagementAndroidManagedAppProtectionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementAndroidManagedAppProtectionsCollectionRequestBuilder) Request() *DeviceAppManagementAndroidManagedAppProtectionsCollectionRequest {
	return &DeviceAppManagementAndroidManagedAppProtectionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementAndroidManagedAppProtectionsCollectionRequestBuilder) ID(id string) *AndroidManagedAppProtectionRequestBuilder {
	bb := &AndroidManagedAppProtectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementAndroidManagedAppProtectionsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementAndroidManagedAppProtectionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *AndroidManagedAppProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementAndroidManagedAppProtectionsCollectionRequest) Paging(method, path string, obj interface{}) ([]AndroidManagedAppProtection, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []AndroidManagedAppProtection
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []AndroidManagedAppProtection
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementAndroidManagedAppProtectionsCollectionRequest) Get() ([]AndroidManagedAppProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementAndroidManagedAppProtectionsCollectionRequest) Add(reqObj *AndroidManagedAppProtection) (*AndroidManagedAppProtection, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) DefaultManagedAppProtections() *DeviceAppManagementDefaultManagedAppProtectionsCollectionRequestBuilder {
	bb := &DeviceAppManagementDefaultManagedAppProtectionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/defaultManagedAppProtections"
	return bb
}

//
type DeviceAppManagementDefaultManagedAppProtectionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementDefaultManagedAppProtectionsCollectionRequestBuilder) Request() *DeviceAppManagementDefaultManagedAppProtectionsCollectionRequest {
	return &DeviceAppManagementDefaultManagedAppProtectionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementDefaultManagedAppProtectionsCollectionRequestBuilder) ID(id string) *DefaultManagedAppProtectionRequestBuilder {
	bb := &DefaultManagedAppProtectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementDefaultManagedAppProtectionsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementDefaultManagedAppProtectionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DefaultManagedAppProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementDefaultManagedAppProtectionsCollectionRequest) Paging(method, path string, obj interface{}) ([]DefaultManagedAppProtection, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DefaultManagedAppProtection
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DefaultManagedAppProtection
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementDefaultManagedAppProtectionsCollectionRequest) Get() ([]DefaultManagedAppProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementDefaultManagedAppProtectionsCollectionRequest) Add(reqObj *DefaultManagedAppProtection) (*DefaultManagedAppProtection, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) IosManagedAppProtections() *DeviceAppManagementIosManagedAppProtectionsCollectionRequestBuilder {
	bb := &DeviceAppManagementIosManagedAppProtectionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/iosManagedAppProtections"
	return bb
}

//
type DeviceAppManagementIosManagedAppProtectionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementIosManagedAppProtectionsCollectionRequestBuilder) Request() *DeviceAppManagementIosManagedAppProtectionsCollectionRequest {
	return &DeviceAppManagementIosManagedAppProtectionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementIosManagedAppProtectionsCollectionRequestBuilder) ID(id string) *IosManagedAppProtectionRequestBuilder {
	bb := &IosManagedAppProtectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementIosManagedAppProtectionsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementIosManagedAppProtectionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *IosManagedAppProtection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementIosManagedAppProtectionsCollectionRequest) Paging(method, path string, obj interface{}) ([]IosManagedAppProtection, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []IosManagedAppProtection
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []IosManagedAppProtection
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementIosManagedAppProtectionsCollectionRequest) Get() ([]IosManagedAppProtection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementIosManagedAppProtectionsCollectionRequest) Add(reqObj *IosManagedAppProtection) (*IosManagedAppProtection, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) ManagedAppPolicies() *DeviceAppManagementManagedAppPoliciesCollectionRequestBuilder {
	bb := &DeviceAppManagementManagedAppPoliciesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedAppPolicies"
	return bb
}

//
type DeviceAppManagementManagedAppPoliciesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementManagedAppPoliciesCollectionRequestBuilder) Request() *DeviceAppManagementManagedAppPoliciesCollectionRequest {
	return &DeviceAppManagementManagedAppPoliciesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementManagedAppPoliciesCollectionRequestBuilder) ID(id string) *ManagedAppPolicyRequestBuilder {
	bb := &ManagedAppPolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementManagedAppPoliciesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementManagedAppPoliciesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppPolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementManagedAppPoliciesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedAppPolicy, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedAppPolicy
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedAppPolicy
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementManagedAppPoliciesCollectionRequest) Get() ([]ManagedAppPolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementManagedAppPoliciesCollectionRequest) Add(reqObj *ManagedAppPolicy) (*ManagedAppPolicy, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) ManagedAppRegistrations() *DeviceAppManagementManagedAppRegistrationsCollectionRequestBuilder {
	bb := &DeviceAppManagementManagedAppRegistrationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedAppRegistrations"
	return bb
}

//
type DeviceAppManagementManagedAppRegistrationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementManagedAppRegistrationsCollectionRequestBuilder) Request() *DeviceAppManagementManagedAppRegistrationsCollectionRequest {
	return &DeviceAppManagementManagedAppRegistrationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementManagedAppRegistrationsCollectionRequestBuilder) ID(id string) *ManagedAppRegistrationRequestBuilder {
	bb := &ManagedAppRegistrationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementManagedAppRegistrationsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementManagedAppRegistrationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppRegistration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementManagedAppRegistrationsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedAppRegistration, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedAppRegistration
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedAppRegistration
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementManagedAppRegistrationsCollectionRequest) Get() ([]ManagedAppRegistration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementManagedAppRegistrationsCollectionRequest) Add(reqObj *ManagedAppRegistration) (*ManagedAppRegistration, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) ManagedAppStatuses() *DeviceAppManagementManagedAppStatusesCollectionRequestBuilder {
	bb := &DeviceAppManagementManagedAppStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedAppStatuses"
	return bb
}

//
type DeviceAppManagementManagedAppStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementManagedAppStatusesCollectionRequestBuilder) Request() *DeviceAppManagementManagedAppStatusesCollectionRequest {
	return &DeviceAppManagementManagedAppStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementManagedAppStatusesCollectionRequestBuilder) ID(id string) *ManagedAppStatusRequestBuilder {
	bb := &ManagedAppStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementManagedAppStatusesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementManagedAppStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementManagedAppStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedAppStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedAppStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedAppStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementManagedAppStatusesCollectionRequest) Get() ([]ManagedAppStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementManagedAppStatusesCollectionRequest) Add(reqObj *ManagedAppStatus) (*ManagedAppStatus, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) ManagedEBooks() *DeviceAppManagementManagedEBooksCollectionRequestBuilder {
	bb := &DeviceAppManagementManagedEBooksCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedEBooks"
	return bb
}

//
type DeviceAppManagementManagedEBooksCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementManagedEBooksCollectionRequestBuilder) Request() *DeviceAppManagementManagedEBooksCollectionRequest {
	return &DeviceAppManagementManagedEBooksCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementManagedEBooksCollectionRequestBuilder) ID(id string) *ManagedEBookRequestBuilder {
	bb := &ManagedEBookRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementManagedEBooksCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementManagedEBooksCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedEBook, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementManagedEBooksCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedEBook, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedEBook
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedEBook
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementManagedEBooksCollectionRequest) Get() ([]ManagedEBook, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementManagedEBooksCollectionRequest) Add(reqObj *ManagedEBook) (*ManagedEBook, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) MdmWindowsInformationProtectionPolicies() *DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequestBuilder {
	bb := &DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/mdmWindowsInformationProtectionPolicies"
	return bb
}

//
type DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequestBuilder) Request() *DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequest {
	return &DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequestBuilder) ID(id string) *MdmWindowsInformationProtectionPolicyRequestBuilder {
	bb := &MdmWindowsInformationProtectionPolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MdmWindowsInformationProtectionPolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequest) Paging(method, path string, obj interface{}) ([]MdmWindowsInformationProtectionPolicy, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MdmWindowsInformationProtectionPolicy
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MdmWindowsInformationProtectionPolicy
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequest) Get() ([]MdmWindowsInformationProtectionPolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementMdmWindowsInformationProtectionPoliciesCollectionRequest) Add(reqObj *MdmWindowsInformationProtectionPolicy) (*MdmWindowsInformationProtectionPolicy, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) MobileAppCategories() *DeviceAppManagementMobileAppCategoriesCollectionRequestBuilder {
	bb := &DeviceAppManagementMobileAppCategoriesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/mobileAppCategories"
	return bb
}

//
type DeviceAppManagementMobileAppCategoriesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementMobileAppCategoriesCollectionRequestBuilder) Request() *DeviceAppManagementMobileAppCategoriesCollectionRequest {
	return &DeviceAppManagementMobileAppCategoriesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementMobileAppCategoriesCollectionRequestBuilder) ID(id string) *MobileAppCategoryRequestBuilder {
	bb := &MobileAppCategoryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementMobileAppCategoriesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementMobileAppCategoriesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppCategory, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementMobileAppCategoriesCollectionRequest) Paging(method, path string, obj interface{}) ([]MobileAppCategory, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MobileAppCategory
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MobileAppCategory
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementMobileAppCategoriesCollectionRequest) Get() ([]MobileAppCategory, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementMobileAppCategoriesCollectionRequest) Add(reqObj *MobileAppCategory) (*MobileAppCategory, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) MobileAppConfigurations() *DeviceAppManagementMobileAppConfigurationsCollectionRequestBuilder {
	bb := &DeviceAppManagementMobileAppConfigurationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/mobileAppConfigurations"
	return bb
}

//
type DeviceAppManagementMobileAppConfigurationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementMobileAppConfigurationsCollectionRequestBuilder) Request() *DeviceAppManagementMobileAppConfigurationsCollectionRequest {
	return &DeviceAppManagementMobileAppConfigurationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementMobileAppConfigurationsCollectionRequestBuilder) ID(id string) *ManagedDeviceMobileAppConfigurationRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementMobileAppConfigurationsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementMobileAppConfigurationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementMobileAppConfigurationsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedDeviceMobileAppConfiguration, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDeviceMobileAppConfiguration
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedDeviceMobileAppConfiguration
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementMobileAppConfigurationsCollectionRequest) Get() ([]ManagedDeviceMobileAppConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementMobileAppConfigurationsCollectionRequest) Add(reqObj *ManagedDeviceMobileAppConfiguration) (*ManagedDeviceMobileAppConfiguration, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) MobileApps() *DeviceAppManagementMobileAppsCollectionRequestBuilder {
	bb := &DeviceAppManagementMobileAppsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/mobileApps"
	return bb
}

//
type DeviceAppManagementMobileAppsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementMobileAppsCollectionRequestBuilder) Request() *DeviceAppManagementMobileAppsCollectionRequest {
	return &DeviceAppManagementMobileAppsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementMobileAppsCollectionRequestBuilder) ID(id string) *MobileAppRequestBuilder {
	bb := &MobileAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementMobileAppsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementMobileAppsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MobileApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementMobileAppsCollectionRequest) Paging(method, path string, obj interface{}) ([]MobileApp, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MobileApp
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MobileApp
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementMobileAppsCollectionRequest) Get() ([]MobileApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementMobileAppsCollectionRequest) Add(reqObj *MobileApp) (*MobileApp, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) TargetedManagedAppConfigurations() *DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequestBuilder {
	bb := &DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/targetedManagedAppConfigurations"
	return bb
}

//
type DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequestBuilder) Request() *DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequest {
	return &DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequestBuilder) ID(id string) *TargetedManagedAppConfigurationRequestBuilder {
	bb := &TargetedManagedAppConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TargetedManagedAppConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequest) Paging(method, path string, obj interface{}) ([]TargetedManagedAppConfiguration, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TargetedManagedAppConfiguration
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TargetedManagedAppConfiguration
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequest) Get() ([]TargetedManagedAppConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementTargetedManagedAppConfigurationsCollectionRequest) Add(reqObj *TargetedManagedAppConfiguration) (*TargetedManagedAppConfiguration, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) VppTokens() *DeviceAppManagementVppTokensCollectionRequestBuilder {
	bb := &DeviceAppManagementVppTokensCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/vppTokens"
	return bb
}

//
type DeviceAppManagementVppTokensCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementVppTokensCollectionRequestBuilder) Request() *DeviceAppManagementVppTokensCollectionRequest {
	return &DeviceAppManagementVppTokensCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementVppTokensCollectionRequestBuilder) ID(id string) *VppTokenRequestBuilder {
	bb := &VppTokenRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementVppTokensCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementVppTokensCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *VppToken, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementVppTokensCollectionRequest) Paging(method, path string, obj interface{}) ([]VppToken, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []VppToken
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []VppToken
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementVppTokensCollectionRequest) Get() ([]VppToken, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementVppTokensCollectionRequest) Add(reqObj *VppToken) (*VppToken, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceAppManagementRequestBuilder) WindowsInformationProtectionPolicies() *DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequestBuilder {
	bb := &DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/windowsInformationProtectionPolicies"
	return bb
}

//
type DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequestBuilder) Request() *DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequest {
	return &DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequestBuilder) ID(id string) *WindowsInformationProtectionPolicyRequestBuilder {
	bb := &WindowsInformationProtectionPolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionPolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequest) Paging(method, path string, obj interface{}) ([]WindowsInformationProtectionPolicy, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WindowsInformationProtectionPolicy
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WindowsInformationProtectionPolicy
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequest) Get() ([]WindowsInformationProtectionPolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceAppManagementWindowsInformationProtectionPoliciesCollectionRequest) Add(reqObj *WindowsInformationProtectionPolicy) (*WindowsInformationProtectionPolicy, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceCompliancePolicyRequestBuilder) Assignments() *DeviceCompliancePolicyAssignmentsCollectionRequestBuilder {
	bb := &DeviceCompliancePolicyAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type DeviceCompliancePolicyAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyAssignmentsCollectionRequestBuilder) Request() *DeviceCompliancePolicyAssignmentsCollectionRequest {
	return &DeviceCompliancePolicyAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceCompliancePolicyAssignmentsCollectionRequestBuilder) ID(id string) *DeviceCompliancePolicyAssignmentRequestBuilder {
	bb := &DeviceCompliancePolicyAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceCompliancePolicyAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicyAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceCompliancePolicyAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceCompliancePolicyAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceCompliancePolicyAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceCompliancePolicyAssignmentsCollectionRequest) Get() ([]DeviceCompliancePolicyAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyAssignmentsCollectionRequest) Add(reqObj *DeviceCompliancePolicyAssignment) (*DeviceCompliancePolicyAssignment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceCompliancePolicyRequestBuilder) DeviceSettingStateSummaries() *DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequestBuilder {
	bb := &DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceSettingStateSummaries"
	return bb
}

//
type DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequestBuilder) Request() *DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequest {
	return &DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequestBuilder) ID(id string) *SettingStateDeviceSummaryRequestBuilder {
	bb := &SettingStateDeviceSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SettingStateDeviceSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequest) Paging(method, path string, obj interface{}) ([]SettingStateDeviceSummary, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SettingStateDeviceSummary
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SettingStateDeviceSummary
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequest) Get() ([]SettingStateDeviceSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyDeviceSettingStateSummariesCollectionRequest) Add(reqObj *SettingStateDeviceSummary) (*SettingStateDeviceSummary, error) {
	return r.Do("POST", "", reqObj)
}

// DeviceStatusOverview returns service endpoint for DeviceComplianceDeviceOverview
func (b *DeviceCompliancePolicyRequestBuilder) DeviceStatusOverview() *DeviceComplianceDeviceOverviewRequestBuilder {
	bb := &DeviceComplianceDeviceOverviewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStatusOverview"
	return bb
}

//
func (b *DeviceCompliancePolicyRequestBuilder) DeviceStatuses() *DeviceCompliancePolicyDeviceStatusesCollectionRequestBuilder {
	bb := &DeviceCompliancePolicyDeviceStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStatuses"
	return bb
}

//
type DeviceCompliancePolicyDeviceStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyDeviceStatusesCollectionRequestBuilder) Request() *DeviceCompliancePolicyDeviceStatusesCollectionRequest {
	return &DeviceCompliancePolicyDeviceStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceCompliancePolicyDeviceStatusesCollectionRequestBuilder) ID(id string) *DeviceComplianceDeviceStatusRequestBuilder {
	bb := &DeviceComplianceDeviceStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceCompliancePolicyDeviceStatusesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyDeviceStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceDeviceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyDeviceStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceComplianceDeviceStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceComplianceDeviceStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceComplianceDeviceStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceCompliancePolicyDeviceStatusesCollectionRequest) Get() ([]DeviceComplianceDeviceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyDeviceStatusesCollectionRequest) Add(reqObj *DeviceComplianceDeviceStatus) (*DeviceComplianceDeviceStatus, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceCompliancePolicyRequestBuilder) ScheduledActionsForRule() *DeviceCompliancePolicyScheduledActionsForRuleCollectionRequestBuilder {
	bb := &DeviceCompliancePolicyScheduledActionsForRuleCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/scheduledActionsForRule"
	return bb
}

//
type DeviceCompliancePolicyScheduledActionsForRuleCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyScheduledActionsForRuleCollectionRequestBuilder) Request() *DeviceCompliancePolicyScheduledActionsForRuleCollectionRequest {
	return &DeviceCompliancePolicyScheduledActionsForRuleCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceCompliancePolicyScheduledActionsForRuleCollectionRequestBuilder) ID(id string) *DeviceComplianceScheduledActionForRuleRequestBuilder {
	bb := &DeviceComplianceScheduledActionForRuleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceCompliancePolicyScheduledActionsForRuleCollectionRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyScheduledActionsForRuleCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceScheduledActionForRule, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyScheduledActionsForRuleCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceComplianceScheduledActionForRule, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceComplianceScheduledActionForRule
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceComplianceScheduledActionForRule
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceCompliancePolicyScheduledActionsForRuleCollectionRequest) Get() ([]DeviceComplianceScheduledActionForRule, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyScheduledActionsForRuleCollectionRequest) Add(reqObj *DeviceComplianceScheduledActionForRule) (*DeviceComplianceScheduledActionForRule, error) {
	return r.Do("POST", "", reqObj)
}

// UserStatusOverview returns service endpoint for DeviceComplianceUserOverview
func (b *DeviceCompliancePolicyRequestBuilder) UserStatusOverview() *DeviceComplianceUserOverviewRequestBuilder {
	bb := &DeviceComplianceUserOverviewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/userStatusOverview"
	return bb
}

//
func (b *DeviceCompliancePolicyRequestBuilder) UserStatuses() *DeviceCompliancePolicyUserStatusesCollectionRequestBuilder {
	bb := &DeviceCompliancePolicyUserStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/userStatuses"
	return bb
}

//
type DeviceCompliancePolicyUserStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyUserStatusesCollectionRequestBuilder) Request() *DeviceCompliancePolicyUserStatusesCollectionRequest {
	return &DeviceCompliancePolicyUserStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceCompliancePolicyUserStatusesCollectionRequestBuilder) ID(id string) *DeviceComplianceUserStatusRequestBuilder {
	bb := &DeviceComplianceUserStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceCompliancePolicyUserStatusesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyUserStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceUserStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyUserStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceComplianceUserStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceComplianceUserStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceComplianceUserStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceCompliancePolicyUserStatusesCollectionRequest) Get() ([]DeviceComplianceUserStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceCompliancePolicyUserStatusesCollectionRequest) Add(reqObj *DeviceComplianceUserStatus) (*DeviceComplianceUserStatus, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceCompliancePolicySettingStateSummaryRequestBuilder) DeviceComplianceSettingStates() *DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequestBuilder {
	bb := &DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceComplianceSettingStates"
	return bb
}

//
type DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequestBuilder) Request() *DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequest {
	return &DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequestBuilder) ID(id string) *DeviceComplianceSettingStateRequestBuilder {
	bb := &DeviceComplianceSettingStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceSettingState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceComplianceSettingState, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceComplianceSettingState
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceComplianceSettingState
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequest) Get() ([]DeviceComplianceSettingState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceCompliancePolicySettingStateSummaryDeviceComplianceSettingStatesCollectionRequest) Add(reqObj *DeviceComplianceSettingState) (*DeviceComplianceSettingState, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceComplianceScheduledActionForRuleRequestBuilder) ScheduledActionConfigurations() *DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequestBuilder {
	bb := &DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/scheduledActionConfigurations"
	return bb
}

//
type DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequestBuilder) Request() *DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequest {
	return &DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequestBuilder) ID(id string) *DeviceComplianceActionItemRequestBuilder {
	bb := &DeviceComplianceActionItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceComplianceActionItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceComplianceActionItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceComplianceActionItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceComplianceActionItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequest) Get() ([]DeviceComplianceActionItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceComplianceScheduledActionForRuleScheduledActionConfigurationsCollectionRequest) Add(reqObj *DeviceComplianceActionItem) (*DeviceComplianceActionItem, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceConfigurationRequestBuilder) Assignments() *DeviceConfigurationAssignmentsCollectionRequestBuilder {
	bb := &DeviceConfigurationAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type DeviceConfigurationAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationAssignmentsCollectionRequestBuilder) Request() *DeviceConfigurationAssignmentsCollectionRequest {
	return &DeviceConfigurationAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceConfigurationAssignmentsCollectionRequestBuilder) ID(id string) *DeviceConfigurationAssignmentRequestBuilder {
	bb := &DeviceConfigurationAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceConfigurationAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceConfigurationAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceConfigurationAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceConfigurationAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceConfigurationAssignmentsCollectionRequest) Get() ([]DeviceConfigurationAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceConfigurationAssignmentsCollectionRequest) Add(reqObj *DeviceConfigurationAssignment) (*DeviceConfigurationAssignment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceConfigurationRequestBuilder) DeviceSettingStateSummaries() *DeviceConfigurationDeviceSettingStateSummariesCollectionRequestBuilder {
	bb := &DeviceConfigurationDeviceSettingStateSummariesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceSettingStateSummaries"
	return bb
}

//
type DeviceConfigurationDeviceSettingStateSummariesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationDeviceSettingStateSummariesCollectionRequestBuilder) Request() *DeviceConfigurationDeviceSettingStateSummariesCollectionRequest {
	return &DeviceConfigurationDeviceSettingStateSummariesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceConfigurationDeviceSettingStateSummariesCollectionRequestBuilder) ID(id string) *SettingStateDeviceSummaryRequestBuilder {
	bb := &SettingStateDeviceSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceConfigurationDeviceSettingStateSummariesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationDeviceSettingStateSummariesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SettingStateDeviceSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationDeviceSettingStateSummariesCollectionRequest) Paging(method, path string, obj interface{}) ([]SettingStateDeviceSummary, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SettingStateDeviceSummary
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SettingStateDeviceSummary
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceConfigurationDeviceSettingStateSummariesCollectionRequest) Get() ([]SettingStateDeviceSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceConfigurationDeviceSettingStateSummariesCollectionRequest) Add(reqObj *SettingStateDeviceSummary) (*SettingStateDeviceSummary, error) {
	return r.Do("POST", "", reqObj)
}

// DeviceStatusOverview returns service endpoint for DeviceConfigurationDeviceOverview
func (b *DeviceConfigurationRequestBuilder) DeviceStatusOverview() *DeviceConfigurationDeviceOverviewRequestBuilder {
	bb := &DeviceConfigurationDeviceOverviewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStatusOverview"
	return bb
}

//
func (b *DeviceConfigurationRequestBuilder) DeviceStatuses() *DeviceConfigurationDeviceStatusesCollectionRequestBuilder {
	bb := &DeviceConfigurationDeviceStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStatuses"
	return bb
}

//
type DeviceConfigurationDeviceStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationDeviceStatusesCollectionRequestBuilder) Request() *DeviceConfigurationDeviceStatusesCollectionRequest {
	return &DeviceConfigurationDeviceStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceConfigurationDeviceStatusesCollectionRequestBuilder) ID(id string) *DeviceConfigurationDeviceStatusRequestBuilder {
	bb := &DeviceConfigurationDeviceStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceConfigurationDeviceStatusesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationDeviceStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationDeviceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationDeviceStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceConfigurationDeviceStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceConfigurationDeviceStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceConfigurationDeviceStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceConfigurationDeviceStatusesCollectionRequest) Get() ([]DeviceConfigurationDeviceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceConfigurationDeviceStatusesCollectionRequest) Add(reqObj *DeviceConfigurationDeviceStatus) (*DeviceConfigurationDeviceStatus, error) {
	return r.Do("POST", "", reqObj)
}

// UserStatusOverview returns service endpoint for DeviceConfigurationUserOverview
func (b *DeviceConfigurationRequestBuilder) UserStatusOverview() *DeviceConfigurationUserOverviewRequestBuilder {
	bb := &DeviceConfigurationUserOverviewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/userStatusOverview"
	return bb
}

//
func (b *DeviceConfigurationRequestBuilder) UserStatuses() *DeviceConfigurationUserStatusesCollectionRequestBuilder {
	bb := &DeviceConfigurationUserStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/userStatuses"
	return bb
}

//
type DeviceConfigurationUserStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationUserStatusesCollectionRequestBuilder) Request() *DeviceConfigurationUserStatusesCollectionRequest {
	return &DeviceConfigurationUserStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceConfigurationUserStatusesCollectionRequestBuilder) ID(id string) *DeviceConfigurationUserStatusRequestBuilder {
	bb := &DeviceConfigurationUserStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceConfigurationUserStatusesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationUserStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationUserStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationUserStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceConfigurationUserStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceConfigurationUserStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceConfigurationUserStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceConfigurationUserStatusesCollectionRequest) Get() ([]DeviceConfigurationUserStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceConfigurationUserStatusesCollectionRequest) Add(reqObj *DeviceConfigurationUserStatus) (*DeviceConfigurationUserStatus, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceEnrollmentConfigurationRequestBuilder) Assignments() *DeviceEnrollmentConfigurationAssignmentsCollectionRequestBuilder {
	bb := &DeviceEnrollmentConfigurationAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type DeviceEnrollmentConfigurationAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceEnrollmentConfigurationAssignmentsCollectionRequestBuilder) Request() *DeviceEnrollmentConfigurationAssignmentsCollectionRequest {
	return &DeviceEnrollmentConfigurationAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceEnrollmentConfigurationAssignmentsCollectionRequestBuilder) ID(id string) *EnrollmentConfigurationAssignmentRequestBuilder {
	bb := &EnrollmentConfigurationAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceEnrollmentConfigurationAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceEnrollmentConfigurationAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EnrollmentConfigurationAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceEnrollmentConfigurationAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]EnrollmentConfigurationAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EnrollmentConfigurationAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EnrollmentConfigurationAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceEnrollmentConfigurationAssignmentsCollectionRequest) Get() ([]EnrollmentConfigurationAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceEnrollmentConfigurationAssignmentsCollectionRequest) Add(reqObj *EnrollmentConfigurationAssignment) (*EnrollmentConfigurationAssignment, error) {
	return r.Do("POST", "", reqObj)
}

// ApplePushNotificationCertificate returns service endpoint for ApplePushNotificationCertificate
func (b *DeviceManagementRequestBuilder) ApplePushNotificationCertificate() *ApplePushNotificationCertificateRequestBuilder {
	bb := &ApplePushNotificationCertificateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/applePushNotificationCertificate"
	return bb
}

// ConditionalAccessSettings returns service endpoint for OnPremisesConditionalAccessSettings
func (b *DeviceManagementRequestBuilder) ConditionalAccessSettings() *OnPremisesConditionalAccessSettingsRequestBuilder {
	bb := &OnPremisesConditionalAccessSettingsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/conditionalAccessSettings"
	return bb
}

//
func (b *DeviceManagementRequestBuilder) DetectedApps() *DeviceManagementDetectedAppsCollectionRequestBuilder {
	bb := &DeviceManagementDetectedAppsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/detectedApps"
	return bb
}

//
type DeviceManagementDetectedAppsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementDetectedAppsCollectionRequestBuilder) Request() *DeviceManagementDetectedAppsCollectionRequest {
	return &DeviceManagementDetectedAppsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementDetectedAppsCollectionRequestBuilder) ID(id string) *DetectedAppRequestBuilder {
	bb := &DetectedAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementDetectedAppsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementDetectedAppsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DetectedApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementDetectedAppsCollectionRequest) Paging(method, path string, obj interface{}) ([]DetectedApp, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DetectedApp
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DetectedApp
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementDetectedAppsCollectionRequest) Get() ([]DetectedApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementDetectedAppsCollectionRequest) Add(reqObj *DetectedApp) (*DetectedApp, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) DeviceCategories() *DeviceManagementDeviceCategoriesCollectionRequestBuilder {
	bb := &DeviceManagementDeviceCategoriesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceCategories"
	return bb
}

//
type DeviceManagementDeviceCategoriesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementDeviceCategoriesCollectionRequestBuilder) Request() *DeviceManagementDeviceCategoriesCollectionRequest {
	return &DeviceManagementDeviceCategoriesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementDeviceCategoriesCollectionRequestBuilder) ID(id string) *DeviceCategoryRequestBuilder {
	bb := &DeviceCategoryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementDeviceCategoriesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementDeviceCategoriesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCategory, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementDeviceCategoriesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceCategory, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceCategory
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceCategory
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementDeviceCategoriesCollectionRequest) Get() ([]DeviceCategory, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementDeviceCategoriesCollectionRequest) Add(reqObj *DeviceCategory) (*DeviceCategory, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) DeviceCompliancePolicies() *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder {
	bb := &DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceCompliancePolicies"
	return bb
}

//
type DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) Request() *DeviceManagementDeviceCompliancePoliciesCollectionRequest {
	return &DeviceManagementDeviceCompliancePoliciesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder) ID(id string) *DeviceCompliancePolicyRequestBuilder {
	bb := &DeviceCompliancePolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementDeviceCompliancePoliciesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementDeviceCompliancePoliciesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementDeviceCompliancePoliciesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceCompliancePolicy, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceCompliancePolicy
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceCompliancePolicy
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementDeviceCompliancePoliciesCollectionRequest) Get() ([]DeviceCompliancePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementDeviceCompliancePoliciesCollectionRequest) Add(reqObj *DeviceCompliancePolicy) (*DeviceCompliancePolicy, error) {
	return r.Do("POST", "", reqObj)
}

// DeviceCompliancePolicyDeviceStateSummary returns service endpoint for DeviceCompliancePolicyDeviceStateSummary
func (b *DeviceManagementRequestBuilder) DeviceCompliancePolicyDeviceStateSummary() *DeviceCompliancePolicyDeviceStateSummaryRequestBuilder {
	bb := &DeviceCompliancePolicyDeviceStateSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceCompliancePolicyDeviceStateSummary"
	return bb
}

//
func (b *DeviceManagementRequestBuilder) DeviceCompliancePolicySettingStateSummaries() *DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder {
	bb := &DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceCompliancePolicySettingStateSummaries"
	return bb
}

//
type DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder) Request() *DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequest {
	return &DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder) ID(id string) *DeviceCompliancePolicySettingStateSummaryRequestBuilder {
	bb := &DeviceCompliancePolicySettingStateSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicySettingStateSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceCompliancePolicySettingStateSummary, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceCompliancePolicySettingStateSummary
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceCompliancePolicySettingStateSummary
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequest) Get() ([]DeviceCompliancePolicySettingStateSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequest) Add(reqObj *DeviceCompliancePolicySettingStateSummary) (*DeviceCompliancePolicySettingStateSummary, error) {
	return r.Do("POST", "", reqObj)
}

// DeviceConfigurationDeviceStateSummaries returns service endpoint for DeviceConfigurationDeviceStateSummary
func (b *DeviceManagementRequestBuilder) DeviceConfigurationDeviceStateSummaries() *DeviceConfigurationDeviceStateSummaryRequestBuilder {
	bb := &DeviceConfigurationDeviceStateSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceConfigurationDeviceStateSummaries"
	return bb
}

//
func (b *DeviceManagementRequestBuilder) DeviceConfigurations() *DeviceManagementDeviceConfigurationsCollectionRequestBuilder {
	bb := &DeviceManagementDeviceConfigurationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceConfigurations"
	return bb
}

//
type DeviceManagementDeviceConfigurationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) Request() *DeviceManagementDeviceConfigurationsCollectionRequest {
	return &DeviceManagementDeviceConfigurationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementDeviceConfigurationsCollectionRequestBuilder) ID(id string) *DeviceConfigurationRequestBuilder {
	bb := &DeviceConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementDeviceConfigurationsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementDeviceConfigurationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementDeviceConfigurationsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceConfiguration, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceConfiguration
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceConfiguration
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementDeviceConfigurationsCollectionRequest) Get() ([]DeviceConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementDeviceConfigurationsCollectionRequest) Add(reqObj *DeviceConfiguration) (*DeviceConfiguration, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) DeviceEnrollmentConfigurations() *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder {
	bb := &DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceEnrollmentConfigurations"
	return bb
}

//
type DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder) Request() *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequest {
	return &DeviceManagementDeviceEnrollmentConfigurationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder) ID(id string) *DeviceEnrollmentConfigurationRequestBuilder {
	bb := &DeviceEnrollmentConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementDeviceEnrollmentConfigurationsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceEnrollmentConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceEnrollmentConfiguration, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceEnrollmentConfiguration
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceEnrollmentConfiguration
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequest) Get() ([]DeviceEnrollmentConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementDeviceEnrollmentConfigurationsCollectionRequest) Add(reqObj *DeviceEnrollmentConfiguration) (*DeviceEnrollmentConfiguration, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) DeviceManagementPartners() *DeviceManagementDeviceManagementPartnersCollectionRequestBuilder {
	bb := &DeviceManagementDeviceManagementPartnersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceManagementPartners"
	return bb
}

//
type DeviceManagementDeviceManagementPartnersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementDeviceManagementPartnersCollectionRequestBuilder) Request() *DeviceManagementDeviceManagementPartnersCollectionRequest {
	return &DeviceManagementDeviceManagementPartnersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementDeviceManagementPartnersCollectionRequestBuilder) ID(id string) *DeviceManagementPartnerRequestBuilder {
	bb := &DeviceManagementPartnerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementDeviceManagementPartnersCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementDeviceManagementPartnersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceManagementPartner, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementDeviceManagementPartnersCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceManagementPartner, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementPartner
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceManagementPartner
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementDeviceManagementPartnersCollectionRequest) Get() ([]DeviceManagementPartner, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementDeviceManagementPartnersCollectionRequest) Add(reqObj *DeviceManagementPartner) (*DeviceManagementPartner, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) ExchangeConnectors() *DeviceManagementExchangeConnectorsCollectionRequestBuilder {
	bb := &DeviceManagementExchangeConnectorsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/exchangeConnectors"
	return bb
}

//
type DeviceManagementExchangeConnectorsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementExchangeConnectorsCollectionRequestBuilder) Request() *DeviceManagementExchangeConnectorsCollectionRequest {
	return &DeviceManagementExchangeConnectorsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementExchangeConnectorsCollectionRequestBuilder) ID(id string) *DeviceManagementExchangeConnectorRequestBuilder {
	bb := &DeviceManagementExchangeConnectorRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementExchangeConnectorsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementExchangeConnectorsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceManagementExchangeConnector, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementExchangeConnectorsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceManagementExchangeConnector, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementExchangeConnector
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceManagementExchangeConnector
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementExchangeConnectorsCollectionRequest) Get() ([]DeviceManagementExchangeConnector, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementExchangeConnectorsCollectionRequest) Add(reqObj *DeviceManagementExchangeConnector) (*DeviceManagementExchangeConnector, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) IosUpdateStatuses() *DeviceManagementIosUpdateStatusesCollectionRequestBuilder {
	bb := &DeviceManagementIosUpdateStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/iosUpdateStatuses"
	return bb
}

//
type DeviceManagementIosUpdateStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementIosUpdateStatusesCollectionRequestBuilder) Request() *DeviceManagementIosUpdateStatusesCollectionRequest {
	return &DeviceManagementIosUpdateStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementIosUpdateStatusesCollectionRequestBuilder) ID(id string) *IosUpdateDeviceStatusRequestBuilder {
	bb := &IosUpdateDeviceStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementIosUpdateStatusesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementIosUpdateStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *IosUpdateDeviceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementIosUpdateStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]IosUpdateDeviceStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []IosUpdateDeviceStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []IosUpdateDeviceStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementIosUpdateStatusesCollectionRequest) Get() ([]IosUpdateDeviceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementIosUpdateStatusesCollectionRequest) Add(reqObj *IosUpdateDeviceStatus) (*IosUpdateDeviceStatus, error) {
	return r.Do("POST", "", reqObj)
}

// ManagedDeviceOverview returns service endpoint for ManagedDeviceOverview
func (b *DeviceManagementRequestBuilder) ManagedDeviceOverview() *ManagedDeviceOverviewRequestBuilder {
	bb := &ManagedDeviceOverviewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedDeviceOverview"
	return bb
}

//
func (b *DeviceManagementRequestBuilder) ManagedDevices() *DeviceManagementManagedDevicesCollectionRequestBuilder {
	bb := &DeviceManagementManagedDevicesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedDevices"
	return bb
}

//
type DeviceManagementManagedDevicesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) Request() *DeviceManagementManagedDevicesCollectionRequest {
	return &DeviceManagementManagedDevicesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) ID(id string) *ManagedDeviceRequestBuilder {
	bb := &ManagedDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementManagedDevicesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementManagedDevicesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDevice, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementManagedDevicesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedDevice, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDevice
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedDevice
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementManagedDevicesCollectionRequest) Get() ([]ManagedDevice, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementManagedDevicesCollectionRequest) Add(reqObj *ManagedDevice) (*ManagedDevice, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) MobileThreatDefenseConnectors() *DeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder {
	bb := &DeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/mobileThreatDefenseConnectors"
	return bb
}

//
type DeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder) Request() *DeviceManagementMobileThreatDefenseConnectorsCollectionRequest {
	return &DeviceManagementMobileThreatDefenseConnectorsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder) ID(id string) *MobileThreatDefenseConnectorRequestBuilder {
	bb := &MobileThreatDefenseConnectorRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementMobileThreatDefenseConnectorsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementMobileThreatDefenseConnectorsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MobileThreatDefenseConnector, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementMobileThreatDefenseConnectorsCollectionRequest) Paging(method, path string, obj interface{}) ([]MobileThreatDefenseConnector, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MobileThreatDefenseConnector
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MobileThreatDefenseConnector
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementMobileThreatDefenseConnectorsCollectionRequest) Get() ([]MobileThreatDefenseConnector, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementMobileThreatDefenseConnectorsCollectionRequest) Add(reqObj *MobileThreatDefenseConnector) (*MobileThreatDefenseConnector, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) NotificationMessageTemplates() *DeviceManagementNotificationMessageTemplatesCollectionRequestBuilder {
	bb := &DeviceManagementNotificationMessageTemplatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/notificationMessageTemplates"
	return bb
}

//
type DeviceManagementNotificationMessageTemplatesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementNotificationMessageTemplatesCollectionRequestBuilder) Request() *DeviceManagementNotificationMessageTemplatesCollectionRequest {
	return &DeviceManagementNotificationMessageTemplatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementNotificationMessageTemplatesCollectionRequestBuilder) ID(id string) *NotificationMessageTemplateRequestBuilder {
	bb := &NotificationMessageTemplateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementNotificationMessageTemplatesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementNotificationMessageTemplatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *NotificationMessageTemplate, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementNotificationMessageTemplatesCollectionRequest) Paging(method, path string, obj interface{}) ([]NotificationMessageTemplate, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []NotificationMessageTemplate
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []NotificationMessageTemplate
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementNotificationMessageTemplatesCollectionRequest) Get() ([]NotificationMessageTemplate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementNotificationMessageTemplatesCollectionRequest) Add(reqObj *NotificationMessageTemplate) (*NotificationMessageTemplate, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) RemoteAssistancePartners() *DeviceManagementRemoteAssistancePartnersCollectionRequestBuilder {
	bb := &DeviceManagementRemoteAssistancePartnersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/remoteAssistancePartners"
	return bb
}

//
type DeviceManagementRemoteAssistancePartnersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementRemoteAssistancePartnersCollectionRequestBuilder) Request() *DeviceManagementRemoteAssistancePartnersCollectionRequest {
	return &DeviceManagementRemoteAssistancePartnersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementRemoteAssistancePartnersCollectionRequestBuilder) ID(id string) *RemoteAssistancePartnerRequestBuilder {
	bb := &RemoteAssistancePartnerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementRemoteAssistancePartnersCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementRemoteAssistancePartnersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *RemoteAssistancePartner, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementRemoteAssistancePartnersCollectionRequest) Paging(method, path string, obj interface{}) ([]RemoteAssistancePartner, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []RemoteAssistancePartner
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []RemoteAssistancePartner
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementRemoteAssistancePartnersCollectionRequest) Get() ([]RemoteAssistancePartner, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementRemoteAssistancePartnersCollectionRequest) Add(reqObj *RemoteAssistancePartner) (*RemoteAssistancePartner, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) ResourceOperations() *DeviceManagementResourceOperationsCollectionRequestBuilder {
	bb := &DeviceManagementResourceOperationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/resourceOperations"
	return bb
}

//
type DeviceManagementResourceOperationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementResourceOperationsCollectionRequestBuilder) Request() *DeviceManagementResourceOperationsCollectionRequest {
	return &DeviceManagementResourceOperationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementResourceOperationsCollectionRequestBuilder) ID(id string) *ResourceOperationRequestBuilder {
	bb := &ResourceOperationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementResourceOperationsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementResourceOperationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ResourceOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementResourceOperationsCollectionRequest) Paging(method, path string, obj interface{}) ([]ResourceOperation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ResourceOperation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ResourceOperation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementResourceOperationsCollectionRequest) Get() ([]ResourceOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementResourceOperationsCollectionRequest) Add(reqObj *ResourceOperation) (*ResourceOperation, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) RoleAssignments() *DeviceManagementRoleAssignmentsCollectionRequestBuilder {
	bb := &DeviceManagementRoleAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/roleAssignments"
	return bb
}

//
type DeviceManagementRoleAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementRoleAssignmentsCollectionRequestBuilder) Request() *DeviceManagementRoleAssignmentsCollectionRequest {
	return &DeviceManagementRoleAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementRoleAssignmentsCollectionRequestBuilder) ID(id string) *DeviceAndAppManagementRoleAssignmentRequestBuilder {
	bb := &DeviceAndAppManagementRoleAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementRoleAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementRoleAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceAndAppManagementRoleAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementRoleAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceAndAppManagementRoleAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceAndAppManagementRoleAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceAndAppManagementRoleAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementRoleAssignmentsCollectionRequest) Get() ([]DeviceAndAppManagementRoleAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementRoleAssignmentsCollectionRequest) Add(reqObj *DeviceAndAppManagementRoleAssignment) (*DeviceAndAppManagementRoleAssignment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) RoleDefinitions() *DeviceManagementRoleDefinitionsCollectionRequestBuilder {
	bb := &DeviceManagementRoleDefinitionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/roleDefinitions"
	return bb
}

//
type DeviceManagementRoleDefinitionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementRoleDefinitionsCollectionRequestBuilder) Request() *DeviceManagementRoleDefinitionsCollectionRequest {
	return &DeviceManagementRoleDefinitionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementRoleDefinitionsCollectionRequestBuilder) ID(id string) *RoleDefinitionRequestBuilder {
	bb := &RoleDefinitionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementRoleDefinitionsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementRoleDefinitionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *RoleDefinition, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementRoleDefinitionsCollectionRequest) Paging(method, path string, obj interface{}) ([]RoleDefinition, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []RoleDefinition
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []RoleDefinition
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementRoleDefinitionsCollectionRequest) Get() ([]RoleDefinition, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementRoleDefinitionsCollectionRequest) Add(reqObj *RoleDefinition) (*RoleDefinition, error) {
	return r.Do("POST", "", reqObj)
}

// SoftwareUpdateStatusSummary returns service endpoint for SoftwareUpdateStatusSummary
func (b *DeviceManagementRequestBuilder) SoftwareUpdateStatusSummary() *SoftwareUpdateStatusSummaryRequestBuilder {
	bb := &SoftwareUpdateStatusSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/softwareUpdateStatusSummary"
	return bb
}

//
func (b *DeviceManagementRequestBuilder) TelecomExpenseManagementPartners() *DeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder {
	bb := &DeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/telecomExpenseManagementPartners"
	return bb
}

//
type DeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder) Request() *DeviceManagementTelecomExpenseManagementPartnersCollectionRequest {
	return &DeviceManagementTelecomExpenseManagementPartnersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder) ID(id string) *TelecomExpenseManagementPartnerRequestBuilder {
	bb := &TelecomExpenseManagementPartnerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementTelecomExpenseManagementPartnersCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementTelecomExpenseManagementPartnersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TelecomExpenseManagementPartner, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementTelecomExpenseManagementPartnersCollectionRequest) Paging(method, path string, obj interface{}) ([]TelecomExpenseManagementPartner, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TelecomExpenseManagementPartner
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TelecomExpenseManagementPartner
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementTelecomExpenseManagementPartnersCollectionRequest) Get() ([]TelecomExpenseManagementPartner, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementTelecomExpenseManagementPartnersCollectionRequest) Add(reqObj *TelecomExpenseManagementPartner) (*TelecomExpenseManagementPartner, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) TermsAndConditions() *DeviceManagementTermsAndConditionsCollectionRequestBuilder {
	bb := &DeviceManagementTermsAndConditionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/termsAndConditions"
	return bb
}

//
type DeviceManagementTermsAndConditionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementTermsAndConditionsCollectionRequestBuilder) Request() *DeviceManagementTermsAndConditionsCollectionRequest {
	return &DeviceManagementTermsAndConditionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementTermsAndConditionsCollectionRequestBuilder) ID(id string) *TermsAndConditionsRequestBuilder {
	bb := &TermsAndConditionsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementTermsAndConditionsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementTermsAndConditionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TermsAndConditions, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementTermsAndConditionsCollectionRequest) Paging(method, path string, obj interface{}) ([]TermsAndConditions, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TermsAndConditions
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TermsAndConditions
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementTermsAndConditionsCollectionRequest) Get() ([]TermsAndConditions, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementTermsAndConditionsCollectionRequest) Add(reqObj *TermsAndConditions) (*TermsAndConditions, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) TroubleshootingEvents() *DeviceManagementTroubleshootingEventsCollectionRequestBuilder {
	bb := &DeviceManagementTroubleshootingEventsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/troubleshootingEvents"
	return bb
}

//
type DeviceManagementTroubleshootingEventsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementTroubleshootingEventsCollectionRequestBuilder) Request() *DeviceManagementTroubleshootingEventsCollectionRequest {
	return &DeviceManagementTroubleshootingEventsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementTroubleshootingEventsCollectionRequestBuilder) ID(id string) *DeviceManagementTroubleshootingEventRequestBuilder {
	bb := &DeviceManagementTroubleshootingEventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementTroubleshootingEventsCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementTroubleshootingEventsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceManagementTroubleshootingEvent, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementTroubleshootingEventsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceManagementTroubleshootingEvent, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementTroubleshootingEvent
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceManagementTroubleshootingEvent
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementTroubleshootingEventsCollectionRequest) Get() ([]DeviceManagementTroubleshootingEvent, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementTroubleshootingEventsCollectionRequest) Add(reqObj *DeviceManagementTroubleshootingEvent) (*DeviceManagementTroubleshootingEvent, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) WindowsInformationProtectionAppLearningSummaries() *DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder {
	bb := &DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/windowsInformationProtectionAppLearningSummaries"
	return bb
}

//
type DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder) Request() *DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequest {
	return &DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder) ID(id string) *WindowsInformationProtectionAppLearningSummaryRequestBuilder {
	bb := &WindowsInformationProtectionAppLearningSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionAppLearningSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequest) Paging(method, path string, obj interface{}) ([]WindowsInformationProtectionAppLearningSummary, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WindowsInformationProtectionAppLearningSummary
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WindowsInformationProtectionAppLearningSummary
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequest) Get() ([]WindowsInformationProtectionAppLearningSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequest) Add(reqObj *WindowsInformationProtectionAppLearningSummary) (*WindowsInformationProtectionAppLearningSummary, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DeviceManagementRequestBuilder) WindowsInformationProtectionNetworkLearningSummaries() *DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder {
	bb := &DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/windowsInformationProtectionNetworkLearningSummaries"
	return bb
}

//
type DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder) Request() *DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequest {
	return &DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder) ID(id string) *WindowsInformationProtectionNetworkLearningSummaryRequestBuilder {
	bb := &WindowsInformationProtectionNetworkLearningSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequest struct{ BaseRequest }

//
func (r *DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionNetworkLearningSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequest) Paging(method, path string, obj interface{}) ([]WindowsInformationProtectionNetworkLearningSummary, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WindowsInformationProtectionNetworkLearningSummary
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WindowsInformationProtectionNetworkLearningSummary
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequest) Get() ([]WindowsInformationProtectionNetworkLearningSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequest) Add(reqObj *WindowsInformationProtectionNetworkLearningSummary) (*WindowsInformationProtectionNetworkLearningSummary, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DirectoryRequestBuilder) DeletedItems() *DirectoryDeletedItemsCollectionRequestBuilder {
	bb := &DirectoryDeletedItemsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deletedItems"
	return bb
}

//
type DirectoryDeletedItemsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryDeletedItemsCollectionRequestBuilder) Request() *DirectoryDeletedItemsCollectionRequest {
	return &DirectoryDeletedItemsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DirectoryDeletedItemsCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DirectoryDeletedItemsCollectionRequest struct{ BaseRequest }

//
func (r *DirectoryDeletedItemsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryDeletedItemsCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DirectoryDeletedItemsCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DirectoryDeletedItemsCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DirectoryRoleRequestBuilder) Members() *DirectoryRoleMembersCollectionRequestBuilder {
	bb := &DirectoryRoleMembersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/members"
	return bb
}

//
type DirectoryRoleMembersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryRoleMembersCollectionRequestBuilder) Request() *DirectoryRoleMembersCollectionRequest {
	return &DirectoryRoleMembersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DirectoryRoleMembersCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DirectoryRoleMembersCollectionRequest struct{ BaseRequest }

//
func (r *DirectoryRoleMembersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryRoleMembersCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DirectoryRoleMembersCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DirectoryRoleMembersCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DomainRequestBuilder) DomainNameReferences() *DomainDomainNameReferencesCollectionRequestBuilder {
	bb := &DomainDomainNameReferencesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/domainNameReferences"
	return bb
}

//
type DomainDomainNameReferencesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DomainDomainNameReferencesCollectionRequestBuilder) Request() *DomainDomainNameReferencesCollectionRequest {
	return &DomainDomainNameReferencesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DomainDomainNameReferencesCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DomainDomainNameReferencesCollectionRequest struct{ BaseRequest }

//
func (r *DomainDomainNameReferencesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DomainDomainNameReferencesCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DomainDomainNameReferencesCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DomainDomainNameReferencesCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DomainRequestBuilder) ServiceConfigurationRecords() *DomainServiceConfigurationRecordsCollectionRequestBuilder {
	bb := &DomainServiceConfigurationRecordsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/serviceConfigurationRecords"
	return bb
}

//
type DomainServiceConfigurationRecordsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DomainServiceConfigurationRecordsCollectionRequestBuilder) Request() *DomainServiceConfigurationRecordsCollectionRequest {
	return &DomainServiceConfigurationRecordsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DomainServiceConfigurationRecordsCollectionRequestBuilder) ID(id string) *DomainDnsRecordRequestBuilder {
	bb := &DomainDnsRecordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DomainServiceConfigurationRecordsCollectionRequest struct{ BaseRequest }

//
func (r *DomainServiceConfigurationRecordsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DomainDnsRecord, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DomainServiceConfigurationRecordsCollectionRequest) Paging(method, path string, obj interface{}) ([]DomainDnsRecord, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DomainDnsRecord
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DomainDnsRecord
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DomainServiceConfigurationRecordsCollectionRequest) Get() ([]DomainDnsRecord, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DomainServiceConfigurationRecordsCollectionRequest) Add(reqObj *DomainDnsRecord) (*DomainDnsRecord, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DomainRequestBuilder) VerificationDnsRecords() *DomainVerificationDnsRecordsCollectionRequestBuilder {
	bb := &DomainVerificationDnsRecordsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/verificationDnsRecords"
	return bb
}

//
type DomainVerificationDnsRecordsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DomainVerificationDnsRecordsCollectionRequestBuilder) Request() *DomainVerificationDnsRecordsCollectionRequest {
	return &DomainVerificationDnsRecordsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DomainVerificationDnsRecordsCollectionRequestBuilder) ID(id string) *DomainDnsRecordRequestBuilder {
	bb := &DomainDnsRecordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DomainVerificationDnsRecordsCollectionRequest struct{ BaseRequest }

//
func (r *DomainVerificationDnsRecordsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DomainDnsRecord, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DomainVerificationDnsRecordsCollectionRequest) Paging(method, path string, obj interface{}) ([]DomainDnsRecord, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DomainDnsRecord
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DomainDnsRecord
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DomainVerificationDnsRecordsCollectionRequest) Get() ([]DomainDnsRecord, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DomainVerificationDnsRecordsCollectionRequest) Add(reqObj *DomainDnsRecord) (*DomainDnsRecord, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DriveRequestBuilder) Items() *DriveItemsCollectionRequestBuilder {
	bb := &DriveItemsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/items"
	return bb
}

//
type DriveItemsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemsCollectionRequestBuilder) Request() *DriveItemsCollectionRequest {
	return &DriveItemsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DriveItemsCollectionRequestBuilder) ID(id string) *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DriveItemsCollectionRequest struct{ BaseRequest }

//
func (r *DriveItemsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemsCollectionRequest) Paging(method, path string, obj interface{}) ([]DriveItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DriveItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DriveItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DriveItemsCollectionRequest) Get() ([]DriveItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DriveItemsCollectionRequest) Add(reqObj *DriveItem) (*DriveItem, error) {
	return r.Do("POST", "", reqObj)
}

// List returns service endpoint for List
func (b *DriveRequestBuilder) List() *ListRequestBuilder {
	bb := &ListRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/list"
	return bb
}

// Root returns service endpoint for DriveItem
func (b *DriveRequestBuilder) Root() *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/root"
	return bb
}

//
func (b *DriveRequestBuilder) Special() *DriveSpecialCollectionRequestBuilder {
	bb := &DriveSpecialCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/special"
	return bb
}

//
type DriveSpecialCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveSpecialCollectionRequestBuilder) Request() *DriveSpecialCollectionRequest {
	return &DriveSpecialCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DriveSpecialCollectionRequestBuilder) ID(id string) *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DriveSpecialCollectionRequest struct{ BaseRequest }

//
func (r *DriveSpecialCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveSpecialCollectionRequest) Paging(method, path string, obj interface{}) ([]DriveItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DriveItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DriveItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DriveSpecialCollectionRequest) Get() ([]DriveItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DriveSpecialCollectionRequest) Add(reqObj *DriveItem) (*DriveItem, error) {
	return r.Do("POST", "", reqObj)
}

// Analytics returns service endpoint for ItemAnalytics
func (b *DriveItemRequestBuilder) Analytics() *ItemAnalyticsRequestBuilder {
	bb := &ItemAnalyticsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/analytics"
	return bb
}

//
func (b *DriveItemRequestBuilder) Children() *DriveItemChildrenCollectionRequestBuilder {
	bb := &DriveItemChildrenCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/children"
	return bb
}

//
type DriveItemChildrenCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemChildrenCollectionRequestBuilder) Request() *DriveItemChildrenCollectionRequest {
	return &DriveItemChildrenCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DriveItemChildrenCollectionRequestBuilder) ID(id string) *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DriveItemChildrenCollectionRequest struct{ BaseRequest }

//
func (r *DriveItemChildrenCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemChildrenCollectionRequest) Paging(method, path string, obj interface{}) ([]DriveItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DriveItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DriveItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DriveItemChildrenCollectionRequest) Get() ([]DriveItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DriveItemChildrenCollectionRequest) Add(reqObj *DriveItem) (*DriveItem, error) {
	return r.Do("POST", "", reqObj)
}

// ListItem returns service endpoint for ListItem
func (b *DriveItemRequestBuilder) ListItem() *ListItemRequestBuilder {
	bb := &ListItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/listItem"
	return bb
}

//
func (b *DriveItemRequestBuilder) Permissions() *DriveItemPermissionsCollectionRequestBuilder {
	bb := &DriveItemPermissionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/permissions"
	return bb
}

//
type DriveItemPermissionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemPermissionsCollectionRequestBuilder) Request() *DriveItemPermissionsCollectionRequest {
	return &DriveItemPermissionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DriveItemPermissionsCollectionRequestBuilder) ID(id string) *PermissionRequestBuilder {
	bb := &PermissionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DriveItemPermissionsCollectionRequest struct{ BaseRequest }

//
func (r *DriveItemPermissionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Permission, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemPermissionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Permission, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Permission
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Permission
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DriveItemPermissionsCollectionRequest) Get() ([]Permission, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DriveItemPermissionsCollectionRequest) Add(reqObj *Permission) (*Permission, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DriveItemRequestBuilder) Subscriptions() *DriveItemSubscriptionsCollectionRequestBuilder {
	bb := &DriveItemSubscriptionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/subscriptions"
	return bb
}

//
type DriveItemSubscriptionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemSubscriptionsCollectionRequestBuilder) Request() *DriveItemSubscriptionsCollectionRequest {
	return &DriveItemSubscriptionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DriveItemSubscriptionsCollectionRequestBuilder) ID(id string) *SubscriptionRequestBuilder {
	bb := &SubscriptionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DriveItemSubscriptionsCollectionRequest struct{ BaseRequest }

//
func (r *DriveItemSubscriptionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Subscription, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemSubscriptionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Subscription, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Subscription
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Subscription
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DriveItemSubscriptionsCollectionRequest) Get() ([]Subscription, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DriveItemSubscriptionsCollectionRequest) Add(reqObj *Subscription) (*Subscription, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DriveItemRequestBuilder) Thumbnails() *DriveItemThumbnailsCollectionRequestBuilder {
	bb := &DriveItemThumbnailsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/thumbnails"
	return bb
}

//
type DriveItemThumbnailsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemThumbnailsCollectionRequestBuilder) Request() *DriveItemThumbnailsCollectionRequest {
	return &DriveItemThumbnailsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DriveItemThumbnailsCollectionRequestBuilder) ID(id string) *ThumbnailSetRequestBuilder {
	bb := &ThumbnailSetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DriveItemThumbnailsCollectionRequest struct{ BaseRequest }

//
func (r *DriveItemThumbnailsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ThumbnailSet, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemThumbnailsCollectionRequest) Paging(method, path string, obj interface{}) ([]ThumbnailSet, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ThumbnailSet
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ThumbnailSet
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DriveItemThumbnailsCollectionRequest) Get() ([]ThumbnailSet, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DriveItemThumbnailsCollectionRequest) Add(reqObj *ThumbnailSet) (*ThumbnailSet, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *DriveItemRequestBuilder) Versions() *DriveItemVersionsCollectionRequestBuilder {
	bb := &DriveItemVersionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/versions"
	return bb
}

//
type DriveItemVersionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemVersionsCollectionRequestBuilder) Request() *DriveItemVersionsCollectionRequest {
	return &DriveItemVersionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *DriveItemVersionsCollectionRequestBuilder) ID(id string) *DriveItemVersionRequestBuilder {
	bb := &DriveItemVersionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type DriveItemVersionsCollectionRequest struct{ BaseRequest }

//
func (r *DriveItemVersionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItemVersion, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemVersionsCollectionRequest) Paging(method, path string, obj interface{}) ([]DriveItemVersion, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DriveItemVersion
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DriveItemVersion
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DriveItemVersionsCollectionRequest) Get() ([]DriveItemVersion, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *DriveItemVersionsCollectionRequest) Add(reqObj *DriveItemVersion) (*DriveItemVersion, error) {
	return r.Do("POST", "", reqObj)
}

// Workbook returns service endpoint for Workbook
func (b *DriveItemRequestBuilder) Workbook() *WorkbookRequestBuilder {
	bb := &WorkbookRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/workbook"
	return bb
}

// Group returns service endpoint for Group
func (b *EducationClassRequestBuilder) Group() *GroupRequestBuilder {
	bb := &GroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/group"
	return bb
}

//
func (b *EducationClassRequestBuilder) Members() *EducationClassMembersCollectionRequestBuilder {
	bb := &EducationClassMembersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/members"
	return bb
}

//
type EducationClassMembersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationClassMembersCollectionRequestBuilder) Request() *EducationClassMembersCollectionRequest {
	return &EducationClassMembersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationClassMembersCollectionRequestBuilder) ID(id string) *EducationUserRequestBuilder {
	bb := &EducationUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationClassMembersCollectionRequest struct{ BaseRequest }

//
func (r *EducationClassMembersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationUser, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationClassMembersCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationUser, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationUser
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationUser
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationClassMembersCollectionRequest) Get() ([]EducationUser, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationClassMembersCollectionRequest) Add(reqObj *EducationUser) (*EducationUser, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EducationClassRequestBuilder) Schools() *EducationClassSchoolsCollectionRequestBuilder {
	bb := &EducationClassSchoolsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/schools"
	return bb
}

//
type EducationClassSchoolsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationClassSchoolsCollectionRequestBuilder) Request() *EducationClassSchoolsCollectionRequest {
	return &EducationClassSchoolsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationClassSchoolsCollectionRequestBuilder) ID(id string) *EducationSchoolRequestBuilder {
	bb := &EducationSchoolRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationClassSchoolsCollectionRequest struct{ BaseRequest }

//
func (r *EducationClassSchoolsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationSchool, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationClassSchoolsCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationSchool, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationSchool
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationSchool
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationClassSchoolsCollectionRequest) Get() ([]EducationSchool, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationClassSchoolsCollectionRequest) Add(reqObj *EducationSchool) (*EducationSchool, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EducationClassRequestBuilder) Teachers() *EducationClassTeachersCollectionRequestBuilder {
	bb := &EducationClassTeachersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/teachers"
	return bb
}

//
type EducationClassTeachersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationClassTeachersCollectionRequestBuilder) Request() *EducationClassTeachersCollectionRequest {
	return &EducationClassTeachersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationClassTeachersCollectionRequestBuilder) ID(id string) *EducationUserRequestBuilder {
	bb := &EducationUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationClassTeachersCollectionRequest struct{ BaseRequest }

//
func (r *EducationClassTeachersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationUser, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationClassTeachersCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationUser, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationUser
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationUser
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationClassTeachersCollectionRequest) Get() ([]EducationUser, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationClassTeachersCollectionRequest) Add(reqObj *EducationUser) (*EducationUser, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EducationRootRequestBuilder) Classes() *EducationRootClassesCollectionRequestBuilder {
	bb := &EducationRootClassesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/classes"
	return bb
}

//
type EducationRootClassesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationRootClassesCollectionRequestBuilder) Request() *EducationRootClassesCollectionRequest {
	return &EducationRootClassesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationRootClassesCollectionRequestBuilder) ID(id string) *EducationClassRequestBuilder {
	bb := &EducationClassRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationRootClassesCollectionRequest struct{ BaseRequest }

//
func (r *EducationRootClassesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationClass, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationRootClassesCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationClass, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationClass
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationClass
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationRootClassesCollectionRequest) Get() ([]EducationClass, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationRootClassesCollectionRequest) Add(reqObj *EducationClass) (*EducationClass, error) {
	return r.Do("POST", "", reqObj)
}

// Me returns service endpoint for EducationUser
func (b *EducationRootRequestBuilder) Me() *EducationUserRequestBuilder {
	bb := &EducationUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/me"
	return bb
}

//
func (b *EducationRootRequestBuilder) Schools() *EducationRootSchoolsCollectionRequestBuilder {
	bb := &EducationRootSchoolsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/schools"
	return bb
}

//
type EducationRootSchoolsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationRootSchoolsCollectionRequestBuilder) Request() *EducationRootSchoolsCollectionRequest {
	return &EducationRootSchoolsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationRootSchoolsCollectionRequestBuilder) ID(id string) *EducationSchoolRequestBuilder {
	bb := &EducationSchoolRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationRootSchoolsCollectionRequest struct{ BaseRequest }

//
func (r *EducationRootSchoolsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationSchool, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationRootSchoolsCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationSchool, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationSchool
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationSchool
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationRootSchoolsCollectionRequest) Get() ([]EducationSchool, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationRootSchoolsCollectionRequest) Add(reqObj *EducationSchool) (*EducationSchool, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EducationRootRequestBuilder) Users() *EducationRootUsersCollectionRequestBuilder {
	bb := &EducationRootUsersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/users"
	return bb
}

//
type EducationRootUsersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationRootUsersCollectionRequestBuilder) Request() *EducationRootUsersCollectionRequest {
	return &EducationRootUsersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationRootUsersCollectionRequestBuilder) ID(id string) *EducationUserRequestBuilder {
	bb := &EducationUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationRootUsersCollectionRequest struct{ BaseRequest }

//
func (r *EducationRootUsersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationUser, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationRootUsersCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationUser, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationUser
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationUser
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationRootUsersCollectionRequest) Get() ([]EducationUser, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationRootUsersCollectionRequest) Add(reqObj *EducationUser) (*EducationUser, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EducationSchoolRequestBuilder) Classes() *EducationSchoolClassesCollectionRequestBuilder {
	bb := &EducationSchoolClassesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/classes"
	return bb
}

//
type EducationSchoolClassesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationSchoolClassesCollectionRequestBuilder) Request() *EducationSchoolClassesCollectionRequest {
	return &EducationSchoolClassesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationSchoolClassesCollectionRequestBuilder) ID(id string) *EducationClassRequestBuilder {
	bb := &EducationClassRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationSchoolClassesCollectionRequest struct{ BaseRequest }

//
func (r *EducationSchoolClassesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationClass, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationSchoolClassesCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationClass, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationClass
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationClass
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationSchoolClassesCollectionRequest) Get() ([]EducationClass, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationSchoolClassesCollectionRequest) Add(reqObj *EducationClass) (*EducationClass, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EducationSchoolRequestBuilder) Users() *EducationSchoolUsersCollectionRequestBuilder {
	bb := &EducationSchoolUsersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/users"
	return bb
}

//
type EducationSchoolUsersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationSchoolUsersCollectionRequestBuilder) Request() *EducationSchoolUsersCollectionRequest {
	return &EducationSchoolUsersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationSchoolUsersCollectionRequestBuilder) ID(id string) *EducationUserRequestBuilder {
	bb := &EducationUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationSchoolUsersCollectionRequest struct{ BaseRequest }

//
func (r *EducationSchoolUsersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationUser, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationSchoolUsersCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationUser, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationUser
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationUser
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationSchoolUsersCollectionRequest) Get() ([]EducationUser, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationSchoolUsersCollectionRequest) Add(reqObj *EducationUser) (*EducationUser, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EducationUserRequestBuilder) Classes() *EducationUserClassesCollectionRequestBuilder {
	bb := &EducationUserClassesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/classes"
	return bb
}

//
type EducationUserClassesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationUserClassesCollectionRequestBuilder) Request() *EducationUserClassesCollectionRequest {
	return &EducationUserClassesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationUserClassesCollectionRequestBuilder) ID(id string) *EducationClassRequestBuilder {
	bb := &EducationClassRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationUserClassesCollectionRequest struct{ BaseRequest }

//
func (r *EducationUserClassesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationClass, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationUserClassesCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationClass, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationClass
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationClass
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationUserClassesCollectionRequest) Get() ([]EducationClass, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationUserClassesCollectionRequest) Add(reqObj *EducationClass) (*EducationClass, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EducationUserRequestBuilder) Schools() *EducationUserSchoolsCollectionRequestBuilder {
	bb := &EducationUserSchoolsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/schools"
	return bb
}

//
type EducationUserSchoolsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EducationUserSchoolsCollectionRequestBuilder) Request() *EducationUserSchoolsCollectionRequest {
	return &EducationUserSchoolsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EducationUserSchoolsCollectionRequestBuilder) ID(id string) *EducationSchoolRequestBuilder {
	bb := &EducationSchoolRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EducationUserSchoolsCollectionRequest struct{ BaseRequest }

//
func (r *EducationUserSchoolsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *EducationSchool, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EducationUserSchoolsCollectionRequest) Paging(method, path string, obj interface{}) ([]EducationSchool, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationSchool
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []EducationSchool
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationUserSchoolsCollectionRequest) Get() ([]EducationSchool, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EducationUserSchoolsCollectionRequest) Add(reqObj *EducationSchool) (*EducationSchool, error) {
	return r.Do("POST", "", reqObj)
}

// User returns service endpoint for User
func (b *EducationUserRequestBuilder) User() *UserRequestBuilder {
	bb := &UserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/user"
	return bb
}

//
func (b *EventRequestBuilder) Attachments() *EventAttachmentsCollectionRequestBuilder {
	bb := &EventAttachmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/attachments"
	return bb
}

//
type EventAttachmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventAttachmentsCollectionRequestBuilder) Request() *EventAttachmentsCollectionRequest {
	return &EventAttachmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EventAttachmentsCollectionRequestBuilder) ID(id string) *AttachmentRequestBuilder {
	bb := &AttachmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EventAttachmentsCollectionRequest struct{ BaseRequest }

//
func (r *EventAttachmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Attachment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EventAttachmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]Attachment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Attachment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Attachment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EventAttachmentsCollectionRequest) Get() ([]Attachment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EventAttachmentsCollectionRequest) Add(reqObj *Attachment) (*Attachment, error) {
	return r.Do("POST", "", reqObj)
}

// Calendar returns service endpoint for Calendar
func (b *EventRequestBuilder) Calendar() *CalendarRequestBuilder {
	bb := &CalendarRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendar"
	return bb
}

//
func (b *EventRequestBuilder) Extensions() *EventExtensionsCollectionRequestBuilder {
	bb := &EventExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/extensions"
	return bb
}

//
type EventExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventExtensionsCollectionRequestBuilder) Request() *EventExtensionsCollectionRequest {
	return &EventExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EventExtensionsCollectionRequestBuilder) ID(id string) *ExtensionRequestBuilder {
	bb := &ExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EventExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *EventExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EventExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Extension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Extension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Extension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EventExtensionsCollectionRequest) Get() ([]Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EventExtensionsCollectionRequest) Add(reqObj *Extension) (*Extension, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EventRequestBuilder) Instances() *EventInstancesCollectionRequestBuilder {
	bb := &EventInstancesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/instances"
	return bb
}

//
type EventInstancesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventInstancesCollectionRequestBuilder) Request() *EventInstancesCollectionRequest {
	return &EventInstancesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EventInstancesCollectionRequestBuilder) ID(id string) *EventRequestBuilder {
	bb := &EventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EventInstancesCollectionRequest struct{ BaseRequest }

//
func (r *EventInstancesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Event, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EventInstancesCollectionRequest) Paging(method, path string, obj interface{}) ([]Event, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Event
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Event
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EventInstancesCollectionRequest) Get() ([]Event, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EventInstancesCollectionRequest) Add(reqObj *Event) (*Event, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EventRequestBuilder) MultiValueExtendedProperties() *EventMultiValueExtendedPropertiesCollectionRequestBuilder {
	bb := &EventMultiValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/multiValueExtendedProperties"
	return bb
}

//
type EventMultiValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventMultiValueExtendedPropertiesCollectionRequestBuilder) Request() *EventMultiValueExtendedPropertiesCollectionRequest {
	return &EventMultiValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EventMultiValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *MultiValueLegacyExtendedPropertyRequestBuilder {
	bb := &MultiValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EventMultiValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *EventMultiValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MultiValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EventMultiValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]MultiValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MultiValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MultiValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EventMultiValueExtendedPropertiesCollectionRequest) Get() ([]MultiValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EventMultiValueExtendedPropertiesCollectionRequest) Add(reqObj *MultiValueLegacyExtendedProperty) (*MultiValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *EventRequestBuilder) SingleValueExtendedProperties() *EventSingleValueExtendedPropertiesCollectionRequestBuilder {
	bb := &EventSingleValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/singleValueExtendedProperties"
	return bb
}

//
type EventSingleValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventSingleValueExtendedPropertiesCollectionRequestBuilder) Request() *EventSingleValueExtendedPropertiesCollectionRequest {
	return &EventSingleValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *EventSingleValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *SingleValueLegacyExtendedPropertyRequestBuilder {
	bb := &SingleValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type EventSingleValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *EventSingleValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SingleValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *EventSingleValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]SingleValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SingleValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SingleValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EventSingleValueExtendedPropertiesCollectionRequest) Get() ([]SingleValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *EventSingleValueExtendedPropertiesCollectionRequest) Add(reqObj *SingleValueLegacyExtendedProperty) (*SingleValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

// Event returns service endpoint for Event
func (b *EventMessageRequestBuilder) Event() *EventRequestBuilder {
	bb := &EventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/event"
	return bb
}

//
func (b *GroupRequestBuilder) AcceptedSenders() *GroupAcceptedSendersCollectionRequestBuilder {
	bb := &GroupAcceptedSendersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/acceptedSenders"
	return bb
}

//
type GroupAcceptedSendersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupAcceptedSendersCollectionRequestBuilder) Request() *GroupAcceptedSendersCollectionRequest {
	return &GroupAcceptedSendersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupAcceptedSendersCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupAcceptedSendersCollectionRequest struct{ BaseRequest }

//
func (r *GroupAcceptedSendersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupAcceptedSendersCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupAcceptedSendersCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupAcceptedSendersCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

// Calendar returns service endpoint for Calendar
func (b *GroupRequestBuilder) Calendar() *CalendarRequestBuilder {
	bb := &CalendarRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendar"
	return bb
}

//
func (b *GroupRequestBuilder) CalendarView() *GroupCalendarViewCollectionRequestBuilder {
	bb := &GroupCalendarViewCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendarView"
	return bb
}

//
type GroupCalendarViewCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupCalendarViewCollectionRequestBuilder) Request() *GroupCalendarViewCollectionRequest {
	return &GroupCalendarViewCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupCalendarViewCollectionRequestBuilder) ID(id string) *EventRequestBuilder {
	bb := &EventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupCalendarViewCollectionRequest struct{ BaseRequest }

//
func (r *GroupCalendarViewCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Event, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupCalendarViewCollectionRequest) Paging(method, path string, obj interface{}) ([]Event, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Event
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Event
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupCalendarViewCollectionRequest) Get() ([]Event, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupCalendarViewCollectionRequest) Add(reqObj *Event) (*Event, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) Conversations() *GroupConversationsCollectionRequestBuilder {
	bb := &GroupConversationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/conversations"
	return bb
}

//
type GroupConversationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupConversationsCollectionRequestBuilder) Request() *GroupConversationsCollectionRequest {
	return &GroupConversationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupConversationsCollectionRequestBuilder) ID(id string) *ConversationRequestBuilder {
	bb := &ConversationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupConversationsCollectionRequest struct{ BaseRequest }

//
func (r *GroupConversationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Conversation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupConversationsCollectionRequest) Paging(method, path string, obj interface{}) ([]Conversation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Conversation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Conversation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupConversationsCollectionRequest) Get() ([]Conversation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupConversationsCollectionRequest) Add(reqObj *Conversation) (*Conversation, error) {
	return r.Do("POST", "", reqObj)
}

// CreatedOnBehalfOf returns service endpoint for DirectoryObject
func (b *GroupRequestBuilder) CreatedOnBehalfOf() *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/createdOnBehalfOf"
	return bb
}

// Drive returns service endpoint for Drive
func (b *GroupRequestBuilder) Drive() *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drive"
	return bb
}

//
func (b *GroupRequestBuilder) Drives() *GroupDrivesCollectionRequestBuilder {
	bb := &GroupDrivesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drives"
	return bb
}

//
type GroupDrivesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupDrivesCollectionRequestBuilder) Request() *GroupDrivesCollectionRequest {
	return &GroupDrivesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupDrivesCollectionRequestBuilder) ID(id string) *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupDrivesCollectionRequest struct{ BaseRequest }

//
func (r *GroupDrivesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Drive, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupDrivesCollectionRequest) Paging(method, path string, obj interface{}) ([]Drive, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Drive
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Drive
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupDrivesCollectionRequest) Get() ([]Drive, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupDrivesCollectionRequest) Add(reqObj *Drive) (*Drive, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) Events() *GroupEventsCollectionRequestBuilder {
	bb := &GroupEventsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/events"
	return bb
}

//
type GroupEventsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupEventsCollectionRequestBuilder) Request() *GroupEventsCollectionRequest {
	return &GroupEventsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupEventsCollectionRequestBuilder) ID(id string) *EventRequestBuilder {
	bb := &EventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupEventsCollectionRequest struct{ BaseRequest }

//
func (r *GroupEventsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Event, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupEventsCollectionRequest) Paging(method, path string, obj interface{}) ([]Event, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Event
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Event
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupEventsCollectionRequest) Get() ([]Event, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupEventsCollectionRequest) Add(reqObj *Event) (*Event, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) Extensions() *GroupExtensionsCollectionRequestBuilder {
	bb := &GroupExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/extensions"
	return bb
}

//
type GroupExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupExtensionsCollectionRequestBuilder) Request() *GroupExtensionsCollectionRequest {
	return &GroupExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupExtensionsCollectionRequestBuilder) ID(id string) *ExtensionRequestBuilder {
	bb := &ExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *GroupExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Extension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Extension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Extension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupExtensionsCollectionRequest) Get() ([]Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupExtensionsCollectionRequest) Add(reqObj *Extension) (*Extension, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) GroupLifecyclePolicies() *GroupGroupLifecyclePoliciesCollectionRequestBuilder {
	bb := &GroupGroupLifecyclePoliciesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/groupLifecyclePolicies"
	return bb
}

//
type GroupGroupLifecyclePoliciesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupGroupLifecyclePoliciesCollectionRequestBuilder) Request() *GroupGroupLifecyclePoliciesCollectionRequest {
	return &GroupGroupLifecyclePoliciesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupGroupLifecyclePoliciesCollectionRequestBuilder) ID(id string) *GroupLifecyclePolicyRequestBuilder {
	bb := &GroupLifecyclePolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupGroupLifecyclePoliciesCollectionRequest struct{ BaseRequest }

//
func (r *GroupGroupLifecyclePoliciesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *GroupLifecyclePolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupGroupLifecyclePoliciesCollectionRequest) Paging(method, path string, obj interface{}) ([]GroupLifecyclePolicy, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []GroupLifecyclePolicy
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []GroupLifecyclePolicy
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupGroupLifecyclePoliciesCollectionRequest) Get() ([]GroupLifecyclePolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupGroupLifecyclePoliciesCollectionRequest) Add(reqObj *GroupLifecyclePolicy) (*GroupLifecyclePolicy, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) MemberOf() *GroupMemberOfCollectionRequestBuilder {
	bb := &GroupMemberOfCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/memberOf"
	return bb
}

//
type GroupMemberOfCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupMemberOfCollectionRequestBuilder) Request() *GroupMemberOfCollectionRequest {
	return &GroupMemberOfCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupMemberOfCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupMemberOfCollectionRequest struct{ BaseRequest }

//
func (r *GroupMemberOfCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupMemberOfCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupMemberOfCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupMemberOfCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) Members() *GroupMembersCollectionRequestBuilder {
	bb := &GroupMembersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/members"
	return bb
}

//
type GroupMembersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupMembersCollectionRequestBuilder) Request() *GroupMembersCollectionRequest {
	return &GroupMembersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupMembersCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupMembersCollectionRequest struct{ BaseRequest }

//
func (r *GroupMembersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupMembersCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupMembersCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupMembersCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) MembersWithLicenseErrors() *GroupMembersWithLicenseErrorsCollectionRequestBuilder {
	bb := &GroupMembersWithLicenseErrorsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/membersWithLicenseErrors"
	return bb
}

//
type GroupMembersWithLicenseErrorsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupMembersWithLicenseErrorsCollectionRequestBuilder) Request() *GroupMembersWithLicenseErrorsCollectionRequest {
	return &GroupMembersWithLicenseErrorsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupMembersWithLicenseErrorsCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupMembersWithLicenseErrorsCollectionRequest struct{ BaseRequest }

//
func (r *GroupMembersWithLicenseErrorsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupMembersWithLicenseErrorsCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupMembersWithLicenseErrorsCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupMembersWithLicenseErrorsCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

// Onenote returns service endpoint for Onenote
func (b *GroupRequestBuilder) Onenote() *OnenoteRequestBuilder {
	bb := &OnenoteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/onenote"
	return bb
}

//
func (b *GroupRequestBuilder) Owners() *GroupOwnersCollectionRequestBuilder {
	bb := &GroupOwnersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/owners"
	return bb
}

//
type GroupOwnersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupOwnersCollectionRequestBuilder) Request() *GroupOwnersCollectionRequest {
	return &GroupOwnersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupOwnersCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupOwnersCollectionRequest struct{ BaseRequest }

//
func (r *GroupOwnersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupOwnersCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupOwnersCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupOwnersCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

// Photo returns service endpoint for ProfilePhoto
func (b *GroupRequestBuilder) Photo() *ProfilePhotoRequestBuilder {
	bb := &ProfilePhotoRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/photo"
	return bb
}

//
func (b *GroupRequestBuilder) Photos() *GroupPhotosCollectionRequestBuilder {
	bb := &GroupPhotosCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/photos"
	return bb
}

//
type GroupPhotosCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupPhotosCollectionRequestBuilder) Request() *GroupPhotosCollectionRequest {
	return &GroupPhotosCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupPhotosCollectionRequestBuilder) ID(id string) *ProfilePhotoRequestBuilder {
	bb := &ProfilePhotoRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupPhotosCollectionRequest struct{ BaseRequest }

//
func (r *GroupPhotosCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ProfilePhoto, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupPhotosCollectionRequest) Paging(method, path string, obj interface{}) ([]ProfilePhoto, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ProfilePhoto
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ProfilePhoto
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupPhotosCollectionRequest) Get() ([]ProfilePhoto, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupPhotosCollectionRequest) Add(reqObj *ProfilePhoto) (*ProfilePhoto, error) {
	return r.Do("POST", "", reqObj)
}

// Planner returns service endpoint for PlannerGroup
func (b *GroupRequestBuilder) Planner() *PlannerGroupRequestBuilder {
	bb := &PlannerGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/planner"
	return bb
}

//
func (b *GroupRequestBuilder) RejectedSenders() *GroupRejectedSendersCollectionRequestBuilder {
	bb := &GroupRejectedSendersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/rejectedSenders"
	return bb
}

//
type GroupRejectedSendersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupRejectedSendersCollectionRequestBuilder) Request() *GroupRejectedSendersCollectionRequest {
	return &GroupRejectedSendersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupRejectedSendersCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupRejectedSendersCollectionRequest struct{ BaseRequest }

//
func (r *GroupRejectedSendersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupRejectedSendersCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupRejectedSendersCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupRejectedSendersCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) Settings() *GroupSettingsCollectionRequestBuilder {
	bb := &GroupSettingsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/settings"
	return bb
}

//
type GroupSettingsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupSettingsCollectionRequestBuilder) Request() *GroupSettingsCollectionRequest {
	return &GroupSettingsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupSettingsCollectionRequestBuilder) ID(id string) *GroupSettingRequestBuilder {
	bb := &GroupSettingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupSettingsCollectionRequest struct{ BaseRequest }

//
func (r *GroupSettingsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *GroupSetting, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupSettingsCollectionRequest) Paging(method, path string, obj interface{}) ([]GroupSetting, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []GroupSetting
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []GroupSetting
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupSettingsCollectionRequest) Get() ([]GroupSetting, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupSettingsCollectionRequest) Add(reqObj *GroupSetting) (*GroupSetting, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) Sites() *GroupSitesCollectionRequestBuilder {
	bb := &GroupSitesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sites"
	return bb
}

//
type GroupSitesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupSitesCollectionRequestBuilder) Request() *GroupSitesCollectionRequest {
	return &GroupSitesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupSitesCollectionRequestBuilder) ID(id string) *SiteRequestBuilder {
	bb := &SiteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupSitesCollectionRequest struct{ BaseRequest }

//
func (r *GroupSitesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Site, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupSitesCollectionRequest) Paging(method, path string, obj interface{}) ([]Site, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Site
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Site
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupSitesCollectionRequest) Get() ([]Site, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupSitesCollectionRequest) Add(reqObj *Site) (*Site, error) {
	return r.Do("POST", "", reqObj)
}

// Team returns service endpoint for Team
func (b *GroupRequestBuilder) Team() *TeamRequestBuilder {
	bb := &TeamRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/team"
	return bb
}

//
func (b *GroupRequestBuilder) Threads() *GroupThreadsCollectionRequestBuilder {
	bb := &GroupThreadsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/threads"
	return bb
}

//
type GroupThreadsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupThreadsCollectionRequestBuilder) Request() *GroupThreadsCollectionRequest {
	return &GroupThreadsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupThreadsCollectionRequestBuilder) ID(id string) *ConversationThreadRequestBuilder {
	bb := &ConversationThreadRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupThreadsCollectionRequest struct{ BaseRequest }

//
func (r *GroupThreadsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ConversationThread, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupThreadsCollectionRequest) Paging(method, path string, obj interface{}) ([]ConversationThread, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ConversationThread
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ConversationThread
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupThreadsCollectionRequest) Get() ([]ConversationThread, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupThreadsCollectionRequest) Add(reqObj *ConversationThread) (*ConversationThread, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) TransitiveMemberOf() *GroupTransitiveMemberOfCollectionRequestBuilder {
	bb := &GroupTransitiveMemberOfCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/transitiveMemberOf"
	return bb
}

//
type GroupTransitiveMemberOfCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupTransitiveMemberOfCollectionRequestBuilder) Request() *GroupTransitiveMemberOfCollectionRequest {
	return &GroupTransitiveMemberOfCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupTransitiveMemberOfCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupTransitiveMemberOfCollectionRequest struct{ BaseRequest }

//
func (r *GroupTransitiveMemberOfCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupTransitiveMemberOfCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupTransitiveMemberOfCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupTransitiveMemberOfCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *GroupRequestBuilder) TransitiveMembers() *GroupTransitiveMembersCollectionRequestBuilder {
	bb := &GroupTransitiveMembersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/transitiveMembers"
	return bb
}

//
type GroupTransitiveMembersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupTransitiveMembersCollectionRequestBuilder) Request() *GroupTransitiveMembersCollectionRequest {
	return &GroupTransitiveMembersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *GroupTransitiveMembersCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type GroupTransitiveMembersCollectionRequest struct{ BaseRequest }

//
func (r *GroupTransitiveMembersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupTransitiveMembersCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *GroupTransitiveMembersCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *GroupTransitiveMembersCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *InferenceClassificationRequestBuilder) Overrides() *InferenceClassificationOverridesCollectionRequestBuilder {
	bb := &InferenceClassificationOverridesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/overrides"
	return bb
}

//
type InferenceClassificationOverridesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *InferenceClassificationOverridesCollectionRequestBuilder) Request() *InferenceClassificationOverridesCollectionRequest {
	return &InferenceClassificationOverridesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *InferenceClassificationOverridesCollectionRequestBuilder) ID(id string) *InferenceClassificationOverrideRequestBuilder {
	bb := &InferenceClassificationOverrideRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type InferenceClassificationOverridesCollectionRequest struct{ BaseRequest }

//
func (r *InferenceClassificationOverridesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *InferenceClassificationOverride, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *InferenceClassificationOverridesCollectionRequest) Paging(method, path string, obj interface{}) ([]InferenceClassificationOverride, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []InferenceClassificationOverride
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []InferenceClassificationOverride
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *InferenceClassificationOverridesCollectionRequest) Get() ([]InferenceClassificationOverride, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *InferenceClassificationOverridesCollectionRequest) Add(reqObj *InferenceClassificationOverride) (*InferenceClassificationOverride, error) {
	return r.Do("POST", "", reqObj)
}

// InvitedUser returns service endpoint for User
func (b *InvitationRequestBuilder) InvitedUser() *UserRequestBuilder {
	bb := &UserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/invitedUser"
	return bb
}

//
func (b *IosManagedAppProtectionRequestBuilder) Apps() *IosManagedAppProtectionAppsCollectionRequestBuilder {
	bb := &IosManagedAppProtectionAppsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/apps"
	return bb
}

//
type IosManagedAppProtectionAppsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *IosManagedAppProtectionAppsCollectionRequestBuilder) Request() *IosManagedAppProtectionAppsCollectionRequest {
	return &IosManagedAppProtectionAppsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *IosManagedAppProtectionAppsCollectionRequestBuilder) ID(id string) *ManagedMobileAppRequestBuilder {
	bb := &ManagedMobileAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type IosManagedAppProtectionAppsCollectionRequest struct{ BaseRequest }

//
func (r *IosManagedAppProtectionAppsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedMobileApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *IosManagedAppProtectionAppsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedMobileApp, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedMobileApp
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedMobileApp
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *IosManagedAppProtectionAppsCollectionRequest) Get() ([]ManagedMobileApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *IosManagedAppProtectionAppsCollectionRequest) Add(reqObj *ManagedMobileApp) (*ManagedMobileApp, error) {
	return r.Do("POST", "", reqObj)
}

// DeploymentSummary returns service endpoint for ManagedAppPolicyDeploymentSummary
func (b *IosManagedAppProtectionRequestBuilder) DeploymentSummary() *ManagedAppPolicyDeploymentSummaryRequestBuilder {
	bb := &ManagedAppPolicyDeploymentSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deploymentSummary"
	return bb
}

// DriveItem returns service endpoint for DriveItem
func (b *ItemActivityRequestBuilder) DriveItem() *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/driveItem"
	return bb
}

//
func (b *ItemActivityStatRequestBuilder) Activities() *ItemActivityStatActivitiesCollectionRequestBuilder {
	bb := &ItemActivityStatActivitiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/activities"
	return bb
}

//
type ItemActivityStatActivitiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ItemActivityStatActivitiesCollectionRequestBuilder) Request() *ItemActivityStatActivitiesCollectionRequest {
	return &ItemActivityStatActivitiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ItemActivityStatActivitiesCollectionRequestBuilder) ID(id string) *ItemActivityRequestBuilder {
	bb := &ItemActivityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ItemActivityStatActivitiesCollectionRequest struct{ BaseRequest }

//
func (r *ItemActivityStatActivitiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ItemActivity, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ItemActivityStatActivitiesCollectionRequest) Paging(method, path string, obj interface{}) ([]ItemActivity, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ItemActivity
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ItemActivity
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ItemActivityStatActivitiesCollectionRequest) Get() ([]ItemActivity, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ItemActivityStatActivitiesCollectionRequest) Add(reqObj *ItemActivity) (*ItemActivity, error) {
	return r.Do("POST", "", reqObj)
}

// AllTime returns service endpoint for ItemActivityStat
func (b *ItemAnalyticsRequestBuilder) AllTime() *ItemActivityStatRequestBuilder {
	bb := &ItemActivityStatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/allTime"
	return bb
}

//
func (b *ItemAnalyticsRequestBuilder) ItemActivityStats() *ItemAnalyticsItemActivityStatsCollectionRequestBuilder {
	bb := &ItemAnalyticsItemActivityStatsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/itemActivityStats"
	return bb
}

//
type ItemAnalyticsItemActivityStatsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ItemAnalyticsItemActivityStatsCollectionRequestBuilder) Request() *ItemAnalyticsItemActivityStatsCollectionRequest {
	return &ItemAnalyticsItemActivityStatsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ItemAnalyticsItemActivityStatsCollectionRequestBuilder) ID(id string) *ItemActivityStatRequestBuilder {
	bb := &ItemActivityStatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ItemAnalyticsItemActivityStatsCollectionRequest struct{ BaseRequest }

//
func (r *ItemAnalyticsItemActivityStatsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ItemActivityStat, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ItemAnalyticsItemActivityStatsCollectionRequest) Paging(method, path string, obj interface{}) ([]ItemActivityStat, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ItemActivityStat
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ItemActivityStat
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ItemAnalyticsItemActivityStatsCollectionRequest) Get() ([]ItemActivityStat, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ItemAnalyticsItemActivityStatsCollectionRequest) Add(reqObj *ItemActivityStat) (*ItemActivityStat, error) {
	return r.Do("POST", "", reqObj)
}

// LastSevenDays returns service endpoint for ItemActivityStat
func (b *ItemAnalyticsRequestBuilder) LastSevenDays() *ItemActivityStatRequestBuilder {
	bb := &ItemActivityStatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/lastSevenDays"
	return bb
}

// Item returns service endpoint for OutlookItem
func (b *ItemAttachmentRequestBuilder) Item() *OutlookItemRequestBuilder {
	bb := &OutlookItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/item"
	return bb
}

//
func (b *ListRequestBuilder) Columns() *ListColumnsCollectionRequestBuilder {
	bb := &ListColumnsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/columns"
	return bb
}

//
type ListColumnsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ListColumnsCollectionRequestBuilder) Request() *ListColumnsCollectionRequest {
	return &ListColumnsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ListColumnsCollectionRequestBuilder) ID(id string) *ColumnDefinitionRequestBuilder {
	bb := &ColumnDefinitionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ListColumnsCollectionRequest struct{ BaseRequest }

//
func (r *ListColumnsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ColumnDefinition, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ListColumnsCollectionRequest) Paging(method, path string, obj interface{}) ([]ColumnDefinition, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ColumnDefinition
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ColumnDefinition
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ListColumnsCollectionRequest) Get() ([]ColumnDefinition, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ListColumnsCollectionRequest) Add(reqObj *ColumnDefinition) (*ColumnDefinition, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ListRequestBuilder) ContentTypes() *ListContentTypesCollectionRequestBuilder {
	bb := &ListContentTypesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/contentTypes"
	return bb
}

//
type ListContentTypesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ListContentTypesCollectionRequestBuilder) Request() *ListContentTypesCollectionRequest {
	return &ListContentTypesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ListContentTypesCollectionRequestBuilder) ID(id string) *ContentTypeRequestBuilder {
	bb := &ContentTypeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ListContentTypesCollectionRequest struct{ BaseRequest }

//
func (r *ListContentTypesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ContentType, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ListContentTypesCollectionRequest) Paging(method, path string, obj interface{}) ([]ContentType, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ContentType
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ContentType
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ListContentTypesCollectionRequest) Get() ([]ContentType, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ListContentTypesCollectionRequest) Add(reqObj *ContentType) (*ContentType, error) {
	return r.Do("POST", "", reqObj)
}

// Drive returns service endpoint for Drive
func (b *ListRequestBuilder) Drive() *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drive"
	return bb
}

//
func (b *ListRequestBuilder) Items() *ListItemsCollectionRequestBuilder {
	bb := &ListItemsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/items"
	return bb
}

//
type ListItemsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ListItemsCollectionRequestBuilder) Request() *ListItemsCollectionRequest {
	return &ListItemsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ListItemsCollectionRequestBuilder) ID(id string) *ListItemRequestBuilder {
	bb := &ListItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ListItemsCollectionRequest struct{ BaseRequest }

//
func (r *ListItemsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ListItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ListItemsCollectionRequest) Paging(method, path string, obj interface{}) ([]ListItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ListItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ListItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ListItemsCollectionRequest) Get() ([]ListItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ListItemsCollectionRequest) Add(reqObj *ListItem) (*ListItem, error) {
	return r.Do("POST", "", reqObj)
}

// Analytics returns service endpoint for ItemAnalytics
func (b *ListItemRequestBuilder) Analytics() *ItemAnalyticsRequestBuilder {
	bb := &ItemAnalyticsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/analytics"
	return bb
}

// DriveItem returns service endpoint for DriveItem
func (b *ListItemRequestBuilder) DriveItem() *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/driveItem"
	return bb
}

// Fields returns service endpoint for FieldValueSet
func (b *ListItemRequestBuilder) Fields() *FieldValueSetRequestBuilder {
	bb := &FieldValueSetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fields"
	return bb
}

//
func (b *ListItemRequestBuilder) Versions() *ListItemVersionsCollectionRequestBuilder {
	bb := &ListItemVersionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/versions"
	return bb
}

//
type ListItemVersionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ListItemVersionsCollectionRequestBuilder) Request() *ListItemVersionsCollectionRequest {
	return &ListItemVersionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ListItemVersionsCollectionRequestBuilder) ID(id string) *ListItemVersionRequestBuilder {
	bb := &ListItemVersionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ListItemVersionsCollectionRequest struct{ BaseRequest }

//
func (r *ListItemVersionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ListItemVersion, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ListItemVersionsCollectionRequest) Paging(method, path string, obj interface{}) ([]ListItemVersion, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ListItemVersion
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ListItemVersion
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ListItemVersionsCollectionRequest) Get() ([]ListItemVersion, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ListItemVersionsCollectionRequest) Add(reqObj *ListItemVersion) (*ListItemVersion, error) {
	return r.Do("POST", "", reqObj)
}

// Fields returns service endpoint for FieldValueSet
func (b *ListItemVersionRequestBuilder) Fields() *FieldValueSetRequestBuilder {
	bb := &FieldValueSetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fields"
	return bb
}

//
func (b *MailFolderRequestBuilder) ChildFolders() *MailFolderChildFoldersCollectionRequestBuilder {
	bb := &MailFolderChildFoldersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/childFolders"
	return bb
}

//
type MailFolderChildFoldersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MailFolderChildFoldersCollectionRequestBuilder) Request() *MailFolderChildFoldersCollectionRequest {
	return &MailFolderChildFoldersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MailFolderChildFoldersCollectionRequestBuilder) ID(id string) *MailFolderRequestBuilder {
	bb := &MailFolderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MailFolderChildFoldersCollectionRequest struct{ BaseRequest }

//
func (r *MailFolderChildFoldersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MailFolder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MailFolderChildFoldersCollectionRequest) Paging(method, path string, obj interface{}) ([]MailFolder, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MailFolder
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MailFolder
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MailFolderChildFoldersCollectionRequest) Get() ([]MailFolder, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MailFolderChildFoldersCollectionRequest) Add(reqObj *MailFolder) (*MailFolder, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MailFolderRequestBuilder) MessageRules() *MailFolderMessageRulesCollectionRequestBuilder {
	bb := &MailFolderMessageRulesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/messageRules"
	return bb
}

//
type MailFolderMessageRulesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MailFolderMessageRulesCollectionRequestBuilder) Request() *MailFolderMessageRulesCollectionRequest {
	return &MailFolderMessageRulesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MailFolderMessageRulesCollectionRequestBuilder) ID(id string) *MessageRuleRequestBuilder {
	bb := &MessageRuleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MailFolderMessageRulesCollectionRequest struct{ BaseRequest }

//
func (r *MailFolderMessageRulesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MessageRule, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MailFolderMessageRulesCollectionRequest) Paging(method, path string, obj interface{}) ([]MessageRule, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MessageRule
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MessageRule
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MailFolderMessageRulesCollectionRequest) Get() ([]MessageRule, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MailFolderMessageRulesCollectionRequest) Add(reqObj *MessageRule) (*MessageRule, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MailFolderRequestBuilder) Messages() *MailFolderMessagesCollectionRequestBuilder {
	bb := &MailFolderMessagesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/messages"
	return bb
}

//
type MailFolderMessagesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MailFolderMessagesCollectionRequestBuilder) Request() *MailFolderMessagesCollectionRequest {
	return &MailFolderMessagesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MailFolderMessagesCollectionRequestBuilder) ID(id string) *MessageRequestBuilder {
	bb := &MessageRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MailFolderMessagesCollectionRequest struct{ BaseRequest }

//
func (r *MailFolderMessagesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Message, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MailFolderMessagesCollectionRequest) Paging(method, path string, obj interface{}) ([]Message, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Message
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Message
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MailFolderMessagesCollectionRequest) Get() ([]Message, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MailFolderMessagesCollectionRequest) Add(reqObj *Message) (*Message, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MailFolderRequestBuilder) MultiValueExtendedProperties() *MailFolderMultiValueExtendedPropertiesCollectionRequestBuilder {
	bb := &MailFolderMultiValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/multiValueExtendedProperties"
	return bb
}

//
type MailFolderMultiValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MailFolderMultiValueExtendedPropertiesCollectionRequestBuilder) Request() *MailFolderMultiValueExtendedPropertiesCollectionRequest {
	return &MailFolderMultiValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MailFolderMultiValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *MultiValueLegacyExtendedPropertyRequestBuilder {
	bb := &MultiValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MailFolderMultiValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *MailFolderMultiValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MultiValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MailFolderMultiValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]MultiValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MultiValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MultiValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MailFolderMultiValueExtendedPropertiesCollectionRequest) Get() ([]MultiValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MailFolderMultiValueExtendedPropertiesCollectionRequest) Add(reqObj *MultiValueLegacyExtendedProperty) (*MultiValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MailFolderRequestBuilder) SingleValueExtendedProperties() *MailFolderSingleValueExtendedPropertiesCollectionRequestBuilder {
	bb := &MailFolderSingleValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/singleValueExtendedProperties"
	return bb
}

//
type MailFolderSingleValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MailFolderSingleValueExtendedPropertiesCollectionRequestBuilder) Request() *MailFolderSingleValueExtendedPropertiesCollectionRequest {
	return &MailFolderSingleValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MailFolderSingleValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *SingleValueLegacyExtendedPropertyRequestBuilder {
	bb := &SingleValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MailFolderSingleValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *MailFolderSingleValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SingleValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MailFolderSingleValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]SingleValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SingleValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SingleValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MailFolderSingleValueExtendedPropertiesCollectionRequest) Get() ([]SingleValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MailFolderSingleValueExtendedPropertiesCollectionRequest) Add(reqObj *SingleValueLegacyExtendedProperty) (*SingleValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ManagedAppRegistrationRequestBuilder) AppliedPolicies() *ManagedAppRegistrationAppliedPoliciesCollectionRequestBuilder {
	bb := &ManagedAppRegistrationAppliedPoliciesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/appliedPolicies"
	return bb
}

//
type ManagedAppRegistrationAppliedPoliciesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppRegistrationAppliedPoliciesCollectionRequestBuilder) Request() *ManagedAppRegistrationAppliedPoliciesCollectionRequest {
	return &ManagedAppRegistrationAppliedPoliciesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedAppRegistrationAppliedPoliciesCollectionRequestBuilder) ID(id string) *ManagedAppPolicyRequestBuilder {
	bb := &ManagedAppPolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedAppRegistrationAppliedPoliciesCollectionRequest struct{ BaseRequest }

//
func (r *ManagedAppRegistrationAppliedPoliciesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppPolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppRegistrationAppliedPoliciesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedAppPolicy, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedAppPolicy
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedAppPolicy
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedAppRegistrationAppliedPoliciesCollectionRequest) Get() ([]ManagedAppPolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedAppRegistrationAppliedPoliciesCollectionRequest) Add(reqObj *ManagedAppPolicy) (*ManagedAppPolicy, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ManagedAppRegistrationRequestBuilder) IntendedPolicies() *ManagedAppRegistrationIntendedPoliciesCollectionRequestBuilder {
	bb := &ManagedAppRegistrationIntendedPoliciesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/intendedPolicies"
	return bb
}

//
type ManagedAppRegistrationIntendedPoliciesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppRegistrationIntendedPoliciesCollectionRequestBuilder) Request() *ManagedAppRegistrationIntendedPoliciesCollectionRequest {
	return &ManagedAppRegistrationIntendedPoliciesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedAppRegistrationIntendedPoliciesCollectionRequestBuilder) ID(id string) *ManagedAppPolicyRequestBuilder {
	bb := &ManagedAppPolicyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedAppRegistrationIntendedPoliciesCollectionRequest struct{ BaseRequest }

//
func (r *ManagedAppRegistrationIntendedPoliciesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppPolicy, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppRegistrationIntendedPoliciesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedAppPolicy, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedAppPolicy
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedAppPolicy
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedAppRegistrationIntendedPoliciesCollectionRequest) Get() ([]ManagedAppPolicy, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedAppRegistrationIntendedPoliciesCollectionRequest) Add(reqObj *ManagedAppPolicy) (*ManagedAppPolicy, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ManagedAppRegistrationRequestBuilder) Operations() *ManagedAppRegistrationOperationsCollectionRequestBuilder {
	bb := &ManagedAppRegistrationOperationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/operations"
	return bb
}

//
type ManagedAppRegistrationOperationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppRegistrationOperationsCollectionRequestBuilder) Request() *ManagedAppRegistrationOperationsCollectionRequest {
	return &ManagedAppRegistrationOperationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedAppRegistrationOperationsCollectionRequestBuilder) ID(id string) *ManagedAppOperationRequestBuilder {
	bb := &ManagedAppOperationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedAppRegistrationOperationsCollectionRequest struct{ BaseRequest }

//
func (r *ManagedAppRegistrationOperationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedAppRegistrationOperationsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedAppOperation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedAppOperation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedAppOperation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedAppRegistrationOperationsCollectionRequest) Get() ([]ManagedAppOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedAppRegistrationOperationsCollectionRequest) Add(reqObj *ManagedAppOperation) (*ManagedAppOperation, error) {
	return r.Do("POST", "", reqObj)
}

// DeviceCategory returns service endpoint for DeviceCategory
func (b *ManagedDeviceRequestBuilder) DeviceCategory() *DeviceCategoryRequestBuilder {
	bb := &DeviceCategoryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceCategory"
	return bb
}

//
func (b *ManagedDeviceRequestBuilder) DeviceCompliancePolicyStates() *ManagedDeviceDeviceCompliancePolicyStatesCollectionRequestBuilder {
	bb := &ManagedDeviceDeviceCompliancePolicyStatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceCompliancePolicyStates"
	return bb
}

//
type ManagedDeviceDeviceCompliancePolicyStatesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceDeviceCompliancePolicyStatesCollectionRequestBuilder) Request() *ManagedDeviceDeviceCompliancePolicyStatesCollectionRequest {
	return &ManagedDeviceDeviceCompliancePolicyStatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedDeviceDeviceCompliancePolicyStatesCollectionRequestBuilder) ID(id string) *DeviceCompliancePolicyStateRequestBuilder {
	bb := &DeviceCompliancePolicyStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedDeviceDeviceCompliancePolicyStatesCollectionRequest struct{ BaseRequest }

//
func (r *ManagedDeviceDeviceCompliancePolicyStatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceCompliancePolicyState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceDeviceCompliancePolicyStatesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceCompliancePolicyState, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceCompliancePolicyState
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceCompliancePolicyState
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedDeviceDeviceCompliancePolicyStatesCollectionRequest) Get() ([]DeviceCompliancePolicyState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedDeviceDeviceCompliancePolicyStatesCollectionRequest) Add(reqObj *DeviceCompliancePolicyState) (*DeviceCompliancePolicyState, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ManagedDeviceRequestBuilder) DeviceConfigurationStates() *ManagedDeviceDeviceConfigurationStatesCollectionRequestBuilder {
	bb := &ManagedDeviceDeviceConfigurationStatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceConfigurationStates"
	return bb
}

//
type ManagedDeviceDeviceConfigurationStatesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceDeviceConfigurationStatesCollectionRequestBuilder) Request() *ManagedDeviceDeviceConfigurationStatesCollectionRequest {
	return &ManagedDeviceDeviceConfigurationStatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedDeviceDeviceConfigurationStatesCollectionRequestBuilder) ID(id string) *DeviceConfigurationStateRequestBuilder {
	bb := &DeviceConfigurationStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedDeviceDeviceConfigurationStatesCollectionRequest struct{ BaseRequest }

//
func (r *ManagedDeviceDeviceConfigurationStatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceConfigurationState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceDeviceConfigurationStatesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceConfigurationState, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceConfigurationState
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceConfigurationState
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedDeviceDeviceConfigurationStatesCollectionRequest) Get() ([]DeviceConfigurationState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedDeviceDeviceConfigurationStatesCollectionRequest) Add(reqObj *DeviceConfigurationState) (*DeviceConfigurationState, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) Assignments() *ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequest {
	return &ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequestBuilder) ID(id string) *ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfigurationAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedDeviceMobileAppConfigurationAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDeviceMobileAppConfigurationAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedDeviceMobileAppConfigurationAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequest) Get() ([]ManagedDeviceMobileAppConfigurationAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationAssignmentsCollectionRequest) Add(reqObj *ManagedDeviceMobileAppConfigurationAssignment) (*ManagedDeviceMobileAppConfigurationAssignment, error) {
	return r.Do("POST", "", reqObj)
}

// DeviceStatusSummary returns service endpoint for ManagedDeviceMobileAppConfigurationDeviceSummary
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) DeviceStatusSummary() *ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStatusSummary"
	return bb
}

//
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) DeviceStatuses() *ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStatuses"
	return bb
}

//
type ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequest {
	return &ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequestBuilder) ID(id string) *ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfigurationDeviceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedDeviceMobileAppConfigurationDeviceStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDeviceMobileAppConfigurationDeviceStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedDeviceMobileAppConfigurationDeviceStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequest) Get() ([]ManagedDeviceMobileAppConfigurationDeviceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusesCollectionRequest) Add(reqObj *ManagedDeviceMobileAppConfigurationDeviceStatus) (*ManagedDeviceMobileAppConfigurationDeviceStatus, error) {
	return r.Do("POST", "", reqObj)
}

// UserStatusSummary returns service endpoint for ManagedDeviceMobileAppConfigurationUserSummary
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) UserStatusSummary() *ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/userStatusSummary"
	return bb
}

//
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) UserStatuses() *ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/userStatuses"
	return bb
}

//
type ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequest {
	return &ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequestBuilder) ID(id string) *ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDeviceMobileAppConfigurationUserStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedDeviceMobileAppConfigurationUserStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDeviceMobileAppConfigurationUserStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedDeviceMobileAppConfigurationUserStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequest) Get() ([]ManagedDeviceMobileAppConfigurationUserStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationUserStatusesCollectionRequest) Add(reqObj *ManagedDeviceMobileAppConfigurationUserStatus) (*ManagedDeviceMobileAppConfigurationUserStatus, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ManagedEBookRequestBuilder) Assignments() *ManagedEBookAssignmentsCollectionRequestBuilder {
	bb := &ManagedEBookAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type ManagedEBookAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedEBookAssignmentsCollectionRequestBuilder) Request() *ManagedEBookAssignmentsCollectionRequest {
	return &ManagedEBookAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedEBookAssignmentsCollectionRequestBuilder) ID(id string) *ManagedEBookAssignmentRequestBuilder {
	bb := &ManagedEBookAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedEBookAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *ManagedEBookAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedEBookAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedEBookAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedEBookAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedEBookAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedEBookAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedEBookAssignmentsCollectionRequest) Get() ([]ManagedEBookAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedEBookAssignmentsCollectionRequest) Add(reqObj *ManagedEBookAssignment) (*ManagedEBookAssignment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ManagedEBookRequestBuilder) DeviceStates() *ManagedEBookDeviceStatesCollectionRequestBuilder {
	bb := &ManagedEBookDeviceStatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStates"
	return bb
}

//
type ManagedEBookDeviceStatesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedEBookDeviceStatesCollectionRequestBuilder) Request() *ManagedEBookDeviceStatesCollectionRequest {
	return &ManagedEBookDeviceStatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedEBookDeviceStatesCollectionRequestBuilder) ID(id string) *DeviceInstallStateRequestBuilder {
	bb := &DeviceInstallStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedEBookDeviceStatesCollectionRequest struct{ BaseRequest }

//
func (r *ManagedEBookDeviceStatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceInstallState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedEBookDeviceStatesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceInstallState, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceInstallState
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceInstallState
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedEBookDeviceStatesCollectionRequest) Get() ([]DeviceInstallState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedEBookDeviceStatesCollectionRequest) Add(reqObj *DeviceInstallState) (*DeviceInstallState, error) {
	return r.Do("POST", "", reqObj)
}

// InstallSummary returns service endpoint for EBookInstallSummary
func (b *ManagedEBookRequestBuilder) InstallSummary() *EBookInstallSummaryRequestBuilder {
	bb := &EBookInstallSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/installSummary"
	return bb
}

//
func (b *ManagedEBookRequestBuilder) UserStateSummary() *ManagedEBookUserStateSummaryCollectionRequestBuilder {
	bb := &ManagedEBookUserStateSummaryCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/userStateSummary"
	return bb
}

//
type ManagedEBookUserStateSummaryCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedEBookUserStateSummaryCollectionRequestBuilder) Request() *ManagedEBookUserStateSummaryCollectionRequest {
	return &ManagedEBookUserStateSummaryCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedEBookUserStateSummaryCollectionRequestBuilder) ID(id string) *UserInstallStateSummaryRequestBuilder {
	bb := &UserInstallStateSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedEBookUserStateSummaryCollectionRequest struct{ BaseRequest }

//
func (r *ManagedEBookUserStateSummaryCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *UserInstallStateSummary, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedEBookUserStateSummaryCollectionRequest) Paging(method, path string, obj interface{}) ([]UserInstallStateSummary, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []UserInstallStateSummary
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []UserInstallStateSummary
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedEBookUserStateSummaryCollectionRequest) Get() ([]UserInstallStateSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedEBookUserStateSummaryCollectionRequest) Add(reqObj *UserInstallStateSummary) (*UserInstallStateSummary, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *ManagedMobileLobAppRequestBuilder) ContentVersions() *ManagedMobileLobAppContentVersionsCollectionRequestBuilder {
	bb := &ManagedMobileLobAppContentVersionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/contentVersions"
	return bb
}

//
type ManagedMobileLobAppContentVersionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedMobileLobAppContentVersionsCollectionRequestBuilder) Request() *ManagedMobileLobAppContentVersionsCollectionRequest {
	return &ManagedMobileLobAppContentVersionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *ManagedMobileLobAppContentVersionsCollectionRequestBuilder) ID(id string) *MobileAppContentRequestBuilder {
	bb := &MobileAppContentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type ManagedMobileLobAppContentVersionsCollectionRequest struct{ BaseRequest }

//
func (r *ManagedMobileLobAppContentVersionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppContent, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ManagedMobileLobAppContentVersionsCollectionRequest) Paging(method, path string, obj interface{}) ([]MobileAppContent, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MobileAppContent
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MobileAppContent
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *ManagedMobileLobAppContentVersionsCollectionRequest) Get() ([]MobileAppContent, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *ManagedMobileLobAppContentVersionsCollectionRequest) Add(reqObj *MobileAppContent) (*MobileAppContent, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MessageRequestBuilder) Attachments() *MessageAttachmentsCollectionRequestBuilder {
	bb := &MessageAttachmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/attachments"
	return bb
}

//
type MessageAttachmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageAttachmentsCollectionRequestBuilder) Request() *MessageAttachmentsCollectionRequest {
	return &MessageAttachmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MessageAttachmentsCollectionRequestBuilder) ID(id string) *AttachmentRequestBuilder {
	bb := &AttachmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MessageAttachmentsCollectionRequest struct{ BaseRequest }

//
func (r *MessageAttachmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Attachment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageAttachmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]Attachment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Attachment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Attachment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MessageAttachmentsCollectionRequest) Get() ([]Attachment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MessageAttachmentsCollectionRequest) Add(reqObj *Attachment) (*Attachment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MessageRequestBuilder) Extensions() *MessageExtensionsCollectionRequestBuilder {
	bb := &MessageExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/extensions"
	return bb
}

//
type MessageExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageExtensionsCollectionRequestBuilder) Request() *MessageExtensionsCollectionRequest {
	return &MessageExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MessageExtensionsCollectionRequestBuilder) ID(id string) *ExtensionRequestBuilder {
	bb := &ExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MessageExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *MessageExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Extension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Extension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Extension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MessageExtensionsCollectionRequest) Get() ([]Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MessageExtensionsCollectionRequest) Add(reqObj *Extension) (*Extension, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MessageRequestBuilder) MultiValueExtendedProperties() *MessageMultiValueExtendedPropertiesCollectionRequestBuilder {
	bb := &MessageMultiValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/multiValueExtendedProperties"
	return bb
}

//
type MessageMultiValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageMultiValueExtendedPropertiesCollectionRequestBuilder) Request() *MessageMultiValueExtendedPropertiesCollectionRequest {
	return &MessageMultiValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MessageMultiValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *MultiValueLegacyExtendedPropertyRequestBuilder {
	bb := &MultiValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MessageMultiValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *MessageMultiValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MultiValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageMultiValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]MultiValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MultiValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MultiValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MessageMultiValueExtendedPropertiesCollectionRequest) Get() ([]MultiValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MessageMultiValueExtendedPropertiesCollectionRequest) Add(reqObj *MultiValueLegacyExtendedProperty) (*MultiValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MessageRequestBuilder) SingleValueExtendedProperties() *MessageSingleValueExtendedPropertiesCollectionRequestBuilder {
	bb := &MessageSingleValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/singleValueExtendedProperties"
	return bb
}

//
type MessageSingleValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageSingleValueExtendedPropertiesCollectionRequestBuilder) Request() *MessageSingleValueExtendedPropertiesCollectionRequest {
	return &MessageSingleValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MessageSingleValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *SingleValueLegacyExtendedPropertyRequestBuilder {
	bb := &SingleValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MessageSingleValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *MessageSingleValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SingleValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageSingleValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]SingleValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SingleValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SingleValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MessageSingleValueExtendedPropertiesCollectionRequest) Get() ([]SingleValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MessageSingleValueExtendedPropertiesCollectionRequest) Add(reqObj *SingleValueLegacyExtendedProperty) (*SingleValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MobileAppRequestBuilder) Assignments() *MobileAppAssignmentsCollectionRequestBuilder {
	bb := &MobileAppAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type MobileAppAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppAssignmentsCollectionRequestBuilder) Request() *MobileAppAssignmentsCollectionRequest {
	return &MobileAppAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MobileAppAssignmentsCollectionRequestBuilder) ID(id string) *MobileAppAssignmentRequestBuilder {
	bb := &MobileAppAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MobileAppAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *MobileAppAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileAppAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]MobileAppAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MobileAppAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MobileAppAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MobileAppAssignmentsCollectionRequest) Get() ([]MobileAppAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MobileAppAssignmentsCollectionRequest) Add(reqObj *MobileAppAssignment) (*MobileAppAssignment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MobileAppRequestBuilder) Categories() *MobileAppCategoriesCollectionRequestBuilder {
	bb := &MobileAppCategoriesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/categories"
	return bb
}

//
type MobileAppCategoriesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppCategoriesCollectionRequestBuilder) Request() *MobileAppCategoriesCollectionRequest {
	return &MobileAppCategoriesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MobileAppCategoriesCollectionRequestBuilder) ID(id string) *MobileAppCategoryRequestBuilder {
	bb := &MobileAppCategoryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MobileAppCategoriesCollectionRequest struct{ BaseRequest }

//
func (r *MobileAppCategoriesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppCategory, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileAppCategoriesCollectionRequest) Paging(method, path string, obj interface{}) ([]MobileAppCategory, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MobileAppCategory
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MobileAppCategory
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MobileAppCategoriesCollectionRequest) Get() ([]MobileAppCategory, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MobileAppCategoriesCollectionRequest) Add(reqObj *MobileAppCategory) (*MobileAppCategory, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MobileAppContentRequestBuilder) Files() *MobileAppContentFilesCollectionRequestBuilder {
	bb := &MobileAppContentFilesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/files"
	return bb
}

//
type MobileAppContentFilesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppContentFilesCollectionRequestBuilder) Request() *MobileAppContentFilesCollectionRequest {
	return &MobileAppContentFilesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MobileAppContentFilesCollectionRequestBuilder) ID(id string) *MobileAppContentFileRequestBuilder {
	bb := &MobileAppContentFileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MobileAppContentFilesCollectionRequest struct{ BaseRequest }

//
func (r *MobileAppContentFilesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppContentFile, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileAppContentFilesCollectionRequest) Paging(method, path string, obj interface{}) ([]MobileAppContentFile, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MobileAppContentFile
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MobileAppContentFile
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MobileAppContentFilesCollectionRequest) Get() ([]MobileAppContentFile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MobileAppContentFilesCollectionRequest) Add(reqObj *MobileAppContentFile) (*MobileAppContentFile, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *MobileLobAppRequestBuilder) ContentVersions() *MobileLobAppContentVersionsCollectionRequestBuilder {
	bb := &MobileLobAppContentVersionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/contentVersions"
	return bb
}

//
type MobileLobAppContentVersionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileLobAppContentVersionsCollectionRequestBuilder) Request() *MobileLobAppContentVersionsCollectionRequest {
	return &MobileLobAppContentVersionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *MobileLobAppContentVersionsCollectionRequestBuilder) ID(id string) *MobileAppContentRequestBuilder {
	bb := &MobileAppContentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type MobileLobAppContentVersionsCollectionRequest struct{ BaseRequest }

//
func (r *MobileLobAppContentVersionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MobileAppContent, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MobileLobAppContentVersionsCollectionRequest) Paging(method, path string, obj interface{}) ([]MobileAppContent, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MobileAppContent
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MobileAppContent
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *MobileLobAppContentVersionsCollectionRequest) Get() ([]MobileAppContent, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *MobileLobAppContentVersionsCollectionRequest) Add(reqObj *MobileAppContent) (*MobileAppContent, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *NotebookRequestBuilder) SectionGroups() *NotebookSectionGroupsCollectionRequestBuilder {
	bb := &NotebookSectionGroupsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sectionGroups"
	return bb
}

//
type NotebookSectionGroupsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *NotebookSectionGroupsCollectionRequestBuilder) Request() *NotebookSectionGroupsCollectionRequest {
	return &NotebookSectionGroupsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *NotebookSectionGroupsCollectionRequestBuilder) ID(id string) *SectionGroupRequestBuilder {
	bb := &SectionGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type NotebookSectionGroupsCollectionRequest struct{ BaseRequest }

//
func (r *NotebookSectionGroupsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SectionGroup, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *NotebookSectionGroupsCollectionRequest) Paging(method, path string, obj interface{}) ([]SectionGroup, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SectionGroup
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SectionGroup
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *NotebookSectionGroupsCollectionRequest) Get() ([]SectionGroup, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *NotebookSectionGroupsCollectionRequest) Add(reqObj *SectionGroup) (*SectionGroup, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *NotebookRequestBuilder) Sections() *NotebookSectionsCollectionRequestBuilder {
	bb := &NotebookSectionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sections"
	return bb
}

//
type NotebookSectionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *NotebookSectionsCollectionRequestBuilder) Request() *NotebookSectionsCollectionRequest {
	return &NotebookSectionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *NotebookSectionsCollectionRequestBuilder) ID(id string) *OnenoteSectionRequestBuilder {
	bb := &OnenoteSectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type NotebookSectionsCollectionRequest struct{ BaseRequest }

//
func (r *NotebookSectionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteSection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *NotebookSectionsCollectionRequest) Paging(method, path string, obj interface{}) ([]OnenoteSection, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnenoteSection
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnenoteSection
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *NotebookSectionsCollectionRequest) Get() ([]OnenoteSection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *NotebookSectionsCollectionRequest) Add(reqObj *OnenoteSection) (*OnenoteSection, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *NotificationMessageTemplateRequestBuilder) LocalizedNotificationMessages() *NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequestBuilder {
	bb := &NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/localizedNotificationMessages"
	return bb
}

//
type NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequestBuilder) Request() *NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequest {
	return &NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequestBuilder) ID(id string) *LocalizedNotificationMessageRequestBuilder {
	bb := &LocalizedNotificationMessageRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequest struct{ BaseRequest }

//
func (r *NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *LocalizedNotificationMessage, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequest) Paging(method, path string, obj interface{}) ([]LocalizedNotificationMessage, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []LocalizedNotificationMessage
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []LocalizedNotificationMessage
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequest) Get() ([]LocalizedNotificationMessage, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *NotificationMessageTemplateLocalizedNotificationMessagesCollectionRequest) Add(reqObj *LocalizedNotificationMessage) (*LocalizedNotificationMessage, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OfficeGraphInsightsRequestBuilder) Shared() *OfficeGraphInsightsSharedCollectionRequestBuilder {
	bb := &OfficeGraphInsightsSharedCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/shared"
	return bb
}

//
type OfficeGraphInsightsSharedCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OfficeGraphInsightsSharedCollectionRequestBuilder) Request() *OfficeGraphInsightsSharedCollectionRequest {
	return &OfficeGraphInsightsSharedCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OfficeGraphInsightsSharedCollectionRequestBuilder) ID(id string) *SharedInsightRequestBuilder {
	bb := &SharedInsightRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OfficeGraphInsightsSharedCollectionRequest struct{ BaseRequest }

//
func (r *OfficeGraphInsightsSharedCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SharedInsight, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OfficeGraphInsightsSharedCollectionRequest) Paging(method, path string, obj interface{}) ([]SharedInsight, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SharedInsight
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SharedInsight
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OfficeGraphInsightsSharedCollectionRequest) Get() ([]SharedInsight, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OfficeGraphInsightsSharedCollectionRequest) Add(reqObj *SharedInsight) (*SharedInsight, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OfficeGraphInsightsRequestBuilder) Trending() *OfficeGraphInsightsTrendingCollectionRequestBuilder {
	bb := &OfficeGraphInsightsTrendingCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/trending"
	return bb
}

//
type OfficeGraphInsightsTrendingCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OfficeGraphInsightsTrendingCollectionRequestBuilder) Request() *OfficeGraphInsightsTrendingCollectionRequest {
	return &OfficeGraphInsightsTrendingCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OfficeGraphInsightsTrendingCollectionRequestBuilder) ID(id string) *TrendingRequestBuilder {
	bb := &TrendingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OfficeGraphInsightsTrendingCollectionRequest struct{ BaseRequest }

//
func (r *OfficeGraphInsightsTrendingCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Trending, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OfficeGraphInsightsTrendingCollectionRequest) Paging(method, path string, obj interface{}) ([]Trending, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Trending
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Trending
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OfficeGraphInsightsTrendingCollectionRequest) Get() ([]Trending, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OfficeGraphInsightsTrendingCollectionRequest) Add(reqObj *Trending) (*Trending, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OfficeGraphInsightsRequestBuilder) Used() *OfficeGraphInsightsUsedCollectionRequestBuilder {
	bb := &OfficeGraphInsightsUsedCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/used"
	return bb
}

//
type OfficeGraphInsightsUsedCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OfficeGraphInsightsUsedCollectionRequestBuilder) Request() *OfficeGraphInsightsUsedCollectionRequest {
	return &OfficeGraphInsightsUsedCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OfficeGraphInsightsUsedCollectionRequestBuilder) ID(id string) *UsedInsightRequestBuilder {
	bb := &UsedInsightRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OfficeGraphInsightsUsedCollectionRequest struct{ BaseRequest }

//
func (r *OfficeGraphInsightsUsedCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *UsedInsight, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OfficeGraphInsightsUsedCollectionRequest) Paging(method, path string, obj interface{}) ([]UsedInsight, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []UsedInsight
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []UsedInsight
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OfficeGraphInsightsUsedCollectionRequest) Get() ([]UsedInsight, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OfficeGraphInsightsUsedCollectionRequest) Add(reqObj *UsedInsight) (*UsedInsight, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OnenoteRequestBuilder) Notebooks() *OnenoteNotebooksCollectionRequestBuilder {
	bb := &OnenoteNotebooksCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/notebooks"
	return bb
}

//
type OnenoteNotebooksCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteNotebooksCollectionRequestBuilder) Request() *OnenoteNotebooksCollectionRequest {
	return &OnenoteNotebooksCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OnenoteNotebooksCollectionRequestBuilder) ID(id string) *NotebookRequestBuilder {
	bb := &NotebookRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OnenoteNotebooksCollectionRequest struct{ BaseRequest }

//
func (r *OnenoteNotebooksCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Notebook, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteNotebooksCollectionRequest) Paging(method, path string, obj interface{}) ([]Notebook, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Notebook
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Notebook
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OnenoteNotebooksCollectionRequest) Get() ([]Notebook, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OnenoteNotebooksCollectionRequest) Add(reqObj *Notebook) (*Notebook, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OnenoteRequestBuilder) Operations() *OnenoteOperationsCollectionRequestBuilder {
	bb := &OnenoteOperationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/operations"
	return bb
}

//
type OnenoteOperationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteOperationsCollectionRequestBuilder) Request() *OnenoteOperationsCollectionRequest {
	return &OnenoteOperationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OnenoteOperationsCollectionRequestBuilder) ID(id string) *OnenoteOperationRequestBuilder {
	bb := &OnenoteOperationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OnenoteOperationsCollectionRequest struct{ BaseRequest }

//
func (r *OnenoteOperationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteOperationsCollectionRequest) Paging(method, path string, obj interface{}) ([]OnenoteOperation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnenoteOperation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnenoteOperation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OnenoteOperationsCollectionRequest) Get() ([]OnenoteOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OnenoteOperationsCollectionRequest) Add(reqObj *OnenoteOperation) (*OnenoteOperation, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OnenoteRequestBuilder) Pages() *OnenotePagesCollectionRequestBuilder {
	bb := &OnenotePagesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/pages"
	return bb
}

//
type OnenotePagesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenotePagesCollectionRequestBuilder) Request() *OnenotePagesCollectionRequest {
	return &OnenotePagesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OnenotePagesCollectionRequestBuilder) ID(id string) *OnenotePageRequestBuilder {
	bb := &OnenotePageRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OnenotePagesCollectionRequest struct{ BaseRequest }

//
func (r *OnenotePagesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenotePage, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenotePagesCollectionRequest) Paging(method, path string, obj interface{}) ([]OnenotePage, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnenotePage
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnenotePage
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OnenotePagesCollectionRequest) Get() ([]OnenotePage, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OnenotePagesCollectionRequest) Add(reqObj *OnenotePage) (*OnenotePage, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OnenoteRequestBuilder) Resources() *OnenoteResourcesCollectionRequestBuilder {
	bb := &OnenoteResourcesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/resources"
	return bb
}

//
type OnenoteResourcesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteResourcesCollectionRequestBuilder) Request() *OnenoteResourcesCollectionRequest {
	return &OnenoteResourcesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OnenoteResourcesCollectionRequestBuilder) ID(id string) *OnenoteResourceRequestBuilder {
	bb := &OnenoteResourceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OnenoteResourcesCollectionRequest struct{ BaseRequest }

//
func (r *OnenoteResourcesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteResource, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteResourcesCollectionRequest) Paging(method, path string, obj interface{}) ([]OnenoteResource, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnenoteResource
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnenoteResource
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OnenoteResourcesCollectionRequest) Get() ([]OnenoteResource, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OnenoteResourcesCollectionRequest) Add(reqObj *OnenoteResource) (*OnenoteResource, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OnenoteRequestBuilder) SectionGroups() *OnenoteSectionGroupsCollectionRequestBuilder {
	bb := &OnenoteSectionGroupsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sectionGroups"
	return bb
}

//
type OnenoteSectionGroupsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteSectionGroupsCollectionRequestBuilder) Request() *OnenoteSectionGroupsCollectionRequest {
	return &OnenoteSectionGroupsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OnenoteSectionGroupsCollectionRequestBuilder) ID(id string) *SectionGroupRequestBuilder {
	bb := &SectionGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OnenoteSectionGroupsCollectionRequest struct{ BaseRequest }

//
func (r *OnenoteSectionGroupsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SectionGroup, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteSectionGroupsCollectionRequest) Paging(method, path string, obj interface{}) ([]SectionGroup, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SectionGroup
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SectionGroup
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OnenoteSectionGroupsCollectionRequest) Get() ([]SectionGroup, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OnenoteSectionGroupsCollectionRequest) Add(reqObj *SectionGroup) (*SectionGroup, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OnenoteRequestBuilder) Sections() *OnenoteSectionsCollectionRequestBuilder {
	bb := &OnenoteSectionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sections"
	return bb
}

//
type OnenoteSectionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteSectionsCollectionRequestBuilder) Request() *OnenoteSectionsCollectionRequest {
	return &OnenoteSectionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OnenoteSectionsCollectionRequestBuilder) ID(id string) *OnenoteSectionRequestBuilder {
	bb := &OnenoteSectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OnenoteSectionsCollectionRequest struct{ BaseRequest }

//
func (r *OnenoteSectionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteSection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteSectionsCollectionRequest) Paging(method, path string, obj interface{}) ([]OnenoteSection, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnenoteSection
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnenoteSection
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OnenoteSectionsCollectionRequest) Get() ([]OnenoteSection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OnenoteSectionsCollectionRequest) Add(reqObj *OnenoteSection) (*OnenoteSection, error) {
	return r.Do("POST", "", reqObj)
}

// ParentNotebook returns service endpoint for Notebook
func (b *OnenotePageRequestBuilder) ParentNotebook() *NotebookRequestBuilder {
	bb := &NotebookRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/parentNotebook"
	return bb
}

// ParentSection returns service endpoint for OnenoteSection
func (b *OnenotePageRequestBuilder) ParentSection() *OnenoteSectionRequestBuilder {
	bb := &OnenoteSectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/parentSection"
	return bb
}

//
func (b *OnenoteSectionRequestBuilder) Pages() *OnenoteSectionPagesCollectionRequestBuilder {
	bb := &OnenoteSectionPagesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/pages"
	return bb
}

//
type OnenoteSectionPagesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteSectionPagesCollectionRequestBuilder) Request() *OnenoteSectionPagesCollectionRequest {
	return &OnenoteSectionPagesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OnenoteSectionPagesCollectionRequestBuilder) ID(id string) *OnenotePageRequestBuilder {
	bb := &OnenotePageRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OnenoteSectionPagesCollectionRequest struct{ BaseRequest }

//
func (r *OnenoteSectionPagesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenotePage, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteSectionPagesCollectionRequest) Paging(method, path string, obj interface{}) ([]OnenotePage, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnenotePage
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnenotePage
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OnenoteSectionPagesCollectionRequest) Get() ([]OnenotePage, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OnenoteSectionPagesCollectionRequest) Add(reqObj *OnenotePage) (*OnenotePage, error) {
	return r.Do("POST", "", reqObj)
}

// ParentNotebook returns service endpoint for Notebook
func (b *OnenoteSectionRequestBuilder) ParentNotebook() *NotebookRequestBuilder {
	bb := &NotebookRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/parentNotebook"
	return bb
}

// ParentSectionGroup returns service endpoint for SectionGroup
func (b *OnenoteSectionRequestBuilder) ParentSectionGroup() *SectionGroupRequestBuilder {
	bb := &SectionGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/parentSectionGroup"
	return bb
}

//
func (b *OrganizationRequestBuilder) CertificateBasedAuthConfiguration() *OrganizationCertificateBasedAuthConfigurationCollectionRequestBuilder {
	bb := &OrganizationCertificateBasedAuthConfigurationCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/certificateBasedAuthConfiguration"
	return bb
}

//
type OrganizationCertificateBasedAuthConfigurationCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OrganizationCertificateBasedAuthConfigurationCollectionRequestBuilder) Request() *OrganizationCertificateBasedAuthConfigurationCollectionRequest {
	return &OrganizationCertificateBasedAuthConfigurationCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OrganizationCertificateBasedAuthConfigurationCollectionRequestBuilder) ID(id string) *CertificateBasedAuthConfigurationRequestBuilder {
	bb := &CertificateBasedAuthConfigurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OrganizationCertificateBasedAuthConfigurationCollectionRequest struct{ BaseRequest }

//
func (r *OrganizationCertificateBasedAuthConfigurationCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *CertificateBasedAuthConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OrganizationCertificateBasedAuthConfigurationCollectionRequest) Paging(method, path string, obj interface{}) ([]CertificateBasedAuthConfiguration, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []CertificateBasedAuthConfiguration
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []CertificateBasedAuthConfiguration
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OrganizationCertificateBasedAuthConfigurationCollectionRequest) Get() ([]CertificateBasedAuthConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OrganizationCertificateBasedAuthConfigurationCollectionRequest) Add(reqObj *CertificateBasedAuthConfiguration) (*CertificateBasedAuthConfiguration, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OrganizationRequestBuilder) Extensions() *OrganizationExtensionsCollectionRequestBuilder {
	bb := &OrganizationExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/extensions"
	return bb
}

//
type OrganizationExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OrganizationExtensionsCollectionRequestBuilder) Request() *OrganizationExtensionsCollectionRequest {
	return &OrganizationExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OrganizationExtensionsCollectionRequestBuilder) ID(id string) *ExtensionRequestBuilder {
	bb := &ExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OrganizationExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *OrganizationExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OrganizationExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Extension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Extension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Extension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OrganizationExtensionsCollectionRequest) Get() ([]Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OrganizationExtensionsCollectionRequest) Add(reqObj *Extension) (*Extension, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *OutlookUserRequestBuilder) MasterCategories() *OutlookUserMasterCategoriesCollectionRequestBuilder {
	bb := &OutlookUserMasterCategoriesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/masterCategories"
	return bb
}

//
type OutlookUserMasterCategoriesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OutlookUserMasterCategoriesCollectionRequestBuilder) Request() *OutlookUserMasterCategoriesCollectionRequest {
	return &OutlookUserMasterCategoriesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *OutlookUserMasterCategoriesCollectionRequestBuilder) ID(id string) *OutlookCategoryRequestBuilder {
	bb := &OutlookCategoryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type OutlookUserMasterCategoriesCollectionRequest struct{ BaseRequest }

//
func (r *OutlookUserMasterCategoriesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OutlookCategory, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OutlookUserMasterCategoriesCollectionRequest) Paging(method, path string, obj interface{}) ([]OutlookCategory, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OutlookCategory
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OutlookCategory
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *OutlookUserMasterCategoriesCollectionRequest) Get() ([]OutlookCategory, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *OutlookUserMasterCategoriesCollectionRequest) Add(reqObj *OutlookCategory) (*OutlookCategory, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PlannerRequestBuilder) Buckets() *PlannerBucketsCollectionRequestBuilder {
	bb := &PlannerBucketsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/buckets"
	return bb
}

//
type PlannerBucketsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerBucketsCollectionRequestBuilder) Request() *PlannerBucketsCollectionRequest {
	return &PlannerBucketsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerBucketsCollectionRequestBuilder) ID(id string) *PlannerBucketRequestBuilder {
	bb := &PlannerBucketRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerBucketsCollectionRequest struct{ BaseRequest }

//
func (r *PlannerBucketsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerBucket, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerBucketsCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerBucket, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerBucket
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerBucket
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerBucketsCollectionRequest) Get() ([]PlannerBucket, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerBucketsCollectionRequest) Add(reqObj *PlannerBucket) (*PlannerBucket, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PlannerRequestBuilder) Plans() *PlannerPlansCollectionRequestBuilder {
	bb := &PlannerPlansCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/plans"
	return bb
}

//
type PlannerPlansCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerPlansCollectionRequestBuilder) Request() *PlannerPlansCollectionRequest {
	return &PlannerPlansCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerPlansCollectionRequestBuilder) ID(id string) *PlannerPlanRequestBuilder {
	bb := &PlannerPlanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerPlansCollectionRequest struct{ BaseRequest }

//
func (r *PlannerPlansCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerPlan, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerPlansCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerPlan, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerPlan
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerPlan
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerPlansCollectionRequest) Get() ([]PlannerPlan, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerPlansCollectionRequest) Add(reqObj *PlannerPlan) (*PlannerPlan, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PlannerRequestBuilder) Tasks() *PlannerTasksCollectionRequestBuilder {
	bb := &PlannerTasksCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/tasks"
	return bb
}

//
type PlannerTasksCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerTasksCollectionRequestBuilder) Request() *PlannerTasksCollectionRequest {
	return &PlannerTasksCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerTasksCollectionRequestBuilder) ID(id string) *PlannerTaskRequestBuilder {
	bb := &PlannerTaskRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerTasksCollectionRequest struct{ BaseRequest }

//
func (r *PlannerTasksCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerTask, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerTasksCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerTask, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerTask
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerTask
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerTasksCollectionRequest) Get() ([]PlannerTask, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerTasksCollectionRequest) Add(reqObj *PlannerTask) (*PlannerTask, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PlannerBucketRequestBuilder) Tasks() *PlannerBucketTasksCollectionRequestBuilder {
	bb := &PlannerBucketTasksCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/tasks"
	return bb
}

//
type PlannerBucketTasksCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerBucketTasksCollectionRequestBuilder) Request() *PlannerBucketTasksCollectionRequest {
	return &PlannerBucketTasksCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerBucketTasksCollectionRequestBuilder) ID(id string) *PlannerTaskRequestBuilder {
	bb := &PlannerTaskRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerBucketTasksCollectionRequest struct{ BaseRequest }

//
func (r *PlannerBucketTasksCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerTask, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerBucketTasksCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerTask, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerTask
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerTask
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerBucketTasksCollectionRequest) Get() ([]PlannerTask, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerBucketTasksCollectionRequest) Add(reqObj *PlannerTask) (*PlannerTask, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PlannerGroupRequestBuilder) Plans() *PlannerGroupPlansCollectionRequestBuilder {
	bb := &PlannerGroupPlansCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/plans"
	return bb
}

//
type PlannerGroupPlansCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerGroupPlansCollectionRequestBuilder) Request() *PlannerGroupPlansCollectionRequest {
	return &PlannerGroupPlansCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerGroupPlansCollectionRequestBuilder) ID(id string) *PlannerPlanRequestBuilder {
	bb := &PlannerPlanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerGroupPlansCollectionRequest struct{ BaseRequest }

//
func (r *PlannerGroupPlansCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerPlan, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerGroupPlansCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerPlan, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerPlan
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerPlan
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerGroupPlansCollectionRequest) Get() ([]PlannerPlan, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerGroupPlansCollectionRequest) Add(reqObj *PlannerPlan) (*PlannerPlan, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PlannerPlanRequestBuilder) Buckets() *PlannerPlanBucketsCollectionRequestBuilder {
	bb := &PlannerPlanBucketsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/buckets"
	return bb
}

//
type PlannerPlanBucketsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerPlanBucketsCollectionRequestBuilder) Request() *PlannerPlanBucketsCollectionRequest {
	return &PlannerPlanBucketsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerPlanBucketsCollectionRequestBuilder) ID(id string) *PlannerBucketRequestBuilder {
	bb := &PlannerBucketRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerPlanBucketsCollectionRequest struct{ BaseRequest }

//
func (r *PlannerPlanBucketsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerBucket, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerPlanBucketsCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerBucket, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerBucket
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerBucket
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerPlanBucketsCollectionRequest) Get() ([]PlannerBucket, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerPlanBucketsCollectionRequest) Add(reqObj *PlannerBucket) (*PlannerBucket, error) {
	return r.Do("POST", "", reqObj)
}

// Details returns service endpoint for PlannerPlanDetails
func (b *PlannerPlanRequestBuilder) Details() *PlannerPlanDetailsRequestBuilder {
	bb := &PlannerPlanDetailsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/details"
	return bb
}

//
func (b *PlannerPlanRequestBuilder) Tasks() *PlannerPlanTasksCollectionRequestBuilder {
	bb := &PlannerPlanTasksCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/tasks"
	return bb
}

//
type PlannerPlanTasksCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerPlanTasksCollectionRequestBuilder) Request() *PlannerPlanTasksCollectionRequest {
	return &PlannerPlanTasksCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerPlanTasksCollectionRequestBuilder) ID(id string) *PlannerTaskRequestBuilder {
	bb := &PlannerTaskRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerPlanTasksCollectionRequest struct{ BaseRequest }

//
func (r *PlannerPlanTasksCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerTask, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerPlanTasksCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerTask, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerTask
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerTask
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerPlanTasksCollectionRequest) Get() ([]PlannerTask, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerPlanTasksCollectionRequest) Add(reqObj *PlannerTask) (*PlannerTask, error) {
	return r.Do("POST", "", reqObj)
}

// AssignedToTaskBoardFormat returns service endpoint for PlannerAssignedToTaskBoardTaskFormat
func (b *PlannerTaskRequestBuilder) AssignedToTaskBoardFormat() *PlannerAssignedToTaskBoardTaskFormatRequestBuilder {
	bb := &PlannerAssignedToTaskBoardTaskFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignedToTaskBoardFormat"
	return bb
}

// BucketTaskBoardFormat returns service endpoint for PlannerBucketTaskBoardTaskFormat
func (b *PlannerTaskRequestBuilder) BucketTaskBoardFormat() *PlannerBucketTaskBoardTaskFormatRequestBuilder {
	bb := &PlannerBucketTaskBoardTaskFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/bucketTaskBoardFormat"
	return bb
}

// Details returns service endpoint for PlannerTaskDetails
func (b *PlannerTaskRequestBuilder) Details() *PlannerTaskDetailsRequestBuilder {
	bb := &PlannerTaskDetailsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/details"
	return bb
}

// ProgressTaskBoardFormat returns service endpoint for PlannerProgressTaskBoardTaskFormat
func (b *PlannerTaskRequestBuilder) ProgressTaskBoardFormat() *PlannerProgressTaskBoardTaskFormatRequestBuilder {
	bb := &PlannerProgressTaskBoardTaskFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/progressTaskBoardFormat"
	return bb
}

//
func (b *PlannerUserRequestBuilder) Plans() *PlannerUserPlansCollectionRequestBuilder {
	bb := &PlannerUserPlansCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/plans"
	return bb
}

//
type PlannerUserPlansCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerUserPlansCollectionRequestBuilder) Request() *PlannerUserPlansCollectionRequest {
	return &PlannerUserPlansCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerUserPlansCollectionRequestBuilder) ID(id string) *PlannerPlanRequestBuilder {
	bb := &PlannerPlanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerUserPlansCollectionRequest struct{ BaseRequest }

//
func (r *PlannerUserPlansCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerPlan, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerUserPlansCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerPlan, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerPlan
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerPlan
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerUserPlansCollectionRequest) Get() ([]PlannerPlan, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerUserPlansCollectionRequest) Add(reqObj *PlannerPlan) (*PlannerPlan, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PlannerUserRequestBuilder) Tasks() *PlannerUserTasksCollectionRequestBuilder {
	bb := &PlannerUserTasksCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/tasks"
	return bb
}

//
type PlannerUserTasksCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PlannerUserTasksCollectionRequestBuilder) Request() *PlannerUserTasksCollectionRequest {
	return &PlannerUserTasksCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PlannerUserTasksCollectionRequestBuilder) ID(id string) *PlannerTaskRequestBuilder {
	bb := &PlannerTaskRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PlannerUserTasksCollectionRequest struct{ BaseRequest }

//
func (r *PlannerUserTasksCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *PlannerTask, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PlannerUserTasksCollectionRequest) Paging(method, path string, obj interface{}) ([]PlannerTask, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []PlannerTask
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []PlannerTask
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PlannerUserTasksCollectionRequest) Get() ([]PlannerTask, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PlannerUserTasksCollectionRequest) Add(reqObj *PlannerTask) (*PlannerTask, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PostRequestBuilder) Attachments() *PostAttachmentsCollectionRequestBuilder {
	bb := &PostAttachmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/attachments"
	return bb
}

//
type PostAttachmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PostAttachmentsCollectionRequestBuilder) Request() *PostAttachmentsCollectionRequest {
	return &PostAttachmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PostAttachmentsCollectionRequestBuilder) ID(id string) *AttachmentRequestBuilder {
	bb := &AttachmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PostAttachmentsCollectionRequest struct{ BaseRequest }

//
func (r *PostAttachmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Attachment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PostAttachmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]Attachment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Attachment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Attachment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PostAttachmentsCollectionRequest) Get() ([]Attachment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PostAttachmentsCollectionRequest) Add(reqObj *Attachment) (*Attachment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PostRequestBuilder) Extensions() *PostExtensionsCollectionRequestBuilder {
	bb := &PostExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/extensions"
	return bb
}

//
type PostExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PostExtensionsCollectionRequestBuilder) Request() *PostExtensionsCollectionRequest {
	return &PostExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PostExtensionsCollectionRequestBuilder) ID(id string) *ExtensionRequestBuilder {
	bb := &ExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PostExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *PostExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PostExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Extension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Extension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Extension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PostExtensionsCollectionRequest) Get() ([]Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PostExtensionsCollectionRequest) Add(reqObj *Extension) (*Extension, error) {
	return r.Do("POST", "", reqObj)
}

// InReplyTo returns service endpoint for Post
func (b *PostRequestBuilder) InReplyTo() *PostRequestBuilder {
	bb := &PostRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/inReplyTo"
	return bb
}

//
func (b *PostRequestBuilder) MultiValueExtendedProperties() *PostMultiValueExtendedPropertiesCollectionRequestBuilder {
	bb := &PostMultiValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/multiValueExtendedProperties"
	return bb
}

//
type PostMultiValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PostMultiValueExtendedPropertiesCollectionRequestBuilder) Request() *PostMultiValueExtendedPropertiesCollectionRequest {
	return &PostMultiValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PostMultiValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *MultiValueLegacyExtendedPropertyRequestBuilder {
	bb := &MultiValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PostMultiValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *PostMultiValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MultiValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PostMultiValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]MultiValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MultiValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MultiValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PostMultiValueExtendedPropertiesCollectionRequest) Get() ([]MultiValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PostMultiValueExtendedPropertiesCollectionRequest) Add(reqObj *MultiValueLegacyExtendedProperty) (*MultiValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *PostRequestBuilder) SingleValueExtendedProperties() *PostSingleValueExtendedPropertiesCollectionRequestBuilder {
	bb := &PostSingleValueExtendedPropertiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/singleValueExtendedProperties"
	return bb
}

//
type PostSingleValueExtendedPropertiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PostSingleValueExtendedPropertiesCollectionRequestBuilder) Request() *PostSingleValueExtendedPropertiesCollectionRequest {
	return &PostSingleValueExtendedPropertiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *PostSingleValueExtendedPropertiesCollectionRequestBuilder) ID(id string) *SingleValueLegacyExtendedPropertyRequestBuilder {
	bb := &SingleValueLegacyExtendedPropertyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type PostSingleValueExtendedPropertiesCollectionRequest struct{ BaseRequest }

//
func (r *PostSingleValueExtendedPropertiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SingleValueLegacyExtendedProperty, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *PostSingleValueExtendedPropertiesCollectionRequest) Paging(method, path string, obj interface{}) ([]SingleValueLegacyExtendedProperty, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SingleValueLegacyExtendedProperty
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SingleValueLegacyExtendedProperty
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *PostSingleValueExtendedPropertiesCollectionRequest) Get() ([]SingleValueLegacyExtendedProperty, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *PostSingleValueExtendedPropertiesCollectionRequest) Add(reqObj *SingleValueLegacyExtendedProperty) (*SingleValueLegacyExtendedProperty, error) {
	return r.Do("POST", "", reqObj)
}

// RoleDefinition returns service endpoint for RoleDefinition
func (b *RoleAssignmentRequestBuilder) RoleDefinition() *RoleDefinitionRequestBuilder {
	bb := &RoleDefinitionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/roleDefinition"
	return bb
}

//
func (b *RoleDefinitionRequestBuilder) RoleAssignments() *RoleDefinitionRoleAssignmentsCollectionRequestBuilder {
	bb := &RoleDefinitionRoleAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/roleAssignments"
	return bb
}

//
type RoleDefinitionRoleAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *RoleDefinitionRoleAssignmentsCollectionRequestBuilder) Request() *RoleDefinitionRoleAssignmentsCollectionRequest {
	return &RoleDefinitionRoleAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *RoleDefinitionRoleAssignmentsCollectionRequestBuilder) ID(id string) *RoleAssignmentRequestBuilder {
	bb := &RoleAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type RoleDefinitionRoleAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *RoleDefinitionRoleAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *RoleAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *RoleDefinitionRoleAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]RoleAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []RoleAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []RoleAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *RoleDefinitionRoleAssignmentsCollectionRequest) Get() ([]RoleAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *RoleDefinitionRoleAssignmentsCollectionRequest) Add(reqObj *RoleAssignment) (*RoleAssignment, error) {
	return r.Do("POST", "", reqObj)
}

// ParentNotebook returns service endpoint for Notebook
func (b *SectionGroupRequestBuilder) ParentNotebook() *NotebookRequestBuilder {
	bb := &NotebookRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/parentNotebook"
	return bb
}

// ParentSectionGroup returns service endpoint for SectionGroup
func (b *SectionGroupRequestBuilder) ParentSectionGroup() *SectionGroupRequestBuilder {
	bb := &SectionGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/parentSectionGroup"
	return bb
}

//
func (b *SectionGroupRequestBuilder) SectionGroups() *SectionGroupSectionGroupsCollectionRequestBuilder {
	bb := &SectionGroupSectionGroupsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sectionGroups"
	return bb
}

//
type SectionGroupSectionGroupsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SectionGroupSectionGroupsCollectionRequestBuilder) Request() *SectionGroupSectionGroupsCollectionRequest {
	return &SectionGroupSectionGroupsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SectionGroupSectionGroupsCollectionRequestBuilder) ID(id string) *SectionGroupRequestBuilder {
	bb := &SectionGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SectionGroupSectionGroupsCollectionRequest struct{ BaseRequest }

//
func (r *SectionGroupSectionGroupsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SectionGroup, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SectionGroupSectionGroupsCollectionRequest) Paging(method, path string, obj interface{}) ([]SectionGroup, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SectionGroup
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SectionGroup
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SectionGroupSectionGroupsCollectionRequest) Get() ([]SectionGroup, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SectionGroupSectionGroupsCollectionRequest) Add(reqObj *SectionGroup) (*SectionGroup, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *SectionGroupRequestBuilder) Sections() *SectionGroupSectionsCollectionRequestBuilder {
	bb := &SectionGroupSectionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sections"
	return bb
}

//
type SectionGroupSectionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SectionGroupSectionsCollectionRequestBuilder) Request() *SectionGroupSectionsCollectionRequest {
	return &SectionGroupSectionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SectionGroupSectionsCollectionRequestBuilder) ID(id string) *OnenoteSectionRequestBuilder {
	bb := &OnenoteSectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SectionGroupSectionsCollectionRequest struct{ BaseRequest }

//
func (r *SectionGroupSectionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteSection, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SectionGroupSectionsCollectionRequest) Paging(method, path string, obj interface{}) ([]OnenoteSection, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnenoteSection
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnenoteSection
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SectionGroupSectionsCollectionRequest) Get() ([]OnenoteSection, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SectionGroupSectionsCollectionRequest) Add(reqObj *OnenoteSection) (*OnenoteSection, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *SecurityRequestBuilder) Alerts() *SecurityAlertsCollectionRequestBuilder {
	bb := &SecurityAlertsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/alerts"
	return bb
}

//
type SecurityAlertsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SecurityAlertsCollectionRequestBuilder) Request() *SecurityAlertsCollectionRequest {
	return &SecurityAlertsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SecurityAlertsCollectionRequestBuilder) ID(id string) *AlertRequestBuilder {
	bb := &AlertRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SecurityAlertsCollectionRequest struct{ BaseRequest }

//
func (r *SecurityAlertsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Alert, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SecurityAlertsCollectionRequest) Paging(method, path string, obj interface{}) ([]Alert, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Alert
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Alert
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SecurityAlertsCollectionRequest) Get() ([]Alert, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SecurityAlertsCollectionRequest) Add(reqObj *Alert) (*Alert, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *SecurityRequestBuilder) SecureScoreControlProfiles() *SecuritySecureScoreControlProfilesCollectionRequestBuilder {
	bb := &SecuritySecureScoreControlProfilesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/secureScoreControlProfiles"
	return bb
}

//
type SecuritySecureScoreControlProfilesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SecuritySecureScoreControlProfilesCollectionRequestBuilder) Request() *SecuritySecureScoreControlProfilesCollectionRequest {
	return &SecuritySecureScoreControlProfilesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SecuritySecureScoreControlProfilesCollectionRequestBuilder) ID(id string) *SecureScoreControlProfileRequestBuilder {
	bb := &SecureScoreControlProfileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SecuritySecureScoreControlProfilesCollectionRequest struct{ BaseRequest }

//
func (r *SecuritySecureScoreControlProfilesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SecureScoreControlProfile, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SecuritySecureScoreControlProfilesCollectionRequest) Paging(method, path string, obj interface{}) ([]SecureScoreControlProfile, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SecureScoreControlProfile
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SecureScoreControlProfile
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SecuritySecureScoreControlProfilesCollectionRequest) Get() ([]SecureScoreControlProfile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SecuritySecureScoreControlProfilesCollectionRequest) Add(reqObj *SecureScoreControlProfile) (*SecureScoreControlProfile, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *SecurityRequestBuilder) SecureScores() *SecuritySecureScoresCollectionRequestBuilder {
	bb := &SecuritySecureScoresCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/secureScores"
	return bb
}

//
type SecuritySecureScoresCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SecuritySecureScoresCollectionRequestBuilder) Request() *SecuritySecureScoresCollectionRequest {
	return &SecuritySecureScoresCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SecuritySecureScoresCollectionRequestBuilder) ID(id string) *SecureScoreRequestBuilder {
	bb := &SecureScoreRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SecuritySecureScoresCollectionRequest struct{ BaseRequest }

//
func (r *SecuritySecureScoresCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SecureScore, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SecuritySecureScoresCollectionRequest) Paging(method, path string, obj interface{}) ([]SecureScore, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SecureScore
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SecureScore
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SecuritySecureScoresCollectionRequest) Get() ([]SecureScore, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SecuritySecureScoresCollectionRequest) Add(reqObj *SecureScore) (*SecureScore, error) {
	return r.Do("POST", "", reqObj)
}

// DriveItem returns service endpoint for DriveItem
func (b *SharedDriveItemRequestBuilder) DriveItem() *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/driveItem"
	return bb
}

//
func (b *SharedDriveItemRequestBuilder) Items() *SharedDriveItemItemsCollectionRequestBuilder {
	bb := &SharedDriveItemItemsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/items"
	return bb
}

//
type SharedDriveItemItemsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SharedDriveItemItemsCollectionRequestBuilder) Request() *SharedDriveItemItemsCollectionRequest {
	return &SharedDriveItemItemsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SharedDriveItemItemsCollectionRequestBuilder) ID(id string) *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SharedDriveItemItemsCollectionRequest struct{ BaseRequest }

//
func (r *SharedDriveItemItemsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SharedDriveItemItemsCollectionRequest) Paging(method, path string, obj interface{}) ([]DriveItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DriveItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DriveItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SharedDriveItemItemsCollectionRequest) Get() ([]DriveItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SharedDriveItemItemsCollectionRequest) Add(reqObj *DriveItem) (*DriveItem, error) {
	return r.Do("POST", "", reqObj)
}

// List returns service endpoint for List
func (b *SharedDriveItemRequestBuilder) List() *ListRequestBuilder {
	bb := &ListRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/list"
	return bb
}

// ListItem returns service endpoint for ListItem
func (b *SharedDriveItemRequestBuilder) ListItem() *ListItemRequestBuilder {
	bb := &ListItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/listItem"
	return bb
}

// Root returns service endpoint for DriveItem
func (b *SharedDriveItemRequestBuilder) Root() *DriveItemRequestBuilder {
	bb := &DriveItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/root"
	return bb
}

// Site returns service endpoint for Site
func (b *SharedDriveItemRequestBuilder) Site() *SiteRequestBuilder {
	bb := &SiteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/site"
	return bb
}

// LastSharedMethod returns service endpoint for Entity
func (b *SharedInsightRequestBuilder) LastSharedMethod() *EntityRequestBuilder {
	bb := &EntityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/lastSharedMethod"
	return bb
}

// Resource returns service endpoint for Entity
func (b *SharedInsightRequestBuilder) Resource() *EntityRequestBuilder {
	bb := &EntityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/resource"
	return bb
}

// Analytics returns service endpoint for ItemAnalytics
func (b *SiteRequestBuilder) Analytics() *ItemAnalyticsRequestBuilder {
	bb := &ItemAnalyticsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/analytics"
	return bb
}

//
func (b *SiteRequestBuilder) Columns() *SiteColumnsCollectionRequestBuilder {
	bb := &SiteColumnsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/columns"
	return bb
}

//
type SiteColumnsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SiteColumnsCollectionRequestBuilder) Request() *SiteColumnsCollectionRequest {
	return &SiteColumnsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SiteColumnsCollectionRequestBuilder) ID(id string) *ColumnDefinitionRequestBuilder {
	bb := &ColumnDefinitionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SiteColumnsCollectionRequest struct{ BaseRequest }

//
func (r *SiteColumnsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ColumnDefinition, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SiteColumnsCollectionRequest) Paging(method, path string, obj interface{}) ([]ColumnDefinition, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ColumnDefinition
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ColumnDefinition
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SiteColumnsCollectionRequest) Get() ([]ColumnDefinition, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SiteColumnsCollectionRequest) Add(reqObj *ColumnDefinition) (*ColumnDefinition, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *SiteRequestBuilder) ContentTypes() *SiteContentTypesCollectionRequestBuilder {
	bb := &SiteContentTypesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/contentTypes"
	return bb
}

//
type SiteContentTypesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SiteContentTypesCollectionRequestBuilder) Request() *SiteContentTypesCollectionRequest {
	return &SiteContentTypesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SiteContentTypesCollectionRequestBuilder) ID(id string) *ContentTypeRequestBuilder {
	bb := &ContentTypeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SiteContentTypesCollectionRequest struct{ BaseRequest }

//
func (r *SiteContentTypesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ContentType, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SiteContentTypesCollectionRequest) Paging(method, path string, obj interface{}) ([]ContentType, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ContentType
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ContentType
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SiteContentTypesCollectionRequest) Get() ([]ContentType, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SiteContentTypesCollectionRequest) Add(reqObj *ContentType) (*ContentType, error) {
	return r.Do("POST", "", reqObj)
}

// Drive returns service endpoint for Drive
func (b *SiteRequestBuilder) Drive() *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drive"
	return bb
}

//
func (b *SiteRequestBuilder) Drives() *SiteDrivesCollectionRequestBuilder {
	bb := &SiteDrivesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drives"
	return bb
}

//
type SiteDrivesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SiteDrivesCollectionRequestBuilder) Request() *SiteDrivesCollectionRequest {
	return &SiteDrivesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SiteDrivesCollectionRequestBuilder) ID(id string) *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SiteDrivesCollectionRequest struct{ BaseRequest }

//
func (r *SiteDrivesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Drive, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SiteDrivesCollectionRequest) Paging(method, path string, obj interface{}) ([]Drive, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Drive
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Drive
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SiteDrivesCollectionRequest) Get() ([]Drive, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SiteDrivesCollectionRequest) Add(reqObj *Drive) (*Drive, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *SiteRequestBuilder) Items() *SiteItemsCollectionRequestBuilder {
	bb := &SiteItemsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/items"
	return bb
}

//
type SiteItemsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SiteItemsCollectionRequestBuilder) Request() *SiteItemsCollectionRequest {
	return &SiteItemsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SiteItemsCollectionRequestBuilder) ID(id string) *BaseItemRequestBuilder {
	bb := &BaseItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SiteItemsCollectionRequest struct{ BaseRequest }

//
func (r *SiteItemsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *BaseItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SiteItemsCollectionRequest) Paging(method, path string, obj interface{}) ([]BaseItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []BaseItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []BaseItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SiteItemsCollectionRequest) Get() ([]BaseItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SiteItemsCollectionRequest) Add(reqObj *BaseItem) (*BaseItem, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *SiteRequestBuilder) Lists() *SiteListsCollectionRequestBuilder {
	bb := &SiteListsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/lists"
	return bb
}

//
type SiteListsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SiteListsCollectionRequestBuilder) Request() *SiteListsCollectionRequest {
	return &SiteListsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SiteListsCollectionRequestBuilder) ID(id string) *ListRequestBuilder {
	bb := &ListRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SiteListsCollectionRequest struct{ BaseRequest }

//
func (r *SiteListsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *List, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SiteListsCollectionRequest) Paging(method, path string, obj interface{}) ([]List, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []List
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []List
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SiteListsCollectionRequest) Get() ([]List, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SiteListsCollectionRequest) Add(reqObj *List) (*List, error) {
	return r.Do("POST", "", reqObj)
}

// Onenote returns service endpoint for Onenote
func (b *SiteRequestBuilder) Onenote() *OnenoteRequestBuilder {
	bb := &OnenoteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/onenote"
	return bb
}

//
func (b *SiteRequestBuilder) Sites() *SiteSitesCollectionRequestBuilder {
	bb := &SiteSitesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sites"
	return bb
}

//
type SiteSitesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *SiteSitesCollectionRequestBuilder) Request() *SiteSitesCollectionRequest {
	return &SiteSitesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *SiteSitesCollectionRequestBuilder) ID(id string) *SiteRequestBuilder {
	bb := &SiteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type SiteSitesCollectionRequest struct{ BaseRequest }

//
func (r *SiteSitesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Site, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *SiteSitesCollectionRequest) Paging(method, path string, obj interface{}) ([]Site, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Site
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Site
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *SiteSitesCollectionRequest) Get() ([]Site, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *SiteSitesCollectionRequest) Add(reqObj *Site) (*Site, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *TargetedManagedAppConfigurationRequestBuilder) Apps() *TargetedManagedAppConfigurationAppsCollectionRequestBuilder {
	bb := &TargetedManagedAppConfigurationAppsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/apps"
	return bb
}

//
type TargetedManagedAppConfigurationAppsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppConfigurationAppsCollectionRequestBuilder) Request() *TargetedManagedAppConfigurationAppsCollectionRequest {
	return &TargetedManagedAppConfigurationAppsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TargetedManagedAppConfigurationAppsCollectionRequestBuilder) ID(id string) *ManagedMobileAppRequestBuilder {
	bb := &ManagedMobileAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TargetedManagedAppConfigurationAppsCollectionRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppConfigurationAppsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedMobileApp, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TargetedManagedAppConfigurationAppsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedMobileApp, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedMobileApp
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedMobileApp
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TargetedManagedAppConfigurationAppsCollectionRequest) Get() ([]ManagedMobileApp, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TargetedManagedAppConfigurationAppsCollectionRequest) Add(reqObj *ManagedMobileApp) (*ManagedMobileApp, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *TargetedManagedAppConfigurationRequestBuilder) Assignments() *TargetedManagedAppConfigurationAssignmentsCollectionRequestBuilder {
	bb := &TargetedManagedAppConfigurationAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type TargetedManagedAppConfigurationAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppConfigurationAssignmentsCollectionRequestBuilder) Request() *TargetedManagedAppConfigurationAssignmentsCollectionRequest {
	return &TargetedManagedAppConfigurationAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TargetedManagedAppConfigurationAssignmentsCollectionRequestBuilder) ID(id string) *TargetedManagedAppPolicyAssignmentRequestBuilder {
	bb := &TargetedManagedAppPolicyAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TargetedManagedAppConfigurationAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppConfigurationAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TargetedManagedAppPolicyAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TargetedManagedAppConfigurationAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]TargetedManagedAppPolicyAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TargetedManagedAppPolicyAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TargetedManagedAppPolicyAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TargetedManagedAppConfigurationAssignmentsCollectionRequest) Get() ([]TargetedManagedAppPolicyAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TargetedManagedAppConfigurationAssignmentsCollectionRequest) Add(reqObj *TargetedManagedAppPolicyAssignment) (*TargetedManagedAppPolicyAssignment, error) {
	return r.Do("POST", "", reqObj)
}

// DeploymentSummary returns service endpoint for ManagedAppPolicyDeploymentSummary
func (b *TargetedManagedAppConfigurationRequestBuilder) DeploymentSummary() *ManagedAppPolicyDeploymentSummaryRequestBuilder {
	bb := &ManagedAppPolicyDeploymentSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deploymentSummary"
	return bb
}

//
func (b *TargetedManagedAppProtectionRequestBuilder) Assignments() *TargetedManagedAppProtectionAssignmentsCollectionRequestBuilder {
	bb := &TargetedManagedAppProtectionAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type TargetedManagedAppProtectionAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppProtectionAssignmentsCollectionRequestBuilder) Request() *TargetedManagedAppProtectionAssignmentsCollectionRequest {
	return &TargetedManagedAppProtectionAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TargetedManagedAppProtectionAssignmentsCollectionRequestBuilder) ID(id string) *TargetedManagedAppPolicyAssignmentRequestBuilder {
	bb := &TargetedManagedAppPolicyAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TargetedManagedAppProtectionAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppProtectionAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TargetedManagedAppPolicyAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TargetedManagedAppProtectionAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]TargetedManagedAppPolicyAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TargetedManagedAppPolicyAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TargetedManagedAppPolicyAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TargetedManagedAppProtectionAssignmentsCollectionRequest) Get() ([]TargetedManagedAppPolicyAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TargetedManagedAppProtectionAssignmentsCollectionRequest) Add(reqObj *TargetedManagedAppPolicyAssignment) (*TargetedManagedAppPolicyAssignment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *TeamRequestBuilder) Channels() *TeamChannelsCollectionRequestBuilder {
	bb := &TeamChannelsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/channels"
	return bb
}

//
type TeamChannelsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamChannelsCollectionRequestBuilder) Request() *TeamChannelsCollectionRequest {
	return &TeamChannelsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TeamChannelsCollectionRequestBuilder) ID(id string) *ChannelRequestBuilder {
	bb := &ChannelRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TeamChannelsCollectionRequest struct{ BaseRequest }

//
func (r *TeamChannelsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Channel, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamChannelsCollectionRequest) Paging(method, path string, obj interface{}) ([]Channel, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Channel
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Channel
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TeamChannelsCollectionRequest) Get() ([]Channel, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TeamChannelsCollectionRequest) Add(reqObj *Channel) (*Channel, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *TeamRequestBuilder) InstalledApps() *TeamInstalledAppsCollectionRequestBuilder {
	bb := &TeamInstalledAppsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/installedApps"
	return bb
}

//
type TeamInstalledAppsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamInstalledAppsCollectionRequestBuilder) Request() *TeamInstalledAppsCollectionRequest {
	return &TeamInstalledAppsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TeamInstalledAppsCollectionRequestBuilder) ID(id string) *TeamsAppInstallationRequestBuilder {
	bb := &TeamsAppInstallationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TeamInstalledAppsCollectionRequest struct{ BaseRequest }

//
func (r *TeamInstalledAppsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsAppInstallation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamInstalledAppsCollectionRequest) Paging(method, path string, obj interface{}) ([]TeamsAppInstallation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TeamsAppInstallation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TeamsAppInstallation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TeamInstalledAppsCollectionRequest) Get() ([]TeamsAppInstallation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TeamInstalledAppsCollectionRequest) Add(reqObj *TeamsAppInstallation) (*TeamsAppInstallation, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *TeamRequestBuilder) Operations() *TeamOperationsCollectionRequestBuilder {
	bb := &TeamOperationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/operations"
	return bb
}

//
type TeamOperationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamOperationsCollectionRequestBuilder) Request() *TeamOperationsCollectionRequest {
	return &TeamOperationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TeamOperationsCollectionRequestBuilder) ID(id string) *TeamsAsyncOperationRequestBuilder {
	bb := &TeamsAsyncOperationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TeamOperationsCollectionRequest struct{ BaseRequest }

//
func (r *TeamOperationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsAsyncOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamOperationsCollectionRequest) Paging(method, path string, obj interface{}) ([]TeamsAsyncOperation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TeamsAsyncOperation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TeamsAsyncOperation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TeamOperationsCollectionRequest) Get() ([]TeamsAsyncOperation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TeamOperationsCollectionRequest) Add(reqObj *TeamsAsyncOperation) (*TeamsAsyncOperation, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *TeamsAppRequestBuilder) AppDefinitions() *TeamsAppAppDefinitionsCollectionRequestBuilder {
	bb := &TeamsAppAppDefinitionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/appDefinitions"
	return bb
}

//
type TeamsAppAppDefinitionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamsAppAppDefinitionsCollectionRequestBuilder) Request() *TeamsAppAppDefinitionsCollectionRequest {
	return &TeamsAppAppDefinitionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TeamsAppAppDefinitionsCollectionRequestBuilder) ID(id string) *TeamsAppDefinitionRequestBuilder {
	bb := &TeamsAppDefinitionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TeamsAppAppDefinitionsCollectionRequest struct{ BaseRequest }

//
func (r *TeamsAppAppDefinitionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TeamsAppDefinition, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TeamsAppAppDefinitionsCollectionRequest) Paging(method, path string, obj interface{}) ([]TeamsAppDefinition, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TeamsAppDefinition
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TeamsAppDefinition
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TeamsAppAppDefinitionsCollectionRequest) Get() ([]TeamsAppDefinition, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TeamsAppAppDefinitionsCollectionRequest) Add(reqObj *TeamsAppDefinition) (*TeamsAppDefinition, error) {
	return r.Do("POST", "", reqObj)
}

// TeamsApp returns service endpoint for TeamsApp
func (b *TeamsAppInstallationRequestBuilder) TeamsApp() *TeamsAppRequestBuilder {
	bb := &TeamsAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/teamsApp"
	return bb
}

// TeamsAppDefinition returns service endpoint for TeamsAppDefinition
func (b *TeamsAppInstallationRequestBuilder) TeamsAppDefinition() *TeamsAppDefinitionRequestBuilder {
	bb := &TeamsAppDefinitionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/teamsAppDefinition"
	return bb
}

// TeamsApp returns service endpoint for TeamsApp
func (b *TeamsTabRequestBuilder) TeamsApp() *TeamsAppRequestBuilder {
	bb := &TeamsAppRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/teamsApp"
	return bb
}

//
func (b *TermsAndConditionsRequestBuilder) AcceptanceStatuses() *TermsAndConditionsAcceptanceStatusesCollectionRequestBuilder {
	bb := &TermsAndConditionsAcceptanceStatusesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/acceptanceStatuses"
	return bb
}

//
type TermsAndConditionsAcceptanceStatusesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TermsAndConditionsAcceptanceStatusesCollectionRequestBuilder) Request() *TermsAndConditionsAcceptanceStatusesCollectionRequest {
	return &TermsAndConditionsAcceptanceStatusesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TermsAndConditionsAcceptanceStatusesCollectionRequestBuilder) ID(id string) *TermsAndConditionsAcceptanceStatusRequestBuilder {
	bb := &TermsAndConditionsAcceptanceStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TermsAndConditionsAcceptanceStatusesCollectionRequest struct{ BaseRequest }

//
func (r *TermsAndConditionsAcceptanceStatusesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TermsAndConditionsAcceptanceStatus, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TermsAndConditionsAcceptanceStatusesCollectionRequest) Paging(method, path string, obj interface{}) ([]TermsAndConditionsAcceptanceStatus, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TermsAndConditionsAcceptanceStatus
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TermsAndConditionsAcceptanceStatus
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TermsAndConditionsAcceptanceStatusesCollectionRequest) Get() ([]TermsAndConditionsAcceptanceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TermsAndConditionsAcceptanceStatusesCollectionRequest) Add(reqObj *TermsAndConditionsAcceptanceStatus) (*TermsAndConditionsAcceptanceStatus, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *TermsAndConditionsRequestBuilder) Assignments() *TermsAndConditionsAssignmentsCollectionRequestBuilder {
	bb := &TermsAndConditionsAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type TermsAndConditionsAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TermsAndConditionsAssignmentsCollectionRequestBuilder) Request() *TermsAndConditionsAssignmentsCollectionRequest {
	return &TermsAndConditionsAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *TermsAndConditionsAssignmentsCollectionRequestBuilder) ID(id string) *TermsAndConditionsAssignmentRequestBuilder {
	bb := &TermsAndConditionsAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type TermsAndConditionsAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *TermsAndConditionsAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TermsAndConditionsAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *TermsAndConditionsAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]TermsAndConditionsAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TermsAndConditionsAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TermsAndConditionsAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *TermsAndConditionsAssignmentsCollectionRequest) Get() ([]TermsAndConditionsAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *TermsAndConditionsAssignmentsCollectionRequest) Add(reqObj *TermsAndConditionsAssignment) (*TermsAndConditionsAssignment, error) {
	return r.Do("POST", "", reqObj)
}

// TermsAndConditions returns service endpoint for TermsAndConditions
func (b *TermsAndConditionsAcceptanceStatusRequestBuilder) TermsAndConditions() *TermsAndConditionsRequestBuilder {
	bb := &TermsAndConditionsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/termsAndConditions"
	return bb
}

// Resource returns service endpoint for Entity
func (b *TrendingRequestBuilder) Resource() *EntityRequestBuilder {
	bb := &EntityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/resource"
	return bb
}

// Resource returns service endpoint for Entity
func (b *UsedInsightRequestBuilder) Resource() *EntityRequestBuilder {
	bb := &EntityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/resource"
	return bb
}

//
func (b *UserRequestBuilder) Activities() *UserActivitiesCollectionRequestBuilder {
	bb := &UserActivitiesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/activities"
	return bb
}

//
type UserActivitiesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserActivitiesCollectionRequestBuilder) Request() *UserActivitiesCollectionRequest {
	return &UserActivitiesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserActivitiesCollectionRequestBuilder) ID(id string) *UserActivityRequestBuilder {
	bb := &UserActivityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserActivitiesCollectionRequest struct{ BaseRequest }

//
func (r *UserActivitiesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *UserActivity, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserActivitiesCollectionRequest) Paging(method, path string, obj interface{}) ([]UserActivity, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []UserActivity
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []UserActivity
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserActivitiesCollectionRequest) Get() ([]UserActivity, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserActivitiesCollectionRequest) Add(reqObj *UserActivity) (*UserActivity, error) {
	return r.Do("POST", "", reqObj)
}

// Calendar returns service endpoint for Calendar
func (b *UserRequestBuilder) Calendar() *CalendarRequestBuilder {
	bb := &CalendarRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendar"
	return bb
}

//
func (b *UserRequestBuilder) CalendarGroups() *UserCalendarGroupsCollectionRequestBuilder {
	bb := &UserCalendarGroupsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendarGroups"
	return bb
}

//
type UserCalendarGroupsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserCalendarGroupsCollectionRequestBuilder) Request() *UserCalendarGroupsCollectionRequest {
	return &UserCalendarGroupsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserCalendarGroupsCollectionRequestBuilder) ID(id string) *CalendarGroupRequestBuilder {
	bb := &CalendarGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserCalendarGroupsCollectionRequest struct{ BaseRequest }

//
func (r *UserCalendarGroupsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *CalendarGroup, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserCalendarGroupsCollectionRequest) Paging(method, path string, obj interface{}) ([]CalendarGroup, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []CalendarGroup
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []CalendarGroup
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserCalendarGroupsCollectionRequest) Get() ([]CalendarGroup, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserCalendarGroupsCollectionRequest) Add(reqObj *CalendarGroup) (*CalendarGroup, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) CalendarView() *UserCalendarViewCollectionRequestBuilder {
	bb := &UserCalendarViewCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendarView"
	return bb
}

//
type UserCalendarViewCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserCalendarViewCollectionRequestBuilder) Request() *UserCalendarViewCollectionRequest {
	return &UserCalendarViewCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserCalendarViewCollectionRequestBuilder) ID(id string) *EventRequestBuilder {
	bb := &EventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserCalendarViewCollectionRequest struct{ BaseRequest }

//
func (r *UserCalendarViewCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Event, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserCalendarViewCollectionRequest) Paging(method, path string, obj interface{}) ([]Event, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Event
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Event
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserCalendarViewCollectionRequest) Get() ([]Event, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserCalendarViewCollectionRequest) Add(reqObj *Event) (*Event, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) Calendars() *UserCalendarsCollectionRequestBuilder {
	bb := &UserCalendarsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/calendars"
	return bb
}

//
type UserCalendarsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserCalendarsCollectionRequestBuilder) Request() *UserCalendarsCollectionRequest {
	return &UserCalendarsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserCalendarsCollectionRequestBuilder) ID(id string) *CalendarRequestBuilder {
	bb := &CalendarRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserCalendarsCollectionRequest struct{ BaseRequest }

//
func (r *UserCalendarsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Calendar, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserCalendarsCollectionRequest) Paging(method, path string, obj interface{}) ([]Calendar, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Calendar
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Calendar
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserCalendarsCollectionRequest) Get() ([]Calendar, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserCalendarsCollectionRequest) Add(reqObj *Calendar) (*Calendar, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) ContactFolders() *UserContactFoldersCollectionRequestBuilder {
	bb := &UserContactFoldersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/contactFolders"
	return bb
}

//
type UserContactFoldersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserContactFoldersCollectionRequestBuilder) Request() *UserContactFoldersCollectionRequest {
	return &UserContactFoldersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserContactFoldersCollectionRequestBuilder) ID(id string) *ContactFolderRequestBuilder {
	bb := &ContactFolderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserContactFoldersCollectionRequest struct{ BaseRequest }

//
func (r *UserContactFoldersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ContactFolder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserContactFoldersCollectionRequest) Paging(method, path string, obj interface{}) ([]ContactFolder, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ContactFolder
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ContactFolder
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserContactFoldersCollectionRequest) Get() ([]ContactFolder, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserContactFoldersCollectionRequest) Add(reqObj *ContactFolder) (*ContactFolder, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) Contacts() *UserContactsCollectionRequestBuilder {
	bb := &UserContactsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/contacts"
	return bb
}

//
type UserContactsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserContactsCollectionRequestBuilder) Request() *UserContactsCollectionRequest {
	return &UserContactsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserContactsCollectionRequestBuilder) ID(id string) *ContactRequestBuilder {
	bb := &ContactRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserContactsCollectionRequest struct{ BaseRequest }

//
func (r *UserContactsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Contact, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserContactsCollectionRequest) Paging(method, path string, obj interface{}) ([]Contact, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Contact
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Contact
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserContactsCollectionRequest) Get() ([]Contact, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserContactsCollectionRequest) Add(reqObj *Contact) (*Contact, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) CreatedObjects() *UserCreatedObjectsCollectionRequestBuilder {
	bb := &UserCreatedObjectsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/createdObjects"
	return bb
}

//
type UserCreatedObjectsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserCreatedObjectsCollectionRequestBuilder) Request() *UserCreatedObjectsCollectionRequest {
	return &UserCreatedObjectsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserCreatedObjectsCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserCreatedObjectsCollectionRequest struct{ BaseRequest }

//
func (r *UserCreatedObjectsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserCreatedObjectsCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserCreatedObjectsCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserCreatedObjectsCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) DeviceManagementTroubleshootingEvents() *UserDeviceManagementTroubleshootingEventsCollectionRequestBuilder {
	bb := &UserDeviceManagementTroubleshootingEventsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceManagementTroubleshootingEvents"
	return bb
}

//
type UserDeviceManagementTroubleshootingEventsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserDeviceManagementTroubleshootingEventsCollectionRequestBuilder) Request() *UserDeviceManagementTroubleshootingEventsCollectionRequest {
	return &UserDeviceManagementTroubleshootingEventsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserDeviceManagementTroubleshootingEventsCollectionRequestBuilder) ID(id string) *DeviceManagementTroubleshootingEventRequestBuilder {
	bb := &DeviceManagementTroubleshootingEventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserDeviceManagementTroubleshootingEventsCollectionRequest struct{ BaseRequest }

//
func (r *UserDeviceManagementTroubleshootingEventsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceManagementTroubleshootingEvent, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserDeviceManagementTroubleshootingEventsCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceManagementTroubleshootingEvent, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceManagementTroubleshootingEvent
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceManagementTroubleshootingEvent
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserDeviceManagementTroubleshootingEventsCollectionRequest) Get() ([]DeviceManagementTroubleshootingEvent, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserDeviceManagementTroubleshootingEventsCollectionRequest) Add(reqObj *DeviceManagementTroubleshootingEvent) (*DeviceManagementTroubleshootingEvent, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) DirectReports() *UserDirectReportsCollectionRequestBuilder {
	bb := &UserDirectReportsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/directReports"
	return bb
}

//
type UserDirectReportsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserDirectReportsCollectionRequestBuilder) Request() *UserDirectReportsCollectionRequest {
	return &UserDirectReportsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserDirectReportsCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserDirectReportsCollectionRequest struct{ BaseRequest }

//
func (r *UserDirectReportsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserDirectReportsCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserDirectReportsCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserDirectReportsCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

// Drive returns service endpoint for Drive
func (b *UserRequestBuilder) Drive() *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drive"
	return bb
}

//
func (b *UserRequestBuilder) Drives() *UserDrivesCollectionRequestBuilder {
	bb := &UserDrivesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/drives"
	return bb
}

//
type UserDrivesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserDrivesCollectionRequestBuilder) Request() *UserDrivesCollectionRequest {
	return &UserDrivesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserDrivesCollectionRequestBuilder) ID(id string) *DriveRequestBuilder {
	bb := &DriveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserDrivesCollectionRequest struct{ BaseRequest }

//
func (r *UserDrivesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Drive, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserDrivesCollectionRequest) Paging(method, path string, obj interface{}) ([]Drive, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Drive
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Drive
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserDrivesCollectionRequest) Get() ([]Drive, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserDrivesCollectionRequest) Add(reqObj *Drive) (*Drive, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) Events() *UserEventsCollectionRequestBuilder {
	bb := &UserEventsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/events"
	return bb
}

//
type UserEventsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserEventsCollectionRequestBuilder) Request() *UserEventsCollectionRequest {
	return &UserEventsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserEventsCollectionRequestBuilder) ID(id string) *EventRequestBuilder {
	bb := &EventRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserEventsCollectionRequest struct{ BaseRequest }

//
func (r *UserEventsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Event, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserEventsCollectionRequest) Paging(method, path string, obj interface{}) ([]Event, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Event
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Event
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserEventsCollectionRequest) Get() ([]Event, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserEventsCollectionRequest) Add(reqObj *Event) (*Event, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) Extensions() *UserExtensionsCollectionRequestBuilder {
	bb := &UserExtensionsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/extensions"
	return bb
}

//
type UserExtensionsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserExtensionsCollectionRequestBuilder) Request() *UserExtensionsCollectionRequest {
	return &UserExtensionsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserExtensionsCollectionRequestBuilder) ID(id string) *ExtensionRequestBuilder {
	bb := &ExtensionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserExtensionsCollectionRequest struct{ BaseRequest }

//
func (r *UserExtensionsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Extension, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserExtensionsCollectionRequest) Paging(method, path string, obj interface{}) ([]Extension, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Extension
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Extension
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserExtensionsCollectionRequest) Get() ([]Extension, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserExtensionsCollectionRequest) Add(reqObj *Extension) (*Extension, error) {
	return r.Do("POST", "", reqObj)
}

// InferenceClassification returns service endpoint for InferenceClassification
func (b *UserRequestBuilder) InferenceClassification() *InferenceClassificationRequestBuilder {
	bb := &InferenceClassificationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/inferenceClassification"
	return bb
}

// Insights returns service endpoint for OfficeGraphInsights
func (b *UserRequestBuilder) Insights() *OfficeGraphInsightsRequestBuilder {
	bb := &OfficeGraphInsightsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/insights"
	return bb
}

//
func (b *UserRequestBuilder) JoinedTeams() *UserJoinedTeamsCollectionRequestBuilder {
	bb := &UserJoinedTeamsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/joinedTeams"
	return bb
}

//
type UserJoinedTeamsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserJoinedTeamsCollectionRequestBuilder) Request() *UserJoinedTeamsCollectionRequest {
	return &UserJoinedTeamsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserJoinedTeamsCollectionRequestBuilder) ID(id string) *GroupRequestBuilder {
	bb := &GroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserJoinedTeamsCollectionRequest struct{ BaseRequest }

//
func (r *UserJoinedTeamsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Group, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserJoinedTeamsCollectionRequest) Paging(method, path string, obj interface{}) ([]Group, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Group
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Group
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserJoinedTeamsCollectionRequest) Get() ([]Group, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserJoinedTeamsCollectionRequest) Add(reqObj *Group) (*Group, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) LicenseDetails() *UserLicenseDetailsCollectionRequestBuilder {
	bb := &UserLicenseDetailsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/licenseDetails"
	return bb
}

//
type UserLicenseDetailsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserLicenseDetailsCollectionRequestBuilder) Request() *UserLicenseDetailsCollectionRequest {
	return &UserLicenseDetailsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserLicenseDetailsCollectionRequestBuilder) ID(id string) *LicenseDetailsRequestBuilder {
	bb := &LicenseDetailsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserLicenseDetailsCollectionRequest struct{ BaseRequest }

//
func (r *UserLicenseDetailsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *LicenseDetails, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserLicenseDetailsCollectionRequest) Paging(method, path string, obj interface{}) ([]LicenseDetails, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []LicenseDetails
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []LicenseDetails
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserLicenseDetailsCollectionRequest) Get() ([]LicenseDetails, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserLicenseDetailsCollectionRequest) Add(reqObj *LicenseDetails) (*LicenseDetails, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) MailFolders() *UserMailFoldersCollectionRequestBuilder {
	bb := &UserMailFoldersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/mailFolders"
	return bb
}

//
type UserMailFoldersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserMailFoldersCollectionRequestBuilder) Request() *UserMailFoldersCollectionRequest {
	return &UserMailFoldersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserMailFoldersCollectionRequestBuilder) ID(id string) *MailFolderRequestBuilder {
	bb := &MailFolderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserMailFoldersCollectionRequest struct{ BaseRequest }

//
func (r *UserMailFoldersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *MailFolder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserMailFoldersCollectionRequest) Paging(method, path string, obj interface{}) ([]MailFolder, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []MailFolder
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []MailFolder
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserMailFoldersCollectionRequest) Get() ([]MailFolder, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserMailFoldersCollectionRequest) Add(reqObj *MailFolder) (*MailFolder, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) ManagedAppRegistrations() *UserManagedAppRegistrationsCollectionRequestBuilder {
	bb := &UserManagedAppRegistrationsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedAppRegistrations"
	return bb
}

//
type UserManagedAppRegistrationsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserManagedAppRegistrationsCollectionRequestBuilder) Request() *UserManagedAppRegistrationsCollectionRequest {
	return &UserManagedAppRegistrationsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserManagedAppRegistrationsCollectionRequestBuilder) ID(id string) *ManagedAppRegistrationRequestBuilder {
	bb := &ManagedAppRegistrationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserManagedAppRegistrationsCollectionRequest struct{ BaseRequest }

//
func (r *UserManagedAppRegistrationsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedAppRegistration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserManagedAppRegistrationsCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedAppRegistration, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedAppRegistration
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedAppRegistration
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserManagedAppRegistrationsCollectionRequest) Get() ([]ManagedAppRegistration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserManagedAppRegistrationsCollectionRequest) Add(reqObj *ManagedAppRegistration) (*ManagedAppRegistration, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) ManagedDevices() *UserManagedDevicesCollectionRequestBuilder {
	bb := &UserManagedDevicesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedDevices"
	return bb
}

//
type UserManagedDevicesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserManagedDevicesCollectionRequestBuilder) Request() *UserManagedDevicesCollectionRequest {
	return &UserManagedDevicesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserManagedDevicesCollectionRequestBuilder) ID(id string) *ManagedDeviceRequestBuilder {
	bb := &ManagedDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserManagedDevicesCollectionRequest struct{ BaseRequest }

//
func (r *UserManagedDevicesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ManagedDevice, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserManagedDevicesCollectionRequest) Paging(method, path string, obj interface{}) ([]ManagedDevice, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ManagedDevice
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ManagedDevice
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserManagedDevicesCollectionRequest) Get() ([]ManagedDevice, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserManagedDevicesCollectionRequest) Add(reqObj *ManagedDevice) (*ManagedDevice, error) {
	return r.Do("POST", "", reqObj)
}

// Manager returns service endpoint for DirectoryObject
func (b *UserRequestBuilder) Manager() *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/manager"
	return bb
}

//
func (b *UserRequestBuilder) MemberOf() *UserMemberOfCollectionRequestBuilder {
	bb := &UserMemberOfCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/memberOf"
	return bb
}

//
type UserMemberOfCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserMemberOfCollectionRequestBuilder) Request() *UserMemberOfCollectionRequest {
	return &UserMemberOfCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserMemberOfCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserMemberOfCollectionRequest struct{ BaseRequest }

//
func (r *UserMemberOfCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserMemberOfCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserMemberOfCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserMemberOfCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) Messages() *UserMessagesCollectionRequestBuilder {
	bb := &UserMessagesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/messages"
	return bb
}

//
type UserMessagesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserMessagesCollectionRequestBuilder) Request() *UserMessagesCollectionRequest {
	return &UserMessagesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserMessagesCollectionRequestBuilder) ID(id string) *MessageRequestBuilder {
	bb := &MessageRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserMessagesCollectionRequest struct{ BaseRequest }

//
func (r *UserMessagesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Message, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserMessagesCollectionRequest) Paging(method, path string, obj interface{}) ([]Message, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Message
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Message
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserMessagesCollectionRequest) Get() ([]Message, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserMessagesCollectionRequest) Add(reqObj *Message) (*Message, error) {
	return r.Do("POST", "", reqObj)
}

// Onenote returns service endpoint for Onenote
func (b *UserRequestBuilder) Onenote() *OnenoteRequestBuilder {
	bb := &OnenoteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/onenote"
	return bb
}

//
func (b *UserRequestBuilder) OnlineMeetings() *UserOnlineMeetingsCollectionRequestBuilder {
	bb := &UserOnlineMeetingsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/onlineMeetings"
	return bb
}

//
type UserOnlineMeetingsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserOnlineMeetingsCollectionRequestBuilder) Request() *UserOnlineMeetingsCollectionRequest {
	return &UserOnlineMeetingsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserOnlineMeetingsCollectionRequestBuilder) ID(id string) *OnlineMeetingRequestBuilder {
	bb := &OnlineMeetingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserOnlineMeetingsCollectionRequest struct{ BaseRequest }

//
func (r *UserOnlineMeetingsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnlineMeeting, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserOnlineMeetingsCollectionRequest) Paging(method, path string, obj interface{}) ([]OnlineMeeting, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []OnlineMeeting
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []OnlineMeeting
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserOnlineMeetingsCollectionRequest) Get() ([]OnlineMeeting, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserOnlineMeetingsCollectionRequest) Add(reqObj *OnlineMeeting) (*OnlineMeeting, error) {
	return r.Do("POST", "", reqObj)
}

// Outlook returns service endpoint for OutlookUser
func (b *UserRequestBuilder) Outlook() *OutlookUserRequestBuilder {
	bb := &OutlookUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/outlook"
	return bb
}

//
func (b *UserRequestBuilder) OwnedDevices() *UserOwnedDevicesCollectionRequestBuilder {
	bb := &UserOwnedDevicesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/ownedDevices"
	return bb
}

//
type UserOwnedDevicesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserOwnedDevicesCollectionRequestBuilder) Request() *UserOwnedDevicesCollectionRequest {
	return &UserOwnedDevicesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserOwnedDevicesCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserOwnedDevicesCollectionRequest struct{ BaseRequest }

//
func (r *UserOwnedDevicesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserOwnedDevicesCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserOwnedDevicesCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserOwnedDevicesCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) OwnedObjects() *UserOwnedObjectsCollectionRequestBuilder {
	bb := &UserOwnedObjectsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/ownedObjects"
	return bb
}

//
type UserOwnedObjectsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserOwnedObjectsCollectionRequestBuilder) Request() *UserOwnedObjectsCollectionRequest {
	return &UserOwnedObjectsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserOwnedObjectsCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserOwnedObjectsCollectionRequest struct{ BaseRequest }

//
func (r *UserOwnedObjectsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserOwnedObjectsCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserOwnedObjectsCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserOwnedObjectsCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserRequestBuilder) People() *UserPeopleCollectionRequestBuilder {
	bb := &UserPeopleCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/people"
	return bb
}

//
type UserPeopleCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserPeopleCollectionRequestBuilder) Request() *UserPeopleCollectionRequest {
	return &UserPeopleCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserPeopleCollectionRequestBuilder) ID(id string) *PersonRequestBuilder {
	bb := &PersonRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserPeopleCollectionRequest struct{ BaseRequest }

//
func (r *UserPeopleCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *Person, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserPeopleCollectionRequest) Paging(method, path string, obj interface{}) ([]Person, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Person
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []Person
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserPeopleCollectionRequest) Get() ([]Person, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserPeopleCollectionRequest) Add(reqObj *Person) (*Person, error) {
	return r.Do("POST", "", reqObj)
}

// Photo returns service endpoint for ProfilePhoto
func (b *UserRequestBuilder) Photo() *ProfilePhotoRequestBuilder {
	bb := &ProfilePhotoRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/photo"
	return bb
}

//
func (b *UserRequestBuilder) Photos() *UserPhotosCollectionRequestBuilder {
	bb := &UserPhotosCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/photos"
	return bb
}

//
type UserPhotosCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserPhotosCollectionRequestBuilder) Request() *UserPhotosCollectionRequest {
	return &UserPhotosCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserPhotosCollectionRequestBuilder) ID(id string) *ProfilePhotoRequestBuilder {
	bb := &ProfilePhotoRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserPhotosCollectionRequest struct{ BaseRequest }

//
func (r *UserPhotosCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ProfilePhoto, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserPhotosCollectionRequest) Paging(method, path string, obj interface{}) ([]ProfilePhoto, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ProfilePhoto
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ProfilePhoto
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserPhotosCollectionRequest) Get() ([]ProfilePhoto, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserPhotosCollectionRequest) Add(reqObj *ProfilePhoto) (*ProfilePhoto, error) {
	return r.Do("POST", "", reqObj)
}

// Planner returns service endpoint for PlannerUser
func (b *UserRequestBuilder) Planner() *PlannerUserRequestBuilder {
	bb := &PlannerUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/planner"
	return bb
}

//
func (b *UserRequestBuilder) RegisteredDevices() *UserRegisteredDevicesCollectionRequestBuilder {
	bb := &UserRegisteredDevicesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/registeredDevices"
	return bb
}

//
type UserRegisteredDevicesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserRegisteredDevicesCollectionRequestBuilder) Request() *UserRegisteredDevicesCollectionRequest {
	return &UserRegisteredDevicesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserRegisteredDevicesCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserRegisteredDevicesCollectionRequest struct{ BaseRequest }

//
func (r *UserRegisteredDevicesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserRegisteredDevicesCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserRegisteredDevicesCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserRegisteredDevicesCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

// Settings returns service endpoint for UserSettings
func (b *UserRequestBuilder) Settings() *UserSettingsRequestBuilder {
	bb := &UserSettingsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/settings"
	return bb
}

//
func (b *UserRequestBuilder) TransitiveMemberOf() *UserTransitiveMemberOfCollectionRequestBuilder {
	bb := &UserTransitiveMemberOfCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/transitiveMemberOf"
	return bb
}

//
type UserTransitiveMemberOfCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserTransitiveMemberOfCollectionRequestBuilder) Request() *UserTransitiveMemberOfCollectionRequest {
	return &UserTransitiveMemberOfCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserTransitiveMemberOfCollectionRequestBuilder) ID(id string) *DirectoryObjectRequestBuilder {
	bb := &DirectoryObjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserTransitiveMemberOfCollectionRequest struct{ BaseRequest }

//
func (r *UserTransitiveMemberOfCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserTransitiveMemberOfCollectionRequest) Paging(method, path string, obj interface{}) ([]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserTransitiveMemberOfCollectionRequest) Get() ([]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserTransitiveMemberOfCollectionRequest) Add(reqObj *DirectoryObject) (*DirectoryObject, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserActivityRequestBuilder) HistoryItems() *UserActivityHistoryItemsCollectionRequestBuilder {
	bb := &UserActivityHistoryItemsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/historyItems"
	return bb
}

//
type UserActivityHistoryItemsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserActivityHistoryItemsCollectionRequestBuilder) Request() *UserActivityHistoryItemsCollectionRequest {
	return &UserActivityHistoryItemsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserActivityHistoryItemsCollectionRequestBuilder) ID(id string) *ActivityHistoryItemRequestBuilder {
	bb := &ActivityHistoryItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserActivityHistoryItemsCollectionRequest struct{ BaseRequest }

//
func (r *UserActivityHistoryItemsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *ActivityHistoryItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserActivityHistoryItemsCollectionRequest) Paging(method, path string, obj interface{}) ([]ActivityHistoryItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []ActivityHistoryItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []ActivityHistoryItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserActivityHistoryItemsCollectionRequest) Get() ([]ActivityHistoryItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserActivityHistoryItemsCollectionRequest) Add(reqObj *ActivityHistoryItem) (*ActivityHistoryItem, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *UserInstallStateSummaryRequestBuilder) DeviceStates() *UserInstallStateSummaryDeviceStatesCollectionRequestBuilder {
	bb := &UserInstallStateSummaryDeviceStatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStates"
	return bb
}

//
type UserInstallStateSummaryDeviceStatesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserInstallStateSummaryDeviceStatesCollectionRequestBuilder) Request() *UserInstallStateSummaryDeviceStatesCollectionRequest {
	return &UserInstallStateSummaryDeviceStatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *UserInstallStateSummaryDeviceStatesCollectionRequestBuilder) ID(id string) *DeviceInstallStateRequestBuilder {
	bb := &DeviceInstallStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type UserInstallStateSummaryDeviceStatesCollectionRequest struct{ BaseRequest }

//
func (r *UserInstallStateSummaryDeviceStatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *DeviceInstallState, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserInstallStateSummaryDeviceStatesCollectionRequest) Paging(method, path string, obj interface{}) ([]DeviceInstallState, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []DeviceInstallState
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []DeviceInstallState
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserInstallStateSummaryDeviceStatesCollectionRequest) Get() ([]DeviceInstallState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *UserInstallStateSummaryDeviceStatesCollectionRequest) Add(reqObj *DeviceInstallState) (*DeviceInstallState, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WindowsInformationProtectionRequestBuilder) Assignments() *WindowsInformationProtectionAssignmentsCollectionRequestBuilder {
	bb := &WindowsInformationProtectionAssignmentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/assignments"
	return bb
}

//
type WindowsInformationProtectionAssignmentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionAssignmentsCollectionRequestBuilder) Request() *WindowsInformationProtectionAssignmentsCollectionRequest {
	return &WindowsInformationProtectionAssignmentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WindowsInformationProtectionAssignmentsCollectionRequestBuilder) ID(id string) *TargetedManagedAppPolicyAssignmentRequestBuilder {
	bb := &TargetedManagedAppPolicyAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WindowsInformationProtectionAssignmentsCollectionRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionAssignmentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *TargetedManagedAppPolicyAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WindowsInformationProtectionAssignmentsCollectionRequest) Paging(method, path string, obj interface{}) ([]TargetedManagedAppPolicyAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []TargetedManagedAppPolicyAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []TargetedManagedAppPolicyAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WindowsInformationProtectionAssignmentsCollectionRequest) Get() ([]TargetedManagedAppPolicyAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WindowsInformationProtectionAssignmentsCollectionRequest) Add(reqObj *TargetedManagedAppPolicyAssignment) (*TargetedManagedAppPolicyAssignment, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WindowsInformationProtectionRequestBuilder) ExemptAppLockerFiles() *WindowsInformationProtectionExemptAppLockerFilesCollectionRequestBuilder {
	bb := &WindowsInformationProtectionExemptAppLockerFilesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/exemptAppLockerFiles"
	return bb
}

//
type WindowsInformationProtectionExemptAppLockerFilesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionExemptAppLockerFilesCollectionRequestBuilder) Request() *WindowsInformationProtectionExemptAppLockerFilesCollectionRequest {
	return &WindowsInformationProtectionExemptAppLockerFilesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WindowsInformationProtectionExemptAppLockerFilesCollectionRequestBuilder) ID(id string) *WindowsInformationProtectionAppLockerFileRequestBuilder {
	bb := &WindowsInformationProtectionAppLockerFileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WindowsInformationProtectionExemptAppLockerFilesCollectionRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionExemptAppLockerFilesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionAppLockerFile, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WindowsInformationProtectionExemptAppLockerFilesCollectionRequest) Paging(method, path string, obj interface{}) ([]WindowsInformationProtectionAppLockerFile, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WindowsInformationProtectionAppLockerFile
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WindowsInformationProtectionAppLockerFile
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WindowsInformationProtectionExemptAppLockerFilesCollectionRequest) Get() ([]WindowsInformationProtectionAppLockerFile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WindowsInformationProtectionExemptAppLockerFilesCollectionRequest) Add(reqObj *WindowsInformationProtectionAppLockerFile) (*WindowsInformationProtectionAppLockerFile, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WindowsInformationProtectionRequestBuilder) ProtectedAppLockerFiles() *WindowsInformationProtectionProtectedAppLockerFilesCollectionRequestBuilder {
	bb := &WindowsInformationProtectionProtectedAppLockerFilesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/protectedAppLockerFiles"
	return bb
}

//
type WindowsInformationProtectionProtectedAppLockerFilesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionProtectedAppLockerFilesCollectionRequestBuilder) Request() *WindowsInformationProtectionProtectedAppLockerFilesCollectionRequest {
	return &WindowsInformationProtectionProtectedAppLockerFilesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WindowsInformationProtectionProtectedAppLockerFilesCollectionRequestBuilder) ID(id string) *WindowsInformationProtectionAppLockerFileRequestBuilder {
	bb := &WindowsInformationProtectionAppLockerFileRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WindowsInformationProtectionProtectedAppLockerFilesCollectionRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionProtectedAppLockerFilesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WindowsInformationProtectionAppLockerFile, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WindowsInformationProtectionProtectedAppLockerFilesCollectionRequest) Paging(method, path string, obj interface{}) ([]WindowsInformationProtectionAppLockerFile, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WindowsInformationProtectionAppLockerFile
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WindowsInformationProtectionAppLockerFile
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WindowsInformationProtectionProtectedAppLockerFilesCollectionRequest) Get() ([]WindowsInformationProtectionAppLockerFile, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WindowsInformationProtectionProtectedAppLockerFilesCollectionRequest) Add(reqObj *WindowsInformationProtectionAppLockerFile) (*WindowsInformationProtectionAppLockerFile, error) {
	return r.Do("POST", "", reqObj)
}

// Application returns service endpoint for WorkbookApplication
func (b *WorkbookRequestBuilder) Application() *WorkbookApplicationRequestBuilder {
	bb := &WorkbookApplicationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/application"
	return bb
}

//
func (b *WorkbookRequestBuilder) Comments() *WorkbookCommentsCollectionRequestBuilder {
	bb := &WorkbookCommentsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/comments"
	return bb
}

//
type WorkbookCommentsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookCommentsCollectionRequestBuilder) Request() *WorkbookCommentsCollectionRequest {
	return &WorkbookCommentsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookCommentsCollectionRequestBuilder) ID(id string) *WorkbookCommentRequestBuilder {
	bb := &WorkbookCommentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookCommentsCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookCommentsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookComment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookCommentsCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookComment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookComment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookComment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookCommentsCollectionRequest) Get() ([]WorkbookComment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookCommentsCollectionRequest) Add(reqObj *WorkbookComment) (*WorkbookComment, error) {
	return r.Do("POST", "", reqObj)
}

// Functions returns service endpoint for WorkbookFunctions
func (b *WorkbookRequestBuilder) Functions() *WorkbookFunctionsRequestBuilder {
	bb := &WorkbookFunctionsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/functions"
	return bb
}

//
func (b *WorkbookRequestBuilder) Names() *WorkbookNamesCollectionRequestBuilder {
	bb := &WorkbookNamesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/names"
	return bb
}

//
type WorkbookNamesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookNamesCollectionRequestBuilder) Request() *WorkbookNamesCollectionRequest {
	return &WorkbookNamesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookNamesCollectionRequestBuilder) ID(id string) *WorkbookNamedItemRequestBuilder {
	bb := &WorkbookNamedItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookNamesCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookNamesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookNamedItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookNamesCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookNamedItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookNamedItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookNamedItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookNamesCollectionRequest) Get() ([]WorkbookNamedItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookNamesCollectionRequest) Add(reqObj *WorkbookNamedItem) (*WorkbookNamedItem, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WorkbookRequestBuilder) Tables() *WorkbookTablesCollectionRequestBuilder {
	bb := &WorkbookTablesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/tables"
	return bb
}

//
type WorkbookTablesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTablesCollectionRequestBuilder) Request() *WorkbookTablesCollectionRequest {
	return &WorkbookTablesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookTablesCollectionRequestBuilder) ID(id string) *WorkbookTableRequestBuilder {
	bb := &WorkbookTableRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookTablesCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookTablesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTable, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTablesCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookTable, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookTable
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookTable
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookTablesCollectionRequest) Get() ([]WorkbookTable, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookTablesCollectionRequest) Add(reqObj *WorkbookTable) (*WorkbookTable, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WorkbookRequestBuilder) Worksheets() *WorkbookWorksheetsCollectionRequestBuilder {
	bb := &WorkbookWorksheetsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/worksheets"
	return bb
}

//
type WorkbookWorksheetsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetsCollectionRequestBuilder) Request() *WorkbookWorksheetsCollectionRequest {
	return &WorkbookWorksheetsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookWorksheetsCollectionRequestBuilder) ID(id string) *WorkbookWorksheetRequestBuilder {
	bb := &WorkbookWorksheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookWorksheetsCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookWorksheet, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookWorksheetsCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookWorksheet, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookWorksheet
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookWorksheet
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookWorksheetsCollectionRequest) Get() ([]WorkbookWorksheet, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookWorksheetsCollectionRequest) Add(reqObj *WorkbookWorksheet) (*WorkbookWorksheet, error) {
	return r.Do("POST", "", reqObj)
}

// Axes returns service endpoint for WorkbookChartAxes
func (b *WorkbookChartRequestBuilder) Axes() *WorkbookChartAxesRequestBuilder {
	bb := &WorkbookChartAxesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/axes"
	return bb
}

// DataLabels returns service endpoint for WorkbookChartDataLabels
func (b *WorkbookChartRequestBuilder) DataLabels() *WorkbookChartDataLabelsRequestBuilder {
	bb := &WorkbookChartDataLabelsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/dataLabels"
	return bb
}

// Format returns service endpoint for WorkbookChartAreaFormat
func (b *WorkbookChartRequestBuilder) Format() *WorkbookChartAreaFormatRequestBuilder {
	bb := &WorkbookChartAreaFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// Legend returns service endpoint for WorkbookChartLegend
func (b *WorkbookChartRequestBuilder) Legend() *WorkbookChartLegendRequestBuilder {
	bb := &WorkbookChartLegendRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/legend"
	return bb
}

//
func (b *WorkbookChartRequestBuilder) Series() *WorkbookChartSeriesCollectionRequestBuilder {
	bb := &WorkbookChartSeriesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/series"
	return bb
}

//
type WorkbookChartSeriesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartSeriesCollectionRequestBuilder) Request() *WorkbookChartSeriesCollectionRequest {
	return &WorkbookChartSeriesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookChartSeriesCollectionRequestBuilder) ID(id string) *WorkbookChartSeriesRequestBuilder {
	bb := &WorkbookChartSeriesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookChartSeriesCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookChartSeriesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartSeries, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartSeriesCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookChartSeries, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookChartSeries
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookChartSeries
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookChartSeriesCollectionRequest) Get() ([]WorkbookChartSeries, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookChartSeriesCollectionRequest) Add(reqObj *WorkbookChartSeries) (*WorkbookChartSeries, error) {
	return r.Do("POST", "", reqObj)
}

// Title returns service endpoint for WorkbookChartTitle
func (b *WorkbookChartRequestBuilder) Title() *WorkbookChartTitleRequestBuilder {
	bb := &WorkbookChartTitleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/title"
	return bb
}

// Worksheet returns service endpoint for WorkbookWorksheet
func (b *WorkbookChartRequestBuilder) Worksheet() *WorkbookWorksheetRequestBuilder {
	bb := &WorkbookWorksheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/worksheet"
	return bb
}

// Fill returns service endpoint for WorkbookChartFill
func (b *WorkbookChartAreaFormatRequestBuilder) Fill() *WorkbookChartFillRequestBuilder {
	bb := &WorkbookChartFillRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fill"
	return bb
}

// Font returns service endpoint for WorkbookChartFont
func (b *WorkbookChartAreaFormatRequestBuilder) Font() *WorkbookChartFontRequestBuilder {
	bb := &WorkbookChartFontRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/font"
	return bb
}

// CategoryAxis returns service endpoint for WorkbookChartAxis
func (b *WorkbookChartAxesRequestBuilder) CategoryAxis() *WorkbookChartAxisRequestBuilder {
	bb := &WorkbookChartAxisRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/categoryAxis"
	return bb
}

// SeriesAxis returns service endpoint for WorkbookChartAxis
func (b *WorkbookChartAxesRequestBuilder) SeriesAxis() *WorkbookChartAxisRequestBuilder {
	bb := &WorkbookChartAxisRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/seriesAxis"
	return bb
}

// ValueAxis returns service endpoint for WorkbookChartAxis
func (b *WorkbookChartAxesRequestBuilder) ValueAxis() *WorkbookChartAxisRequestBuilder {
	bb := &WorkbookChartAxisRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/valueAxis"
	return bb
}

// Format returns service endpoint for WorkbookChartAxisFormat
func (b *WorkbookChartAxisRequestBuilder) Format() *WorkbookChartAxisFormatRequestBuilder {
	bb := &WorkbookChartAxisFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// MajorGridlines returns service endpoint for WorkbookChartGridlines
func (b *WorkbookChartAxisRequestBuilder) MajorGridlines() *WorkbookChartGridlinesRequestBuilder {
	bb := &WorkbookChartGridlinesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/majorGridlines"
	return bb
}

// MinorGridlines returns service endpoint for WorkbookChartGridlines
func (b *WorkbookChartAxisRequestBuilder) MinorGridlines() *WorkbookChartGridlinesRequestBuilder {
	bb := &WorkbookChartGridlinesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/minorGridlines"
	return bb
}

// Title returns service endpoint for WorkbookChartAxisTitle
func (b *WorkbookChartAxisRequestBuilder) Title() *WorkbookChartAxisTitleRequestBuilder {
	bb := &WorkbookChartAxisTitleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/title"
	return bb
}

// Font returns service endpoint for WorkbookChartFont
func (b *WorkbookChartAxisFormatRequestBuilder) Font() *WorkbookChartFontRequestBuilder {
	bb := &WorkbookChartFontRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/font"
	return bb
}

// Line returns service endpoint for WorkbookChartLineFormat
func (b *WorkbookChartAxisFormatRequestBuilder) Line() *WorkbookChartLineFormatRequestBuilder {
	bb := &WorkbookChartLineFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/line"
	return bb
}

// Format returns service endpoint for WorkbookChartAxisTitleFormat
func (b *WorkbookChartAxisTitleRequestBuilder) Format() *WorkbookChartAxisTitleFormatRequestBuilder {
	bb := &WorkbookChartAxisTitleFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// Font returns service endpoint for WorkbookChartFont
func (b *WorkbookChartAxisTitleFormatRequestBuilder) Font() *WorkbookChartFontRequestBuilder {
	bb := &WorkbookChartFontRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/font"
	return bb
}

// Fill returns service endpoint for WorkbookChartFill
func (b *WorkbookChartDataLabelFormatRequestBuilder) Fill() *WorkbookChartFillRequestBuilder {
	bb := &WorkbookChartFillRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fill"
	return bb
}

// Font returns service endpoint for WorkbookChartFont
func (b *WorkbookChartDataLabelFormatRequestBuilder) Font() *WorkbookChartFontRequestBuilder {
	bb := &WorkbookChartFontRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/font"
	return bb
}

// Format returns service endpoint for WorkbookChartDataLabelFormat
func (b *WorkbookChartDataLabelsRequestBuilder) Format() *WorkbookChartDataLabelFormatRequestBuilder {
	bb := &WorkbookChartDataLabelFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// Format returns service endpoint for WorkbookChartGridlinesFormat
func (b *WorkbookChartGridlinesRequestBuilder) Format() *WorkbookChartGridlinesFormatRequestBuilder {
	bb := &WorkbookChartGridlinesFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// Line returns service endpoint for WorkbookChartLineFormat
func (b *WorkbookChartGridlinesFormatRequestBuilder) Line() *WorkbookChartLineFormatRequestBuilder {
	bb := &WorkbookChartLineFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/line"
	return bb
}

// Format returns service endpoint for WorkbookChartLegendFormat
func (b *WorkbookChartLegendRequestBuilder) Format() *WorkbookChartLegendFormatRequestBuilder {
	bb := &WorkbookChartLegendFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// Fill returns service endpoint for WorkbookChartFill
func (b *WorkbookChartLegendFormatRequestBuilder) Fill() *WorkbookChartFillRequestBuilder {
	bb := &WorkbookChartFillRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fill"
	return bb
}

// Font returns service endpoint for WorkbookChartFont
func (b *WorkbookChartLegendFormatRequestBuilder) Font() *WorkbookChartFontRequestBuilder {
	bb := &WorkbookChartFontRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/font"
	return bb
}

// Format returns service endpoint for WorkbookChartPointFormat
func (b *WorkbookChartPointRequestBuilder) Format() *WorkbookChartPointFormatRequestBuilder {
	bb := &WorkbookChartPointFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// Fill returns service endpoint for WorkbookChartFill
func (b *WorkbookChartPointFormatRequestBuilder) Fill() *WorkbookChartFillRequestBuilder {
	bb := &WorkbookChartFillRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fill"
	return bb
}

// Format returns service endpoint for WorkbookChartSeriesFormat
func (b *WorkbookChartSeriesRequestBuilder) Format() *WorkbookChartSeriesFormatRequestBuilder {
	bb := &WorkbookChartSeriesFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

//
func (b *WorkbookChartSeriesRequestBuilder) Points() *WorkbookChartSeriesPointsCollectionRequestBuilder {
	bb := &WorkbookChartSeriesPointsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/points"
	return bb
}

//
type WorkbookChartSeriesPointsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartSeriesPointsCollectionRequestBuilder) Request() *WorkbookChartSeriesPointsCollectionRequest {
	return &WorkbookChartSeriesPointsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookChartSeriesPointsCollectionRequestBuilder) ID(id string) *WorkbookChartPointRequestBuilder {
	bb := &WorkbookChartPointRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookChartSeriesPointsCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookChartSeriesPointsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChartPoint, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartSeriesPointsCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookChartPoint, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookChartPoint
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookChartPoint
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookChartSeriesPointsCollectionRequest) Get() ([]WorkbookChartPoint, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookChartSeriesPointsCollectionRequest) Add(reqObj *WorkbookChartPoint) (*WorkbookChartPoint, error) {
	return r.Do("POST", "", reqObj)
}

// Fill returns service endpoint for WorkbookChartFill
func (b *WorkbookChartSeriesFormatRequestBuilder) Fill() *WorkbookChartFillRequestBuilder {
	bb := &WorkbookChartFillRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fill"
	return bb
}

// Line returns service endpoint for WorkbookChartLineFormat
func (b *WorkbookChartSeriesFormatRequestBuilder) Line() *WorkbookChartLineFormatRequestBuilder {
	bb := &WorkbookChartLineFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/line"
	return bb
}

// Format returns service endpoint for WorkbookChartTitleFormat
func (b *WorkbookChartTitleRequestBuilder) Format() *WorkbookChartTitleFormatRequestBuilder {
	bb := &WorkbookChartTitleFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// Fill returns service endpoint for WorkbookChartFill
func (b *WorkbookChartTitleFormatRequestBuilder) Fill() *WorkbookChartFillRequestBuilder {
	bb := &WorkbookChartFillRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fill"
	return bb
}

// Font returns service endpoint for WorkbookChartFont
func (b *WorkbookChartTitleFormatRequestBuilder) Font() *WorkbookChartFontRequestBuilder {
	bb := &WorkbookChartFontRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/font"
	return bb
}

//
func (b *WorkbookCommentRequestBuilder) Replies() *WorkbookCommentRepliesCollectionRequestBuilder {
	bb := &WorkbookCommentRepliesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/replies"
	return bb
}

//
type WorkbookCommentRepliesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookCommentRepliesCollectionRequestBuilder) Request() *WorkbookCommentRepliesCollectionRequest {
	return &WorkbookCommentRepliesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookCommentRepliesCollectionRequestBuilder) ID(id string) *WorkbookCommentReplyRequestBuilder {
	bb := &WorkbookCommentReplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookCommentRepliesCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookCommentRepliesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookCommentReply, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookCommentRepliesCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookCommentReply, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookCommentReply
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookCommentReply
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookCommentRepliesCollectionRequest) Get() ([]WorkbookCommentReply, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookCommentRepliesCollectionRequest) Add(reqObj *WorkbookCommentReply) (*WorkbookCommentReply, error) {
	return r.Do("POST", "", reqObj)
}

// Worksheet returns service endpoint for WorkbookWorksheet
func (b *WorkbookNamedItemRequestBuilder) Worksheet() *WorkbookWorksheetRequestBuilder {
	bb := &WorkbookWorksheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/worksheet"
	return bb
}

// Worksheet returns service endpoint for WorkbookWorksheet
func (b *WorkbookPivotTableRequestBuilder) Worksheet() *WorkbookWorksheetRequestBuilder {
	bb := &WorkbookWorksheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/worksheet"
	return bb
}

// Format returns service endpoint for WorkbookRangeFormat
func (b *WorkbookRangeRequestBuilder) Format() *WorkbookRangeFormatRequestBuilder {
	bb := &WorkbookRangeFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}

// Sort returns service endpoint for WorkbookRangeSort
func (b *WorkbookRangeRequestBuilder) Sort() *WorkbookRangeSortRequestBuilder {
	bb := &WorkbookRangeSortRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sort"
	return bb
}

// Worksheet returns service endpoint for WorkbookWorksheet
func (b *WorkbookRangeRequestBuilder) Worksheet() *WorkbookWorksheetRequestBuilder {
	bb := &WorkbookWorksheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/worksheet"
	return bb
}

//
func (b *WorkbookRangeFormatRequestBuilder) Borders() *WorkbookRangeFormatBordersCollectionRequestBuilder {
	bb := &WorkbookRangeFormatBordersCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/borders"
	return bb
}

//
type WorkbookRangeFormatBordersCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeFormatBordersCollectionRequestBuilder) Request() *WorkbookRangeFormatBordersCollectionRequest {
	return &WorkbookRangeFormatBordersCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookRangeFormatBordersCollectionRequestBuilder) ID(id string) *WorkbookRangeBorderRequestBuilder {
	bb := &WorkbookRangeBorderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookRangeFormatBordersCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookRangeFormatBordersCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRangeBorder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeFormatBordersCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookRangeBorder, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookRangeBorder
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookRangeBorder
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookRangeFormatBordersCollectionRequest) Get() ([]WorkbookRangeBorder, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookRangeFormatBordersCollectionRequest) Add(reqObj *WorkbookRangeBorder) (*WorkbookRangeBorder, error) {
	return r.Do("POST", "", reqObj)
}

// Fill returns service endpoint for WorkbookRangeFill
func (b *WorkbookRangeFormatRequestBuilder) Fill() *WorkbookRangeFillRequestBuilder {
	bb := &WorkbookRangeFillRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/fill"
	return bb
}

// Font returns service endpoint for WorkbookRangeFont
func (b *WorkbookRangeFormatRequestBuilder) Font() *WorkbookRangeFontRequestBuilder {
	bb := &WorkbookRangeFontRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/font"
	return bb
}

// Protection returns service endpoint for WorkbookFormatProtection
func (b *WorkbookRangeFormatRequestBuilder) Protection() *WorkbookFormatProtectionRequestBuilder {
	bb := &WorkbookFormatProtectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/protection"
	return bb
}

//
func (b *WorkbookRangeViewRequestBuilder) Rows() *WorkbookRangeViewRowsCollectionRequestBuilder {
	bb := &WorkbookRangeViewRowsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/rows"
	return bb
}

//
type WorkbookRangeViewRowsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeViewRowsCollectionRequestBuilder) Request() *WorkbookRangeViewRowsCollectionRequest {
	return &WorkbookRangeViewRowsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookRangeViewRowsCollectionRequestBuilder) ID(id string) *WorkbookRangeViewRequestBuilder {
	bb := &WorkbookRangeViewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookRangeViewRowsCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookRangeViewRowsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRangeView, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeViewRowsCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookRangeView, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookRangeView
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookRangeView
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookRangeViewRowsCollectionRequest) Get() ([]WorkbookRangeView, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookRangeViewRowsCollectionRequest) Add(reqObj *WorkbookRangeView) (*WorkbookRangeView, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WorkbookTableRequestBuilder) Columns() *WorkbookTableColumnsCollectionRequestBuilder {
	bb := &WorkbookTableColumnsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/columns"
	return bb
}

//
type WorkbookTableColumnsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableColumnsCollectionRequestBuilder) Request() *WorkbookTableColumnsCollectionRequest {
	return &WorkbookTableColumnsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookTableColumnsCollectionRequestBuilder) ID(id string) *WorkbookTableColumnRequestBuilder {
	bb := &WorkbookTableColumnRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookTableColumnsCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookTableColumnsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTableColumn, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableColumnsCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookTableColumn, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookTableColumn
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookTableColumn
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookTableColumnsCollectionRequest) Get() ([]WorkbookTableColumn, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookTableColumnsCollectionRequest) Add(reqObj *WorkbookTableColumn) (*WorkbookTableColumn, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WorkbookTableRequestBuilder) Rows() *WorkbookTableRowsCollectionRequestBuilder {
	bb := &WorkbookTableRowsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/rows"
	return bb
}

//
type WorkbookTableRowsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableRowsCollectionRequestBuilder) Request() *WorkbookTableRowsCollectionRequest {
	return &WorkbookTableRowsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookTableRowsCollectionRequestBuilder) ID(id string) *WorkbookTableRowRequestBuilder {
	bb := &WorkbookTableRowRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookTableRowsCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookTableRowsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTableRow, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableRowsCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookTableRow, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookTableRow
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookTableRow
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookTableRowsCollectionRequest) Get() ([]WorkbookTableRow, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookTableRowsCollectionRequest) Add(reqObj *WorkbookTableRow) (*WorkbookTableRow, error) {
	return r.Do("POST", "", reqObj)
}

// Sort returns service endpoint for WorkbookTableSort
func (b *WorkbookTableRequestBuilder) Sort() *WorkbookTableSortRequestBuilder {
	bb := &WorkbookTableSortRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/sort"
	return bb
}

// Worksheet returns service endpoint for WorkbookWorksheet
func (b *WorkbookTableRequestBuilder) Worksheet() *WorkbookWorksheetRequestBuilder {
	bb := &WorkbookWorksheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/worksheet"
	return bb
}

// Filter returns service endpoint for WorkbookFilter
func (b *WorkbookTableColumnRequestBuilder) Filter() *WorkbookFilterRequestBuilder {
	bb := &WorkbookFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/filter"
	return bb
}

//
func (b *WorkbookWorksheetRequestBuilder) Charts() *WorkbookWorksheetChartsCollectionRequestBuilder {
	bb := &WorkbookWorksheetChartsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/charts"
	return bb
}

//
type WorkbookWorksheetChartsCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetChartsCollectionRequestBuilder) Request() *WorkbookWorksheetChartsCollectionRequest {
	return &WorkbookWorksheetChartsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookWorksheetChartsCollectionRequestBuilder) ID(id string) *WorkbookChartRequestBuilder {
	bb := &WorkbookChartRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookWorksheetChartsCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetChartsCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChart, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookWorksheetChartsCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookChart, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookChart
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookChart
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookWorksheetChartsCollectionRequest) Get() ([]WorkbookChart, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookWorksheetChartsCollectionRequest) Add(reqObj *WorkbookChart) (*WorkbookChart, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WorkbookWorksheetRequestBuilder) Names() *WorkbookWorksheetNamesCollectionRequestBuilder {
	bb := &WorkbookWorksheetNamesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/names"
	return bb
}

//
type WorkbookWorksheetNamesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetNamesCollectionRequestBuilder) Request() *WorkbookWorksheetNamesCollectionRequest {
	return &WorkbookWorksheetNamesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookWorksheetNamesCollectionRequestBuilder) ID(id string) *WorkbookNamedItemRequestBuilder {
	bb := &WorkbookNamedItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookWorksheetNamesCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetNamesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookNamedItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookWorksheetNamesCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookNamedItem, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookNamedItem
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookNamedItem
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookWorksheetNamesCollectionRequest) Get() ([]WorkbookNamedItem, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookWorksheetNamesCollectionRequest) Add(reqObj *WorkbookNamedItem) (*WorkbookNamedItem, error) {
	return r.Do("POST", "", reqObj)
}

//
func (b *WorkbookWorksheetRequestBuilder) PivotTables() *WorkbookWorksheetPivotTablesCollectionRequestBuilder {
	bb := &WorkbookWorksheetPivotTablesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/pivotTables"
	return bb
}

//
type WorkbookWorksheetPivotTablesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetPivotTablesCollectionRequestBuilder) Request() *WorkbookWorksheetPivotTablesCollectionRequest {
	return &WorkbookWorksheetPivotTablesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookWorksheetPivotTablesCollectionRequestBuilder) ID(id string) *WorkbookPivotTableRequestBuilder {
	bb := &WorkbookPivotTableRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookWorksheetPivotTablesCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetPivotTablesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookPivotTable, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookWorksheetPivotTablesCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookPivotTable, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookPivotTable
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookPivotTable
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookWorksheetPivotTablesCollectionRequest) Get() ([]WorkbookPivotTable, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookWorksheetPivotTablesCollectionRequest) Add(reqObj *WorkbookPivotTable) (*WorkbookPivotTable, error) {
	return r.Do("POST", "", reqObj)
}

// Protection returns service endpoint for WorkbookWorksheetProtection
func (b *WorkbookWorksheetRequestBuilder) Protection() *WorkbookWorksheetProtectionRequestBuilder {
	bb := &WorkbookWorksheetProtectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/protection"
	return bb
}

//
func (b *WorkbookWorksheetRequestBuilder) Tables() *WorkbookWorksheetTablesCollectionRequestBuilder {
	bb := &WorkbookWorksheetTablesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/tables"
	return bb
}

//
type WorkbookWorksheetTablesCollectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetTablesCollectionRequestBuilder) Request() *WorkbookWorksheetTablesCollectionRequest {
	return &WorkbookWorksheetTablesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

//
func (b *WorkbookWorksheetTablesCollectionRequestBuilder) ID(id string) *WorkbookTableRequestBuilder {
	bb := &WorkbookTableRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

//
type WorkbookWorksheetTablesCollectionRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetTablesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTable, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookWorksheetTablesCollectionRequest) Paging(method, path string, obj interface{}) ([]WorkbookTable, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []WorkbookTable
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []WorkbookTable
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *WorkbookWorksheetTablesCollectionRequest) Get() ([]WorkbookTable, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

//
func (r *WorkbookWorksheetTablesCollectionRequest) Add(reqObj *WorkbookTable) (*WorkbookTable, error) {
	return r.Do("POST", "", reqObj)
}

// ForceDelete undocumented
func (b *DomainRequestBuilder) ForceDelete(reqObj *DomainForceDeleteRequestObject) *DomainForceDeleteRequestBuilder {
	bb := &DomainForceDeleteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/forceDelete"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DomainForceDeleteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DomainForceDeleteRequestBuilder) Request() *DomainForceDeleteRequest {
	return &DomainForceDeleteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DomainForceDeleteRequest struct{ BaseRequest }

//
func (r *DomainForceDeleteRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DomainForceDeleteRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Verify undocumented
func (b *DomainRequestBuilder) Verify(reqObj *DomainVerifyRequestObject) *DomainVerifyRequestBuilder {
	bb := &DomainVerifyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/verify"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DomainVerifyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DomainVerifyRequestBuilder) Request() *DomainVerifyRequest {
	return &DomainVerifyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DomainVerifyRequest struct{ BaseRequest }

//
func (r *DomainVerifyRequest) Do(method, path string, reqObj interface{}) (resObj *Domain, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DomainVerifyRequest) Post() (*Domain, error) {
	return r.Do("POST", "", r.requestObject)
}

// Apply undocumented
func (b *WorkbookFilterRequestBuilder) Apply(reqObj *WorkbookFilterApplyRequestObject) *WorkbookFilterApplyRequestBuilder {
	bb := &WorkbookFilterApplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/apply"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyRequestBuilder) Request() *WorkbookFilterApplyRequest {
	return &WorkbookFilterApplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyBottomItemsFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyBottomItemsFilter(reqObj *WorkbookFilterApplyBottomItemsFilterRequestObject) *WorkbookFilterApplyBottomItemsFilterRequestBuilder {
	bb := &WorkbookFilterApplyBottomItemsFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyBottomItemsFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyBottomItemsFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyBottomItemsFilterRequestBuilder) Request() *WorkbookFilterApplyBottomItemsFilterRequest {
	return &WorkbookFilterApplyBottomItemsFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyBottomItemsFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyBottomItemsFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyBottomItemsFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyBottomPercentFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyBottomPercentFilter(reqObj *WorkbookFilterApplyBottomPercentFilterRequestObject) *WorkbookFilterApplyBottomPercentFilterRequestBuilder {
	bb := &WorkbookFilterApplyBottomPercentFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyBottomPercentFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyBottomPercentFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyBottomPercentFilterRequestBuilder) Request() *WorkbookFilterApplyBottomPercentFilterRequest {
	return &WorkbookFilterApplyBottomPercentFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyBottomPercentFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyBottomPercentFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyBottomPercentFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyCellColorFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyCellColorFilter(reqObj *WorkbookFilterApplyCellColorFilterRequestObject) *WorkbookFilterApplyCellColorFilterRequestBuilder {
	bb := &WorkbookFilterApplyCellColorFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyCellColorFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyCellColorFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyCellColorFilterRequestBuilder) Request() *WorkbookFilterApplyCellColorFilterRequest {
	return &WorkbookFilterApplyCellColorFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyCellColorFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyCellColorFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyCellColorFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyCustomFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyCustomFilter(reqObj *WorkbookFilterApplyCustomFilterRequestObject) *WorkbookFilterApplyCustomFilterRequestBuilder {
	bb := &WorkbookFilterApplyCustomFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyCustomFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyCustomFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyCustomFilterRequestBuilder) Request() *WorkbookFilterApplyCustomFilterRequest {
	return &WorkbookFilterApplyCustomFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyCustomFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyCustomFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyCustomFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyDynamicFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyDynamicFilter(reqObj *WorkbookFilterApplyDynamicFilterRequestObject) *WorkbookFilterApplyDynamicFilterRequestBuilder {
	bb := &WorkbookFilterApplyDynamicFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyDynamicFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyDynamicFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyDynamicFilterRequestBuilder) Request() *WorkbookFilterApplyDynamicFilterRequest {
	return &WorkbookFilterApplyDynamicFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyDynamicFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyDynamicFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyDynamicFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyFontColorFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyFontColorFilter(reqObj *WorkbookFilterApplyFontColorFilterRequestObject) *WorkbookFilterApplyFontColorFilterRequestBuilder {
	bb := &WorkbookFilterApplyFontColorFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyFontColorFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyFontColorFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyFontColorFilterRequestBuilder) Request() *WorkbookFilterApplyFontColorFilterRequest {
	return &WorkbookFilterApplyFontColorFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyFontColorFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyFontColorFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyFontColorFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyIconFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyIconFilter(reqObj *WorkbookFilterApplyIconFilterRequestObject) *WorkbookFilterApplyIconFilterRequestBuilder {
	bb := &WorkbookFilterApplyIconFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyIconFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyIconFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyIconFilterRequestBuilder) Request() *WorkbookFilterApplyIconFilterRequest {
	return &WorkbookFilterApplyIconFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyIconFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyIconFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyIconFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyTopItemsFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyTopItemsFilter(reqObj *WorkbookFilterApplyTopItemsFilterRequestObject) *WorkbookFilterApplyTopItemsFilterRequestBuilder {
	bb := &WorkbookFilterApplyTopItemsFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyTopItemsFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyTopItemsFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyTopItemsFilterRequestBuilder) Request() *WorkbookFilterApplyTopItemsFilterRequest {
	return &WorkbookFilterApplyTopItemsFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyTopItemsFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyTopItemsFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyTopItemsFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyTopPercentFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyTopPercentFilter(reqObj *WorkbookFilterApplyTopPercentFilterRequestObject) *WorkbookFilterApplyTopPercentFilterRequestBuilder {
	bb := &WorkbookFilterApplyTopPercentFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyTopPercentFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyTopPercentFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyTopPercentFilterRequestBuilder) Request() *WorkbookFilterApplyTopPercentFilterRequest {
	return &WorkbookFilterApplyTopPercentFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyTopPercentFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyTopPercentFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyTopPercentFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ApplyValuesFilter undocumented
func (b *WorkbookFilterRequestBuilder) ApplyValuesFilter(reqObj *WorkbookFilterApplyValuesFilterRequestObject) *WorkbookFilterApplyValuesFilterRequestBuilder {
	bb := &WorkbookFilterApplyValuesFilterRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/applyValuesFilter"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterApplyValuesFilterRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterApplyValuesFilterRequestBuilder) Request() *WorkbookFilterApplyValuesFilterRequest {
	return &WorkbookFilterApplyValuesFilterRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterApplyValuesFilterRequest struct{ BaseRequest }

//
func (r *WorkbookFilterApplyValuesFilterRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterApplyValuesFilterRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Clear undocumented
func (b *WorkbookFilterRequestBuilder) Clear(reqObj *WorkbookFilterClearRequestObject) *WorkbookFilterClearRequestBuilder {
	bb := &WorkbookFilterClearRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clear"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFilterClearRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFilterClearRequestBuilder) Request() *WorkbookFilterClearRequest {
	return &WorkbookFilterClearRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFilterClearRequest struct{ BaseRequest }

//
func (r *WorkbookFilterClearRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookFilterClearRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RestoreVersion undocumented
func (b *ListItemVersionRequestBuilder) RestoreVersion(reqObj *ListItemVersionRestoreVersionRequestObject) *ListItemVersionRestoreVersionRequestBuilder {
	bb := &ListItemVersionRestoreVersionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/restoreVersion"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ListItemVersionRestoreVersionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ListItemVersionRestoreVersionRequestBuilder) Request() *ListItemVersionRestoreVersionRequest {
	return &ListItemVersionRestoreVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ListItemVersionRestoreVersionRequest struct{ BaseRequest }

//
func (r *ListItemVersionRestoreVersionRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ListItemVersionRestoreVersionRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Commit undocumented
func (b *MobileAppContentFileRequestBuilder) Commit(reqObj *MobileAppContentFileCommitRequestObject) *MobileAppContentFileCommitRequestBuilder {
	bb := &MobileAppContentFileCommitRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/commit"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MobileAppContentFileCommitRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppContentFileCommitRequestBuilder) Request() *MobileAppContentFileCommitRequest {
	return &MobileAppContentFileCommitRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MobileAppContentFileCommitRequest struct{ BaseRequest }

//
func (r *MobileAppContentFileCommitRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *MobileAppContentFileCommitRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RenewUpload undocumented
func (b *MobileAppContentFileRequestBuilder) RenewUpload(reqObj *MobileAppContentFileRenewUploadRequestObject) *MobileAppContentFileRenewUploadRequestBuilder {
	bb := &MobileAppContentFileRenewUploadRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/renewUpload"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MobileAppContentFileRenewUploadRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppContentFileRenewUploadRequestBuilder) Request() *MobileAppContentFileRenewUploadRequest {
	return &MobileAppContentFileRenewUploadRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MobileAppContentFileRenewUploadRequest struct{ BaseRequest }

//
func (r *MobileAppContentFileRenewUploadRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *MobileAppContentFileRenewUploadRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Invite undocumented
func (b *CallParticipantsCollectionRequestBuilder) Invite(reqObj *ParticipantInviteRequestObject) *ParticipantInviteRequestBuilder {
	bb := &ParticipantInviteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/invite"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ParticipantInviteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ParticipantInviteRequestBuilder) Request() *ParticipantInviteRequest {
	return &ParticipantInviteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ParticipantInviteRequest struct{ BaseRequest }

//
func (r *ParticipantInviteRequest) Do(method, path string, reqObj interface{}) (resObj *InviteParticipantsOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ParticipantInviteRequest) Post() (*InviteParticipantsOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// Clone undocumented
func (b *TeamRequestBuilder) Clone(reqObj *TeamCloneRequestObject) *TeamCloneRequestBuilder {
	bb := &TeamCloneRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clone"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type TeamCloneRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamCloneRequestBuilder) Request() *TeamCloneRequest {
	return &TeamCloneRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type TeamCloneRequest struct{ BaseRequest }

//
func (r *TeamCloneRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *TeamCloneRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Archive undocumented
func (b *TeamRequestBuilder) Archive(reqObj *TeamArchiveRequestObject) *TeamArchiveRequestBuilder {
	bb := &TeamArchiveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/archive"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type TeamArchiveRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamArchiveRequestBuilder) Request() *TeamArchiveRequest {
	return &TeamArchiveRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type TeamArchiveRequest struct{ BaseRequest }

//
func (r *TeamArchiveRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *TeamArchiveRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Unarchive undocumented
func (b *TeamRequestBuilder) Unarchive(reqObj *TeamUnarchiveRequestObject) *TeamUnarchiveRequestBuilder {
	bb := &TeamUnarchiveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/unarchive"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type TeamUnarchiveRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamUnarchiveRequestBuilder) Request() *TeamUnarchiveRequest {
	return &TeamUnarchiveRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type TeamUnarchiveRequest struct{ BaseRequest }

//
func (r *TeamUnarchiveRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *TeamUnarchiveRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *TargetedManagedAppProtectionRequestBuilder) Assign(reqObj *TargetedManagedAppProtectionAssignRequestObject) *TargetedManagedAppProtectionAssignRequestBuilder {
	bb := &TargetedManagedAppProtectionAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type TargetedManagedAppProtectionAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppProtectionAssignRequestBuilder) Request() *TargetedManagedAppProtectionAssignRequest {
	return &TargetedManagedAppProtectionAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type TargetedManagedAppProtectionAssignRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppProtectionAssignRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *TargetedManagedAppProtectionAssignRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// CheckMemberGroups undocumented
func (b *DirectoryObjectRequestBuilder) CheckMemberGroups(reqObj *DirectoryObjectCheckMemberGroupsRequestObject) *DirectoryObjectCheckMemberGroupsRequestBuilder {
	bb := &DirectoryObjectCheckMemberGroupsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/checkMemberGroups"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DirectoryObjectCheckMemberGroupsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryObjectCheckMemberGroupsRequestBuilder) Request() *DirectoryObjectCheckMemberGroupsRequest {
	return &DirectoryObjectCheckMemberGroupsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DirectoryObjectCheckMemberGroupsRequest struct{ BaseRequest }

//
func (r *DirectoryObjectCheckMemberGroupsRequest) Do(method, path string, reqObj interface{}) (resObj *[]string, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryObjectCheckMemberGroupsRequest) Paging(method, path string, obj interface{}) ([][]string, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]string
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]string
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DirectoryObjectCheckMemberGroupsRequest) Get() ([][]string, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// CheckMemberObjects undocumented
func (b *DirectoryObjectRequestBuilder) CheckMemberObjects(reqObj *DirectoryObjectCheckMemberObjectsRequestObject) *DirectoryObjectCheckMemberObjectsRequestBuilder {
	bb := &DirectoryObjectCheckMemberObjectsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/checkMemberObjects"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DirectoryObjectCheckMemberObjectsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryObjectCheckMemberObjectsRequestBuilder) Request() *DirectoryObjectCheckMemberObjectsRequest {
	return &DirectoryObjectCheckMemberObjectsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DirectoryObjectCheckMemberObjectsRequest struct{ BaseRequest }

//
func (r *DirectoryObjectCheckMemberObjectsRequest) Do(method, path string, reqObj interface{}) (resObj *[]string, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryObjectCheckMemberObjectsRequest) Paging(method, path string, obj interface{}) ([][]string, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]string
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]string
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DirectoryObjectCheckMemberObjectsRequest) Get() ([][]string, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// GetMemberGroups undocumented
func (b *DirectoryObjectRequestBuilder) GetMemberGroups(reqObj *DirectoryObjectGetMemberGroupsRequestObject) *DirectoryObjectGetMemberGroupsRequestBuilder {
	bb := &DirectoryObjectGetMemberGroupsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getMemberGroups"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DirectoryObjectGetMemberGroupsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryObjectGetMemberGroupsRequestBuilder) Request() *DirectoryObjectGetMemberGroupsRequest {
	return &DirectoryObjectGetMemberGroupsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DirectoryObjectGetMemberGroupsRequest struct{ BaseRequest }

//
func (r *DirectoryObjectGetMemberGroupsRequest) Do(method, path string, reqObj interface{}) (resObj *[]string, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryObjectGetMemberGroupsRequest) Paging(method, path string, obj interface{}) ([][]string, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]string
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]string
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DirectoryObjectGetMemberGroupsRequest) Get() ([][]string, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// GetMemberObjects undocumented
func (b *DirectoryObjectRequestBuilder) GetMemberObjects(reqObj *DirectoryObjectGetMemberObjectsRequestObject) *DirectoryObjectGetMemberObjectsRequestBuilder {
	bb := &DirectoryObjectGetMemberObjectsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getMemberObjects"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DirectoryObjectGetMemberObjectsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryObjectGetMemberObjectsRequestBuilder) Request() *DirectoryObjectGetMemberObjectsRequest {
	return &DirectoryObjectGetMemberObjectsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DirectoryObjectGetMemberObjectsRequest struct{ BaseRequest }

//
func (r *DirectoryObjectGetMemberObjectsRequest) Do(method, path string, reqObj interface{}) (resObj *[]string, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryObjectGetMemberObjectsRequest) Paging(method, path string, obj interface{}) ([][]string, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]string
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]string
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DirectoryObjectGetMemberObjectsRequest) Get() ([][]string, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// Restore undocumented
func (b *DirectoryObjectRequestBuilder) Restore(reqObj *DirectoryObjectRestoreRequestObject) *DirectoryObjectRestoreRequestBuilder {
	bb := &DirectoryObjectRestoreRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/restore"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DirectoryObjectRestoreRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryObjectRestoreRequestBuilder) Request() *DirectoryObjectRestoreRequest {
	return &DirectoryObjectRestoreRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DirectoryObjectRestoreRequest struct{ BaseRequest }

//
func (r *DirectoryObjectRestoreRequest) Do(method, path string, reqObj interface{}) (resObj *DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryObjectRestoreRequest) Post() (*DirectoryObject, error) {
	return r.Do("POST", "", r.requestObject)
}

// Add undocumented
func (b *WorkbookTableColumnsCollectionRequestBuilder) Add(reqObj *WorkbookTableColumnAddRequestObject) *WorkbookTableColumnAddRequestBuilder {
	bb := &WorkbookTableColumnAddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/add"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableColumnAddRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableColumnAddRequestBuilder) Request() *WorkbookTableColumnAddRequest {
	return &WorkbookTableColumnAddRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableColumnAddRequest struct{ BaseRequest }

//
func (r *WorkbookTableColumnAddRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTableColumn, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableColumnAddRequest) Post() (*WorkbookTableColumn, error) {
	return r.Do("POST", "", r.requestObject)
}

// AddGroup undocumented
func (b *GroupLifecyclePolicyRequestBuilder) AddGroup(reqObj *GroupLifecyclePolicyAddGroupRequestObject) *GroupLifecyclePolicyAddGroupRequestBuilder {
	bb := &GroupLifecyclePolicyAddGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/addGroup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupLifecyclePolicyAddGroupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupLifecyclePolicyAddGroupRequestBuilder) Request() *GroupLifecyclePolicyAddGroupRequest {
	return &GroupLifecyclePolicyAddGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupLifecyclePolicyAddGroupRequest struct{ BaseRequest }

//
func (r *GroupLifecyclePolicyAddGroupRequest) Do(method, path string, reqObj interface{}) (resObj *bool, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupLifecyclePolicyAddGroupRequest) Post() (*bool, error) {
	return r.Do("POST", "", r.requestObject)
}

// RemoveGroup undocumented
func (b *GroupLifecyclePolicyRequestBuilder) RemoveGroup(reqObj *GroupLifecyclePolicyRemoveGroupRequestObject) *GroupLifecyclePolicyRemoveGroupRequestBuilder {
	bb := &GroupLifecyclePolicyRemoveGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/removeGroup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupLifecyclePolicyRemoveGroupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupLifecyclePolicyRemoveGroupRequestBuilder) Request() *GroupLifecyclePolicyRemoveGroupRequest {
	return &GroupLifecyclePolicyRemoveGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupLifecyclePolicyRemoveGroupRequest struct{ BaseRequest }

//
func (r *GroupLifecyclePolicyRemoveGroupRequest) Do(method, path string, reqObj interface{}) (resObj *bool, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *GroupLifecyclePolicyRemoveGroupRequest) Post() (*bool, error) {
	return r.Do("POST", "", r.requestObject)
}

// GetNotebookFromWebUrl undocumented
func (b *OnenoteNotebooksCollectionRequestBuilder) GetNotebookFromWebUrl(reqObj *NotebookGetNotebookFromWebUrlRequestObject) *NotebookGetNotebookFromWebUrlRequestBuilder {
	bb := &NotebookGetNotebookFromWebUrlRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getNotebookFromWebUrl"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type NotebookGetNotebookFromWebUrlRequestBuilder struct{ BaseRequestBuilder }

//
func (b *NotebookGetNotebookFromWebUrlRequestBuilder) Request() *NotebookGetNotebookFromWebUrlRequest {
	return &NotebookGetNotebookFromWebUrlRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type NotebookGetNotebookFromWebUrlRequest struct{ BaseRequest }

//
func (r *NotebookGetNotebookFromWebUrlRequest) Do(method, path string, reqObj interface{}) (resObj *CopyNotebookModel, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *NotebookGetNotebookFromWebUrlRequest) Post() (*CopyNotebookModel, error) {
	return r.Do("POST", "", r.requestObject)
}

// Mute undocumented
func (b *ParticipantRequestBuilder) Mute(reqObj *ParticipantMuteRequestObject) *ParticipantMuteRequestBuilder {
	bb := &ParticipantMuteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/mute"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ParticipantMuteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ParticipantMuteRequestBuilder) Request() *ParticipantMuteRequest {
	return &ParticipantMuteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ParticipantMuteRequest struct{ BaseRequest }

//
func (r *ParticipantMuteRequest) Do(method, path string, reqObj interface{}) (resObj *MuteParticipantOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *ParticipantMuteRequest) Post() (*MuteParticipantOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// GetByIds undocumented
func (b *DeviceMemberOfCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *DeviceRegisteredOwnersCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *DeviceRegisteredUsersCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *DeviceTransitiveMemberOfCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *DirectoryDeletedItemsCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *DirectoryRoleMembersCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *DomainDomainNameReferencesCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *GroupAcceptedSendersCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *GroupMemberOfCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *GroupMembersCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *GroupMembersWithLicenseErrorsCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *GroupOwnersCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *GroupRejectedSendersCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *GroupTransitiveMemberOfCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *GroupTransitiveMembersCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *UserCreatedObjectsCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *UserDirectReportsCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *UserMemberOfCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *UserOwnedDevicesCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *UserOwnedObjectsCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *UserRegisteredDevicesCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// GetByIds undocumented
func (b *UserTransitiveMemberOfCollectionRequestBuilder) GetByIds(reqObj *DirectoryObjectGetByIdsRequestObject) *DirectoryObjectGetByIdsRequestBuilder {
	bb := &DirectoryObjectGetByIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getByIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DirectoryObjectGetByIdsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryObjectGetByIdsRequestBuilder) Request() *DirectoryObjectGetByIdsRequest {
	return &DirectoryObjectGetByIdsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DirectoryObjectGetByIdsRequest struct{ BaseRequest }

//
func (r *DirectoryObjectGetByIdsRequest) Do(method, path string, reqObj interface{}) (resObj *[]DirectoryObject, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DirectoryObjectGetByIdsRequest) Paging(method, path string, obj interface{}) ([][]DirectoryObject, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]DirectoryObject
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]DirectoryObject
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DirectoryObjectGetByIdsRequest) Get() ([][]DirectoryObject, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// ValidateProperties undocumented
func (b *DeviceMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *DeviceRegisteredOwnersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *DeviceRegisteredUsersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *DeviceTransitiveMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *DirectoryDeletedItemsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *DirectoryRoleMembersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *DomainDomainNameReferencesCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *GroupAcceptedSendersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *GroupMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *GroupMembersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *GroupMembersWithLicenseErrorsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *GroupOwnersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *GroupRejectedSendersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *GroupTransitiveMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *GroupTransitiveMembersCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *UserCreatedObjectsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *UserDirectReportsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *UserMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *UserOwnedDevicesCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *UserOwnedObjectsCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *UserRegisteredDevicesCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ValidateProperties undocumented
func (b *UserTransitiveMemberOfCollectionRequestBuilder) ValidateProperties(reqObj *DirectoryObjectValidatePropertiesRequestObject) *DirectoryObjectValidatePropertiesRequestBuilder {
	bb := &DirectoryObjectValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DirectoryObjectValidatePropertiesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DirectoryObjectValidatePropertiesRequestBuilder) Request() *DirectoryObjectValidatePropertiesRequest {
	return &DirectoryObjectValidatePropertiesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DirectoryObjectValidatePropertiesRequest struct{ BaseRequest }

//
func (r *DirectoryObjectValidatePropertiesRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DirectoryObjectValidatePropertiesRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Clear undocumented
func (b *WorkbookChartFillRequestBuilder) Clear(reqObj *WorkbookChartFillClearRequestObject) *WorkbookChartFillClearRequestBuilder {
	bb := &WorkbookChartFillClearRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clear"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookChartFillClearRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartFillClearRequestBuilder) Request() *WorkbookChartFillClearRequest {
	return &WorkbookChartFillClearRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookChartFillClearRequest struct{ BaseRequest }

//
func (r *WorkbookChartFillClearRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookChartFillClearRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SetSolidColor undocumented
func (b *WorkbookChartFillRequestBuilder) SetSolidColor(reqObj *WorkbookChartFillSetSolidColorRequestObject) *WorkbookChartFillSetSolidColorRequestBuilder {
	bb := &WorkbookChartFillSetSolidColorRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/setSolidColor"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookChartFillSetSolidColorRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartFillSetSolidColorRequestBuilder) Request() *WorkbookChartFillSetSolidColorRequest {
	return &WorkbookChartFillSetSolidColorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookChartFillSetSolidColorRequest struct{ BaseRequest }

//
func (r *WorkbookChartFillSetSolidColorRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookChartFillSetSolidColorRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Clear undocumented
func (b *WorkbookChartLineFormatRequestBuilder) Clear(reqObj *WorkbookChartLineFormatClearRequestObject) *WorkbookChartLineFormatClearRequestBuilder {
	bb := &WorkbookChartLineFormatClearRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clear"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookChartLineFormatClearRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartLineFormatClearRequestBuilder) Request() *WorkbookChartLineFormatClearRequest {
	return &WorkbookChartLineFormatClearRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookChartLineFormatClearRequest struct{ BaseRequest }

//
func (r *WorkbookChartLineFormatClearRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookChartLineFormatClearRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Protect undocumented
func (b *WorkbookWorksheetProtectionRequestBuilder) Protect(reqObj *WorkbookWorksheetProtectionProtectRequestObject) *WorkbookWorksheetProtectionProtectRequestBuilder {
	bb := &WorkbookWorksheetProtectionProtectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/protect"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookWorksheetProtectionProtectRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetProtectionProtectRequestBuilder) Request() *WorkbookWorksheetProtectionProtectRequest {
	return &WorkbookWorksheetProtectionProtectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookWorksheetProtectionProtectRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetProtectionProtectRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookWorksheetProtectionProtectRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Unprotect undocumented
func (b *WorkbookWorksheetProtectionRequestBuilder) Unprotect(reqObj *WorkbookWorksheetProtectionUnprotectRequestObject) *WorkbookWorksheetProtectionUnprotectRequestBuilder {
	bb := &WorkbookWorksheetProtectionUnprotectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/unprotect"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookWorksheetProtectionUnprotectRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetProtectionUnprotectRequestBuilder) Request() *WorkbookWorksheetProtectionUnprotectRequest {
	return &WorkbookWorksheetProtectionUnprotectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookWorksheetProtectionUnprotectRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetProtectionUnprotectRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookWorksheetProtectionUnprotectRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// DismissReminder undocumented
func (b *EventRequestBuilder) DismissReminder(reqObj *EventDismissReminderRequestObject) *EventDismissReminderRequestBuilder {
	bb := &EventDismissReminderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dismissReminder"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EventDismissReminderRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventDismissReminderRequestBuilder) Request() *EventDismissReminderRequest {
	return &EventDismissReminderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type EventDismissReminderRequest struct{ BaseRequest }

//
func (r *EventDismissReminderRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *EventDismissReminderRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SnoozeReminder undocumented
func (b *EventRequestBuilder) SnoozeReminder(reqObj *EventSnoozeReminderRequestObject) *EventSnoozeReminderRequestBuilder {
	bb := &EventSnoozeReminderRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/snoozeReminder"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EventSnoozeReminderRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventSnoozeReminderRequestBuilder) Request() *EventSnoozeReminderRequest {
	return &EventSnoozeReminderRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type EventSnoozeReminderRequest struct{ BaseRequest }

//
func (r *EventSnoozeReminderRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *EventSnoozeReminderRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Accept undocumented
func (b *EventRequestBuilder) Accept(reqObj *EventAcceptRequestObject) *EventAcceptRequestBuilder {
	bb := &EventAcceptRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/accept"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EventAcceptRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventAcceptRequestBuilder) Request() *EventAcceptRequest {
	return &EventAcceptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type EventAcceptRequest struct{ BaseRequest }

//
func (r *EventAcceptRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *EventAcceptRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Decline undocumented
func (b *EventRequestBuilder) Decline(reqObj *EventDeclineRequestObject) *EventDeclineRequestBuilder {
	bb := &EventDeclineRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/decline"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EventDeclineRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventDeclineRequestBuilder) Request() *EventDeclineRequest {
	return &EventDeclineRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type EventDeclineRequest struct{ BaseRequest }

//
func (r *EventDeclineRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *EventDeclineRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// TentativelyAccept undocumented
func (b *EventRequestBuilder) TentativelyAccept(reqObj *EventTentativelyAcceptRequestObject) *EventTentativelyAcceptRequestBuilder {
	bb := &EventTentativelyAcceptRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/tentativelyAccept"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EventTentativelyAcceptRequestBuilder struct{ BaseRequestBuilder }

//
func (b *EventTentativelyAcceptRequestBuilder) Request() *EventTentativelyAcceptRequest {
	return &EventTentativelyAcceptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type EventTentativelyAcceptRequest struct{ BaseRequest }

//
func (r *EventTentativelyAcceptRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *EventTentativelyAcceptRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *MobileAppRequestBuilder) Assign(reqObj *MobileAppAssignRequestObject) *MobileAppAssignRequestBuilder {
	bb := &MobileAppAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MobileAppAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MobileAppAssignRequestBuilder) Request() *MobileAppAssignRequest {
	return &MobileAppAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MobileAppAssignRequest struct{ BaseRequest }

//
func (r *MobileAppAssignRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *MobileAppAssignRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Answer undocumented
func (b *CallRequestBuilder) Answer(reqObj *CallAnswerRequestObject) *CallAnswerRequestBuilder {
	bb := &CallAnswerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/answer"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallAnswerRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallAnswerRequestBuilder) Request() *CallAnswerRequest {
	return &CallAnswerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallAnswerRequest struct{ BaseRequest }

//
func (r *CallAnswerRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *CallAnswerRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ChangeScreenSharingRole undocumented
func (b *CallRequestBuilder) ChangeScreenSharingRole(reqObj *CallChangeScreenSharingRoleRequestObject) *CallChangeScreenSharingRoleRequestBuilder {
	bb := &CallChangeScreenSharingRoleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/changeScreenSharingRole"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallChangeScreenSharingRoleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallChangeScreenSharingRoleRequestBuilder) Request() *CallChangeScreenSharingRoleRequest {
	return &CallChangeScreenSharingRoleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallChangeScreenSharingRoleRequest struct{ BaseRequest }

//
func (r *CallChangeScreenSharingRoleRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *CallChangeScreenSharingRoleRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Mute undocumented
func (b *CallRequestBuilder) Mute(reqObj *CallMuteRequestObject) *CallMuteRequestBuilder {
	bb := &CallMuteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/mute"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallMuteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallMuteRequestBuilder) Request() *CallMuteRequest {
	return &CallMuteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallMuteRequest struct{ BaseRequest }

//
func (r *CallMuteRequest) Do(method, path string, reqObj interface{}) (resObj *MuteParticipantOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CallMuteRequest) Post() (*MuteParticipantOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// PlayPrompt undocumented
func (b *CallRequestBuilder) PlayPrompt(reqObj *CallPlayPromptRequestObject) *CallPlayPromptRequestBuilder {
	bb := &CallPlayPromptRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/playPrompt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallPlayPromptRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallPlayPromptRequestBuilder) Request() *CallPlayPromptRequest {
	return &CallPlayPromptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallPlayPromptRequest struct{ BaseRequest }

//
func (r *CallPlayPromptRequest) Do(method, path string, reqObj interface{}) (resObj *PlayPromptOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CallPlayPromptRequest) Post() (*PlayPromptOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// Record undocumented
func (b *CallRequestBuilder) Record(reqObj *CallRecordRequestObject) *CallRecordRequestBuilder {
	bb := &CallRecordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/record"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallRecordRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallRecordRequestBuilder) Request() *CallRecordRequest {
	return &CallRecordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallRecordRequest struct{ BaseRequest }

//
func (r *CallRecordRequest) Do(method, path string, reqObj interface{}) (resObj *RecordOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CallRecordRequest) Post() (*RecordOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// Redirect undocumented
func (b *CallRequestBuilder) Redirect(reqObj *CallRedirectRequestObject) *CallRedirectRequestBuilder {
	bb := &CallRedirectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/redirect"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallRedirectRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallRedirectRequestBuilder) Request() *CallRedirectRequest {
	return &CallRedirectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallRedirectRequest struct{ BaseRequest }

//
func (r *CallRedirectRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *CallRedirectRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Reject undocumented
func (b *CallRequestBuilder) Reject(reqObj *CallRejectRequestObject) *CallRejectRequestBuilder {
	bb := &CallRejectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reject"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallRejectRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallRejectRequestBuilder) Request() *CallRejectRequest {
	return &CallRejectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallRejectRequest struct{ BaseRequest }

//
func (r *CallRejectRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *CallRejectRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SubscribeToTone undocumented
func (b *CallRequestBuilder) SubscribeToTone(reqObj *CallSubscribeToToneRequestObject) *CallSubscribeToToneRequestBuilder {
	bb := &CallSubscribeToToneRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/subscribeToTone"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallSubscribeToToneRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallSubscribeToToneRequestBuilder) Request() *CallSubscribeToToneRequest {
	return &CallSubscribeToToneRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallSubscribeToToneRequest struct{ BaseRequest }

//
func (r *CallSubscribeToToneRequest) Do(method, path string, reqObj interface{}) (resObj *SubscribeToToneOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CallSubscribeToToneRequest) Post() (*SubscribeToToneOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// Transfer undocumented
func (b *CallRequestBuilder) Transfer(reqObj *CallTransferRequestObject) *CallTransferRequestBuilder {
	bb := &CallTransferRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/transfer"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallTransferRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallTransferRequestBuilder) Request() *CallTransferRequest {
	return &CallTransferRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallTransferRequest struct{ BaseRequest }

//
func (r *CallTransferRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *CallTransferRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Unmute undocumented
func (b *CallRequestBuilder) Unmute(reqObj *CallUnmuteRequestObject) *CallUnmuteRequestBuilder {
	bb := &CallUnmuteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/unmute"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CallUnmuteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CallUnmuteRequestBuilder) Request() *CallUnmuteRequest {
	return &CallUnmuteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CallUnmuteRequest struct{ BaseRequest }

//
func (r *CallUnmuteRequest) Do(method, path string, reqObj interface{}) (resObj *UnmuteParticipantOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CallUnmuteRequest) Post() (*UnmuteParticipantOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// BeginOnboarding undocumented
func (b *RemoteAssistancePartnerRequestBuilder) BeginOnboarding(reqObj *RemoteAssistancePartnerBeginOnboardingRequestObject) *RemoteAssistancePartnerBeginOnboardingRequestBuilder {
	bb := &RemoteAssistancePartnerBeginOnboardingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/beginOnboarding"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type RemoteAssistancePartnerBeginOnboardingRequestBuilder struct{ BaseRequestBuilder }

//
func (b *RemoteAssistancePartnerBeginOnboardingRequestBuilder) Request() *RemoteAssistancePartnerBeginOnboardingRequest {
	return &RemoteAssistancePartnerBeginOnboardingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type RemoteAssistancePartnerBeginOnboardingRequest struct{ BaseRequest }

//
func (r *RemoteAssistancePartnerBeginOnboardingRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *RemoteAssistancePartnerBeginOnboardingRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Disconnect undocumented
func (b *RemoteAssistancePartnerRequestBuilder) Disconnect(reqObj *RemoteAssistancePartnerDisconnectRequestObject) *RemoteAssistancePartnerDisconnectRequestBuilder {
	bb := &RemoteAssistancePartnerDisconnectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/disconnect"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type RemoteAssistancePartnerDisconnectRequestBuilder struct{ BaseRequestBuilder }

//
func (b *RemoteAssistancePartnerDisconnectRequestBuilder) Request() *RemoteAssistancePartnerDisconnectRequest {
	return &RemoteAssistancePartnerDisconnectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type RemoteAssistancePartnerDisconnectRequest struct{ BaseRequest }

//
func (r *RemoteAssistancePartnerDisconnectRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *RemoteAssistancePartnerDisconnectRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// CopyNotebook undocumented
func (b *NotebookRequestBuilder) CopyNotebook(reqObj *NotebookCopyNotebookRequestObject) *NotebookCopyNotebookRequestBuilder {
	bb := &NotebookCopyNotebookRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/copyNotebook"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type NotebookCopyNotebookRequestBuilder struct{ BaseRequestBuilder }

//
func (b *NotebookCopyNotebookRequestBuilder) Request() *NotebookCopyNotebookRequest {
	return &NotebookCopyNotebookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type NotebookCopyNotebookRequest struct{ BaseRequest }

//
func (r *NotebookCopyNotebookRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *NotebookCopyNotebookRequest) Post() (*OnenoteOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// Apply undocumented
func (b *WorkbookRangeSortRequestBuilder) Apply(reqObj *WorkbookRangeSortApplyRequestObject) *WorkbookRangeSortApplyRequestBuilder {
	bb := &WorkbookRangeSortApplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/apply"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeSortApplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeSortApplyRequestBuilder) Request() *WorkbookRangeSortApplyRequest {
	return &WorkbookRangeSortApplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeSortApplyRequest struct{ BaseRequest }

//
func (r *WorkbookRangeSortApplyRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRangeSortApplyRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *DeviceConfigurationRequestBuilder) Assign(reqObj *DeviceConfigurationAssignRequestObject) *DeviceConfigurationAssignRequestBuilder {
	bb := &DeviceConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DeviceConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceConfigurationAssignRequestBuilder) Request() *DeviceConfigurationAssignRequest {
	return &DeviceConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DeviceConfigurationAssignRequest struct{ BaseRequest }

//
func (r *DeviceConfigurationAssignRequest) Do(method, path string, reqObj interface{}) (resObj *[]DeviceConfigurationAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceConfigurationAssignRequest) Paging(method, path string, obj interface{}) ([][]DeviceConfigurationAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]DeviceConfigurationAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]DeviceConfigurationAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceConfigurationAssignRequest) Get() ([][]DeviceConfigurationAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// Abs undocumented
func (b *WorkbookFunctionsRequestBuilder) Abs(reqObj *WorkbookFunctionsAbsRequestObject) *WorkbookFunctionsAbsRequestBuilder {
	bb := &WorkbookFunctionsAbsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/abs"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAbsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAbsRequestBuilder) Request() *WorkbookFunctionsAbsRequest {
	return &WorkbookFunctionsAbsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAbsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAbsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAbsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// AccrInt undocumented
func (b *WorkbookFunctionsRequestBuilder) AccrInt(reqObj *WorkbookFunctionsAccrIntRequestObject) *WorkbookFunctionsAccrIntRequestBuilder {
	bb := &WorkbookFunctionsAccrIntRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/accrInt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAccrIntRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAccrIntRequestBuilder) Request() *WorkbookFunctionsAccrIntRequest {
	return &WorkbookFunctionsAccrIntRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAccrIntRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAccrIntRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAccrIntRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// AccrIntM undocumented
func (b *WorkbookFunctionsRequestBuilder) AccrIntM(reqObj *WorkbookFunctionsAccrIntMRequestObject) *WorkbookFunctionsAccrIntMRequestBuilder {
	bb := &WorkbookFunctionsAccrIntMRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/accrIntM"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAccrIntMRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAccrIntMRequestBuilder) Request() *WorkbookFunctionsAccrIntMRequest {
	return &WorkbookFunctionsAccrIntMRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAccrIntMRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAccrIntMRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAccrIntMRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Acos undocumented
func (b *WorkbookFunctionsRequestBuilder) Acos(reqObj *WorkbookFunctionsAcosRequestObject) *WorkbookFunctionsAcosRequestBuilder {
	bb := &WorkbookFunctionsAcosRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/acos"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAcosRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAcosRequestBuilder) Request() *WorkbookFunctionsAcosRequest {
	return &WorkbookFunctionsAcosRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAcosRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAcosRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAcosRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Acosh undocumented
func (b *WorkbookFunctionsRequestBuilder) Acosh(reqObj *WorkbookFunctionsAcoshRequestObject) *WorkbookFunctionsAcoshRequestBuilder {
	bb := &WorkbookFunctionsAcoshRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/acosh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAcoshRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAcoshRequestBuilder) Request() *WorkbookFunctionsAcoshRequest {
	return &WorkbookFunctionsAcoshRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAcoshRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAcoshRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAcoshRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Acot undocumented
func (b *WorkbookFunctionsRequestBuilder) Acot(reqObj *WorkbookFunctionsAcotRequestObject) *WorkbookFunctionsAcotRequestBuilder {
	bb := &WorkbookFunctionsAcotRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/acot"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAcotRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAcotRequestBuilder) Request() *WorkbookFunctionsAcotRequest {
	return &WorkbookFunctionsAcotRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAcotRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAcotRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAcotRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Acoth undocumented
func (b *WorkbookFunctionsRequestBuilder) Acoth(reqObj *WorkbookFunctionsAcothRequestObject) *WorkbookFunctionsAcothRequestBuilder {
	bb := &WorkbookFunctionsAcothRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/acoth"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAcothRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAcothRequestBuilder) Request() *WorkbookFunctionsAcothRequest {
	return &WorkbookFunctionsAcothRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAcothRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAcothRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAcothRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// AmorDegrc undocumented
func (b *WorkbookFunctionsRequestBuilder) AmorDegrc(reqObj *WorkbookFunctionsAmorDegrcRequestObject) *WorkbookFunctionsAmorDegrcRequestBuilder {
	bb := &WorkbookFunctionsAmorDegrcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/amorDegrc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAmorDegrcRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAmorDegrcRequestBuilder) Request() *WorkbookFunctionsAmorDegrcRequest {
	return &WorkbookFunctionsAmorDegrcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAmorDegrcRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAmorDegrcRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAmorDegrcRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// AmorLinc undocumented
func (b *WorkbookFunctionsRequestBuilder) AmorLinc(reqObj *WorkbookFunctionsAmorLincRequestObject) *WorkbookFunctionsAmorLincRequestBuilder {
	bb := &WorkbookFunctionsAmorLincRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/amorLinc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAmorLincRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAmorLincRequestBuilder) Request() *WorkbookFunctionsAmorLincRequest {
	return &WorkbookFunctionsAmorLincRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAmorLincRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAmorLincRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAmorLincRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// And undocumented
func (b *WorkbookFunctionsRequestBuilder) And(reqObj *WorkbookFunctionsAndRequestObject) *WorkbookFunctionsAndRequestBuilder {
	bb := &WorkbookFunctionsAndRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/and"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAndRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAndRequestBuilder) Request() *WorkbookFunctionsAndRequest {
	return &WorkbookFunctionsAndRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAndRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAndRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAndRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Arabic undocumented
func (b *WorkbookFunctionsRequestBuilder) Arabic(reqObj *WorkbookFunctionsArabicRequestObject) *WorkbookFunctionsArabicRequestBuilder {
	bb := &WorkbookFunctionsArabicRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/arabic"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsArabicRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsArabicRequestBuilder) Request() *WorkbookFunctionsArabicRequest {
	return &WorkbookFunctionsArabicRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsArabicRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsArabicRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsArabicRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Areas undocumented
func (b *WorkbookFunctionsRequestBuilder) Areas(reqObj *WorkbookFunctionsAreasRequestObject) *WorkbookFunctionsAreasRequestBuilder {
	bb := &WorkbookFunctionsAreasRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/areas"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAreasRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAreasRequestBuilder) Request() *WorkbookFunctionsAreasRequest {
	return &WorkbookFunctionsAreasRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAreasRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAreasRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAreasRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Asc undocumented
func (b *WorkbookFunctionsRequestBuilder) Asc(reqObj *WorkbookFunctionsAscRequestObject) *WorkbookFunctionsAscRequestBuilder {
	bb := &WorkbookFunctionsAscRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/asc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAscRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAscRequestBuilder) Request() *WorkbookFunctionsAscRequest {
	return &WorkbookFunctionsAscRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAscRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAscRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAscRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Asin undocumented
func (b *WorkbookFunctionsRequestBuilder) Asin(reqObj *WorkbookFunctionsAsinRequestObject) *WorkbookFunctionsAsinRequestBuilder {
	bb := &WorkbookFunctionsAsinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/asin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAsinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAsinRequestBuilder) Request() *WorkbookFunctionsAsinRequest {
	return &WorkbookFunctionsAsinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAsinRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAsinRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAsinRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Asinh undocumented
func (b *WorkbookFunctionsRequestBuilder) Asinh(reqObj *WorkbookFunctionsAsinhRequestObject) *WorkbookFunctionsAsinhRequestBuilder {
	bb := &WorkbookFunctionsAsinhRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/asinh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAsinhRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAsinhRequestBuilder) Request() *WorkbookFunctionsAsinhRequest {
	return &WorkbookFunctionsAsinhRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAsinhRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAsinhRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAsinhRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Atan undocumented
func (b *WorkbookFunctionsRequestBuilder) Atan(reqObj *WorkbookFunctionsAtanRequestObject) *WorkbookFunctionsAtanRequestBuilder {
	bb := &WorkbookFunctionsAtanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/atan"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAtanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAtanRequestBuilder) Request() *WorkbookFunctionsAtanRequest {
	return &WorkbookFunctionsAtanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAtanRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAtanRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAtanRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Atan2 undocumented
func (b *WorkbookFunctionsRequestBuilder) Atan2(reqObj *WorkbookFunctionsAtan2RequestObject) *WorkbookFunctionsAtan2RequestBuilder {
	bb := &WorkbookFunctionsAtan2RequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/atan2"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAtan2RequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAtan2RequestBuilder) Request() *WorkbookFunctionsAtan2Request {
	return &WorkbookFunctionsAtan2Request{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAtan2Request struct{ BaseRequest }

//
func (r *WorkbookFunctionsAtan2Request) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAtan2Request) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Atanh undocumented
func (b *WorkbookFunctionsRequestBuilder) Atanh(reqObj *WorkbookFunctionsAtanhRequestObject) *WorkbookFunctionsAtanhRequestBuilder {
	bb := &WorkbookFunctionsAtanhRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/atanh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAtanhRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAtanhRequestBuilder) Request() *WorkbookFunctionsAtanhRequest {
	return &WorkbookFunctionsAtanhRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAtanhRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAtanhRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAtanhRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// AveDev undocumented
func (b *WorkbookFunctionsRequestBuilder) AveDev(reqObj *WorkbookFunctionsAveDevRequestObject) *WorkbookFunctionsAveDevRequestBuilder {
	bb := &WorkbookFunctionsAveDevRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/aveDev"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAveDevRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAveDevRequestBuilder) Request() *WorkbookFunctionsAveDevRequest {
	return &WorkbookFunctionsAveDevRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAveDevRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAveDevRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAveDevRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Average undocumented
func (b *WorkbookFunctionsRequestBuilder) Average(reqObj *WorkbookFunctionsAverageRequestObject) *WorkbookFunctionsAverageRequestBuilder {
	bb := &WorkbookFunctionsAverageRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/average"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAverageRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAverageRequestBuilder) Request() *WorkbookFunctionsAverageRequest {
	return &WorkbookFunctionsAverageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAverageRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAverageRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAverageRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// AverageA undocumented
func (b *WorkbookFunctionsRequestBuilder) AverageA(reqObj *WorkbookFunctionsAverageARequestObject) *WorkbookFunctionsAverageARequestBuilder {
	bb := &WorkbookFunctionsAverageARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/averageA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAverageARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAverageARequestBuilder) Request() *WorkbookFunctionsAverageARequest {
	return &WorkbookFunctionsAverageARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAverageARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAverageARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAverageARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// AverageIf undocumented
func (b *WorkbookFunctionsRequestBuilder) AverageIf(reqObj *WorkbookFunctionsAverageIfRequestObject) *WorkbookFunctionsAverageIfRequestBuilder {
	bb := &WorkbookFunctionsAverageIfRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/averageIf"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAverageIfRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAverageIfRequestBuilder) Request() *WorkbookFunctionsAverageIfRequest {
	return &WorkbookFunctionsAverageIfRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAverageIfRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAverageIfRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAverageIfRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// AverageIfs undocumented
func (b *WorkbookFunctionsRequestBuilder) AverageIfs(reqObj *WorkbookFunctionsAverageIfsRequestObject) *WorkbookFunctionsAverageIfsRequestBuilder {
	bb := &WorkbookFunctionsAverageIfsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/averageIfs"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsAverageIfsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsAverageIfsRequestBuilder) Request() *WorkbookFunctionsAverageIfsRequest {
	return &WorkbookFunctionsAverageIfsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsAverageIfsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsAverageIfsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsAverageIfsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// BahtText undocumented
func (b *WorkbookFunctionsRequestBuilder) BahtText(reqObj *WorkbookFunctionsBahtTextRequestObject) *WorkbookFunctionsBahtTextRequestBuilder {
	bb := &WorkbookFunctionsBahtTextRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bahtText"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBahtTextRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBahtTextRequestBuilder) Request() *WorkbookFunctionsBahtTextRequest {
	return &WorkbookFunctionsBahtTextRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBahtTextRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBahtTextRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBahtTextRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Base undocumented
func (b *WorkbookFunctionsRequestBuilder) Base(reqObj *WorkbookFunctionsBaseRequestObject) *WorkbookFunctionsBaseRequestBuilder {
	bb := &WorkbookFunctionsBaseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/base"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBaseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBaseRequestBuilder) Request() *WorkbookFunctionsBaseRequest {
	return &WorkbookFunctionsBaseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBaseRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBaseRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBaseRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// BesselI undocumented
func (b *WorkbookFunctionsRequestBuilder) BesselI(reqObj *WorkbookFunctionsBesselIRequestObject) *WorkbookFunctionsBesselIRequestBuilder {
	bb := &WorkbookFunctionsBesselIRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/besselI"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBesselIRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBesselIRequestBuilder) Request() *WorkbookFunctionsBesselIRequest {
	return &WorkbookFunctionsBesselIRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBesselIRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBesselIRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBesselIRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// BesselJ undocumented
func (b *WorkbookFunctionsRequestBuilder) BesselJ(reqObj *WorkbookFunctionsBesselJRequestObject) *WorkbookFunctionsBesselJRequestBuilder {
	bb := &WorkbookFunctionsBesselJRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/besselJ"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBesselJRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBesselJRequestBuilder) Request() *WorkbookFunctionsBesselJRequest {
	return &WorkbookFunctionsBesselJRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBesselJRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBesselJRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBesselJRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// BesselK undocumented
func (b *WorkbookFunctionsRequestBuilder) BesselK(reqObj *WorkbookFunctionsBesselKRequestObject) *WorkbookFunctionsBesselKRequestBuilder {
	bb := &WorkbookFunctionsBesselKRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/besselK"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBesselKRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBesselKRequestBuilder) Request() *WorkbookFunctionsBesselKRequest {
	return &WorkbookFunctionsBesselKRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBesselKRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBesselKRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBesselKRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// BesselY undocumented
func (b *WorkbookFunctionsRequestBuilder) BesselY(reqObj *WorkbookFunctionsBesselYRequestObject) *WorkbookFunctionsBesselYRequestBuilder {
	bb := &WorkbookFunctionsBesselYRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/besselY"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBesselYRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBesselYRequestBuilder) Request() *WorkbookFunctionsBesselYRequest {
	return &WorkbookFunctionsBesselYRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBesselYRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBesselYRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBesselYRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Beta_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) Beta_Dist(reqObj *WorkbookFunctionsBeta_DistRequestObject) *WorkbookFunctionsBeta_DistRequestBuilder {
	bb := &WorkbookFunctionsBeta_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/beta_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBeta_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBeta_DistRequestBuilder) Request() *WorkbookFunctionsBeta_DistRequest {
	return &WorkbookFunctionsBeta_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBeta_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBeta_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBeta_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Beta_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) Beta_Inv(reqObj *WorkbookFunctionsBeta_InvRequestObject) *WorkbookFunctionsBeta_InvRequestBuilder {
	bb := &WorkbookFunctionsBeta_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/beta_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBeta_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBeta_InvRequestBuilder) Request() *WorkbookFunctionsBeta_InvRequest {
	return &WorkbookFunctionsBeta_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBeta_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBeta_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBeta_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Bin2Dec undocumented
func (b *WorkbookFunctionsRequestBuilder) Bin2Dec(reqObj *WorkbookFunctionsBin2DecRequestObject) *WorkbookFunctionsBin2DecRequestBuilder {
	bb := &WorkbookFunctionsBin2DecRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bin2Dec"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBin2DecRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBin2DecRequestBuilder) Request() *WorkbookFunctionsBin2DecRequest {
	return &WorkbookFunctionsBin2DecRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBin2DecRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBin2DecRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBin2DecRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Bin2Hex undocumented
func (b *WorkbookFunctionsRequestBuilder) Bin2Hex(reqObj *WorkbookFunctionsBin2HexRequestObject) *WorkbookFunctionsBin2HexRequestBuilder {
	bb := &WorkbookFunctionsBin2HexRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bin2Hex"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBin2HexRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBin2HexRequestBuilder) Request() *WorkbookFunctionsBin2HexRequest {
	return &WorkbookFunctionsBin2HexRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBin2HexRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBin2HexRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBin2HexRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Bin2Oct undocumented
func (b *WorkbookFunctionsRequestBuilder) Bin2Oct(reqObj *WorkbookFunctionsBin2OctRequestObject) *WorkbookFunctionsBin2OctRequestBuilder {
	bb := &WorkbookFunctionsBin2OctRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bin2Oct"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBin2OctRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBin2OctRequestBuilder) Request() *WorkbookFunctionsBin2OctRequest {
	return &WorkbookFunctionsBin2OctRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBin2OctRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBin2OctRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBin2OctRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Binom_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) Binom_Dist(reqObj *WorkbookFunctionsBinom_DistRequestObject) *WorkbookFunctionsBinom_DistRequestBuilder {
	bb := &WorkbookFunctionsBinom_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/binom_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBinom_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBinom_DistRequestBuilder) Request() *WorkbookFunctionsBinom_DistRequest {
	return &WorkbookFunctionsBinom_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBinom_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBinom_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBinom_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Binom_Dist_Range undocumented
func (b *WorkbookFunctionsRequestBuilder) Binom_Dist_Range(reqObj *WorkbookFunctionsBinom_Dist_RangeRequestObject) *WorkbookFunctionsBinom_Dist_RangeRequestBuilder {
	bb := &WorkbookFunctionsBinom_Dist_RangeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/binom_Dist_Range"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBinom_Dist_RangeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBinom_Dist_RangeRequestBuilder) Request() *WorkbookFunctionsBinom_Dist_RangeRequest {
	return &WorkbookFunctionsBinom_Dist_RangeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBinom_Dist_RangeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBinom_Dist_RangeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBinom_Dist_RangeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Binom_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) Binom_Inv(reqObj *WorkbookFunctionsBinom_InvRequestObject) *WorkbookFunctionsBinom_InvRequestBuilder {
	bb := &WorkbookFunctionsBinom_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/binom_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBinom_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBinom_InvRequestBuilder) Request() *WorkbookFunctionsBinom_InvRequest {
	return &WorkbookFunctionsBinom_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBinom_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBinom_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBinom_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Bitand undocumented
func (b *WorkbookFunctionsRequestBuilder) Bitand(reqObj *WorkbookFunctionsBitandRequestObject) *WorkbookFunctionsBitandRequestBuilder {
	bb := &WorkbookFunctionsBitandRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bitand"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBitandRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBitandRequestBuilder) Request() *WorkbookFunctionsBitandRequest {
	return &WorkbookFunctionsBitandRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBitandRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBitandRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBitandRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Bitlshift undocumented
func (b *WorkbookFunctionsRequestBuilder) Bitlshift(reqObj *WorkbookFunctionsBitlshiftRequestObject) *WorkbookFunctionsBitlshiftRequestBuilder {
	bb := &WorkbookFunctionsBitlshiftRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bitlshift"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBitlshiftRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBitlshiftRequestBuilder) Request() *WorkbookFunctionsBitlshiftRequest {
	return &WorkbookFunctionsBitlshiftRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBitlshiftRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBitlshiftRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBitlshiftRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Bitor undocumented
func (b *WorkbookFunctionsRequestBuilder) Bitor(reqObj *WorkbookFunctionsBitorRequestObject) *WorkbookFunctionsBitorRequestBuilder {
	bb := &WorkbookFunctionsBitorRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bitor"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBitorRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBitorRequestBuilder) Request() *WorkbookFunctionsBitorRequest {
	return &WorkbookFunctionsBitorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBitorRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBitorRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBitorRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Bitrshift undocumented
func (b *WorkbookFunctionsRequestBuilder) Bitrshift(reqObj *WorkbookFunctionsBitrshiftRequestObject) *WorkbookFunctionsBitrshiftRequestBuilder {
	bb := &WorkbookFunctionsBitrshiftRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bitrshift"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBitrshiftRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBitrshiftRequestBuilder) Request() *WorkbookFunctionsBitrshiftRequest {
	return &WorkbookFunctionsBitrshiftRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBitrshiftRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBitrshiftRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBitrshiftRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Bitxor undocumented
func (b *WorkbookFunctionsRequestBuilder) Bitxor(reqObj *WorkbookFunctionsBitxorRequestObject) *WorkbookFunctionsBitxorRequestBuilder {
	bb := &WorkbookFunctionsBitxorRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bitxor"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsBitxorRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsBitxorRequestBuilder) Request() *WorkbookFunctionsBitxorRequest {
	return &WorkbookFunctionsBitxorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsBitxorRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsBitxorRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsBitxorRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Ceiling_Math undocumented
func (b *WorkbookFunctionsRequestBuilder) Ceiling_Math(reqObj *WorkbookFunctionsCeiling_MathRequestObject) *WorkbookFunctionsCeiling_MathRequestBuilder {
	bb := &WorkbookFunctionsCeiling_MathRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ceiling_Math"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCeiling_MathRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCeiling_MathRequestBuilder) Request() *WorkbookFunctionsCeiling_MathRequest {
	return &WorkbookFunctionsCeiling_MathRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCeiling_MathRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCeiling_MathRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCeiling_MathRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Ceiling_Precise undocumented
func (b *WorkbookFunctionsRequestBuilder) Ceiling_Precise(reqObj *WorkbookFunctionsCeiling_PreciseRequestObject) *WorkbookFunctionsCeiling_PreciseRequestBuilder {
	bb := &WorkbookFunctionsCeiling_PreciseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ceiling_Precise"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCeiling_PreciseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCeiling_PreciseRequestBuilder) Request() *WorkbookFunctionsCeiling_PreciseRequest {
	return &WorkbookFunctionsCeiling_PreciseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCeiling_PreciseRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCeiling_PreciseRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCeiling_PreciseRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Char undocumented
func (b *WorkbookFunctionsRequestBuilder) Char(reqObj *WorkbookFunctionsCharRequestObject) *WorkbookFunctionsCharRequestBuilder {
	bb := &WorkbookFunctionsCharRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/char"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCharRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCharRequestBuilder) Request() *WorkbookFunctionsCharRequest {
	return &WorkbookFunctionsCharRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCharRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCharRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCharRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ChiSq_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) ChiSq_Dist(reqObj *WorkbookFunctionsChiSq_DistRequestObject) *WorkbookFunctionsChiSq_DistRequestBuilder {
	bb := &WorkbookFunctionsChiSq_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/chiSq_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsChiSq_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsChiSq_DistRequestBuilder) Request() *WorkbookFunctionsChiSq_DistRequest {
	return &WorkbookFunctionsChiSq_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsChiSq_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsChiSq_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsChiSq_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ChiSq_Dist_RT undocumented
func (b *WorkbookFunctionsRequestBuilder) ChiSq_Dist_RT(reqObj *WorkbookFunctionsChiSq_Dist_RTRequestObject) *WorkbookFunctionsChiSq_Dist_RTRequestBuilder {
	bb := &WorkbookFunctionsChiSq_Dist_RTRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/chiSq_Dist_RT"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsChiSq_Dist_RTRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsChiSq_Dist_RTRequestBuilder) Request() *WorkbookFunctionsChiSq_Dist_RTRequest {
	return &WorkbookFunctionsChiSq_Dist_RTRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsChiSq_Dist_RTRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsChiSq_Dist_RTRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsChiSq_Dist_RTRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ChiSq_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) ChiSq_Inv(reqObj *WorkbookFunctionsChiSq_InvRequestObject) *WorkbookFunctionsChiSq_InvRequestBuilder {
	bb := &WorkbookFunctionsChiSq_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/chiSq_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsChiSq_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsChiSq_InvRequestBuilder) Request() *WorkbookFunctionsChiSq_InvRequest {
	return &WorkbookFunctionsChiSq_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsChiSq_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsChiSq_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsChiSq_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ChiSq_Inv_RT undocumented
func (b *WorkbookFunctionsRequestBuilder) ChiSq_Inv_RT(reqObj *WorkbookFunctionsChiSq_Inv_RTRequestObject) *WorkbookFunctionsChiSq_Inv_RTRequestBuilder {
	bb := &WorkbookFunctionsChiSq_Inv_RTRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/chiSq_Inv_RT"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsChiSq_Inv_RTRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsChiSq_Inv_RTRequestBuilder) Request() *WorkbookFunctionsChiSq_Inv_RTRequest {
	return &WorkbookFunctionsChiSq_Inv_RTRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsChiSq_Inv_RTRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsChiSq_Inv_RTRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsChiSq_Inv_RTRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Choose undocumented
func (b *WorkbookFunctionsRequestBuilder) Choose(reqObj *WorkbookFunctionsChooseRequestObject) *WorkbookFunctionsChooseRequestBuilder {
	bb := &WorkbookFunctionsChooseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/choose"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsChooseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsChooseRequestBuilder) Request() *WorkbookFunctionsChooseRequest {
	return &WorkbookFunctionsChooseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsChooseRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsChooseRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsChooseRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Clean undocumented
func (b *WorkbookFunctionsRequestBuilder) Clean(reqObj *WorkbookFunctionsCleanRequestObject) *WorkbookFunctionsCleanRequestBuilder {
	bb := &WorkbookFunctionsCleanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clean"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCleanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCleanRequestBuilder) Request() *WorkbookFunctionsCleanRequest {
	return &WorkbookFunctionsCleanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCleanRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCleanRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCleanRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Code undocumented
func (b *WorkbookFunctionsRequestBuilder) Code(reqObj *WorkbookFunctionsCodeRequestObject) *WorkbookFunctionsCodeRequestBuilder {
	bb := &WorkbookFunctionsCodeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/code"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCodeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCodeRequestBuilder) Request() *WorkbookFunctionsCodeRequest {
	return &WorkbookFunctionsCodeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCodeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCodeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCodeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Columns undocumented
func (b *WorkbookFunctionsRequestBuilder) Columns(reqObj *WorkbookFunctionsColumnsRequestObject) *WorkbookFunctionsColumnsRequestBuilder {
	bb := &WorkbookFunctionsColumnsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/columns"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsColumnsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsColumnsRequestBuilder) Request() *WorkbookFunctionsColumnsRequest {
	return &WorkbookFunctionsColumnsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsColumnsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsColumnsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsColumnsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Combin undocumented
func (b *WorkbookFunctionsRequestBuilder) Combin(reqObj *WorkbookFunctionsCombinRequestObject) *WorkbookFunctionsCombinRequestBuilder {
	bb := &WorkbookFunctionsCombinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/combin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCombinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCombinRequestBuilder) Request() *WorkbookFunctionsCombinRequest {
	return &WorkbookFunctionsCombinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCombinRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCombinRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCombinRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Combina undocumented
func (b *WorkbookFunctionsRequestBuilder) Combina(reqObj *WorkbookFunctionsCombinaRequestObject) *WorkbookFunctionsCombinaRequestBuilder {
	bb := &WorkbookFunctionsCombinaRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/combina"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCombinaRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCombinaRequestBuilder) Request() *WorkbookFunctionsCombinaRequest {
	return &WorkbookFunctionsCombinaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCombinaRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCombinaRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCombinaRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Complex undocumented
func (b *WorkbookFunctionsRequestBuilder) Complex(reqObj *WorkbookFunctionsComplexRequestObject) *WorkbookFunctionsComplexRequestBuilder {
	bb := &WorkbookFunctionsComplexRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/complex"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsComplexRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsComplexRequestBuilder) Request() *WorkbookFunctionsComplexRequest {
	return &WorkbookFunctionsComplexRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsComplexRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsComplexRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsComplexRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Concatenate undocumented
func (b *WorkbookFunctionsRequestBuilder) Concatenate(reqObj *WorkbookFunctionsConcatenateRequestObject) *WorkbookFunctionsConcatenateRequestBuilder {
	bb := &WorkbookFunctionsConcatenateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/concatenate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsConcatenateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsConcatenateRequestBuilder) Request() *WorkbookFunctionsConcatenateRequest {
	return &WorkbookFunctionsConcatenateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsConcatenateRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsConcatenateRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsConcatenateRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Confidence_Norm undocumented
func (b *WorkbookFunctionsRequestBuilder) Confidence_Norm(reqObj *WorkbookFunctionsConfidence_NormRequestObject) *WorkbookFunctionsConfidence_NormRequestBuilder {
	bb := &WorkbookFunctionsConfidence_NormRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/confidence_Norm"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsConfidence_NormRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsConfidence_NormRequestBuilder) Request() *WorkbookFunctionsConfidence_NormRequest {
	return &WorkbookFunctionsConfidence_NormRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsConfidence_NormRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsConfidence_NormRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsConfidence_NormRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Confidence_T undocumented
func (b *WorkbookFunctionsRequestBuilder) Confidence_T(reqObj *WorkbookFunctionsConfidence_TRequestObject) *WorkbookFunctionsConfidence_TRequestBuilder {
	bb := &WorkbookFunctionsConfidence_TRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/confidence_T"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsConfidence_TRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsConfidence_TRequestBuilder) Request() *WorkbookFunctionsConfidence_TRequest {
	return &WorkbookFunctionsConfidence_TRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsConfidence_TRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsConfidence_TRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsConfidence_TRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Convert undocumented
func (b *WorkbookFunctionsRequestBuilder) Convert(reqObj *WorkbookFunctionsConvertRequestObject) *WorkbookFunctionsConvertRequestBuilder {
	bb := &WorkbookFunctionsConvertRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/convert"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsConvertRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsConvertRequestBuilder) Request() *WorkbookFunctionsConvertRequest {
	return &WorkbookFunctionsConvertRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsConvertRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsConvertRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsConvertRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Cos undocumented
func (b *WorkbookFunctionsRequestBuilder) Cos(reqObj *WorkbookFunctionsCosRequestObject) *WorkbookFunctionsCosRequestBuilder {
	bb := &WorkbookFunctionsCosRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cos"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCosRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCosRequestBuilder) Request() *WorkbookFunctionsCosRequest {
	return &WorkbookFunctionsCosRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCosRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCosRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCosRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Cosh undocumented
func (b *WorkbookFunctionsRequestBuilder) Cosh(reqObj *WorkbookFunctionsCoshRequestObject) *WorkbookFunctionsCoshRequestBuilder {
	bb := &WorkbookFunctionsCoshRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cosh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCoshRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCoshRequestBuilder) Request() *WorkbookFunctionsCoshRequest {
	return &WorkbookFunctionsCoshRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCoshRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCoshRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCoshRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Cot undocumented
func (b *WorkbookFunctionsRequestBuilder) Cot(reqObj *WorkbookFunctionsCotRequestObject) *WorkbookFunctionsCotRequestBuilder {
	bb := &WorkbookFunctionsCotRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cot"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCotRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCotRequestBuilder) Request() *WorkbookFunctionsCotRequest {
	return &WorkbookFunctionsCotRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCotRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCotRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCotRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Coth undocumented
func (b *WorkbookFunctionsRequestBuilder) Coth(reqObj *WorkbookFunctionsCothRequestObject) *WorkbookFunctionsCothRequestBuilder {
	bb := &WorkbookFunctionsCothRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/coth"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCothRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCothRequestBuilder) Request() *WorkbookFunctionsCothRequest {
	return &WorkbookFunctionsCothRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCothRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCothRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCothRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Count undocumented
func (b *WorkbookFunctionsRequestBuilder) Count(reqObj *WorkbookFunctionsCountRequestObject) *WorkbookFunctionsCountRequestBuilder {
	bb := &WorkbookFunctionsCountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/count"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCountRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCountRequestBuilder) Request() *WorkbookFunctionsCountRequest {
	return &WorkbookFunctionsCountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCountRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCountRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCountRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CountA undocumented
func (b *WorkbookFunctionsRequestBuilder) CountA(reqObj *WorkbookFunctionsCountARequestObject) *WorkbookFunctionsCountARequestBuilder {
	bb := &WorkbookFunctionsCountARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/countA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCountARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCountARequestBuilder) Request() *WorkbookFunctionsCountARequest {
	return &WorkbookFunctionsCountARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCountARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCountARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCountARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CountBlank undocumented
func (b *WorkbookFunctionsRequestBuilder) CountBlank(reqObj *WorkbookFunctionsCountBlankRequestObject) *WorkbookFunctionsCountBlankRequestBuilder {
	bb := &WorkbookFunctionsCountBlankRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/countBlank"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCountBlankRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCountBlankRequestBuilder) Request() *WorkbookFunctionsCountBlankRequest {
	return &WorkbookFunctionsCountBlankRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCountBlankRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCountBlankRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCountBlankRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CountIf undocumented
func (b *WorkbookFunctionsRequestBuilder) CountIf(reqObj *WorkbookFunctionsCountIfRequestObject) *WorkbookFunctionsCountIfRequestBuilder {
	bb := &WorkbookFunctionsCountIfRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/countIf"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCountIfRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCountIfRequestBuilder) Request() *WorkbookFunctionsCountIfRequest {
	return &WorkbookFunctionsCountIfRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCountIfRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCountIfRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCountIfRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CountIfs undocumented
func (b *WorkbookFunctionsRequestBuilder) CountIfs(reqObj *WorkbookFunctionsCountIfsRequestObject) *WorkbookFunctionsCountIfsRequestBuilder {
	bb := &WorkbookFunctionsCountIfsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/countIfs"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCountIfsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCountIfsRequestBuilder) Request() *WorkbookFunctionsCountIfsRequest {
	return &WorkbookFunctionsCountIfsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCountIfsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCountIfsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCountIfsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CoupDayBs undocumented
func (b *WorkbookFunctionsRequestBuilder) CoupDayBs(reqObj *WorkbookFunctionsCoupDayBsRequestObject) *WorkbookFunctionsCoupDayBsRequestBuilder {
	bb := &WorkbookFunctionsCoupDayBsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/coupDayBs"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCoupDayBsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCoupDayBsRequestBuilder) Request() *WorkbookFunctionsCoupDayBsRequest {
	return &WorkbookFunctionsCoupDayBsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCoupDayBsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCoupDayBsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCoupDayBsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CoupDays undocumented
func (b *WorkbookFunctionsRequestBuilder) CoupDays(reqObj *WorkbookFunctionsCoupDaysRequestObject) *WorkbookFunctionsCoupDaysRequestBuilder {
	bb := &WorkbookFunctionsCoupDaysRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/coupDays"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCoupDaysRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCoupDaysRequestBuilder) Request() *WorkbookFunctionsCoupDaysRequest {
	return &WorkbookFunctionsCoupDaysRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCoupDaysRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCoupDaysRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCoupDaysRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CoupDaysNc undocumented
func (b *WorkbookFunctionsRequestBuilder) CoupDaysNc(reqObj *WorkbookFunctionsCoupDaysNcRequestObject) *WorkbookFunctionsCoupDaysNcRequestBuilder {
	bb := &WorkbookFunctionsCoupDaysNcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/coupDaysNc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCoupDaysNcRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCoupDaysNcRequestBuilder) Request() *WorkbookFunctionsCoupDaysNcRequest {
	return &WorkbookFunctionsCoupDaysNcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCoupDaysNcRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCoupDaysNcRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCoupDaysNcRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CoupNcd undocumented
func (b *WorkbookFunctionsRequestBuilder) CoupNcd(reqObj *WorkbookFunctionsCoupNcdRequestObject) *WorkbookFunctionsCoupNcdRequestBuilder {
	bb := &WorkbookFunctionsCoupNcdRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/coupNcd"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCoupNcdRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCoupNcdRequestBuilder) Request() *WorkbookFunctionsCoupNcdRequest {
	return &WorkbookFunctionsCoupNcdRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCoupNcdRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCoupNcdRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCoupNcdRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CoupNum undocumented
func (b *WorkbookFunctionsRequestBuilder) CoupNum(reqObj *WorkbookFunctionsCoupNumRequestObject) *WorkbookFunctionsCoupNumRequestBuilder {
	bb := &WorkbookFunctionsCoupNumRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/coupNum"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCoupNumRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCoupNumRequestBuilder) Request() *WorkbookFunctionsCoupNumRequest {
	return &WorkbookFunctionsCoupNumRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCoupNumRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCoupNumRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCoupNumRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CoupPcd undocumented
func (b *WorkbookFunctionsRequestBuilder) CoupPcd(reqObj *WorkbookFunctionsCoupPcdRequestObject) *WorkbookFunctionsCoupPcdRequestBuilder {
	bb := &WorkbookFunctionsCoupPcdRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/coupPcd"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCoupPcdRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCoupPcdRequestBuilder) Request() *WorkbookFunctionsCoupPcdRequest {
	return &WorkbookFunctionsCoupPcdRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCoupPcdRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCoupPcdRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCoupPcdRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Csc undocumented
func (b *WorkbookFunctionsRequestBuilder) Csc(reqObj *WorkbookFunctionsCscRequestObject) *WorkbookFunctionsCscRequestBuilder {
	bb := &WorkbookFunctionsCscRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/csc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCscRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCscRequestBuilder) Request() *WorkbookFunctionsCscRequest {
	return &WorkbookFunctionsCscRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCscRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCscRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCscRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Csch undocumented
func (b *WorkbookFunctionsRequestBuilder) Csch(reqObj *WorkbookFunctionsCschRequestObject) *WorkbookFunctionsCschRequestBuilder {
	bb := &WorkbookFunctionsCschRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/csch"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCschRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCschRequestBuilder) Request() *WorkbookFunctionsCschRequest {
	return &WorkbookFunctionsCschRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCschRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCschRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCschRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CumIPmt undocumented
func (b *WorkbookFunctionsRequestBuilder) CumIPmt(reqObj *WorkbookFunctionsCumIPmtRequestObject) *WorkbookFunctionsCumIPmtRequestBuilder {
	bb := &WorkbookFunctionsCumIPmtRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cumIPmt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCumIPmtRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCumIPmtRequestBuilder) Request() *WorkbookFunctionsCumIPmtRequest {
	return &WorkbookFunctionsCumIPmtRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCumIPmtRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCumIPmtRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCumIPmtRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// CumPrinc undocumented
func (b *WorkbookFunctionsRequestBuilder) CumPrinc(reqObj *WorkbookFunctionsCumPrincRequestObject) *WorkbookFunctionsCumPrincRequestBuilder {
	bb := &WorkbookFunctionsCumPrincRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cumPrinc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsCumPrincRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsCumPrincRequestBuilder) Request() *WorkbookFunctionsCumPrincRequest {
	return &WorkbookFunctionsCumPrincRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsCumPrincRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsCumPrincRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsCumPrincRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Daverage undocumented
func (b *WorkbookFunctionsRequestBuilder) Daverage(reqObj *WorkbookFunctionsDaverageRequestObject) *WorkbookFunctionsDaverageRequestBuilder {
	bb := &WorkbookFunctionsDaverageRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/daverage"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDaverageRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDaverageRequestBuilder) Request() *WorkbookFunctionsDaverageRequest {
	return &WorkbookFunctionsDaverageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDaverageRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDaverageRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDaverageRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dcount undocumented
func (b *WorkbookFunctionsRequestBuilder) Dcount(reqObj *WorkbookFunctionsDcountRequestObject) *WorkbookFunctionsDcountRequestBuilder {
	bb := &WorkbookFunctionsDcountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dcount"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDcountRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDcountRequestBuilder) Request() *WorkbookFunctionsDcountRequest {
	return &WorkbookFunctionsDcountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDcountRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDcountRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDcountRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// DcountA undocumented
func (b *WorkbookFunctionsRequestBuilder) DcountA(reqObj *WorkbookFunctionsDcountARequestObject) *WorkbookFunctionsDcountARequestBuilder {
	bb := &WorkbookFunctionsDcountARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dcountA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDcountARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDcountARequestBuilder) Request() *WorkbookFunctionsDcountARequest {
	return &WorkbookFunctionsDcountARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDcountARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDcountARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDcountARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dget undocumented
func (b *WorkbookFunctionsRequestBuilder) Dget(reqObj *WorkbookFunctionsDgetRequestObject) *WorkbookFunctionsDgetRequestBuilder {
	bb := &WorkbookFunctionsDgetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dget"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDgetRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDgetRequestBuilder) Request() *WorkbookFunctionsDgetRequest {
	return &WorkbookFunctionsDgetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDgetRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDgetRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDgetRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dmax undocumented
func (b *WorkbookFunctionsRequestBuilder) Dmax(reqObj *WorkbookFunctionsDmaxRequestObject) *WorkbookFunctionsDmaxRequestBuilder {
	bb := &WorkbookFunctionsDmaxRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dmax"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDmaxRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDmaxRequestBuilder) Request() *WorkbookFunctionsDmaxRequest {
	return &WorkbookFunctionsDmaxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDmaxRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDmaxRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDmaxRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dmin undocumented
func (b *WorkbookFunctionsRequestBuilder) Dmin(reqObj *WorkbookFunctionsDminRequestObject) *WorkbookFunctionsDminRequestBuilder {
	bb := &WorkbookFunctionsDminRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dmin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDminRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDminRequestBuilder) Request() *WorkbookFunctionsDminRequest {
	return &WorkbookFunctionsDminRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDminRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDminRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDminRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dproduct undocumented
func (b *WorkbookFunctionsRequestBuilder) Dproduct(reqObj *WorkbookFunctionsDproductRequestObject) *WorkbookFunctionsDproductRequestBuilder {
	bb := &WorkbookFunctionsDproductRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dproduct"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDproductRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDproductRequestBuilder) Request() *WorkbookFunctionsDproductRequest {
	return &WorkbookFunctionsDproductRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDproductRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDproductRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDproductRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// DstDev undocumented
func (b *WorkbookFunctionsRequestBuilder) DstDev(reqObj *WorkbookFunctionsDstDevRequestObject) *WorkbookFunctionsDstDevRequestBuilder {
	bb := &WorkbookFunctionsDstDevRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dstDev"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDstDevRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDstDevRequestBuilder) Request() *WorkbookFunctionsDstDevRequest {
	return &WorkbookFunctionsDstDevRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDstDevRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDstDevRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDstDevRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// DstDevP undocumented
func (b *WorkbookFunctionsRequestBuilder) DstDevP(reqObj *WorkbookFunctionsDstDevPRequestObject) *WorkbookFunctionsDstDevPRequestBuilder {
	bb := &WorkbookFunctionsDstDevPRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dstDevP"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDstDevPRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDstDevPRequestBuilder) Request() *WorkbookFunctionsDstDevPRequest {
	return &WorkbookFunctionsDstDevPRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDstDevPRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDstDevPRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDstDevPRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dsum undocumented
func (b *WorkbookFunctionsRequestBuilder) Dsum(reqObj *WorkbookFunctionsDsumRequestObject) *WorkbookFunctionsDsumRequestBuilder {
	bb := &WorkbookFunctionsDsumRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dsum"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDsumRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDsumRequestBuilder) Request() *WorkbookFunctionsDsumRequest {
	return &WorkbookFunctionsDsumRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDsumRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDsumRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDsumRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dvar undocumented
func (b *WorkbookFunctionsRequestBuilder) Dvar(reqObj *WorkbookFunctionsDvarRequestObject) *WorkbookFunctionsDvarRequestBuilder {
	bb := &WorkbookFunctionsDvarRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dvar"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDvarRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDvarRequestBuilder) Request() *WorkbookFunctionsDvarRequest {
	return &WorkbookFunctionsDvarRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDvarRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDvarRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDvarRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// DvarP undocumented
func (b *WorkbookFunctionsRequestBuilder) DvarP(reqObj *WorkbookFunctionsDvarPRequestObject) *WorkbookFunctionsDvarPRequestBuilder {
	bb := &WorkbookFunctionsDvarPRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dvarP"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDvarPRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDvarPRequestBuilder) Request() *WorkbookFunctionsDvarPRequest {
	return &WorkbookFunctionsDvarPRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDvarPRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDvarPRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDvarPRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Date undocumented
func (b *WorkbookFunctionsRequestBuilder) Date(reqObj *WorkbookFunctionsDateRequestObject) *WorkbookFunctionsDateRequestBuilder {
	bb := &WorkbookFunctionsDateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/date"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDateRequestBuilder) Request() *WorkbookFunctionsDateRequest {
	return &WorkbookFunctionsDateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDateRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDateRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDateRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Datevalue undocumented
func (b *WorkbookFunctionsRequestBuilder) Datevalue(reqObj *WorkbookFunctionsDatevalueRequestObject) *WorkbookFunctionsDatevalueRequestBuilder {
	bb := &WorkbookFunctionsDatevalueRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/datevalue"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDatevalueRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDatevalueRequestBuilder) Request() *WorkbookFunctionsDatevalueRequest {
	return &WorkbookFunctionsDatevalueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDatevalueRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDatevalueRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDatevalueRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Day undocumented
func (b *WorkbookFunctionsRequestBuilder) Day(reqObj *WorkbookFunctionsDayRequestObject) *WorkbookFunctionsDayRequestBuilder {
	bb := &WorkbookFunctionsDayRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/day"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDayRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDayRequestBuilder) Request() *WorkbookFunctionsDayRequest {
	return &WorkbookFunctionsDayRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDayRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDayRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDayRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Days undocumented
func (b *WorkbookFunctionsRequestBuilder) Days(reqObj *WorkbookFunctionsDaysRequestObject) *WorkbookFunctionsDaysRequestBuilder {
	bb := &WorkbookFunctionsDaysRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/days"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDaysRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDaysRequestBuilder) Request() *WorkbookFunctionsDaysRequest {
	return &WorkbookFunctionsDaysRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDaysRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDaysRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDaysRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Days360 undocumented
func (b *WorkbookFunctionsRequestBuilder) Days360(reqObj *WorkbookFunctionsDays360RequestObject) *WorkbookFunctionsDays360RequestBuilder {
	bb := &WorkbookFunctionsDays360RequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/days360"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDays360RequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDays360RequestBuilder) Request() *WorkbookFunctionsDays360Request {
	return &WorkbookFunctionsDays360Request{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDays360Request struct{ BaseRequest }

//
func (r *WorkbookFunctionsDays360Request) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDays360Request) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Db undocumented
func (b *WorkbookFunctionsRequestBuilder) Db(reqObj *WorkbookFunctionsDbRequestObject) *WorkbookFunctionsDbRequestBuilder {
	bb := &WorkbookFunctionsDbRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/db"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDbRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDbRequestBuilder) Request() *WorkbookFunctionsDbRequest {
	return &WorkbookFunctionsDbRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDbRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDbRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDbRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dbcs undocumented
func (b *WorkbookFunctionsRequestBuilder) Dbcs(reqObj *WorkbookFunctionsDbcsRequestObject) *WorkbookFunctionsDbcsRequestBuilder {
	bb := &WorkbookFunctionsDbcsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dbcs"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDbcsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDbcsRequestBuilder) Request() *WorkbookFunctionsDbcsRequest {
	return &WorkbookFunctionsDbcsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDbcsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDbcsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDbcsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Ddb undocumented
func (b *WorkbookFunctionsRequestBuilder) Ddb(reqObj *WorkbookFunctionsDdbRequestObject) *WorkbookFunctionsDdbRequestBuilder {
	bb := &WorkbookFunctionsDdbRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ddb"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDdbRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDdbRequestBuilder) Request() *WorkbookFunctionsDdbRequest {
	return &WorkbookFunctionsDdbRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDdbRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDdbRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDdbRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dec2Bin undocumented
func (b *WorkbookFunctionsRequestBuilder) Dec2Bin(reqObj *WorkbookFunctionsDec2BinRequestObject) *WorkbookFunctionsDec2BinRequestBuilder {
	bb := &WorkbookFunctionsDec2BinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dec2Bin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDec2BinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDec2BinRequestBuilder) Request() *WorkbookFunctionsDec2BinRequest {
	return &WorkbookFunctionsDec2BinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDec2BinRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDec2BinRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDec2BinRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dec2Hex undocumented
func (b *WorkbookFunctionsRequestBuilder) Dec2Hex(reqObj *WorkbookFunctionsDec2HexRequestObject) *WorkbookFunctionsDec2HexRequestBuilder {
	bb := &WorkbookFunctionsDec2HexRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dec2Hex"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDec2HexRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDec2HexRequestBuilder) Request() *WorkbookFunctionsDec2HexRequest {
	return &WorkbookFunctionsDec2HexRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDec2HexRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDec2HexRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDec2HexRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dec2Oct undocumented
func (b *WorkbookFunctionsRequestBuilder) Dec2Oct(reqObj *WorkbookFunctionsDec2OctRequestObject) *WorkbookFunctionsDec2OctRequestBuilder {
	bb := &WorkbookFunctionsDec2OctRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dec2Oct"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDec2OctRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDec2OctRequestBuilder) Request() *WorkbookFunctionsDec2OctRequest {
	return &WorkbookFunctionsDec2OctRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDec2OctRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDec2OctRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDec2OctRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Decimal undocumented
func (b *WorkbookFunctionsRequestBuilder) Decimal(reqObj *WorkbookFunctionsDecimalRequestObject) *WorkbookFunctionsDecimalRequestBuilder {
	bb := &WorkbookFunctionsDecimalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/decimal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDecimalRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDecimalRequestBuilder) Request() *WorkbookFunctionsDecimalRequest {
	return &WorkbookFunctionsDecimalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDecimalRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDecimalRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDecimalRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Degrees undocumented
func (b *WorkbookFunctionsRequestBuilder) Degrees(reqObj *WorkbookFunctionsDegreesRequestObject) *WorkbookFunctionsDegreesRequestBuilder {
	bb := &WorkbookFunctionsDegreesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/degrees"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDegreesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDegreesRequestBuilder) Request() *WorkbookFunctionsDegreesRequest {
	return &WorkbookFunctionsDegreesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDegreesRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDegreesRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDegreesRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Delta undocumented
func (b *WorkbookFunctionsRequestBuilder) Delta(reqObj *WorkbookFunctionsDeltaRequestObject) *WorkbookFunctionsDeltaRequestBuilder {
	bb := &WorkbookFunctionsDeltaRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/delta"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDeltaRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDeltaRequestBuilder) Request() *WorkbookFunctionsDeltaRequest {
	return &WorkbookFunctionsDeltaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDeltaRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDeltaRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDeltaRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// DevSq undocumented
func (b *WorkbookFunctionsRequestBuilder) DevSq(reqObj *WorkbookFunctionsDevSqRequestObject) *WorkbookFunctionsDevSqRequestBuilder {
	bb := &WorkbookFunctionsDevSqRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/devSq"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDevSqRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDevSqRequestBuilder) Request() *WorkbookFunctionsDevSqRequest {
	return &WorkbookFunctionsDevSqRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDevSqRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDevSqRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDevSqRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Disc undocumented
func (b *WorkbookFunctionsRequestBuilder) Disc(reqObj *WorkbookFunctionsDiscRequestObject) *WorkbookFunctionsDiscRequestBuilder {
	bb := &WorkbookFunctionsDiscRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/disc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDiscRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDiscRequestBuilder) Request() *WorkbookFunctionsDiscRequest {
	return &WorkbookFunctionsDiscRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDiscRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDiscRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDiscRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Dollar undocumented
func (b *WorkbookFunctionsRequestBuilder) Dollar(reqObj *WorkbookFunctionsDollarRequestObject) *WorkbookFunctionsDollarRequestBuilder {
	bb := &WorkbookFunctionsDollarRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dollar"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDollarRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDollarRequestBuilder) Request() *WorkbookFunctionsDollarRequest {
	return &WorkbookFunctionsDollarRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDollarRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDollarRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDollarRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// DollarDe undocumented
func (b *WorkbookFunctionsRequestBuilder) DollarDe(reqObj *WorkbookFunctionsDollarDeRequestObject) *WorkbookFunctionsDollarDeRequestBuilder {
	bb := &WorkbookFunctionsDollarDeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dollarDe"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDollarDeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDollarDeRequestBuilder) Request() *WorkbookFunctionsDollarDeRequest {
	return &WorkbookFunctionsDollarDeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDollarDeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDollarDeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDollarDeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// DollarFr undocumented
func (b *WorkbookFunctionsRequestBuilder) DollarFr(reqObj *WorkbookFunctionsDollarFrRequestObject) *WorkbookFunctionsDollarFrRequestBuilder {
	bb := &WorkbookFunctionsDollarFrRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/dollarFr"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDollarFrRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDollarFrRequestBuilder) Request() *WorkbookFunctionsDollarFrRequest {
	return &WorkbookFunctionsDollarFrRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDollarFrRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDollarFrRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDollarFrRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Duration undocumented
func (b *WorkbookFunctionsRequestBuilder) Duration(reqObj *WorkbookFunctionsDurationRequestObject) *WorkbookFunctionsDurationRequestBuilder {
	bb := &WorkbookFunctionsDurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/duration"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsDurationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsDurationRequestBuilder) Request() *WorkbookFunctionsDurationRequest {
	return &WorkbookFunctionsDurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsDurationRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsDurationRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsDurationRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Ecma_Ceiling undocumented
func (b *WorkbookFunctionsRequestBuilder) Ecma_Ceiling(reqObj *WorkbookFunctionsEcma_CeilingRequestObject) *WorkbookFunctionsEcma_CeilingRequestBuilder {
	bb := &WorkbookFunctionsEcma_CeilingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ecma_Ceiling"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsEcma_CeilingRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsEcma_CeilingRequestBuilder) Request() *WorkbookFunctionsEcma_CeilingRequest {
	return &WorkbookFunctionsEcma_CeilingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsEcma_CeilingRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsEcma_CeilingRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsEcma_CeilingRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Edate undocumented
func (b *WorkbookFunctionsRequestBuilder) Edate(reqObj *WorkbookFunctionsEdateRequestObject) *WorkbookFunctionsEdateRequestBuilder {
	bb := &WorkbookFunctionsEdateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/edate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsEdateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsEdateRequestBuilder) Request() *WorkbookFunctionsEdateRequest {
	return &WorkbookFunctionsEdateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsEdateRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsEdateRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsEdateRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Effect undocumented
func (b *WorkbookFunctionsRequestBuilder) Effect(reqObj *WorkbookFunctionsEffectRequestObject) *WorkbookFunctionsEffectRequestBuilder {
	bb := &WorkbookFunctionsEffectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/effect"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsEffectRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsEffectRequestBuilder) Request() *WorkbookFunctionsEffectRequest {
	return &WorkbookFunctionsEffectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsEffectRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsEffectRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsEffectRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// EoMonth undocumented
func (b *WorkbookFunctionsRequestBuilder) EoMonth(reqObj *WorkbookFunctionsEoMonthRequestObject) *WorkbookFunctionsEoMonthRequestBuilder {
	bb := &WorkbookFunctionsEoMonthRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/eoMonth"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsEoMonthRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsEoMonthRequestBuilder) Request() *WorkbookFunctionsEoMonthRequest {
	return &WorkbookFunctionsEoMonthRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsEoMonthRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsEoMonthRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsEoMonthRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Erf undocumented
func (b *WorkbookFunctionsRequestBuilder) Erf(reqObj *WorkbookFunctionsErfRequestObject) *WorkbookFunctionsErfRequestBuilder {
	bb := &WorkbookFunctionsErfRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/erf"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsErfRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsErfRequestBuilder) Request() *WorkbookFunctionsErfRequest {
	return &WorkbookFunctionsErfRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsErfRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsErfRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsErfRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ErfC undocumented
func (b *WorkbookFunctionsRequestBuilder) ErfC(reqObj *WorkbookFunctionsErfCRequestObject) *WorkbookFunctionsErfCRequestBuilder {
	bb := &WorkbookFunctionsErfCRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/erfC"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsErfCRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsErfCRequestBuilder) Request() *WorkbookFunctionsErfCRequest {
	return &WorkbookFunctionsErfCRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsErfCRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsErfCRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsErfCRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ErfC_Precise undocumented
func (b *WorkbookFunctionsRequestBuilder) ErfC_Precise(reqObj *WorkbookFunctionsErfC_PreciseRequestObject) *WorkbookFunctionsErfC_PreciseRequestBuilder {
	bb := &WorkbookFunctionsErfC_PreciseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/erfC_Precise"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsErfC_PreciseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsErfC_PreciseRequestBuilder) Request() *WorkbookFunctionsErfC_PreciseRequest {
	return &WorkbookFunctionsErfC_PreciseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsErfC_PreciseRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsErfC_PreciseRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsErfC_PreciseRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Erf_Precise undocumented
func (b *WorkbookFunctionsRequestBuilder) Erf_Precise(reqObj *WorkbookFunctionsErf_PreciseRequestObject) *WorkbookFunctionsErf_PreciseRequestBuilder {
	bb := &WorkbookFunctionsErf_PreciseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/erf_Precise"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsErf_PreciseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsErf_PreciseRequestBuilder) Request() *WorkbookFunctionsErf_PreciseRequest {
	return &WorkbookFunctionsErf_PreciseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsErf_PreciseRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsErf_PreciseRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsErf_PreciseRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Error_Type undocumented
func (b *WorkbookFunctionsRequestBuilder) Error_Type(reqObj *WorkbookFunctionsError_TypeRequestObject) *WorkbookFunctionsError_TypeRequestBuilder {
	bb := &WorkbookFunctionsError_TypeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/error_Type"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsError_TypeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsError_TypeRequestBuilder) Request() *WorkbookFunctionsError_TypeRequest {
	return &WorkbookFunctionsError_TypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsError_TypeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsError_TypeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsError_TypeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Even undocumented
func (b *WorkbookFunctionsRequestBuilder) Even(reqObj *WorkbookFunctionsEvenRequestObject) *WorkbookFunctionsEvenRequestBuilder {
	bb := &WorkbookFunctionsEvenRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/even"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsEvenRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsEvenRequestBuilder) Request() *WorkbookFunctionsEvenRequest {
	return &WorkbookFunctionsEvenRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsEvenRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsEvenRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsEvenRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Exact undocumented
func (b *WorkbookFunctionsRequestBuilder) Exact(reqObj *WorkbookFunctionsExactRequestObject) *WorkbookFunctionsExactRequestBuilder {
	bb := &WorkbookFunctionsExactRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/exact"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsExactRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsExactRequestBuilder) Request() *WorkbookFunctionsExactRequest {
	return &WorkbookFunctionsExactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsExactRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsExactRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsExactRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Exp undocumented
func (b *WorkbookFunctionsRequestBuilder) Exp(reqObj *WorkbookFunctionsExpRequestObject) *WorkbookFunctionsExpRequestBuilder {
	bb := &WorkbookFunctionsExpRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/exp"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsExpRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsExpRequestBuilder) Request() *WorkbookFunctionsExpRequest {
	return &WorkbookFunctionsExpRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsExpRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsExpRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsExpRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Expon_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) Expon_Dist(reqObj *WorkbookFunctionsExpon_DistRequestObject) *WorkbookFunctionsExpon_DistRequestBuilder {
	bb := &WorkbookFunctionsExpon_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/expon_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsExpon_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsExpon_DistRequestBuilder) Request() *WorkbookFunctionsExpon_DistRequest {
	return &WorkbookFunctionsExpon_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsExpon_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsExpon_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsExpon_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Fvschedule undocumented
func (b *WorkbookFunctionsRequestBuilder) Fvschedule(reqObj *WorkbookFunctionsFvscheduleRequestObject) *WorkbookFunctionsFvscheduleRequestBuilder {
	bb := &WorkbookFunctionsFvscheduleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/fvschedule"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFvscheduleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFvscheduleRequestBuilder) Request() *WorkbookFunctionsFvscheduleRequest {
	return &WorkbookFunctionsFvscheduleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFvscheduleRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFvscheduleRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFvscheduleRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// F_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) F_Dist(reqObj *WorkbookFunctionsF_DistRequestObject) *WorkbookFunctionsF_DistRequestBuilder {
	bb := &WorkbookFunctionsF_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/f_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsF_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsF_DistRequestBuilder) Request() *WorkbookFunctionsF_DistRequest {
	return &WorkbookFunctionsF_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsF_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsF_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsF_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// F_Dist_RT undocumented
func (b *WorkbookFunctionsRequestBuilder) F_Dist_RT(reqObj *WorkbookFunctionsF_Dist_RTRequestObject) *WorkbookFunctionsF_Dist_RTRequestBuilder {
	bb := &WorkbookFunctionsF_Dist_RTRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/f_Dist_RT"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsF_Dist_RTRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsF_Dist_RTRequestBuilder) Request() *WorkbookFunctionsF_Dist_RTRequest {
	return &WorkbookFunctionsF_Dist_RTRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsF_Dist_RTRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsF_Dist_RTRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsF_Dist_RTRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// F_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) F_Inv(reqObj *WorkbookFunctionsF_InvRequestObject) *WorkbookFunctionsF_InvRequestBuilder {
	bb := &WorkbookFunctionsF_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/f_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsF_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsF_InvRequestBuilder) Request() *WorkbookFunctionsF_InvRequest {
	return &WorkbookFunctionsF_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsF_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsF_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsF_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// F_Inv_RT undocumented
func (b *WorkbookFunctionsRequestBuilder) F_Inv_RT(reqObj *WorkbookFunctionsF_Inv_RTRequestObject) *WorkbookFunctionsF_Inv_RTRequestBuilder {
	bb := &WorkbookFunctionsF_Inv_RTRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/f_Inv_RT"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsF_Inv_RTRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsF_Inv_RTRequestBuilder) Request() *WorkbookFunctionsF_Inv_RTRequest {
	return &WorkbookFunctionsF_Inv_RTRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsF_Inv_RTRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsF_Inv_RTRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsF_Inv_RTRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Fact undocumented
func (b *WorkbookFunctionsRequestBuilder) Fact(reqObj *WorkbookFunctionsFactRequestObject) *WorkbookFunctionsFactRequestBuilder {
	bb := &WorkbookFunctionsFactRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/fact"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFactRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFactRequestBuilder) Request() *WorkbookFunctionsFactRequest {
	return &WorkbookFunctionsFactRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFactRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFactRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFactRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// FactDouble undocumented
func (b *WorkbookFunctionsRequestBuilder) FactDouble(reqObj *WorkbookFunctionsFactDoubleRequestObject) *WorkbookFunctionsFactDoubleRequestBuilder {
	bb := &WorkbookFunctionsFactDoubleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/factDouble"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFactDoubleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFactDoubleRequestBuilder) Request() *WorkbookFunctionsFactDoubleRequest {
	return &WorkbookFunctionsFactDoubleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFactDoubleRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFactDoubleRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFactDoubleRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// False undocumented
func (b *WorkbookFunctionsRequestBuilder) False(reqObj *WorkbookFunctionsFalseRequestObject) *WorkbookFunctionsFalseRequestBuilder {
	bb := &WorkbookFunctionsFalseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/false"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFalseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFalseRequestBuilder) Request() *WorkbookFunctionsFalseRequest {
	return &WorkbookFunctionsFalseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFalseRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFalseRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFalseRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Find undocumented
func (b *WorkbookFunctionsRequestBuilder) Find(reqObj *WorkbookFunctionsFindRequestObject) *WorkbookFunctionsFindRequestBuilder {
	bb := &WorkbookFunctionsFindRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/find"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFindRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFindRequestBuilder) Request() *WorkbookFunctionsFindRequest {
	return &WorkbookFunctionsFindRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFindRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFindRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFindRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// FindB undocumented
func (b *WorkbookFunctionsRequestBuilder) FindB(reqObj *WorkbookFunctionsFindBRequestObject) *WorkbookFunctionsFindBRequestBuilder {
	bb := &WorkbookFunctionsFindBRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/findB"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFindBRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFindBRequestBuilder) Request() *WorkbookFunctionsFindBRequest {
	return &WorkbookFunctionsFindBRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFindBRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFindBRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFindBRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Fisher undocumented
func (b *WorkbookFunctionsRequestBuilder) Fisher(reqObj *WorkbookFunctionsFisherRequestObject) *WorkbookFunctionsFisherRequestBuilder {
	bb := &WorkbookFunctionsFisherRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/fisher"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFisherRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFisherRequestBuilder) Request() *WorkbookFunctionsFisherRequest {
	return &WorkbookFunctionsFisherRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFisherRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFisherRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFisherRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// FisherInv undocumented
func (b *WorkbookFunctionsRequestBuilder) FisherInv(reqObj *WorkbookFunctionsFisherInvRequestObject) *WorkbookFunctionsFisherInvRequestBuilder {
	bb := &WorkbookFunctionsFisherInvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/fisherInv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFisherInvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFisherInvRequestBuilder) Request() *WorkbookFunctionsFisherInvRequest {
	return &WorkbookFunctionsFisherInvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFisherInvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFisherInvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFisherInvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Fixed undocumented
func (b *WorkbookFunctionsRequestBuilder) Fixed(reqObj *WorkbookFunctionsFixedRequestObject) *WorkbookFunctionsFixedRequestBuilder {
	bb := &WorkbookFunctionsFixedRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/fixed"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFixedRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFixedRequestBuilder) Request() *WorkbookFunctionsFixedRequest {
	return &WorkbookFunctionsFixedRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFixedRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFixedRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFixedRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Floor_Math undocumented
func (b *WorkbookFunctionsRequestBuilder) Floor_Math(reqObj *WorkbookFunctionsFloor_MathRequestObject) *WorkbookFunctionsFloor_MathRequestBuilder {
	bb := &WorkbookFunctionsFloor_MathRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/floor_Math"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFloor_MathRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFloor_MathRequestBuilder) Request() *WorkbookFunctionsFloor_MathRequest {
	return &WorkbookFunctionsFloor_MathRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFloor_MathRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFloor_MathRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFloor_MathRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Floor_Precise undocumented
func (b *WorkbookFunctionsRequestBuilder) Floor_Precise(reqObj *WorkbookFunctionsFloor_PreciseRequestObject) *WorkbookFunctionsFloor_PreciseRequestBuilder {
	bb := &WorkbookFunctionsFloor_PreciseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/floor_Precise"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFloor_PreciseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFloor_PreciseRequestBuilder) Request() *WorkbookFunctionsFloor_PreciseRequest {
	return &WorkbookFunctionsFloor_PreciseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFloor_PreciseRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFloor_PreciseRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFloor_PreciseRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Fv undocumented
func (b *WorkbookFunctionsRequestBuilder) Fv(reqObj *WorkbookFunctionsFvRequestObject) *WorkbookFunctionsFvRequestBuilder {
	bb := &WorkbookFunctionsFvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/fv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsFvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsFvRequestBuilder) Request() *WorkbookFunctionsFvRequest {
	return &WorkbookFunctionsFvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsFvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsFvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsFvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Gamma undocumented
func (b *WorkbookFunctionsRequestBuilder) Gamma(reqObj *WorkbookFunctionsGammaRequestObject) *WorkbookFunctionsGammaRequestBuilder {
	bb := &WorkbookFunctionsGammaRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/gamma"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGammaRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGammaRequestBuilder) Request() *WorkbookFunctionsGammaRequest {
	return &WorkbookFunctionsGammaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGammaRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGammaRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGammaRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// GammaLn undocumented
func (b *WorkbookFunctionsRequestBuilder) GammaLn(reqObj *WorkbookFunctionsGammaLnRequestObject) *WorkbookFunctionsGammaLnRequestBuilder {
	bb := &WorkbookFunctionsGammaLnRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/gammaLn"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGammaLnRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGammaLnRequestBuilder) Request() *WorkbookFunctionsGammaLnRequest {
	return &WorkbookFunctionsGammaLnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGammaLnRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGammaLnRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGammaLnRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// GammaLn_Precise undocumented
func (b *WorkbookFunctionsRequestBuilder) GammaLn_Precise(reqObj *WorkbookFunctionsGammaLn_PreciseRequestObject) *WorkbookFunctionsGammaLn_PreciseRequestBuilder {
	bb := &WorkbookFunctionsGammaLn_PreciseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/gammaLn_Precise"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGammaLn_PreciseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGammaLn_PreciseRequestBuilder) Request() *WorkbookFunctionsGammaLn_PreciseRequest {
	return &WorkbookFunctionsGammaLn_PreciseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGammaLn_PreciseRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGammaLn_PreciseRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGammaLn_PreciseRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Gamma_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) Gamma_Dist(reqObj *WorkbookFunctionsGamma_DistRequestObject) *WorkbookFunctionsGamma_DistRequestBuilder {
	bb := &WorkbookFunctionsGamma_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/gamma_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGamma_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGamma_DistRequestBuilder) Request() *WorkbookFunctionsGamma_DistRequest {
	return &WorkbookFunctionsGamma_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGamma_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGamma_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGamma_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Gamma_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) Gamma_Inv(reqObj *WorkbookFunctionsGamma_InvRequestObject) *WorkbookFunctionsGamma_InvRequestBuilder {
	bb := &WorkbookFunctionsGamma_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/gamma_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGamma_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGamma_InvRequestBuilder) Request() *WorkbookFunctionsGamma_InvRequest {
	return &WorkbookFunctionsGamma_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGamma_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGamma_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGamma_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Gauss undocumented
func (b *WorkbookFunctionsRequestBuilder) Gauss(reqObj *WorkbookFunctionsGaussRequestObject) *WorkbookFunctionsGaussRequestBuilder {
	bb := &WorkbookFunctionsGaussRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/gauss"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGaussRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGaussRequestBuilder) Request() *WorkbookFunctionsGaussRequest {
	return &WorkbookFunctionsGaussRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGaussRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGaussRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGaussRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Gcd undocumented
func (b *WorkbookFunctionsRequestBuilder) Gcd(reqObj *WorkbookFunctionsGcdRequestObject) *WorkbookFunctionsGcdRequestBuilder {
	bb := &WorkbookFunctionsGcdRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/gcd"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGcdRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGcdRequestBuilder) Request() *WorkbookFunctionsGcdRequest {
	return &WorkbookFunctionsGcdRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGcdRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGcdRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGcdRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// GeStep undocumented
func (b *WorkbookFunctionsRequestBuilder) GeStep(reqObj *WorkbookFunctionsGeStepRequestObject) *WorkbookFunctionsGeStepRequestBuilder {
	bb := &WorkbookFunctionsGeStepRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/geStep"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGeStepRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGeStepRequestBuilder) Request() *WorkbookFunctionsGeStepRequest {
	return &WorkbookFunctionsGeStepRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGeStepRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGeStepRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGeStepRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// GeoMean undocumented
func (b *WorkbookFunctionsRequestBuilder) GeoMean(reqObj *WorkbookFunctionsGeoMeanRequestObject) *WorkbookFunctionsGeoMeanRequestBuilder {
	bb := &WorkbookFunctionsGeoMeanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/geoMean"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsGeoMeanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsGeoMeanRequestBuilder) Request() *WorkbookFunctionsGeoMeanRequest {
	return &WorkbookFunctionsGeoMeanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsGeoMeanRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsGeoMeanRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsGeoMeanRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Hlookup undocumented
func (b *WorkbookFunctionsRequestBuilder) Hlookup(reqObj *WorkbookFunctionsHlookupRequestObject) *WorkbookFunctionsHlookupRequestBuilder {
	bb := &WorkbookFunctionsHlookupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/hlookup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsHlookupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsHlookupRequestBuilder) Request() *WorkbookFunctionsHlookupRequest {
	return &WorkbookFunctionsHlookupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsHlookupRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsHlookupRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsHlookupRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// HarMean undocumented
func (b *WorkbookFunctionsRequestBuilder) HarMean(reqObj *WorkbookFunctionsHarMeanRequestObject) *WorkbookFunctionsHarMeanRequestBuilder {
	bb := &WorkbookFunctionsHarMeanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/harMean"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsHarMeanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsHarMeanRequestBuilder) Request() *WorkbookFunctionsHarMeanRequest {
	return &WorkbookFunctionsHarMeanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsHarMeanRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsHarMeanRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsHarMeanRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Hex2Bin undocumented
func (b *WorkbookFunctionsRequestBuilder) Hex2Bin(reqObj *WorkbookFunctionsHex2BinRequestObject) *WorkbookFunctionsHex2BinRequestBuilder {
	bb := &WorkbookFunctionsHex2BinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/hex2Bin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsHex2BinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsHex2BinRequestBuilder) Request() *WorkbookFunctionsHex2BinRequest {
	return &WorkbookFunctionsHex2BinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsHex2BinRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsHex2BinRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsHex2BinRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Hex2Dec undocumented
func (b *WorkbookFunctionsRequestBuilder) Hex2Dec(reqObj *WorkbookFunctionsHex2DecRequestObject) *WorkbookFunctionsHex2DecRequestBuilder {
	bb := &WorkbookFunctionsHex2DecRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/hex2Dec"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsHex2DecRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsHex2DecRequestBuilder) Request() *WorkbookFunctionsHex2DecRequest {
	return &WorkbookFunctionsHex2DecRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsHex2DecRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsHex2DecRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsHex2DecRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Hex2Oct undocumented
func (b *WorkbookFunctionsRequestBuilder) Hex2Oct(reqObj *WorkbookFunctionsHex2OctRequestObject) *WorkbookFunctionsHex2OctRequestBuilder {
	bb := &WorkbookFunctionsHex2OctRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/hex2Oct"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsHex2OctRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsHex2OctRequestBuilder) Request() *WorkbookFunctionsHex2OctRequest {
	return &WorkbookFunctionsHex2OctRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsHex2OctRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsHex2OctRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsHex2OctRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Hour undocumented
func (b *WorkbookFunctionsRequestBuilder) Hour(reqObj *WorkbookFunctionsHourRequestObject) *WorkbookFunctionsHourRequestBuilder {
	bb := &WorkbookFunctionsHourRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/hour"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsHourRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsHourRequestBuilder) Request() *WorkbookFunctionsHourRequest {
	return &WorkbookFunctionsHourRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsHourRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsHourRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsHourRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// HypGeom_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) HypGeom_Dist(reqObj *WorkbookFunctionsHypGeom_DistRequestObject) *WorkbookFunctionsHypGeom_DistRequestBuilder {
	bb := &WorkbookFunctionsHypGeom_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/hypGeom_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsHypGeom_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsHypGeom_DistRequestBuilder) Request() *WorkbookFunctionsHypGeom_DistRequest {
	return &WorkbookFunctionsHypGeom_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsHypGeom_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsHypGeom_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsHypGeom_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Hyperlink undocumented
func (b *WorkbookFunctionsRequestBuilder) Hyperlink(reqObj *WorkbookFunctionsHyperlinkRequestObject) *WorkbookFunctionsHyperlinkRequestBuilder {
	bb := &WorkbookFunctionsHyperlinkRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/hyperlink"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsHyperlinkRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsHyperlinkRequestBuilder) Request() *WorkbookFunctionsHyperlinkRequest {
	return &WorkbookFunctionsHyperlinkRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsHyperlinkRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsHyperlinkRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsHyperlinkRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Iso_Ceiling undocumented
func (b *WorkbookFunctionsRequestBuilder) Iso_Ceiling(reqObj *WorkbookFunctionsIso_CeilingRequestObject) *WorkbookFunctionsIso_CeilingRequestBuilder {
	bb := &WorkbookFunctionsIso_CeilingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/iso_Ceiling"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIso_CeilingRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIso_CeilingRequestBuilder) Request() *WorkbookFunctionsIso_CeilingRequest {
	return &WorkbookFunctionsIso_CeilingRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIso_CeilingRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIso_CeilingRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIso_CeilingRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// If undocumented
func (b *WorkbookFunctionsRequestBuilder) If(reqObj *WorkbookFunctionsIfRequestObject) *WorkbookFunctionsIfRequestBuilder {
	bb := &WorkbookFunctionsIfRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/if"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIfRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIfRequestBuilder) Request() *WorkbookFunctionsIfRequest {
	return &WorkbookFunctionsIfRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIfRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIfRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIfRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImAbs undocumented
func (b *WorkbookFunctionsRequestBuilder) ImAbs(reqObj *WorkbookFunctionsImAbsRequestObject) *WorkbookFunctionsImAbsRequestBuilder {
	bb := &WorkbookFunctionsImAbsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imAbs"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImAbsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImAbsRequestBuilder) Request() *WorkbookFunctionsImAbsRequest {
	return &WorkbookFunctionsImAbsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImAbsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImAbsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImAbsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImArgument undocumented
func (b *WorkbookFunctionsRequestBuilder) ImArgument(reqObj *WorkbookFunctionsImArgumentRequestObject) *WorkbookFunctionsImArgumentRequestBuilder {
	bb := &WorkbookFunctionsImArgumentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imArgument"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImArgumentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImArgumentRequestBuilder) Request() *WorkbookFunctionsImArgumentRequest {
	return &WorkbookFunctionsImArgumentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImArgumentRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImArgumentRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImArgumentRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImConjugate undocumented
func (b *WorkbookFunctionsRequestBuilder) ImConjugate(reqObj *WorkbookFunctionsImConjugateRequestObject) *WorkbookFunctionsImConjugateRequestBuilder {
	bb := &WorkbookFunctionsImConjugateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imConjugate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImConjugateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImConjugateRequestBuilder) Request() *WorkbookFunctionsImConjugateRequest {
	return &WorkbookFunctionsImConjugateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImConjugateRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImConjugateRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImConjugateRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImCos undocumented
func (b *WorkbookFunctionsRequestBuilder) ImCos(reqObj *WorkbookFunctionsImCosRequestObject) *WorkbookFunctionsImCosRequestBuilder {
	bb := &WorkbookFunctionsImCosRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imCos"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImCosRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImCosRequestBuilder) Request() *WorkbookFunctionsImCosRequest {
	return &WorkbookFunctionsImCosRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImCosRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImCosRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImCosRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImCosh undocumented
func (b *WorkbookFunctionsRequestBuilder) ImCosh(reqObj *WorkbookFunctionsImCoshRequestObject) *WorkbookFunctionsImCoshRequestBuilder {
	bb := &WorkbookFunctionsImCoshRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imCosh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImCoshRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImCoshRequestBuilder) Request() *WorkbookFunctionsImCoshRequest {
	return &WorkbookFunctionsImCoshRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImCoshRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImCoshRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImCoshRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImCot undocumented
func (b *WorkbookFunctionsRequestBuilder) ImCot(reqObj *WorkbookFunctionsImCotRequestObject) *WorkbookFunctionsImCotRequestBuilder {
	bb := &WorkbookFunctionsImCotRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imCot"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImCotRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImCotRequestBuilder) Request() *WorkbookFunctionsImCotRequest {
	return &WorkbookFunctionsImCotRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImCotRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImCotRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImCotRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImCsc undocumented
func (b *WorkbookFunctionsRequestBuilder) ImCsc(reqObj *WorkbookFunctionsImCscRequestObject) *WorkbookFunctionsImCscRequestBuilder {
	bb := &WorkbookFunctionsImCscRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imCsc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImCscRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImCscRequestBuilder) Request() *WorkbookFunctionsImCscRequest {
	return &WorkbookFunctionsImCscRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImCscRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImCscRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImCscRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImCsch undocumented
func (b *WorkbookFunctionsRequestBuilder) ImCsch(reqObj *WorkbookFunctionsImCschRequestObject) *WorkbookFunctionsImCschRequestBuilder {
	bb := &WorkbookFunctionsImCschRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imCsch"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImCschRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImCschRequestBuilder) Request() *WorkbookFunctionsImCschRequest {
	return &WorkbookFunctionsImCschRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImCschRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImCschRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImCschRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImDiv undocumented
func (b *WorkbookFunctionsRequestBuilder) ImDiv(reqObj *WorkbookFunctionsImDivRequestObject) *WorkbookFunctionsImDivRequestBuilder {
	bb := &WorkbookFunctionsImDivRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imDiv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImDivRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImDivRequestBuilder) Request() *WorkbookFunctionsImDivRequest {
	return &WorkbookFunctionsImDivRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImDivRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImDivRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImDivRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImExp undocumented
func (b *WorkbookFunctionsRequestBuilder) ImExp(reqObj *WorkbookFunctionsImExpRequestObject) *WorkbookFunctionsImExpRequestBuilder {
	bb := &WorkbookFunctionsImExpRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imExp"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImExpRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImExpRequestBuilder) Request() *WorkbookFunctionsImExpRequest {
	return &WorkbookFunctionsImExpRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImExpRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImExpRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImExpRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImLn undocumented
func (b *WorkbookFunctionsRequestBuilder) ImLn(reqObj *WorkbookFunctionsImLnRequestObject) *WorkbookFunctionsImLnRequestBuilder {
	bb := &WorkbookFunctionsImLnRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imLn"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImLnRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImLnRequestBuilder) Request() *WorkbookFunctionsImLnRequest {
	return &WorkbookFunctionsImLnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImLnRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImLnRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImLnRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImLog10 undocumented
func (b *WorkbookFunctionsRequestBuilder) ImLog10(reqObj *WorkbookFunctionsImLog10RequestObject) *WorkbookFunctionsImLog10RequestBuilder {
	bb := &WorkbookFunctionsImLog10RequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imLog10"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImLog10RequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImLog10RequestBuilder) Request() *WorkbookFunctionsImLog10Request {
	return &WorkbookFunctionsImLog10Request{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImLog10Request struct{ BaseRequest }

//
func (r *WorkbookFunctionsImLog10Request) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImLog10Request) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImLog2 undocumented
func (b *WorkbookFunctionsRequestBuilder) ImLog2(reqObj *WorkbookFunctionsImLog2RequestObject) *WorkbookFunctionsImLog2RequestBuilder {
	bb := &WorkbookFunctionsImLog2RequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imLog2"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImLog2RequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImLog2RequestBuilder) Request() *WorkbookFunctionsImLog2Request {
	return &WorkbookFunctionsImLog2Request{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImLog2Request struct{ BaseRequest }

//
func (r *WorkbookFunctionsImLog2Request) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImLog2Request) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImPower undocumented
func (b *WorkbookFunctionsRequestBuilder) ImPower(reqObj *WorkbookFunctionsImPowerRequestObject) *WorkbookFunctionsImPowerRequestBuilder {
	bb := &WorkbookFunctionsImPowerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imPower"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImPowerRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImPowerRequestBuilder) Request() *WorkbookFunctionsImPowerRequest {
	return &WorkbookFunctionsImPowerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImPowerRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImPowerRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImPowerRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImProduct undocumented
func (b *WorkbookFunctionsRequestBuilder) ImProduct(reqObj *WorkbookFunctionsImProductRequestObject) *WorkbookFunctionsImProductRequestBuilder {
	bb := &WorkbookFunctionsImProductRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imProduct"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImProductRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImProductRequestBuilder) Request() *WorkbookFunctionsImProductRequest {
	return &WorkbookFunctionsImProductRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImProductRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImProductRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImProductRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImReal undocumented
func (b *WorkbookFunctionsRequestBuilder) ImReal(reqObj *WorkbookFunctionsImRealRequestObject) *WorkbookFunctionsImRealRequestBuilder {
	bb := &WorkbookFunctionsImRealRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imReal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImRealRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImRealRequestBuilder) Request() *WorkbookFunctionsImRealRequest {
	return &WorkbookFunctionsImRealRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImRealRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImRealRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImRealRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImSec undocumented
func (b *WorkbookFunctionsRequestBuilder) ImSec(reqObj *WorkbookFunctionsImSecRequestObject) *WorkbookFunctionsImSecRequestBuilder {
	bb := &WorkbookFunctionsImSecRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imSec"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImSecRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImSecRequestBuilder) Request() *WorkbookFunctionsImSecRequest {
	return &WorkbookFunctionsImSecRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImSecRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImSecRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImSecRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImSech undocumented
func (b *WorkbookFunctionsRequestBuilder) ImSech(reqObj *WorkbookFunctionsImSechRequestObject) *WorkbookFunctionsImSechRequestBuilder {
	bb := &WorkbookFunctionsImSechRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imSech"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImSechRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImSechRequestBuilder) Request() *WorkbookFunctionsImSechRequest {
	return &WorkbookFunctionsImSechRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImSechRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImSechRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImSechRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImSin undocumented
func (b *WorkbookFunctionsRequestBuilder) ImSin(reqObj *WorkbookFunctionsImSinRequestObject) *WorkbookFunctionsImSinRequestBuilder {
	bb := &WorkbookFunctionsImSinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imSin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImSinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImSinRequestBuilder) Request() *WorkbookFunctionsImSinRequest {
	return &WorkbookFunctionsImSinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImSinRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImSinRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImSinRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImSinh undocumented
func (b *WorkbookFunctionsRequestBuilder) ImSinh(reqObj *WorkbookFunctionsImSinhRequestObject) *WorkbookFunctionsImSinhRequestBuilder {
	bb := &WorkbookFunctionsImSinhRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imSinh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImSinhRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImSinhRequestBuilder) Request() *WorkbookFunctionsImSinhRequest {
	return &WorkbookFunctionsImSinhRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImSinhRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImSinhRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImSinhRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImSqrt undocumented
func (b *WorkbookFunctionsRequestBuilder) ImSqrt(reqObj *WorkbookFunctionsImSqrtRequestObject) *WorkbookFunctionsImSqrtRequestBuilder {
	bb := &WorkbookFunctionsImSqrtRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imSqrt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImSqrtRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImSqrtRequestBuilder) Request() *WorkbookFunctionsImSqrtRequest {
	return &WorkbookFunctionsImSqrtRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImSqrtRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImSqrtRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImSqrtRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImSub undocumented
func (b *WorkbookFunctionsRequestBuilder) ImSub(reqObj *WorkbookFunctionsImSubRequestObject) *WorkbookFunctionsImSubRequestBuilder {
	bb := &WorkbookFunctionsImSubRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imSub"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImSubRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImSubRequestBuilder) Request() *WorkbookFunctionsImSubRequest {
	return &WorkbookFunctionsImSubRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImSubRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImSubRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImSubRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImSum undocumented
func (b *WorkbookFunctionsRequestBuilder) ImSum(reqObj *WorkbookFunctionsImSumRequestObject) *WorkbookFunctionsImSumRequestBuilder {
	bb := &WorkbookFunctionsImSumRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imSum"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImSumRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImSumRequestBuilder) Request() *WorkbookFunctionsImSumRequest {
	return &WorkbookFunctionsImSumRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImSumRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImSumRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImSumRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ImTan undocumented
func (b *WorkbookFunctionsRequestBuilder) ImTan(reqObj *WorkbookFunctionsImTanRequestObject) *WorkbookFunctionsImTanRequestBuilder {
	bb := &WorkbookFunctionsImTanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imTan"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImTanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImTanRequestBuilder) Request() *WorkbookFunctionsImTanRequest {
	return &WorkbookFunctionsImTanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImTanRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImTanRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImTanRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Imaginary undocumented
func (b *WorkbookFunctionsRequestBuilder) Imaginary(reqObj *WorkbookFunctionsImaginaryRequestObject) *WorkbookFunctionsImaginaryRequestBuilder {
	bb := &WorkbookFunctionsImaginaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/imaginary"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsImaginaryRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsImaginaryRequestBuilder) Request() *WorkbookFunctionsImaginaryRequest {
	return &WorkbookFunctionsImaginaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsImaginaryRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsImaginaryRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsImaginaryRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Int undocumented
func (b *WorkbookFunctionsRequestBuilder) Int(reqObj *WorkbookFunctionsIntRequestObject) *WorkbookFunctionsIntRequestBuilder {
	bb := &WorkbookFunctionsIntRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/int"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIntRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIntRequestBuilder) Request() *WorkbookFunctionsIntRequest {
	return &WorkbookFunctionsIntRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIntRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIntRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIntRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IntRate undocumented
func (b *WorkbookFunctionsRequestBuilder) IntRate(reqObj *WorkbookFunctionsIntRateRequestObject) *WorkbookFunctionsIntRateRequestBuilder {
	bb := &WorkbookFunctionsIntRateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/intRate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIntRateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIntRateRequestBuilder) Request() *WorkbookFunctionsIntRateRequest {
	return &WorkbookFunctionsIntRateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIntRateRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIntRateRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIntRateRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Ipmt undocumented
func (b *WorkbookFunctionsRequestBuilder) Ipmt(reqObj *WorkbookFunctionsIpmtRequestObject) *WorkbookFunctionsIpmtRequestBuilder {
	bb := &WorkbookFunctionsIpmtRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ipmt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIpmtRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIpmtRequestBuilder) Request() *WorkbookFunctionsIpmtRequest {
	return &WorkbookFunctionsIpmtRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIpmtRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIpmtRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIpmtRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Irr undocumented
func (b *WorkbookFunctionsRequestBuilder) Irr(reqObj *WorkbookFunctionsIrrRequestObject) *WorkbookFunctionsIrrRequestBuilder {
	bb := &WorkbookFunctionsIrrRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/irr"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIrrRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIrrRequestBuilder) Request() *WorkbookFunctionsIrrRequest {
	return &WorkbookFunctionsIrrRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIrrRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIrrRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIrrRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsErr undocumented
func (b *WorkbookFunctionsRequestBuilder) IsErr(reqObj *WorkbookFunctionsIsErrRequestObject) *WorkbookFunctionsIsErrRequestBuilder {
	bb := &WorkbookFunctionsIsErrRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isErr"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsErrRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsErrRequestBuilder) Request() *WorkbookFunctionsIsErrRequest {
	return &WorkbookFunctionsIsErrRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsErrRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsErrRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsErrRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsError undocumented
func (b *WorkbookFunctionsRequestBuilder) IsError(reqObj *WorkbookFunctionsIsErrorRequestObject) *WorkbookFunctionsIsErrorRequestBuilder {
	bb := &WorkbookFunctionsIsErrorRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isError"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsErrorRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsErrorRequestBuilder) Request() *WorkbookFunctionsIsErrorRequest {
	return &WorkbookFunctionsIsErrorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsErrorRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsErrorRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsErrorRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsEven undocumented
func (b *WorkbookFunctionsRequestBuilder) IsEven(reqObj *WorkbookFunctionsIsEvenRequestObject) *WorkbookFunctionsIsEvenRequestBuilder {
	bb := &WorkbookFunctionsIsEvenRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isEven"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsEvenRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsEvenRequestBuilder) Request() *WorkbookFunctionsIsEvenRequest {
	return &WorkbookFunctionsIsEvenRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsEvenRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsEvenRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsEvenRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsFormula undocumented
func (b *WorkbookFunctionsRequestBuilder) IsFormula(reqObj *WorkbookFunctionsIsFormulaRequestObject) *WorkbookFunctionsIsFormulaRequestBuilder {
	bb := &WorkbookFunctionsIsFormulaRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isFormula"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsFormulaRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsFormulaRequestBuilder) Request() *WorkbookFunctionsIsFormulaRequest {
	return &WorkbookFunctionsIsFormulaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsFormulaRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsFormulaRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsFormulaRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsLogical undocumented
func (b *WorkbookFunctionsRequestBuilder) IsLogical(reqObj *WorkbookFunctionsIsLogicalRequestObject) *WorkbookFunctionsIsLogicalRequestBuilder {
	bb := &WorkbookFunctionsIsLogicalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isLogical"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsLogicalRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsLogicalRequestBuilder) Request() *WorkbookFunctionsIsLogicalRequest {
	return &WorkbookFunctionsIsLogicalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsLogicalRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsLogicalRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsLogicalRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsNA undocumented
func (b *WorkbookFunctionsRequestBuilder) IsNA(reqObj *WorkbookFunctionsIsNARequestObject) *WorkbookFunctionsIsNARequestBuilder {
	bb := &WorkbookFunctionsIsNARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isNA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsNARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsNARequestBuilder) Request() *WorkbookFunctionsIsNARequest {
	return &WorkbookFunctionsIsNARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsNARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsNARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsNARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsNonText undocumented
func (b *WorkbookFunctionsRequestBuilder) IsNonText(reqObj *WorkbookFunctionsIsNonTextRequestObject) *WorkbookFunctionsIsNonTextRequestBuilder {
	bb := &WorkbookFunctionsIsNonTextRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isNonText"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsNonTextRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsNonTextRequestBuilder) Request() *WorkbookFunctionsIsNonTextRequest {
	return &WorkbookFunctionsIsNonTextRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsNonTextRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsNonTextRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsNonTextRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsNumber undocumented
func (b *WorkbookFunctionsRequestBuilder) IsNumber(reqObj *WorkbookFunctionsIsNumberRequestObject) *WorkbookFunctionsIsNumberRequestBuilder {
	bb := &WorkbookFunctionsIsNumberRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isNumber"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsNumberRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsNumberRequestBuilder) Request() *WorkbookFunctionsIsNumberRequest {
	return &WorkbookFunctionsIsNumberRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsNumberRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsNumberRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsNumberRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsOdd undocumented
func (b *WorkbookFunctionsRequestBuilder) IsOdd(reqObj *WorkbookFunctionsIsOddRequestObject) *WorkbookFunctionsIsOddRequestBuilder {
	bb := &WorkbookFunctionsIsOddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isOdd"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsOddRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsOddRequestBuilder) Request() *WorkbookFunctionsIsOddRequest {
	return &WorkbookFunctionsIsOddRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsOddRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsOddRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsOddRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsText undocumented
func (b *WorkbookFunctionsRequestBuilder) IsText(reqObj *WorkbookFunctionsIsTextRequestObject) *WorkbookFunctionsIsTextRequestBuilder {
	bb := &WorkbookFunctionsIsTextRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isText"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsTextRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsTextRequestBuilder) Request() *WorkbookFunctionsIsTextRequest {
	return &WorkbookFunctionsIsTextRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsTextRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsTextRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsTextRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// IsoWeekNum undocumented
func (b *WorkbookFunctionsRequestBuilder) IsoWeekNum(reqObj *WorkbookFunctionsIsoWeekNumRequestObject) *WorkbookFunctionsIsoWeekNumRequestBuilder {
	bb := &WorkbookFunctionsIsoWeekNumRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isoWeekNum"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsoWeekNumRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsoWeekNumRequestBuilder) Request() *WorkbookFunctionsIsoWeekNumRequest {
	return &WorkbookFunctionsIsoWeekNumRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsoWeekNumRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsoWeekNumRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsoWeekNumRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Ispmt undocumented
func (b *WorkbookFunctionsRequestBuilder) Ispmt(reqObj *WorkbookFunctionsIspmtRequestObject) *WorkbookFunctionsIspmtRequestBuilder {
	bb := &WorkbookFunctionsIspmtRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ispmt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIspmtRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIspmtRequestBuilder) Request() *WorkbookFunctionsIspmtRequest {
	return &WorkbookFunctionsIspmtRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIspmtRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIspmtRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIspmtRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Isref undocumented
func (b *WorkbookFunctionsRequestBuilder) Isref(reqObj *WorkbookFunctionsIsrefRequestObject) *WorkbookFunctionsIsrefRequestBuilder {
	bb := &WorkbookFunctionsIsrefRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/isref"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsIsrefRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsIsrefRequestBuilder) Request() *WorkbookFunctionsIsrefRequest {
	return &WorkbookFunctionsIsrefRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsIsrefRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsIsrefRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsIsrefRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Kurt undocumented
func (b *WorkbookFunctionsRequestBuilder) Kurt(reqObj *WorkbookFunctionsKurtRequestObject) *WorkbookFunctionsKurtRequestBuilder {
	bb := &WorkbookFunctionsKurtRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/kurt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsKurtRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsKurtRequestBuilder) Request() *WorkbookFunctionsKurtRequest {
	return &WorkbookFunctionsKurtRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsKurtRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsKurtRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsKurtRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Large undocumented
func (b *WorkbookFunctionsRequestBuilder) Large(reqObj *WorkbookFunctionsLargeRequestObject) *WorkbookFunctionsLargeRequestBuilder {
	bb := &WorkbookFunctionsLargeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/large"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLargeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLargeRequestBuilder) Request() *WorkbookFunctionsLargeRequest {
	return &WorkbookFunctionsLargeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLargeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLargeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLargeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Lcm undocumented
func (b *WorkbookFunctionsRequestBuilder) Lcm(reqObj *WorkbookFunctionsLcmRequestObject) *WorkbookFunctionsLcmRequestBuilder {
	bb := &WorkbookFunctionsLcmRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/lcm"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLcmRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLcmRequestBuilder) Request() *WorkbookFunctionsLcmRequest {
	return &WorkbookFunctionsLcmRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLcmRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLcmRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLcmRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Left undocumented
func (b *WorkbookFunctionsRequestBuilder) Left(reqObj *WorkbookFunctionsLeftRequestObject) *WorkbookFunctionsLeftRequestBuilder {
	bb := &WorkbookFunctionsLeftRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/left"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLeftRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLeftRequestBuilder) Request() *WorkbookFunctionsLeftRequest {
	return &WorkbookFunctionsLeftRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLeftRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLeftRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLeftRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Leftb undocumented
func (b *WorkbookFunctionsRequestBuilder) Leftb(reqObj *WorkbookFunctionsLeftbRequestObject) *WorkbookFunctionsLeftbRequestBuilder {
	bb := &WorkbookFunctionsLeftbRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/leftb"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLeftbRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLeftbRequestBuilder) Request() *WorkbookFunctionsLeftbRequest {
	return &WorkbookFunctionsLeftbRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLeftbRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLeftbRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLeftbRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Len undocumented
func (b *WorkbookFunctionsRequestBuilder) Len(reqObj *WorkbookFunctionsLenRequestObject) *WorkbookFunctionsLenRequestBuilder {
	bb := &WorkbookFunctionsLenRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/len"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLenRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLenRequestBuilder) Request() *WorkbookFunctionsLenRequest {
	return &WorkbookFunctionsLenRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLenRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLenRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLenRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Lenb undocumented
func (b *WorkbookFunctionsRequestBuilder) Lenb(reqObj *WorkbookFunctionsLenbRequestObject) *WorkbookFunctionsLenbRequestBuilder {
	bb := &WorkbookFunctionsLenbRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/lenb"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLenbRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLenbRequestBuilder) Request() *WorkbookFunctionsLenbRequest {
	return &WorkbookFunctionsLenbRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLenbRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLenbRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLenbRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Ln undocumented
func (b *WorkbookFunctionsRequestBuilder) Ln(reqObj *WorkbookFunctionsLnRequestObject) *WorkbookFunctionsLnRequestBuilder {
	bb := &WorkbookFunctionsLnRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ln"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLnRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLnRequestBuilder) Request() *WorkbookFunctionsLnRequest {
	return &WorkbookFunctionsLnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLnRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLnRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLnRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Log undocumented
func (b *WorkbookFunctionsRequestBuilder) Log(reqObj *WorkbookFunctionsLogRequestObject) *WorkbookFunctionsLogRequestBuilder {
	bb := &WorkbookFunctionsLogRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/log"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLogRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLogRequestBuilder) Request() *WorkbookFunctionsLogRequest {
	return &WorkbookFunctionsLogRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLogRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLogRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLogRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Log10 undocumented
func (b *WorkbookFunctionsRequestBuilder) Log10(reqObj *WorkbookFunctionsLog10RequestObject) *WorkbookFunctionsLog10RequestBuilder {
	bb := &WorkbookFunctionsLog10RequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/log10"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLog10RequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLog10RequestBuilder) Request() *WorkbookFunctionsLog10Request {
	return &WorkbookFunctionsLog10Request{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLog10Request struct{ BaseRequest }

//
func (r *WorkbookFunctionsLog10Request) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLog10Request) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// LogNorm_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) LogNorm_Dist(reqObj *WorkbookFunctionsLogNorm_DistRequestObject) *WorkbookFunctionsLogNorm_DistRequestBuilder {
	bb := &WorkbookFunctionsLogNorm_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/logNorm_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLogNorm_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLogNorm_DistRequestBuilder) Request() *WorkbookFunctionsLogNorm_DistRequest {
	return &WorkbookFunctionsLogNorm_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLogNorm_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLogNorm_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLogNorm_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// LogNorm_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) LogNorm_Inv(reqObj *WorkbookFunctionsLogNorm_InvRequestObject) *WorkbookFunctionsLogNorm_InvRequestBuilder {
	bb := &WorkbookFunctionsLogNorm_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/logNorm_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLogNorm_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLogNorm_InvRequestBuilder) Request() *WorkbookFunctionsLogNorm_InvRequest {
	return &WorkbookFunctionsLogNorm_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLogNorm_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLogNorm_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLogNorm_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Lookup undocumented
func (b *WorkbookFunctionsRequestBuilder) Lookup(reqObj *WorkbookFunctionsLookupRequestObject) *WorkbookFunctionsLookupRequestBuilder {
	bb := &WorkbookFunctionsLookupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/lookup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLookupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLookupRequestBuilder) Request() *WorkbookFunctionsLookupRequest {
	return &WorkbookFunctionsLookupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLookupRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLookupRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLookupRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Lower undocumented
func (b *WorkbookFunctionsRequestBuilder) Lower(reqObj *WorkbookFunctionsLowerRequestObject) *WorkbookFunctionsLowerRequestBuilder {
	bb := &WorkbookFunctionsLowerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/lower"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsLowerRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsLowerRequestBuilder) Request() *WorkbookFunctionsLowerRequest {
	return &WorkbookFunctionsLowerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsLowerRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsLowerRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsLowerRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Mduration undocumented
func (b *WorkbookFunctionsRequestBuilder) Mduration(reqObj *WorkbookFunctionsMdurationRequestObject) *WorkbookFunctionsMdurationRequestBuilder {
	bb := &WorkbookFunctionsMdurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/mduration"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMdurationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMdurationRequestBuilder) Request() *WorkbookFunctionsMdurationRequest {
	return &WorkbookFunctionsMdurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMdurationRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMdurationRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMdurationRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Mirr undocumented
func (b *WorkbookFunctionsRequestBuilder) Mirr(reqObj *WorkbookFunctionsMirrRequestObject) *WorkbookFunctionsMirrRequestBuilder {
	bb := &WorkbookFunctionsMirrRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/mirr"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMirrRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMirrRequestBuilder) Request() *WorkbookFunctionsMirrRequest {
	return &WorkbookFunctionsMirrRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMirrRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMirrRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMirrRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Mround undocumented
func (b *WorkbookFunctionsRequestBuilder) Mround(reqObj *WorkbookFunctionsMroundRequestObject) *WorkbookFunctionsMroundRequestBuilder {
	bb := &WorkbookFunctionsMroundRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/mround"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMroundRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMroundRequestBuilder) Request() *WorkbookFunctionsMroundRequest {
	return &WorkbookFunctionsMroundRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMroundRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMroundRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMroundRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Match undocumented
func (b *WorkbookFunctionsRequestBuilder) Match(reqObj *WorkbookFunctionsMatchRequestObject) *WorkbookFunctionsMatchRequestBuilder {
	bb := &WorkbookFunctionsMatchRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/match"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMatchRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMatchRequestBuilder) Request() *WorkbookFunctionsMatchRequest {
	return &WorkbookFunctionsMatchRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMatchRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMatchRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMatchRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Max undocumented
func (b *WorkbookFunctionsRequestBuilder) Max(reqObj *WorkbookFunctionsMaxRequestObject) *WorkbookFunctionsMaxRequestBuilder {
	bb := &WorkbookFunctionsMaxRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/max"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMaxRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMaxRequestBuilder) Request() *WorkbookFunctionsMaxRequest {
	return &WorkbookFunctionsMaxRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMaxRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMaxRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMaxRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// MaxA undocumented
func (b *WorkbookFunctionsRequestBuilder) MaxA(reqObj *WorkbookFunctionsMaxARequestObject) *WorkbookFunctionsMaxARequestBuilder {
	bb := &WorkbookFunctionsMaxARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/maxA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMaxARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMaxARequestBuilder) Request() *WorkbookFunctionsMaxARequest {
	return &WorkbookFunctionsMaxARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMaxARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMaxARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMaxARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Median undocumented
func (b *WorkbookFunctionsRequestBuilder) Median(reqObj *WorkbookFunctionsMedianRequestObject) *WorkbookFunctionsMedianRequestBuilder {
	bb := &WorkbookFunctionsMedianRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/median"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMedianRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMedianRequestBuilder) Request() *WorkbookFunctionsMedianRequest {
	return &WorkbookFunctionsMedianRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMedianRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMedianRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMedianRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Mid undocumented
func (b *WorkbookFunctionsRequestBuilder) Mid(reqObj *WorkbookFunctionsMidRequestObject) *WorkbookFunctionsMidRequestBuilder {
	bb := &WorkbookFunctionsMidRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/mid"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMidRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMidRequestBuilder) Request() *WorkbookFunctionsMidRequest {
	return &WorkbookFunctionsMidRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMidRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMidRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMidRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Midb undocumented
func (b *WorkbookFunctionsRequestBuilder) Midb(reqObj *WorkbookFunctionsMidbRequestObject) *WorkbookFunctionsMidbRequestBuilder {
	bb := &WorkbookFunctionsMidbRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/midb"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMidbRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMidbRequestBuilder) Request() *WorkbookFunctionsMidbRequest {
	return &WorkbookFunctionsMidbRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMidbRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMidbRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMidbRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Min undocumented
func (b *WorkbookFunctionsRequestBuilder) Min(reqObj *WorkbookFunctionsMinRequestObject) *WorkbookFunctionsMinRequestBuilder {
	bb := &WorkbookFunctionsMinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/min"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMinRequestBuilder) Request() *WorkbookFunctionsMinRequest {
	return &WorkbookFunctionsMinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMinRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMinRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMinRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// MinA undocumented
func (b *WorkbookFunctionsRequestBuilder) MinA(reqObj *WorkbookFunctionsMinARequestObject) *WorkbookFunctionsMinARequestBuilder {
	bb := &WorkbookFunctionsMinARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/minA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMinARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMinARequestBuilder) Request() *WorkbookFunctionsMinARequest {
	return &WorkbookFunctionsMinARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMinARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMinARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMinARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Minute undocumented
func (b *WorkbookFunctionsRequestBuilder) Minute(reqObj *WorkbookFunctionsMinuteRequestObject) *WorkbookFunctionsMinuteRequestBuilder {
	bb := &WorkbookFunctionsMinuteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/minute"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMinuteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMinuteRequestBuilder) Request() *WorkbookFunctionsMinuteRequest {
	return &WorkbookFunctionsMinuteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMinuteRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMinuteRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMinuteRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Mod undocumented
func (b *WorkbookFunctionsRequestBuilder) Mod(reqObj *WorkbookFunctionsModRequestObject) *WorkbookFunctionsModRequestBuilder {
	bb := &WorkbookFunctionsModRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/mod"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsModRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsModRequestBuilder) Request() *WorkbookFunctionsModRequest {
	return &WorkbookFunctionsModRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsModRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsModRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsModRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Month undocumented
func (b *WorkbookFunctionsRequestBuilder) Month(reqObj *WorkbookFunctionsMonthRequestObject) *WorkbookFunctionsMonthRequestBuilder {
	bb := &WorkbookFunctionsMonthRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/month"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMonthRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMonthRequestBuilder) Request() *WorkbookFunctionsMonthRequest {
	return &WorkbookFunctionsMonthRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMonthRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMonthRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMonthRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// MultiNomial undocumented
func (b *WorkbookFunctionsRequestBuilder) MultiNomial(reqObj *WorkbookFunctionsMultiNomialRequestObject) *WorkbookFunctionsMultiNomialRequestBuilder {
	bb := &WorkbookFunctionsMultiNomialRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/multiNomial"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsMultiNomialRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsMultiNomialRequestBuilder) Request() *WorkbookFunctionsMultiNomialRequest {
	return &WorkbookFunctionsMultiNomialRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsMultiNomialRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsMultiNomialRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsMultiNomialRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// N undocumented
func (b *WorkbookFunctionsRequestBuilder) N(reqObj *WorkbookFunctionsNRequestObject) *WorkbookFunctionsNRequestBuilder {
	bb := &WorkbookFunctionsNRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/n"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNRequestBuilder) Request() *WorkbookFunctionsNRequest {
	return &WorkbookFunctionsNRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Nper undocumented
func (b *WorkbookFunctionsRequestBuilder) Nper(reqObj *WorkbookFunctionsNperRequestObject) *WorkbookFunctionsNperRequestBuilder {
	bb := &WorkbookFunctionsNperRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/nper"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNperRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNperRequestBuilder) Request() *WorkbookFunctionsNperRequest {
	return &WorkbookFunctionsNperRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNperRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNperRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNperRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Na undocumented
func (b *WorkbookFunctionsRequestBuilder) Na(reqObj *WorkbookFunctionsNaRequestObject) *WorkbookFunctionsNaRequestBuilder {
	bb := &WorkbookFunctionsNaRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/na"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNaRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNaRequestBuilder) Request() *WorkbookFunctionsNaRequest {
	return &WorkbookFunctionsNaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNaRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNaRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNaRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// NegBinom_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) NegBinom_Dist(reqObj *WorkbookFunctionsNegBinom_DistRequestObject) *WorkbookFunctionsNegBinom_DistRequestBuilder {
	bb := &WorkbookFunctionsNegBinom_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/negBinom_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNegBinom_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNegBinom_DistRequestBuilder) Request() *WorkbookFunctionsNegBinom_DistRequest {
	return &WorkbookFunctionsNegBinom_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNegBinom_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNegBinom_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNegBinom_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// NetworkDays undocumented
func (b *WorkbookFunctionsRequestBuilder) NetworkDays(reqObj *WorkbookFunctionsNetworkDaysRequestObject) *WorkbookFunctionsNetworkDaysRequestBuilder {
	bb := &WorkbookFunctionsNetworkDaysRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/networkDays"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNetworkDaysRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNetworkDaysRequestBuilder) Request() *WorkbookFunctionsNetworkDaysRequest {
	return &WorkbookFunctionsNetworkDaysRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNetworkDaysRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNetworkDaysRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNetworkDaysRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// NetworkDays_Intl undocumented
func (b *WorkbookFunctionsRequestBuilder) NetworkDays_Intl(reqObj *WorkbookFunctionsNetworkDays_IntlRequestObject) *WorkbookFunctionsNetworkDays_IntlRequestBuilder {
	bb := &WorkbookFunctionsNetworkDays_IntlRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/networkDays_Intl"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNetworkDays_IntlRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNetworkDays_IntlRequestBuilder) Request() *WorkbookFunctionsNetworkDays_IntlRequest {
	return &WorkbookFunctionsNetworkDays_IntlRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNetworkDays_IntlRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNetworkDays_IntlRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNetworkDays_IntlRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Nominal undocumented
func (b *WorkbookFunctionsRequestBuilder) Nominal(reqObj *WorkbookFunctionsNominalRequestObject) *WorkbookFunctionsNominalRequestBuilder {
	bb := &WorkbookFunctionsNominalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/nominal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNominalRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNominalRequestBuilder) Request() *WorkbookFunctionsNominalRequest {
	return &WorkbookFunctionsNominalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNominalRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNominalRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNominalRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Norm_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) Norm_Dist(reqObj *WorkbookFunctionsNorm_DistRequestObject) *WorkbookFunctionsNorm_DistRequestBuilder {
	bb := &WorkbookFunctionsNorm_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/norm_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNorm_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNorm_DistRequestBuilder) Request() *WorkbookFunctionsNorm_DistRequest {
	return &WorkbookFunctionsNorm_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNorm_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNorm_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNorm_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Norm_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) Norm_Inv(reqObj *WorkbookFunctionsNorm_InvRequestObject) *WorkbookFunctionsNorm_InvRequestBuilder {
	bb := &WorkbookFunctionsNorm_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/norm_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNorm_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNorm_InvRequestBuilder) Request() *WorkbookFunctionsNorm_InvRequest {
	return &WorkbookFunctionsNorm_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNorm_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNorm_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNorm_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Norm_S_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) Norm_S_Dist(reqObj *WorkbookFunctionsNorm_S_DistRequestObject) *WorkbookFunctionsNorm_S_DistRequestBuilder {
	bb := &WorkbookFunctionsNorm_S_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/norm_S_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNorm_S_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNorm_S_DistRequestBuilder) Request() *WorkbookFunctionsNorm_S_DistRequest {
	return &WorkbookFunctionsNorm_S_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNorm_S_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNorm_S_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNorm_S_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Norm_S_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) Norm_S_Inv(reqObj *WorkbookFunctionsNorm_S_InvRequestObject) *WorkbookFunctionsNorm_S_InvRequestBuilder {
	bb := &WorkbookFunctionsNorm_S_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/norm_S_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNorm_S_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNorm_S_InvRequestBuilder) Request() *WorkbookFunctionsNorm_S_InvRequest {
	return &WorkbookFunctionsNorm_S_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNorm_S_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNorm_S_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNorm_S_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Not undocumented
func (b *WorkbookFunctionsRequestBuilder) Not(reqObj *WorkbookFunctionsNotRequestObject) *WorkbookFunctionsNotRequestBuilder {
	bb := &WorkbookFunctionsNotRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/not"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNotRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNotRequestBuilder) Request() *WorkbookFunctionsNotRequest {
	return &WorkbookFunctionsNotRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNotRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNotRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNotRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Now undocumented
func (b *WorkbookFunctionsRequestBuilder) Now(reqObj *WorkbookFunctionsNowRequestObject) *WorkbookFunctionsNowRequestBuilder {
	bb := &WorkbookFunctionsNowRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/now"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNowRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNowRequestBuilder) Request() *WorkbookFunctionsNowRequest {
	return &WorkbookFunctionsNowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNowRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNowRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNowRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Npv undocumented
func (b *WorkbookFunctionsRequestBuilder) Npv(reqObj *WorkbookFunctionsNpvRequestObject) *WorkbookFunctionsNpvRequestBuilder {
	bb := &WorkbookFunctionsNpvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/npv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNpvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNpvRequestBuilder) Request() *WorkbookFunctionsNpvRequest {
	return &WorkbookFunctionsNpvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNpvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNpvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNpvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// NumberValue undocumented
func (b *WorkbookFunctionsRequestBuilder) NumberValue(reqObj *WorkbookFunctionsNumberValueRequestObject) *WorkbookFunctionsNumberValueRequestBuilder {
	bb := &WorkbookFunctionsNumberValueRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/numberValue"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsNumberValueRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsNumberValueRequestBuilder) Request() *WorkbookFunctionsNumberValueRequest {
	return &WorkbookFunctionsNumberValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsNumberValueRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsNumberValueRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsNumberValueRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Oct2Bin undocumented
func (b *WorkbookFunctionsRequestBuilder) Oct2Bin(reqObj *WorkbookFunctionsOct2BinRequestObject) *WorkbookFunctionsOct2BinRequestBuilder {
	bb := &WorkbookFunctionsOct2BinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/oct2Bin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOct2BinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOct2BinRequestBuilder) Request() *WorkbookFunctionsOct2BinRequest {
	return &WorkbookFunctionsOct2BinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOct2BinRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOct2BinRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOct2BinRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Oct2Dec undocumented
func (b *WorkbookFunctionsRequestBuilder) Oct2Dec(reqObj *WorkbookFunctionsOct2DecRequestObject) *WorkbookFunctionsOct2DecRequestBuilder {
	bb := &WorkbookFunctionsOct2DecRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/oct2Dec"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOct2DecRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOct2DecRequestBuilder) Request() *WorkbookFunctionsOct2DecRequest {
	return &WorkbookFunctionsOct2DecRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOct2DecRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOct2DecRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOct2DecRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Oct2Hex undocumented
func (b *WorkbookFunctionsRequestBuilder) Oct2Hex(reqObj *WorkbookFunctionsOct2HexRequestObject) *WorkbookFunctionsOct2HexRequestBuilder {
	bb := &WorkbookFunctionsOct2HexRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/oct2Hex"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOct2HexRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOct2HexRequestBuilder) Request() *WorkbookFunctionsOct2HexRequest {
	return &WorkbookFunctionsOct2HexRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOct2HexRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOct2HexRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOct2HexRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Odd undocumented
func (b *WorkbookFunctionsRequestBuilder) Odd(reqObj *WorkbookFunctionsOddRequestObject) *WorkbookFunctionsOddRequestBuilder {
	bb := &WorkbookFunctionsOddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/odd"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOddRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOddRequestBuilder) Request() *WorkbookFunctionsOddRequest {
	return &WorkbookFunctionsOddRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOddRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOddRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOddRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// OddFPrice undocumented
func (b *WorkbookFunctionsRequestBuilder) OddFPrice(reqObj *WorkbookFunctionsOddFPriceRequestObject) *WorkbookFunctionsOddFPriceRequestBuilder {
	bb := &WorkbookFunctionsOddFPriceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/oddFPrice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOddFPriceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOddFPriceRequestBuilder) Request() *WorkbookFunctionsOddFPriceRequest {
	return &WorkbookFunctionsOddFPriceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOddFPriceRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOddFPriceRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOddFPriceRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// OddFYield undocumented
func (b *WorkbookFunctionsRequestBuilder) OddFYield(reqObj *WorkbookFunctionsOddFYieldRequestObject) *WorkbookFunctionsOddFYieldRequestBuilder {
	bb := &WorkbookFunctionsOddFYieldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/oddFYield"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOddFYieldRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOddFYieldRequestBuilder) Request() *WorkbookFunctionsOddFYieldRequest {
	return &WorkbookFunctionsOddFYieldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOddFYieldRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOddFYieldRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOddFYieldRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// OddLPrice undocumented
func (b *WorkbookFunctionsRequestBuilder) OddLPrice(reqObj *WorkbookFunctionsOddLPriceRequestObject) *WorkbookFunctionsOddLPriceRequestBuilder {
	bb := &WorkbookFunctionsOddLPriceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/oddLPrice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOddLPriceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOddLPriceRequestBuilder) Request() *WorkbookFunctionsOddLPriceRequest {
	return &WorkbookFunctionsOddLPriceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOddLPriceRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOddLPriceRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOddLPriceRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// OddLYield undocumented
func (b *WorkbookFunctionsRequestBuilder) OddLYield(reqObj *WorkbookFunctionsOddLYieldRequestObject) *WorkbookFunctionsOddLYieldRequestBuilder {
	bb := &WorkbookFunctionsOddLYieldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/oddLYield"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOddLYieldRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOddLYieldRequestBuilder) Request() *WorkbookFunctionsOddLYieldRequest {
	return &WorkbookFunctionsOddLYieldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOddLYieldRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOddLYieldRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOddLYieldRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Or undocumented
func (b *WorkbookFunctionsRequestBuilder) Or(reqObj *WorkbookFunctionsOrRequestObject) *WorkbookFunctionsOrRequestBuilder {
	bb := &WorkbookFunctionsOrRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/or"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsOrRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsOrRequestBuilder) Request() *WorkbookFunctionsOrRequest {
	return &WorkbookFunctionsOrRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsOrRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsOrRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsOrRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Pduration undocumented
func (b *WorkbookFunctionsRequestBuilder) Pduration(reqObj *WorkbookFunctionsPdurationRequestObject) *WorkbookFunctionsPdurationRequestBuilder {
	bb := &WorkbookFunctionsPdurationRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/pduration"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPdurationRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPdurationRequestBuilder) Request() *WorkbookFunctionsPdurationRequest {
	return &WorkbookFunctionsPdurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPdurationRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPdurationRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPdurationRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// PercentRank_Exc undocumented
func (b *WorkbookFunctionsRequestBuilder) PercentRank_Exc(reqObj *WorkbookFunctionsPercentRank_ExcRequestObject) *WorkbookFunctionsPercentRank_ExcRequestBuilder {
	bb := &WorkbookFunctionsPercentRank_ExcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/percentRank_Exc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPercentRank_ExcRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPercentRank_ExcRequestBuilder) Request() *WorkbookFunctionsPercentRank_ExcRequest {
	return &WorkbookFunctionsPercentRank_ExcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPercentRank_ExcRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPercentRank_ExcRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPercentRank_ExcRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// PercentRank_Inc undocumented
func (b *WorkbookFunctionsRequestBuilder) PercentRank_Inc(reqObj *WorkbookFunctionsPercentRank_IncRequestObject) *WorkbookFunctionsPercentRank_IncRequestBuilder {
	bb := &WorkbookFunctionsPercentRank_IncRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/percentRank_Inc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPercentRank_IncRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPercentRank_IncRequestBuilder) Request() *WorkbookFunctionsPercentRank_IncRequest {
	return &WorkbookFunctionsPercentRank_IncRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPercentRank_IncRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPercentRank_IncRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPercentRank_IncRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Percentile_Exc undocumented
func (b *WorkbookFunctionsRequestBuilder) Percentile_Exc(reqObj *WorkbookFunctionsPercentile_ExcRequestObject) *WorkbookFunctionsPercentile_ExcRequestBuilder {
	bb := &WorkbookFunctionsPercentile_ExcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/percentile_Exc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPercentile_ExcRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPercentile_ExcRequestBuilder) Request() *WorkbookFunctionsPercentile_ExcRequest {
	return &WorkbookFunctionsPercentile_ExcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPercentile_ExcRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPercentile_ExcRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPercentile_ExcRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Percentile_Inc undocumented
func (b *WorkbookFunctionsRequestBuilder) Percentile_Inc(reqObj *WorkbookFunctionsPercentile_IncRequestObject) *WorkbookFunctionsPercentile_IncRequestBuilder {
	bb := &WorkbookFunctionsPercentile_IncRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/percentile_Inc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPercentile_IncRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPercentile_IncRequestBuilder) Request() *WorkbookFunctionsPercentile_IncRequest {
	return &WorkbookFunctionsPercentile_IncRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPercentile_IncRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPercentile_IncRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPercentile_IncRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Permut undocumented
func (b *WorkbookFunctionsRequestBuilder) Permut(reqObj *WorkbookFunctionsPermutRequestObject) *WorkbookFunctionsPermutRequestBuilder {
	bb := &WorkbookFunctionsPermutRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/permut"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPermutRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPermutRequestBuilder) Request() *WorkbookFunctionsPermutRequest {
	return &WorkbookFunctionsPermutRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPermutRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPermutRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPermutRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Permutationa undocumented
func (b *WorkbookFunctionsRequestBuilder) Permutationa(reqObj *WorkbookFunctionsPermutationaRequestObject) *WorkbookFunctionsPermutationaRequestBuilder {
	bb := &WorkbookFunctionsPermutationaRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/permutationa"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPermutationaRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPermutationaRequestBuilder) Request() *WorkbookFunctionsPermutationaRequest {
	return &WorkbookFunctionsPermutationaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPermutationaRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPermutationaRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPermutationaRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Phi undocumented
func (b *WorkbookFunctionsRequestBuilder) Phi(reqObj *WorkbookFunctionsPhiRequestObject) *WorkbookFunctionsPhiRequestBuilder {
	bb := &WorkbookFunctionsPhiRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/phi"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPhiRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPhiRequestBuilder) Request() *WorkbookFunctionsPhiRequest {
	return &WorkbookFunctionsPhiRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPhiRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPhiRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPhiRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Pi undocumented
func (b *WorkbookFunctionsRequestBuilder) Pi(reqObj *WorkbookFunctionsPiRequestObject) *WorkbookFunctionsPiRequestBuilder {
	bb := &WorkbookFunctionsPiRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/pi"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPiRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPiRequestBuilder) Request() *WorkbookFunctionsPiRequest {
	return &WorkbookFunctionsPiRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPiRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPiRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPiRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Pmt undocumented
func (b *WorkbookFunctionsRequestBuilder) Pmt(reqObj *WorkbookFunctionsPmtRequestObject) *WorkbookFunctionsPmtRequestBuilder {
	bb := &WorkbookFunctionsPmtRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/pmt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPmtRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPmtRequestBuilder) Request() *WorkbookFunctionsPmtRequest {
	return &WorkbookFunctionsPmtRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPmtRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPmtRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPmtRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Poisson_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) Poisson_Dist(reqObj *WorkbookFunctionsPoisson_DistRequestObject) *WorkbookFunctionsPoisson_DistRequestBuilder {
	bb := &WorkbookFunctionsPoisson_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/poisson_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPoisson_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPoisson_DistRequestBuilder) Request() *WorkbookFunctionsPoisson_DistRequest {
	return &WorkbookFunctionsPoisson_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPoisson_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPoisson_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPoisson_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Power undocumented
func (b *WorkbookFunctionsRequestBuilder) Power(reqObj *WorkbookFunctionsPowerRequestObject) *WorkbookFunctionsPowerRequestBuilder {
	bb := &WorkbookFunctionsPowerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/power"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPowerRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPowerRequestBuilder) Request() *WorkbookFunctionsPowerRequest {
	return &WorkbookFunctionsPowerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPowerRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPowerRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPowerRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Ppmt undocumented
func (b *WorkbookFunctionsRequestBuilder) Ppmt(reqObj *WorkbookFunctionsPpmtRequestObject) *WorkbookFunctionsPpmtRequestBuilder {
	bb := &WorkbookFunctionsPpmtRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/ppmt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPpmtRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPpmtRequestBuilder) Request() *WorkbookFunctionsPpmtRequest {
	return &WorkbookFunctionsPpmtRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPpmtRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPpmtRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPpmtRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Price undocumented
func (b *WorkbookFunctionsRequestBuilder) Price(reqObj *WorkbookFunctionsPriceRequestObject) *WorkbookFunctionsPriceRequestBuilder {
	bb := &WorkbookFunctionsPriceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/price"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPriceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPriceRequestBuilder) Request() *WorkbookFunctionsPriceRequest {
	return &WorkbookFunctionsPriceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPriceRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPriceRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPriceRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// PriceDisc undocumented
func (b *WorkbookFunctionsRequestBuilder) PriceDisc(reqObj *WorkbookFunctionsPriceDiscRequestObject) *WorkbookFunctionsPriceDiscRequestBuilder {
	bb := &WorkbookFunctionsPriceDiscRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/priceDisc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPriceDiscRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPriceDiscRequestBuilder) Request() *WorkbookFunctionsPriceDiscRequest {
	return &WorkbookFunctionsPriceDiscRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPriceDiscRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPriceDiscRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPriceDiscRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// PriceMat undocumented
func (b *WorkbookFunctionsRequestBuilder) PriceMat(reqObj *WorkbookFunctionsPriceMatRequestObject) *WorkbookFunctionsPriceMatRequestBuilder {
	bb := &WorkbookFunctionsPriceMatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/priceMat"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPriceMatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPriceMatRequestBuilder) Request() *WorkbookFunctionsPriceMatRequest {
	return &WorkbookFunctionsPriceMatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPriceMatRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPriceMatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPriceMatRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Product undocumented
func (b *WorkbookFunctionsRequestBuilder) Product(reqObj *WorkbookFunctionsProductRequestObject) *WorkbookFunctionsProductRequestBuilder {
	bb := &WorkbookFunctionsProductRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/product"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsProductRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsProductRequestBuilder) Request() *WorkbookFunctionsProductRequest {
	return &WorkbookFunctionsProductRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsProductRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsProductRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsProductRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Proper undocumented
func (b *WorkbookFunctionsRequestBuilder) Proper(reqObj *WorkbookFunctionsProperRequestObject) *WorkbookFunctionsProperRequestBuilder {
	bb := &WorkbookFunctionsProperRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/proper"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsProperRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsProperRequestBuilder) Request() *WorkbookFunctionsProperRequest {
	return &WorkbookFunctionsProperRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsProperRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsProperRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsProperRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Pv undocumented
func (b *WorkbookFunctionsRequestBuilder) Pv(reqObj *WorkbookFunctionsPvRequestObject) *WorkbookFunctionsPvRequestBuilder {
	bb := &WorkbookFunctionsPvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/pv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsPvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsPvRequestBuilder) Request() *WorkbookFunctionsPvRequest {
	return &WorkbookFunctionsPvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsPvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsPvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsPvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Quartile_Exc undocumented
func (b *WorkbookFunctionsRequestBuilder) Quartile_Exc(reqObj *WorkbookFunctionsQuartile_ExcRequestObject) *WorkbookFunctionsQuartile_ExcRequestBuilder {
	bb := &WorkbookFunctionsQuartile_ExcRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/quartile_Exc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsQuartile_ExcRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsQuartile_ExcRequestBuilder) Request() *WorkbookFunctionsQuartile_ExcRequest {
	return &WorkbookFunctionsQuartile_ExcRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsQuartile_ExcRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsQuartile_ExcRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsQuartile_ExcRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Quartile_Inc undocumented
func (b *WorkbookFunctionsRequestBuilder) Quartile_Inc(reqObj *WorkbookFunctionsQuartile_IncRequestObject) *WorkbookFunctionsQuartile_IncRequestBuilder {
	bb := &WorkbookFunctionsQuartile_IncRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/quartile_Inc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsQuartile_IncRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsQuartile_IncRequestBuilder) Request() *WorkbookFunctionsQuartile_IncRequest {
	return &WorkbookFunctionsQuartile_IncRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsQuartile_IncRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsQuartile_IncRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsQuartile_IncRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Quotient undocumented
func (b *WorkbookFunctionsRequestBuilder) Quotient(reqObj *WorkbookFunctionsQuotientRequestObject) *WorkbookFunctionsQuotientRequestBuilder {
	bb := &WorkbookFunctionsQuotientRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/quotient"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsQuotientRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsQuotientRequestBuilder) Request() *WorkbookFunctionsQuotientRequest {
	return &WorkbookFunctionsQuotientRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsQuotientRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsQuotientRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsQuotientRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Radians undocumented
func (b *WorkbookFunctionsRequestBuilder) Radians(reqObj *WorkbookFunctionsRadiansRequestObject) *WorkbookFunctionsRadiansRequestBuilder {
	bb := &WorkbookFunctionsRadiansRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/radians"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRadiansRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRadiansRequestBuilder) Request() *WorkbookFunctionsRadiansRequest {
	return &WorkbookFunctionsRadiansRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRadiansRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRadiansRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRadiansRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Rand undocumented
func (b *WorkbookFunctionsRequestBuilder) Rand(reqObj *WorkbookFunctionsRandRequestObject) *WorkbookFunctionsRandRequestBuilder {
	bb := &WorkbookFunctionsRandRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rand"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRandRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRandRequestBuilder) Request() *WorkbookFunctionsRandRequest {
	return &WorkbookFunctionsRandRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRandRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRandRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRandRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// RandBetween undocumented
func (b *WorkbookFunctionsRequestBuilder) RandBetween(reqObj *WorkbookFunctionsRandBetweenRequestObject) *WorkbookFunctionsRandBetweenRequestBuilder {
	bb := &WorkbookFunctionsRandBetweenRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/randBetween"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRandBetweenRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRandBetweenRequestBuilder) Request() *WorkbookFunctionsRandBetweenRequest {
	return &WorkbookFunctionsRandBetweenRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRandBetweenRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRandBetweenRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRandBetweenRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Rank_Avg undocumented
func (b *WorkbookFunctionsRequestBuilder) Rank_Avg(reqObj *WorkbookFunctionsRank_AvgRequestObject) *WorkbookFunctionsRank_AvgRequestBuilder {
	bb := &WorkbookFunctionsRank_AvgRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rank_Avg"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRank_AvgRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRank_AvgRequestBuilder) Request() *WorkbookFunctionsRank_AvgRequest {
	return &WorkbookFunctionsRank_AvgRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRank_AvgRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRank_AvgRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRank_AvgRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Rank_Eq undocumented
func (b *WorkbookFunctionsRequestBuilder) Rank_Eq(reqObj *WorkbookFunctionsRank_EqRequestObject) *WorkbookFunctionsRank_EqRequestBuilder {
	bb := &WorkbookFunctionsRank_EqRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rank_Eq"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRank_EqRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRank_EqRequestBuilder) Request() *WorkbookFunctionsRank_EqRequest {
	return &WorkbookFunctionsRank_EqRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRank_EqRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRank_EqRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRank_EqRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Rate undocumented
func (b *WorkbookFunctionsRequestBuilder) Rate(reqObj *WorkbookFunctionsRateRequestObject) *WorkbookFunctionsRateRequestBuilder {
	bb := &WorkbookFunctionsRateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRateRequestBuilder) Request() *WorkbookFunctionsRateRequest {
	return &WorkbookFunctionsRateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRateRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRateRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRateRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Received undocumented
func (b *WorkbookFunctionsRequestBuilder) Received(reqObj *WorkbookFunctionsReceivedRequestObject) *WorkbookFunctionsReceivedRequestBuilder {
	bb := &WorkbookFunctionsReceivedRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/received"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsReceivedRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsReceivedRequestBuilder) Request() *WorkbookFunctionsReceivedRequest {
	return &WorkbookFunctionsReceivedRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsReceivedRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsReceivedRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsReceivedRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Replace undocumented
func (b *WorkbookFunctionsRequestBuilder) Replace(reqObj *WorkbookFunctionsReplaceRequestObject) *WorkbookFunctionsReplaceRequestBuilder {
	bb := &WorkbookFunctionsReplaceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/replace"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsReplaceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsReplaceRequestBuilder) Request() *WorkbookFunctionsReplaceRequest {
	return &WorkbookFunctionsReplaceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsReplaceRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsReplaceRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsReplaceRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// ReplaceB undocumented
func (b *WorkbookFunctionsRequestBuilder) ReplaceB(reqObj *WorkbookFunctionsReplaceBRequestObject) *WorkbookFunctionsReplaceBRequestBuilder {
	bb := &WorkbookFunctionsReplaceBRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/replaceB"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsReplaceBRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsReplaceBRequestBuilder) Request() *WorkbookFunctionsReplaceBRequest {
	return &WorkbookFunctionsReplaceBRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsReplaceBRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsReplaceBRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsReplaceBRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Rept undocumented
func (b *WorkbookFunctionsRequestBuilder) Rept(reqObj *WorkbookFunctionsReptRequestObject) *WorkbookFunctionsReptRequestBuilder {
	bb := &WorkbookFunctionsReptRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rept"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsReptRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsReptRequestBuilder) Request() *WorkbookFunctionsReptRequest {
	return &WorkbookFunctionsReptRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsReptRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsReptRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsReptRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Right undocumented
func (b *WorkbookFunctionsRequestBuilder) Right(reqObj *WorkbookFunctionsRightRequestObject) *WorkbookFunctionsRightRequestBuilder {
	bb := &WorkbookFunctionsRightRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/right"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRightRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRightRequestBuilder) Request() *WorkbookFunctionsRightRequest {
	return &WorkbookFunctionsRightRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRightRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRightRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRightRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Rightb undocumented
func (b *WorkbookFunctionsRequestBuilder) Rightb(reqObj *WorkbookFunctionsRightbRequestObject) *WorkbookFunctionsRightbRequestBuilder {
	bb := &WorkbookFunctionsRightbRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rightb"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRightbRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRightbRequestBuilder) Request() *WorkbookFunctionsRightbRequest {
	return &WorkbookFunctionsRightbRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRightbRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRightbRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRightbRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Roman undocumented
func (b *WorkbookFunctionsRequestBuilder) Roman(reqObj *WorkbookFunctionsRomanRequestObject) *WorkbookFunctionsRomanRequestBuilder {
	bb := &WorkbookFunctionsRomanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/roman"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRomanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRomanRequestBuilder) Request() *WorkbookFunctionsRomanRequest {
	return &WorkbookFunctionsRomanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRomanRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRomanRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRomanRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Round undocumented
func (b *WorkbookFunctionsRequestBuilder) Round(reqObj *WorkbookFunctionsRoundRequestObject) *WorkbookFunctionsRoundRequestBuilder {
	bb := &WorkbookFunctionsRoundRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/round"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRoundRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRoundRequestBuilder) Request() *WorkbookFunctionsRoundRequest {
	return &WorkbookFunctionsRoundRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRoundRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRoundRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRoundRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// RoundDown undocumented
func (b *WorkbookFunctionsRequestBuilder) RoundDown(reqObj *WorkbookFunctionsRoundDownRequestObject) *WorkbookFunctionsRoundDownRequestBuilder {
	bb := &WorkbookFunctionsRoundDownRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/roundDown"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRoundDownRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRoundDownRequestBuilder) Request() *WorkbookFunctionsRoundDownRequest {
	return &WorkbookFunctionsRoundDownRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRoundDownRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRoundDownRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRoundDownRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// RoundUp undocumented
func (b *WorkbookFunctionsRequestBuilder) RoundUp(reqObj *WorkbookFunctionsRoundUpRequestObject) *WorkbookFunctionsRoundUpRequestBuilder {
	bb := &WorkbookFunctionsRoundUpRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/roundUp"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRoundUpRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRoundUpRequestBuilder) Request() *WorkbookFunctionsRoundUpRequest {
	return &WorkbookFunctionsRoundUpRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRoundUpRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRoundUpRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRoundUpRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Rows undocumented
func (b *WorkbookFunctionsRequestBuilder) Rows(reqObj *WorkbookFunctionsRowsRequestObject) *WorkbookFunctionsRowsRequestBuilder {
	bb := &WorkbookFunctionsRowsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rows"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRowsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRowsRequestBuilder) Request() *WorkbookFunctionsRowsRequest {
	return &WorkbookFunctionsRowsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRowsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRowsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRowsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Rri undocumented
func (b *WorkbookFunctionsRequestBuilder) Rri(reqObj *WorkbookFunctionsRriRequestObject) *WorkbookFunctionsRriRequestBuilder {
	bb := &WorkbookFunctionsRriRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rri"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsRriRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsRriRequestBuilder) Request() *WorkbookFunctionsRriRequest {
	return &WorkbookFunctionsRriRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsRriRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsRriRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsRriRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sec undocumented
func (b *WorkbookFunctionsRequestBuilder) Sec(reqObj *WorkbookFunctionsSecRequestObject) *WorkbookFunctionsSecRequestBuilder {
	bb := &WorkbookFunctionsSecRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sec"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSecRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSecRequestBuilder) Request() *WorkbookFunctionsSecRequest {
	return &WorkbookFunctionsSecRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSecRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSecRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSecRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sech undocumented
func (b *WorkbookFunctionsRequestBuilder) Sech(reqObj *WorkbookFunctionsSechRequestObject) *WorkbookFunctionsSechRequestBuilder {
	bb := &WorkbookFunctionsSechRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sech"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSechRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSechRequestBuilder) Request() *WorkbookFunctionsSechRequest {
	return &WorkbookFunctionsSechRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSechRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSechRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSechRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Second undocumented
func (b *WorkbookFunctionsRequestBuilder) Second(reqObj *WorkbookFunctionsSecondRequestObject) *WorkbookFunctionsSecondRequestBuilder {
	bb := &WorkbookFunctionsSecondRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/second"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSecondRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSecondRequestBuilder) Request() *WorkbookFunctionsSecondRequest {
	return &WorkbookFunctionsSecondRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSecondRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSecondRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSecondRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// SeriesSum undocumented
func (b *WorkbookFunctionsRequestBuilder) SeriesSum(reqObj *WorkbookFunctionsSeriesSumRequestObject) *WorkbookFunctionsSeriesSumRequestBuilder {
	bb := &WorkbookFunctionsSeriesSumRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/seriesSum"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSeriesSumRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSeriesSumRequestBuilder) Request() *WorkbookFunctionsSeriesSumRequest {
	return &WorkbookFunctionsSeriesSumRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSeriesSumRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSeriesSumRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSeriesSumRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sheet undocumented
func (b *WorkbookFunctionsRequestBuilder) Sheet(reqObj *WorkbookFunctionsSheetRequestObject) *WorkbookFunctionsSheetRequestBuilder {
	bb := &WorkbookFunctionsSheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sheet"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSheetRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSheetRequestBuilder) Request() *WorkbookFunctionsSheetRequest {
	return &WorkbookFunctionsSheetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSheetRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSheetRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSheetRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sheets undocumented
func (b *WorkbookFunctionsRequestBuilder) Sheets(reqObj *WorkbookFunctionsSheetsRequestObject) *WorkbookFunctionsSheetsRequestBuilder {
	bb := &WorkbookFunctionsSheetsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sheets"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSheetsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSheetsRequestBuilder) Request() *WorkbookFunctionsSheetsRequest {
	return &WorkbookFunctionsSheetsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSheetsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSheetsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSheetsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sign undocumented
func (b *WorkbookFunctionsRequestBuilder) Sign(reqObj *WorkbookFunctionsSignRequestObject) *WorkbookFunctionsSignRequestBuilder {
	bb := &WorkbookFunctionsSignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSignRequestBuilder) Request() *WorkbookFunctionsSignRequest {
	return &WorkbookFunctionsSignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSignRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSignRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSignRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sin undocumented
func (b *WorkbookFunctionsRequestBuilder) Sin(reqObj *WorkbookFunctionsSinRequestObject) *WorkbookFunctionsSinRequestBuilder {
	bb := &WorkbookFunctionsSinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSinRequestBuilder) Request() *WorkbookFunctionsSinRequest {
	return &WorkbookFunctionsSinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSinRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSinRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSinRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sinh undocumented
func (b *WorkbookFunctionsRequestBuilder) Sinh(reqObj *WorkbookFunctionsSinhRequestObject) *WorkbookFunctionsSinhRequestBuilder {
	bb := &WorkbookFunctionsSinhRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sinh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSinhRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSinhRequestBuilder) Request() *WorkbookFunctionsSinhRequest {
	return &WorkbookFunctionsSinhRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSinhRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSinhRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSinhRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Skew undocumented
func (b *WorkbookFunctionsRequestBuilder) Skew(reqObj *WorkbookFunctionsSkewRequestObject) *WorkbookFunctionsSkewRequestBuilder {
	bb := &WorkbookFunctionsSkewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/skew"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSkewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSkewRequestBuilder) Request() *WorkbookFunctionsSkewRequest {
	return &WorkbookFunctionsSkewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSkewRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSkewRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSkewRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Skew_p undocumented
func (b *WorkbookFunctionsRequestBuilder) Skew_p(reqObj *WorkbookFunctionsSkew_pRequestObject) *WorkbookFunctionsSkew_pRequestBuilder {
	bb := &WorkbookFunctionsSkew_pRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/skew_p"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSkew_pRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSkew_pRequestBuilder) Request() *WorkbookFunctionsSkew_pRequest {
	return &WorkbookFunctionsSkew_pRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSkew_pRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSkew_pRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSkew_pRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sln undocumented
func (b *WorkbookFunctionsRequestBuilder) Sln(reqObj *WorkbookFunctionsSlnRequestObject) *WorkbookFunctionsSlnRequestBuilder {
	bb := &WorkbookFunctionsSlnRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sln"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSlnRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSlnRequestBuilder) Request() *WorkbookFunctionsSlnRequest {
	return &WorkbookFunctionsSlnRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSlnRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSlnRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSlnRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Small undocumented
func (b *WorkbookFunctionsRequestBuilder) Small(reqObj *WorkbookFunctionsSmallRequestObject) *WorkbookFunctionsSmallRequestBuilder {
	bb := &WorkbookFunctionsSmallRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/small"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSmallRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSmallRequestBuilder) Request() *WorkbookFunctionsSmallRequest {
	return &WorkbookFunctionsSmallRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSmallRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSmallRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSmallRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sqrt undocumented
func (b *WorkbookFunctionsRequestBuilder) Sqrt(reqObj *WorkbookFunctionsSqrtRequestObject) *WorkbookFunctionsSqrtRequestBuilder {
	bb := &WorkbookFunctionsSqrtRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sqrt"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSqrtRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSqrtRequestBuilder) Request() *WorkbookFunctionsSqrtRequest {
	return &WorkbookFunctionsSqrtRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSqrtRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSqrtRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSqrtRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// SqrtPi undocumented
func (b *WorkbookFunctionsRequestBuilder) SqrtPi(reqObj *WorkbookFunctionsSqrtPiRequestObject) *WorkbookFunctionsSqrtPiRequestBuilder {
	bb := &WorkbookFunctionsSqrtPiRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sqrtPi"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSqrtPiRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSqrtPiRequestBuilder) Request() *WorkbookFunctionsSqrtPiRequest {
	return &WorkbookFunctionsSqrtPiRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSqrtPiRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSqrtPiRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSqrtPiRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// StDevA undocumented
func (b *WorkbookFunctionsRequestBuilder) StDevA(reqObj *WorkbookFunctionsStDevARequestObject) *WorkbookFunctionsStDevARequestBuilder {
	bb := &WorkbookFunctionsStDevARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/stDevA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsStDevARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsStDevARequestBuilder) Request() *WorkbookFunctionsStDevARequest {
	return &WorkbookFunctionsStDevARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsStDevARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsStDevARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsStDevARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// StDevPA undocumented
func (b *WorkbookFunctionsRequestBuilder) StDevPA(reqObj *WorkbookFunctionsStDevPARequestObject) *WorkbookFunctionsStDevPARequestBuilder {
	bb := &WorkbookFunctionsStDevPARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/stDevPA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsStDevPARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsStDevPARequestBuilder) Request() *WorkbookFunctionsStDevPARequest {
	return &WorkbookFunctionsStDevPARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsStDevPARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsStDevPARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsStDevPARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// StDev_P undocumented
func (b *WorkbookFunctionsRequestBuilder) StDev_P(reqObj *WorkbookFunctionsStDev_PRequestObject) *WorkbookFunctionsStDev_PRequestBuilder {
	bb := &WorkbookFunctionsStDev_PRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/stDev_P"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsStDev_PRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsStDev_PRequestBuilder) Request() *WorkbookFunctionsStDev_PRequest {
	return &WorkbookFunctionsStDev_PRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsStDev_PRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsStDev_PRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsStDev_PRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// StDev_S undocumented
func (b *WorkbookFunctionsRequestBuilder) StDev_S(reqObj *WorkbookFunctionsStDev_SRequestObject) *WorkbookFunctionsStDev_SRequestBuilder {
	bb := &WorkbookFunctionsStDev_SRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/stDev_S"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsStDev_SRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsStDev_SRequestBuilder) Request() *WorkbookFunctionsStDev_SRequest {
	return &WorkbookFunctionsStDev_SRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsStDev_SRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsStDev_SRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsStDev_SRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Standardize undocumented
func (b *WorkbookFunctionsRequestBuilder) Standardize(reqObj *WorkbookFunctionsStandardizeRequestObject) *WorkbookFunctionsStandardizeRequestBuilder {
	bb := &WorkbookFunctionsStandardizeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/standardize"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsStandardizeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsStandardizeRequestBuilder) Request() *WorkbookFunctionsStandardizeRequest {
	return &WorkbookFunctionsStandardizeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsStandardizeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsStandardizeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsStandardizeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Substitute undocumented
func (b *WorkbookFunctionsRequestBuilder) Substitute(reqObj *WorkbookFunctionsSubstituteRequestObject) *WorkbookFunctionsSubstituteRequestBuilder {
	bb := &WorkbookFunctionsSubstituteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/substitute"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSubstituteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSubstituteRequestBuilder) Request() *WorkbookFunctionsSubstituteRequest {
	return &WorkbookFunctionsSubstituteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSubstituteRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSubstituteRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSubstituteRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Subtotal undocumented
func (b *WorkbookFunctionsRequestBuilder) Subtotal(reqObj *WorkbookFunctionsSubtotalRequestObject) *WorkbookFunctionsSubtotalRequestBuilder {
	bb := &WorkbookFunctionsSubtotalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/subtotal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSubtotalRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSubtotalRequestBuilder) Request() *WorkbookFunctionsSubtotalRequest {
	return &WorkbookFunctionsSubtotalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSubtotalRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSubtotalRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSubtotalRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Sum undocumented
func (b *WorkbookFunctionsRequestBuilder) Sum(reqObj *WorkbookFunctionsSumRequestObject) *WorkbookFunctionsSumRequestBuilder {
	bb := &WorkbookFunctionsSumRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sum"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSumRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSumRequestBuilder) Request() *WorkbookFunctionsSumRequest {
	return &WorkbookFunctionsSumRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSumRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSumRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSumRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// SumIf undocumented
func (b *WorkbookFunctionsRequestBuilder) SumIf(reqObj *WorkbookFunctionsSumIfRequestObject) *WorkbookFunctionsSumIfRequestBuilder {
	bb := &WorkbookFunctionsSumIfRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sumIf"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSumIfRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSumIfRequestBuilder) Request() *WorkbookFunctionsSumIfRequest {
	return &WorkbookFunctionsSumIfRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSumIfRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSumIfRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSumIfRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// SumIfs undocumented
func (b *WorkbookFunctionsRequestBuilder) SumIfs(reqObj *WorkbookFunctionsSumIfsRequestObject) *WorkbookFunctionsSumIfsRequestBuilder {
	bb := &WorkbookFunctionsSumIfsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sumIfs"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSumIfsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSumIfsRequestBuilder) Request() *WorkbookFunctionsSumIfsRequest {
	return &WorkbookFunctionsSumIfsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSumIfsRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSumIfsRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSumIfsRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// SumSq undocumented
func (b *WorkbookFunctionsRequestBuilder) SumSq(reqObj *WorkbookFunctionsSumSqRequestObject) *WorkbookFunctionsSumSqRequestBuilder {
	bb := &WorkbookFunctionsSumSqRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sumSq"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSumSqRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSumSqRequestBuilder) Request() *WorkbookFunctionsSumSqRequest {
	return &WorkbookFunctionsSumSqRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSumSqRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSumSqRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSumSqRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Syd undocumented
func (b *WorkbookFunctionsRequestBuilder) Syd(reqObj *WorkbookFunctionsSydRequestObject) *WorkbookFunctionsSydRequestBuilder {
	bb := &WorkbookFunctionsSydRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/syd"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsSydRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsSydRequestBuilder) Request() *WorkbookFunctionsSydRequest {
	return &WorkbookFunctionsSydRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsSydRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsSydRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsSydRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// T undocumented
func (b *WorkbookFunctionsRequestBuilder) T(reqObj *WorkbookFunctionsTRequestObject) *WorkbookFunctionsTRequestBuilder {
	bb := &WorkbookFunctionsTRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/t"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTRequestBuilder) Request() *WorkbookFunctionsTRequest {
	return &WorkbookFunctionsTRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// TbillEq undocumented
func (b *WorkbookFunctionsRequestBuilder) TbillEq(reqObj *WorkbookFunctionsTbillEqRequestObject) *WorkbookFunctionsTbillEqRequestBuilder {
	bb := &WorkbookFunctionsTbillEqRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/tbillEq"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTbillEqRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTbillEqRequestBuilder) Request() *WorkbookFunctionsTbillEqRequest {
	return &WorkbookFunctionsTbillEqRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTbillEqRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTbillEqRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTbillEqRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// TbillPrice undocumented
func (b *WorkbookFunctionsRequestBuilder) TbillPrice(reqObj *WorkbookFunctionsTbillPriceRequestObject) *WorkbookFunctionsTbillPriceRequestBuilder {
	bb := &WorkbookFunctionsTbillPriceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/tbillPrice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTbillPriceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTbillPriceRequestBuilder) Request() *WorkbookFunctionsTbillPriceRequest {
	return &WorkbookFunctionsTbillPriceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTbillPriceRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTbillPriceRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTbillPriceRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// TbillYield undocumented
func (b *WorkbookFunctionsRequestBuilder) TbillYield(reqObj *WorkbookFunctionsTbillYieldRequestObject) *WorkbookFunctionsTbillYieldRequestBuilder {
	bb := &WorkbookFunctionsTbillYieldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/tbillYield"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTbillYieldRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTbillYieldRequestBuilder) Request() *WorkbookFunctionsTbillYieldRequest {
	return &WorkbookFunctionsTbillYieldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTbillYieldRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTbillYieldRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTbillYieldRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// T_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) T_Dist(reqObj *WorkbookFunctionsT_DistRequestObject) *WorkbookFunctionsT_DistRequestBuilder {
	bb := &WorkbookFunctionsT_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/t_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsT_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsT_DistRequestBuilder) Request() *WorkbookFunctionsT_DistRequest {
	return &WorkbookFunctionsT_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsT_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsT_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsT_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// T_Dist_2T undocumented
func (b *WorkbookFunctionsRequestBuilder) T_Dist_2T(reqObj *WorkbookFunctionsT_Dist_2TRequestObject) *WorkbookFunctionsT_Dist_2TRequestBuilder {
	bb := &WorkbookFunctionsT_Dist_2TRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/t_Dist_2T"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsT_Dist_2TRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsT_Dist_2TRequestBuilder) Request() *WorkbookFunctionsT_Dist_2TRequest {
	return &WorkbookFunctionsT_Dist_2TRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsT_Dist_2TRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsT_Dist_2TRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsT_Dist_2TRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// T_Dist_RT undocumented
func (b *WorkbookFunctionsRequestBuilder) T_Dist_RT(reqObj *WorkbookFunctionsT_Dist_RTRequestObject) *WorkbookFunctionsT_Dist_RTRequestBuilder {
	bb := &WorkbookFunctionsT_Dist_RTRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/t_Dist_RT"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsT_Dist_RTRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsT_Dist_RTRequestBuilder) Request() *WorkbookFunctionsT_Dist_RTRequest {
	return &WorkbookFunctionsT_Dist_RTRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsT_Dist_RTRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsT_Dist_RTRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsT_Dist_RTRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// T_Inv undocumented
func (b *WorkbookFunctionsRequestBuilder) T_Inv(reqObj *WorkbookFunctionsT_InvRequestObject) *WorkbookFunctionsT_InvRequestBuilder {
	bb := &WorkbookFunctionsT_InvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/t_Inv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsT_InvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsT_InvRequestBuilder) Request() *WorkbookFunctionsT_InvRequest {
	return &WorkbookFunctionsT_InvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsT_InvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsT_InvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsT_InvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// T_Inv_2T undocumented
func (b *WorkbookFunctionsRequestBuilder) T_Inv_2T(reqObj *WorkbookFunctionsT_Inv_2TRequestObject) *WorkbookFunctionsT_Inv_2TRequestBuilder {
	bb := &WorkbookFunctionsT_Inv_2TRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/t_Inv_2T"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsT_Inv_2TRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsT_Inv_2TRequestBuilder) Request() *WorkbookFunctionsT_Inv_2TRequest {
	return &WorkbookFunctionsT_Inv_2TRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsT_Inv_2TRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsT_Inv_2TRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsT_Inv_2TRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Tan undocumented
func (b *WorkbookFunctionsRequestBuilder) Tan(reqObj *WorkbookFunctionsTanRequestObject) *WorkbookFunctionsTanRequestBuilder {
	bb := &WorkbookFunctionsTanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/tan"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTanRequestBuilder) Request() *WorkbookFunctionsTanRequest {
	return &WorkbookFunctionsTanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTanRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTanRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTanRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Tanh undocumented
func (b *WorkbookFunctionsRequestBuilder) Tanh(reqObj *WorkbookFunctionsTanhRequestObject) *WorkbookFunctionsTanhRequestBuilder {
	bb := &WorkbookFunctionsTanhRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/tanh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTanhRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTanhRequestBuilder) Request() *WorkbookFunctionsTanhRequest {
	return &WorkbookFunctionsTanhRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTanhRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTanhRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTanhRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Text undocumented
func (b *WorkbookFunctionsRequestBuilder) Text(reqObj *WorkbookFunctionsTextRequestObject) *WorkbookFunctionsTextRequestBuilder {
	bb := &WorkbookFunctionsTextRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/text"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTextRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTextRequestBuilder) Request() *WorkbookFunctionsTextRequest {
	return &WorkbookFunctionsTextRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTextRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTextRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTextRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Time undocumented
func (b *WorkbookFunctionsRequestBuilder) Time(reqObj *WorkbookFunctionsTimeRequestObject) *WorkbookFunctionsTimeRequestBuilder {
	bb := &WorkbookFunctionsTimeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/time"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTimeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTimeRequestBuilder) Request() *WorkbookFunctionsTimeRequest {
	return &WorkbookFunctionsTimeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTimeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTimeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTimeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Timevalue undocumented
func (b *WorkbookFunctionsRequestBuilder) Timevalue(reqObj *WorkbookFunctionsTimevalueRequestObject) *WorkbookFunctionsTimevalueRequestBuilder {
	bb := &WorkbookFunctionsTimevalueRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/timevalue"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTimevalueRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTimevalueRequestBuilder) Request() *WorkbookFunctionsTimevalueRequest {
	return &WorkbookFunctionsTimevalueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTimevalueRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTimevalueRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTimevalueRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Today undocumented
func (b *WorkbookFunctionsRequestBuilder) Today(reqObj *WorkbookFunctionsTodayRequestObject) *WorkbookFunctionsTodayRequestBuilder {
	bb := &WorkbookFunctionsTodayRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/today"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTodayRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTodayRequestBuilder) Request() *WorkbookFunctionsTodayRequest {
	return &WorkbookFunctionsTodayRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTodayRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTodayRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTodayRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Trim undocumented
func (b *WorkbookFunctionsRequestBuilder) Trim(reqObj *WorkbookFunctionsTrimRequestObject) *WorkbookFunctionsTrimRequestBuilder {
	bb := &WorkbookFunctionsTrimRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/trim"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTrimRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTrimRequestBuilder) Request() *WorkbookFunctionsTrimRequest {
	return &WorkbookFunctionsTrimRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTrimRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTrimRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTrimRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// TrimMean undocumented
func (b *WorkbookFunctionsRequestBuilder) TrimMean(reqObj *WorkbookFunctionsTrimMeanRequestObject) *WorkbookFunctionsTrimMeanRequestBuilder {
	bb := &WorkbookFunctionsTrimMeanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/trimMean"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTrimMeanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTrimMeanRequestBuilder) Request() *WorkbookFunctionsTrimMeanRequest {
	return &WorkbookFunctionsTrimMeanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTrimMeanRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTrimMeanRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTrimMeanRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// True undocumented
func (b *WorkbookFunctionsRequestBuilder) True(reqObj *WorkbookFunctionsTrueRequestObject) *WorkbookFunctionsTrueRequestBuilder {
	bb := &WorkbookFunctionsTrueRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/true"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTrueRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTrueRequestBuilder) Request() *WorkbookFunctionsTrueRequest {
	return &WorkbookFunctionsTrueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTrueRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTrueRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTrueRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Trunc undocumented
func (b *WorkbookFunctionsRequestBuilder) Trunc(reqObj *WorkbookFunctionsTruncRequestObject) *WorkbookFunctionsTruncRequestBuilder {
	bb := &WorkbookFunctionsTruncRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/trunc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTruncRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTruncRequestBuilder) Request() *WorkbookFunctionsTruncRequest {
	return &WorkbookFunctionsTruncRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTruncRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTruncRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTruncRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Type undocumented
func (b *WorkbookFunctionsRequestBuilder) Type(reqObj *WorkbookFunctionsTypeRequestObject) *WorkbookFunctionsTypeRequestBuilder {
	bb := &WorkbookFunctionsTypeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/type"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTypeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsTypeRequestBuilder) Request() *WorkbookFunctionsTypeRequest {
	return &WorkbookFunctionsTypeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsTypeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsTypeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsTypeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Usdollar undocumented
func (b *WorkbookFunctionsRequestBuilder) Usdollar(reqObj *WorkbookFunctionsUsdollarRequestObject) *WorkbookFunctionsUsdollarRequestBuilder {
	bb := &WorkbookFunctionsUsdollarRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/usdollar"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsUsdollarRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsUsdollarRequestBuilder) Request() *WorkbookFunctionsUsdollarRequest {
	return &WorkbookFunctionsUsdollarRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsUsdollarRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsUsdollarRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsUsdollarRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Unichar undocumented
func (b *WorkbookFunctionsRequestBuilder) Unichar(reqObj *WorkbookFunctionsUnicharRequestObject) *WorkbookFunctionsUnicharRequestBuilder {
	bb := &WorkbookFunctionsUnicharRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/unichar"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsUnicharRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsUnicharRequestBuilder) Request() *WorkbookFunctionsUnicharRequest {
	return &WorkbookFunctionsUnicharRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsUnicharRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsUnicharRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsUnicharRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Unicode undocumented
func (b *WorkbookFunctionsRequestBuilder) Unicode(reqObj *WorkbookFunctionsUnicodeRequestObject) *WorkbookFunctionsUnicodeRequestBuilder {
	bb := &WorkbookFunctionsUnicodeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/unicode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsUnicodeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsUnicodeRequestBuilder) Request() *WorkbookFunctionsUnicodeRequest {
	return &WorkbookFunctionsUnicodeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsUnicodeRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsUnicodeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsUnicodeRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Upper undocumented
func (b *WorkbookFunctionsRequestBuilder) Upper(reqObj *WorkbookFunctionsUpperRequestObject) *WorkbookFunctionsUpperRequestBuilder {
	bb := &WorkbookFunctionsUpperRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/upper"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsUpperRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsUpperRequestBuilder) Request() *WorkbookFunctionsUpperRequest {
	return &WorkbookFunctionsUpperRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsUpperRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsUpperRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsUpperRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Vlookup undocumented
func (b *WorkbookFunctionsRequestBuilder) Vlookup(reqObj *WorkbookFunctionsVlookupRequestObject) *WorkbookFunctionsVlookupRequestBuilder {
	bb := &WorkbookFunctionsVlookupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/vlookup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsVlookupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsVlookupRequestBuilder) Request() *WorkbookFunctionsVlookupRequest {
	return &WorkbookFunctionsVlookupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsVlookupRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsVlookupRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsVlookupRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Value undocumented
func (b *WorkbookFunctionsRequestBuilder) Value(reqObj *WorkbookFunctionsValueRequestObject) *WorkbookFunctionsValueRequestBuilder {
	bb := &WorkbookFunctionsValueRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/value"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsValueRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsValueRequestBuilder) Request() *WorkbookFunctionsValueRequest {
	return &WorkbookFunctionsValueRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsValueRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsValueRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsValueRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// VarA undocumented
func (b *WorkbookFunctionsRequestBuilder) VarA(reqObj *WorkbookFunctionsVarARequestObject) *WorkbookFunctionsVarARequestBuilder {
	bb := &WorkbookFunctionsVarARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/varA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsVarARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsVarARequestBuilder) Request() *WorkbookFunctionsVarARequest {
	return &WorkbookFunctionsVarARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsVarARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsVarARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsVarARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// VarPA undocumented
func (b *WorkbookFunctionsRequestBuilder) VarPA(reqObj *WorkbookFunctionsVarPARequestObject) *WorkbookFunctionsVarPARequestBuilder {
	bb := &WorkbookFunctionsVarPARequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/varPA"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsVarPARequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsVarPARequestBuilder) Request() *WorkbookFunctionsVarPARequest {
	return &WorkbookFunctionsVarPARequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsVarPARequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsVarPARequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsVarPARequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Var_P undocumented
func (b *WorkbookFunctionsRequestBuilder) Var_P(reqObj *WorkbookFunctionsVar_PRequestObject) *WorkbookFunctionsVar_PRequestBuilder {
	bb := &WorkbookFunctionsVar_PRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/var_P"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsVar_PRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsVar_PRequestBuilder) Request() *WorkbookFunctionsVar_PRequest {
	return &WorkbookFunctionsVar_PRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsVar_PRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsVar_PRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsVar_PRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Var_S undocumented
func (b *WorkbookFunctionsRequestBuilder) Var_S(reqObj *WorkbookFunctionsVar_SRequestObject) *WorkbookFunctionsVar_SRequestBuilder {
	bb := &WorkbookFunctionsVar_SRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/var_S"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsVar_SRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsVar_SRequestBuilder) Request() *WorkbookFunctionsVar_SRequest {
	return &WorkbookFunctionsVar_SRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsVar_SRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsVar_SRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsVar_SRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Vdb undocumented
func (b *WorkbookFunctionsRequestBuilder) Vdb(reqObj *WorkbookFunctionsVdbRequestObject) *WorkbookFunctionsVdbRequestBuilder {
	bb := &WorkbookFunctionsVdbRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/vdb"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsVdbRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsVdbRequestBuilder) Request() *WorkbookFunctionsVdbRequest {
	return &WorkbookFunctionsVdbRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsVdbRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsVdbRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsVdbRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// WeekNum undocumented
func (b *WorkbookFunctionsRequestBuilder) WeekNum(reqObj *WorkbookFunctionsWeekNumRequestObject) *WorkbookFunctionsWeekNumRequestBuilder {
	bb := &WorkbookFunctionsWeekNumRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/weekNum"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsWeekNumRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsWeekNumRequestBuilder) Request() *WorkbookFunctionsWeekNumRequest {
	return &WorkbookFunctionsWeekNumRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsWeekNumRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsWeekNumRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsWeekNumRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Weekday undocumented
func (b *WorkbookFunctionsRequestBuilder) Weekday(reqObj *WorkbookFunctionsWeekdayRequestObject) *WorkbookFunctionsWeekdayRequestBuilder {
	bb := &WorkbookFunctionsWeekdayRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/weekday"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsWeekdayRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsWeekdayRequestBuilder) Request() *WorkbookFunctionsWeekdayRequest {
	return &WorkbookFunctionsWeekdayRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsWeekdayRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsWeekdayRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsWeekdayRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Weibull_Dist undocumented
func (b *WorkbookFunctionsRequestBuilder) Weibull_Dist(reqObj *WorkbookFunctionsWeibull_DistRequestObject) *WorkbookFunctionsWeibull_DistRequestBuilder {
	bb := &WorkbookFunctionsWeibull_DistRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/weibull_Dist"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsWeibull_DistRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsWeibull_DistRequestBuilder) Request() *WorkbookFunctionsWeibull_DistRequest {
	return &WorkbookFunctionsWeibull_DistRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsWeibull_DistRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsWeibull_DistRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsWeibull_DistRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// WorkDay undocumented
func (b *WorkbookFunctionsRequestBuilder) WorkDay(reqObj *WorkbookFunctionsWorkDayRequestObject) *WorkbookFunctionsWorkDayRequestBuilder {
	bb := &WorkbookFunctionsWorkDayRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/workDay"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsWorkDayRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsWorkDayRequestBuilder) Request() *WorkbookFunctionsWorkDayRequest {
	return &WorkbookFunctionsWorkDayRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsWorkDayRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsWorkDayRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsWorkDayRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// WorkDay_Intl undocumented
func (b *WorkbookFunctionsRequestBuilder) WorkDay_Intl(reqObj *WorkbookFunctionsWorkDay_IntlRequestObject) *WorkbookFunctionsWorkDay_IntlRequestBuilder {
	bb := &WorkbookFunctionsWorkDay_IntlRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/workDay_Intl"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsWorkDay_IntlRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsWorkDay_IntlRequestBuilder) Request() *WorkbookFunctionsWorkDay_IntlRequest {
	return &WorkbookFunctionsWorkDay_IntlRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsWorkDay_IntlRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsWorkDay_IntlRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsWorkDay_IntlRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Xirr undocumented
func (b *WorkbookFunctionsRequestBuilder) Xirr(reqObj *WorkbookFunctionsXirrRequestObject) *WorkbookFunctionsXirrRequestBuilder {
	bb := &WorkbookFunctionsXirrRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/xirr"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsXirrRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsXirrRequestBuilder) Request() *WorkbookFunctionsXirrRequest {
	return &WorkbookFunctionsXirrRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsXirrRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsXirrRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsXirrRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Xnpv undocumented
func (b *WorkbookFunctionsRequestBuilder) Xnpv(reqObj *WorkbookFunctionsXnpvRequestObject) *WorkbookFunctionsXnpvRequestBuilder {
	bb := &WorkbookFunctionsXnpvRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/xnpv"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsXnpvRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsXnpvRequestBuilder) Request() *WorkbookFunctionsXnpvRequest {
	return &WorkbookFunctionsXnpvRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsXnpvRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsXnpvRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsXnpvRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Xor undocumented
func (b *WorkbookFunctionsRequestBuilder) Xor(reqObj *WorkbookFunctionsXorRequestObject) *WorkbookFunctionsXorRequestBuilder {
	bb := &WorkbookFunctionsXorRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/xor"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsXorRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsXorRequestBuilder) Request() *WorkbookFunctionsXorRequest {
	return &WorkbookFunctionsXorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsXorRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsXorRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsXorRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Year undocumented
func (b *WorkbookFunctionsRequestBuilder) Year(reqObj *WorkbookFunctionsYearRequestObject) *WorkbookFunctionsYearRequestBuilder {
	bb := &WorkbookFunctionsYearRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/year"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsYearRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsYearRequestBuilder) Request() *WorkbookFunctionsYearRequest {
	return &WorkbookFunctionsYearRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsYearRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsYearRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsYearRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// YearFrac undocumented
func (b *WorkbookFunctionsRequestBuilder) YearFrac(reqObj *WorkbookFunctionsYearFracRequestObject) *WorkbookFunctionsYearFracRequestBuilder {
	bb := &WorkbookFunctionsYearFracRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/yearFrac"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsYearFracRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsYearFracRequestBuilder) Request() *WorkbookFunctionsYearFracRequest {
	return &WorkbookFunctionsYearFracRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsYearFracRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsYearFracRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsYearFracRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Yield undocumented
func (b *WorkbookFunctionsRequestBuilder) Yield(reqObj *WorkbookFunctionsYieldRequestObject) *WorkbookFunctionsYieldRequestBuilder {
	bb := &WorkbookFunctionsYieldRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/yield"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsYieldRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsYieldRequestBuilder) Request() *WorkbookFunctionsYieldRequest {
	return &WorkbookFunctionsYieldRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsYieldRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsYieldRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsYieldRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// YieldDisc undocumented
func (b *WorkbookFunctionsRequestBuilder) YieldDisc(reqObj *WorkbookFunctionsYieldDiscRequestObject) *WorkbookFunctionsYieldDiscRequestBuilder {
	bb := &WorkbookFunctionsYieldDiscRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/yieldDisc"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsYieldDiscRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsYieldDiscRequestBuilder) Request() *WorkbookFunctionsYieldDiscRequest {
	return &WorkbookFunctionsYieldDiscRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsYieldDiscRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsYieldDiscRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsYieldDiscRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// YieldMat undocumented
func (b *WorkbookFunctionsRequestBuilder) YieldMat(reqObj *WorkbookFunctionsYieldMatRequestObject) *WorkbookFunctionsYieldMatRequestBuilder {
	bb := &WorkbookFunctionsYieldMatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/yieldMat"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsYieldMatRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsYieldMatRequestBuilder) Request() *WorkbookFunctionsYieldMatRequest {
	return &WorkbookFunctionsYieldMatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsYieldMatRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsYieldMatRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsYieldMatRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Z_Test undocumented
func (b *WorkbookFunctionsRequestBuilder) Z_Test(reqObj *WorkbookFunctionsZ_TestRequestObject) *WorkbookFunctionsZ_TestRequestBuilder {
	bb := &WorkbookFunctionsZ_TestRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/z_Test"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsZ_TestRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookFunctionsZ_TestRequestBuilder) Request() *WorkbookFunctionsZ_TestRequest {
	return &WorkbookFunctionsZ_TestRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookFunctionsZ_TestRequest struct{ BaseRequest }

//
func (r *WorkbookFunctionsZ_TestRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookFunctionsZ_TestRequest) Post() (*WorkbookFunctionResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// Apply undocumented
func (b *WorkbookTableSortRequestBuilder) Apply(reqObj *WorkbookTableSortApplyRequestObject) *WorkbookTableSortApplyRequestBuilder {
	bb := &WorkbookTableSortApplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/apply"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableSortApplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableSortApplyRequestBuilder) Request() *WorkbookTableSortApplyRequest {
	return &WorkbookTableSortApplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableSortApplyRequest struct{ BaseRequest }

//
func (r *WorkbookTableSortApplyRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookTableSortApplyRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Clear undocumented
func (b *WorkbookTableSortRequestBuilder) Clear(reqObj *WorkbookTableSortClearRequestObject) *WorkbookTableSortClearRequestBuilder {
	bb := &WorkbookTableSortClearRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clear"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableSortClearRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableSortClearRequestBuilder) Request() *WorkbookTableSortClearRequest {
	return &WorkbookTableSortClearRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableSortClearRequest struct{ BaseRequest }

//
func (r *WorkbookTableSortClearRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookTableSortClearRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Reapply undocumented
func (b *WorkbookTableSortRequestBuilder) Reapply(reqObj *WorkbookTableSortReapplyRequestObject) *WorkbookTableSortReapplyRequestBuilder {
	bb := &WorkbookTableSortReapplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reapply"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableSortReapplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableSortReapplyRequestBuilder) Request() *WorkbookTableSortReapplyRequest {
	return &WorkbookTableSortReapplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableSortReapplyRequest struct{ BaseRequest }

//
func (r *WorkbookTableSortReapplyRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookTableSortReapplyRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// OnenotePatchContent undocumented
func (b *OnenotePageRequestBuilder) OnenotePatchContent(reqObj *OnenotePageOnenotePatchContentRequestObject) *OnenotePageOnenotePatchContentRequestBuilder {
	bb := &OnenotePageOnenotePatchContentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/onenotePatchContent"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type OnenotePageOnenotePatchContentRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenotePageOnenotePatchContentRequestBuilder) Request() *OnenotePageOnenotePatchContentRequest {
	return &OnenotePageOnenotePatchContentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type OnenotePageOnenotePatchContentRequest struct{ BaseRequest }

//
func (r *OnenotePageOnenotePatchContentRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *OnenotePageOnenotePatchContentRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// CopyToSection undocumented
func (b *OnenotePageRequestBuilder) CopyToSection(reqObj *OnenotePageCopyToSectionRequestObject) *OnenotePageCopyToSectionRequestBuilder {
	bb := &OnenotePageCopyToSectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/copyToSection"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type OnenotePageCopyToSectionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenotePageCopyToSectionRequestBuilder) Request() *OnenotePageCopyToSectionRequest {
	return &OnenotePageCopyToSectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type OnenotePageCopyToSectionRequest struct{ BaseRequest }

//
func (r *OnenotePageCopyToSectionRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenotePageCopyToSectionRequest) Post() (*OnenoteOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// CreateSession undocumented
func (b *WorkbookRequestBuilder) CreateSession(reqObj *WorkbookCreateSessionRequestObject) *WorkbookCreateSessionRequestBuilder {
	bb := &WorkbookCreateSessionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/createSession"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookCreateSessionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookCreateSessionRequestBuilder) Request() *WorkbookCreateSessionRequest {
	return &WorkbookCreateSessionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookCreateSessionRequest struct{ BaseRequest }

//
func (r *WorkbookCreateSessionRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookSessionInfo, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookCreateSessionRequest) Post() (*WorkbookSessionInfo, error) {
	return r.Do("POST", "", r.requestObject)
}

// CloseSession undocumented
func (b *WorkbookRequestBuilder) CloseSession(reqObj *WorkbookCloseSessionRequestObject) *WorkbookCloseSessionRequestBuilder {
	bb := &WorkbookCloseSessionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/closeSession"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookCloseSessionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookCloseSessionRequestBuilder) Request() *WorkbookCloseSessionRequest {
	return &WorkbookCloseSessionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookCloseSessionRequest struct{ BaseRequest }

//
func (r *WorkbookCloseSessionRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookCloseSessionRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RefreshSession undocumented
func (b *WorkbookRequestBuilder) RefreshSession(reqObj *WorkbookRefreshSessionRequestObject) *WorkbookRefreshSessionRequestBuilder {
	bb := &WorkbookRefreshSessionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/refreshSession"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRefreshSessionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRefreshSessionRequestBuilder) Request() *WorkbookRefreshSessionRequest {
	return &WorkbookRefreshSessionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRefreshSessionRequest struct{ BaseRequest }

//
func (r *WorkbookRefreshSessionRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRefreshSessionRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Copy undocumented
func (b *MailFolderRequestBuilder) Copy(reqObj *MailFolderCopyRequestObject) *MailFolderCopyRequestBuilder {
	bb := &MailFolderCopyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/copy"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MailFolderCopyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MailFolderCopyRequestBuilder) Request() *MailFolderCopyRequest {
	return &MailFolderCopyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MailFolderCopyRequest struct{ BaseRequest }

//
func (r *MailFolderCopyRequest) Do(method, path string, reqObj interface{}) (resObj *MailFolder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MailFolderCopyRequest) Post() (*MailFolder, error) {
	return r.Do("POST", "", r.requestObject)
}

// Move undocumented
func (b *MailFolderRequestBuilder) Move(reqObj *MailFolderMoveRequestObject) *MailFolderMoveRequestBuilder {
	bb := &MailFolderMoveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/move"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MailFolderMoveRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MailFolderMoveRequestBuilder) Request() *MailFolderMoveRequest {
	return &MailFolderMoveRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MailFolderMoveRequest struct{ BaseRequest }

//
func (r *MailFolderMoveRequest) Do(method, path string, reqObj interface{}) (resObj *MailFolder, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MailFolderMoveRequest) Post() (*MailFolder, error) {
	return r.Do("POST", "", r.requestObject)
}

// Reply undocumented
func (b *ConversationThreadRequestBuilder) Reply(reqObj *ConversationThreadReplyRequestObject) *ConversationThreadReplyRequestBuilder {
	bb := &ConversationThreadReplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reply"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ConversationThreadReplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ConversationThreadReplyRequestBuilder) Request() *ConversationThreadReplyRequest {
	return &ConversationThreadReplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ConversationThreadReplyRequest struct{ BaseRequest }

//
func (r *ConversationThreadReplyRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ConversationThreadReplyRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SetMobileDeviceManagementAuthority undocumented
func (b *OrganizationRequestBuilder) SetMobileDeviceManagementAuthority(reqObj *OrganizationSetMobileDeviceManagementAuthorityRequestObject) *OrganizationSetMobileDeviceManagementAuthorityRequestBuilder {
	bb := &OrganizationSetMobileDeviceManagementAuthorityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/setMobileDeviceManagementAuthority"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type OrganizationSetMobileDeviceManagementAuthorityRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OrganizationSetMobileDeviceManagementAuthorityRequestBuilder) Request() *OrganizationSetMobileDeviceManagementAuthorityRequest {
	return &OrganizationSetMobileDeviceManagementAuthorityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type OrganizationSetMobileDeviceManagementAuthorityRequest struct{ BaseRequest }

//
func (r *OrganizationSetMobileDeviceManagementAuthorityRequest) Do(method, path string, reqObj interface{}) (resObj *int, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OrganizationSetMobileDeviceManagementAuthorityRequest) Post() (*int, error) {
	return r.Do("POST", "", r.requestObject)
}

// SyncMicrosoftStoreForBusinessApps undocumented
func (b *DeviceAppManagementRequestBuilder) SyncMicrosoftStoreForBusinessApps(reqObj *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestObject) *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestBuilder {
	bb := &DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/syncMicrosoftStoreForBusinessApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequestBuilder) Request() *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest {
	return &DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest struct{ BaseRequest }

//
func (r *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DeviceAppManagementSyncMicrosoftStoreForBusinessAppsRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SendTestMessage undocumented
func (b *NotificationMessageTemplateRequestBuilder) SendTestMessage(reqObj *NotificationMessageTemplateSendTestMessageRequestObject) *NotificationMessageTemplateSendTestMessageRequestBuilder {
	bb := &NotificationMessageTemplateSendTestMessageRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sendTestMessage"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type NotificationMessageTemplateSendTestMessageRequestBuilder struct{ BaseRequestBuilder }

//
func (b *NotificationMessageTemplateSendTestMessageRequestBuilder) Request() *NotificationMessageTemplateSendTestMessageRequest {
	return &NotificationMessageTemplateSendTestMessageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type NotificationMessageTemplateSendTestMessageRequest struct{ BaseRequest }

//
func (r *NotificationMessageTemplateSendTestMessageRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *NotificationMessageTemplateSendTestMessageRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Upgrade undocumented
func (b *TeamsAppInstallationRequestBuilder) Upgrade(reqObj *TeamsAppInstallationUpgradeRequestObject) *TeamsAppInstallationUpgradeRequestBuilder {
	bb := &TeamsAppInstallationUpgradeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/upgrade"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type TeamsAppInstallationUpgradeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TeamsAppInstallationUpgradeRequestBuilder) Request() *TeamsAppInstallationUpgradeRequest {
	return &TeamsAppInstallationUpgradeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type TeamsAppInstallationUpgradeRequest struct{ BaseRequest }

//
func (r *TeamsAppInstallationUpgradeRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *TeamsAppInstallationUpgradeRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RestoreVersion undocumented
func (b *DriveItemVersionRequestBuilder) RestoreVersion(reqObj *DriveItemVersionRestoreVersionRequestObject) *DriveItemVersionRestoreVersionRequestBuilder {
	bb := &DriveItemVersionRestoreVersionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/restoreVersion"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DriveItemVersionRestoreVersionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemVersionRestoreVersionRequestBuilder) Request() *DriveItemVersionRestoreVersionRequest {
	return &DriveItemVersionRestoreVersionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DriveItemVersionRestoreVersionRequest struct{ BaseRequest }

//
func (r *DriveItemVersionRestoreVersionRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DriveItemVersionRestoreVersionRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *ManagedEBookRequestBuilder) Assign(reqObj *ManagedEBookAssignRequestObject) *ManagedEBookAssignRequestBuilder {
	bb := &ManagedEBookAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedEBookAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedEBookAssignRequestBuilder) Request() *ManagedEBookAssignRequest {
	return &ManagedEBookAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedEBookAssignRequest struct{ BaseRequest }

//
func (r *ManagedEBookAssignRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedEBookAssignRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *DeviceCompliancePolicyRequestBuilder) Assign(reqObj *DeviceCompliancePolicyAssignRequestObject) *DeviceCompliancePolicyAssignRequestBuilder {
	bb := &DeviceCompliancePolicyAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DeviceCompliancePolicyAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyAssignRequestBuilder) Request() *DeviceCompliancePolicyAssignRequest {
	return &DeviceCompliancePolicyAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DeviceCompliancePolicyAssignRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyAssignRequest) Do(method, path string, reqObj interface{}) (resObj *[]DeviceCompliancePolicyAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DeviceCompliancePolicyAssignRequest) Paging(method, path string, obj interface{}) ([][]DeviceCompliancePolicyAssignment, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]DeviceCompliancePolicyAssignment
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]DeviceCompliancePolicyAssignment
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DeviceCompliancePolicyAssignRequest) Get() ([][]DeviceCompliancePolicyAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// ScheduleActionsForRules undocumented
func (b *DeviceCompliancePolicyRequestBuilder) ScheduleActionsForRules(reqObj *DeviceCompliancePolicyScheduleActionsForRulesRequestObject) *DeviceCompliancePolicyScheduleActionsForRulesRequestBuilder {
	bb := &DeviceCompliancePolicyScheduleActionsForRulesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/scheduleActionsForRules"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DeviceCompliancePolicyScheduleActionsForRulesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceCompliancePolicyScheduleActionsForRulesRequestBuilder) Request() *DeviceCompliancePolicyScheduleActionsForRulesRequest {
	return &DeviceCompliancePolicyScheduleActionsForRulesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DeviceCompliancePolicyScheduleActionsForRulesRequest struct{ BaseRequest }

//
func (r *DeviceCompliancePolicyScheduleActionsForRulesRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DeviceCompliancePolicyScheduleActionsForRulesRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Calculate undocumented
func (b *WorkbookApplicationRequestBuilder) Calculate(reqObj *WorkbookApplicationCalculateRequestObject) *WorkbookApplicationCalculateRequestBuilder {
	bb := &WorkbookApplicationCalculateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/calculate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookApplicationCalculateRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookApplicationCalculateRequestBuilder) Request() *WorkbookApplicationCalculateRequest {
	return &WorkbookApplicationCalculateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookApplicationCalculateRequest struct{ BaseRequest }

//
func (r *WorkbookApplicationCalculateRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookApplicationCalculateRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ClearFilters undocumented
func (b *WorkbookTableRequestBuilder) ClearFilters(reqObj *WorkbookTableClearFiltersRequestObject) *WorkbookTableClearFiltersRequestBuilder {
	bb := &WorkbookTableClearFiltersRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clearFilters"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableClearFiltersRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableClearFiltersRequestBuilder) Request() *WorkbookTableClearFiltersRequest {
	return &WorkbookTableClearFiltersRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableClearFiltersRequest struct{ BaseRequest }

//
func (r *WorkbookTableClearFiltersRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookTableClearFiltersRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ConvertToRange undocumented
func (b *WorkbookTableRequestBuilder) ConvertToRange(reqObj *WorkbookTableConvertToRangeRequestObject) *WorkbookTableConvertToRangeRequestBuilder {
	bb := &WorkbookTableConvertToRangeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/convertToRange"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableConvertToRangeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableConvertToRangeRequestBuilder) Request() *WorkbookTableConvertToRangeRequest {
	return &WorkbookTableConvertToRangeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableConvertToRangeRequest struct{ BaseRequest }

//
func (r *WorkbookTableConvertToRangeRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRange, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableConvertToRangeRequest) Post() (*WorkbookRange, error) {
	return r.Do("POST", "", r.requestObject)
}

// ReapplyFilters undocumented
func (b *WorkbookTableRequestBuilder) ReapplyFilters(reqObj *WorkbookTableReapplyFiltersRequestObject) *WorkbookTableReapplyFiltersRequestBuilder {
	bb := &WorkbookTableReapplyFiltersRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reapplyFilters"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableReapplyFiltersRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableReapplyFiltersRequestBuilder) Request() *WorkbookTableReapplyFiltersRequest {
	return &WorkbookTableReapplyFiltersRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableReapplyFiltersRequest struct{ BaseRequest }

//
func (r *WorkbookTableReapplyFiltersRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookTableReapplyFiltersRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Refresh undocumented
func (b *WorkbookPivotTableRequestBuilder) Refresh(reqObj *WorkbookPivotTableRefreshRequestObject) *WorkbookPivotTableRefreshRequestBuilder {
	bb := &WorkbookPivotTableRefreshRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/refresh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookPivotTableRefreshRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookPivotTableRefreshRequestBuilder) Request() *WorkbookPivotTableRefreshRequest {
	return &WorkbookPivotTableRefreshRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookPivotTableRefreshRequest struct{ BaseRequest }

//
func (r *WorkbookPivotTableRefreshRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookPivotTableRefreshRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// CreateReply undocumented
func (b *MessageRequestBuilder) CreateReply(reqObj *MessageCreateReplyRequestObject) *MessageCreateReplyRequestBuilder {
	bb := &MessageCreateReplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/createReply"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageCreateReplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageCreateReplyRequestBuilder) Request() *MessageCreateReplyRequest {
	return &MessageCreateReplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageCreateReplyRequest struct{ BaseRequest }

//
func (r *MessageCreateReplyRequest) Do(method, path string, reqObj interface{}) (resObj *Message, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageCreateReplyRequest) Post() (*Message, error) {
	return r.Do("POST", "", r.requestObject)
}

// CreateReplyAll undocumented
func (b *MessageRequestBuilder) CreateReplyAll(reqObj *MessageCreateReplyAllRequestObject) *MessageCreateReplyAllRequestBuilder {
	bb := &MessageCreateReplyAllRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/createReplyAll"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageCreateReplyAllRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageCreateReplyAllRequestBuilder) Request() *MessageCreateReplyAllRequest {
	return &MessageCreateReplyAllRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageCreateReplyAllRequest struct{ BaseRequest }

//
func (r *MessageCreateReplyAllRequest) Do(method, path string, reqObj interface{}) (resObj *Message, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageCreateReplyAllRequest) Post() (*Message, error) {
	return r.Do("POST", "", r.requestObject)
}

// CreateForward undocumented
func (b *MessageRequestBuilder) CreateForward(reqObj *MessageCreateForwardRequestObject) *MessageCreateForwardRequestBuilder {
	bb := &MessageCreateForwardRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/createForward"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageCreateForwardRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageCreateForwardRequestBuilder) Request() *MessageCreateForwardRequest {
	return &MessageCreateForwardRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageCreateForwardRequest struct{ BaseRequest }

//
func (r *MessageCreateForwardRequest) Do(method, path string, reqObj interface{}) (resObj *Message, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageCreateForwardRequest) Post() (*Message, error) {
	return r.Do("POST", "", r.requestObject)
}

// Send undocumented
func (b *MessageRequestBuilder) Send(reqObj *MessageSendRequestObject) *MessageSendRequestBuilder {
	bb := &MessageSendRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/send"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageSendRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageSendRequestBuilder) Request() *MessageSendRequest {
	return &MessageSendRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageSendRequest struct{ BaseRequest }

//
func (r *MessageSendRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *MessageSendRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Copy undocumented
func (b *MessageRequestBuilder) Copy(reqObj *MessageCopyRequestObject) *MessageCopyRequestBuilder {
	bb := &MessageCopyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/copy"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageCopyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageCopyRequestBuilder) Request() *MessageCopyRequest {
	return &MessageCopyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageCopyRequest struct{ BaseRequest }

//
func (r *MessageCopyRequest) Do(method, path string, reqObj interface{}) (resObj *Message, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageCopyRequest) Post() (*Message, error) {
	return r.Do("POST", "", r.requestObject)
}

// Move undocumented
func (b *MessageRequestBuilder) Move(reqObj *MessageMoveRequestObject) *MessageMoveRequestBuilder {
	bb := &MessageMoveRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/move"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageMoveRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageMoveRequestBuilder) Request() *MessageMoveRequest {
	return &MessageMoveRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageMoveRequest struct{ BaseRequest }

//
func (r *MessageMoveRequest) Do(method, path string, reqObj interface{}) (resObj *Message, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *MessageMoveRequest) Post() (*Message, error) {
	return r.Do("POST", "", r.requestObject)
}

// Reply undocumented
func (b *MessageRequestBuilder) Reply(reqObj *MessageReplyRequestObject) *MessageReplyRequestBuilder {
	bb := &MessageReplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reply"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageReplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageReplyRequestBuilder) Request() *MessageReplyRequest {
	return &MessageReplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageReplyRequest struct{ BaseRequest }

//
func (r *MessageReplyRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *MessageReplyRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ReplyAll undocumented
func (b *MessageRequestBuilder) ReplyAll(reqObj *MessageReplyAllRequestObject) *MessageReplyAllRequestBuilder {
	bb := &MessageReplyAllRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/replyAll"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageReplyAllRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageReplyAllRequestBuilder) Request() *MessageReplyAllRequest {
	return &MessageReplyAllRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageReplyAllRequest struct{ BaseRequest }

//
func (r *MessageReplyAllRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *MessageReplyAllRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Forward undocumented
func (b *MessageRequestBuilder) Forward(reqObj *MessageForwardRequestObject) *MessageForwardRequestBuilder {
	bb := &MessageForwardRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/forward"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type MessageForwardRequestBuilder struct{ BaseRequestBuilder }

//
func (b *MessageForwardRequestBuilder) Request() *MessageForwardRequest {
	return &MessageForwardRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type MessageForwardRequest struct{ BaseRequest }

//
func (r *MessageForwardRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *MessageForwardRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Checkin undocumented
func (b *DriveItemRequestBuilder) Checkin(reqObj *DriveItemCheckinRequestObject) *DriveItemCheckinRequestBuilder {
	bb := &DriveItemCheckinRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/checkin"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DriveItemCheckinRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemCheckinRequestBuilder) Request() *DriveItemCheckinRequest {
	return &DriveItemCheckinRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DriveItemCheckinRequest struct{ BaseRequest }

//
func (r *DriveItemCheckinRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DriveItemCheckinRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Checkout undocumented
func (b *DriveItemRequestBuilder) Checkout(reqObj *DriveItemCheckoutRequestObject) *DriveItemCheckoutRequestBuilder {
	bb := &DriveItemCheckoutRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/checkout"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DriveItemCheckoutRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemCheckoutRequestBuilder) Request() *DriveItemCheckoutRequest {
	return &DriveItemCheckoutRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DriveItemCheckoutRequest struct{ BaseRequest }

//
func (r *DriveItemCheckoutRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DriveItemCheckoutRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Copy undocumented
func (b *DriveItemRequestBuilder) Copy(reqObj *DriveItemCopyRequestObject) *DriveItemCopyRequestBuilder {
	bb := &DriveItemCopyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/copy"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DriveItemCopyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemCopyRequestBuilder) Request() *DriveItemCopyRequest {
	return &DriveItemCopyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DriveItemCopyRequest struct{ BaseRequest }

//
func (r *DriveItemCopyRequest) Do(method, path string, reqObj interface{}) (resObj *DriveItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemCopyRequest) Post() (*DriveItem, error) {
	return r.Do("POST", "", r.requestObject)
}

// CreateLink undocumented
func (b *DriveItemRequestBuilder) CreateLink(reqObj *DriveItemCreateLinkRequestObject) *DriveItemCreateLinkRequestBuilder {
	bb := &DriveItemCreateLinkRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/createLink"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DriveItemCreateLinkRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemCreateLinkRequestBuilder) Request() *DriveItemCreateLinkRequest {
	return &DriveItemCreateLinkRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DriveItemCreateLinkRequest struct{ BaseRequest }

//
func (r *DriveItemCreateLinkRequest) Do(method, path string, reqObj interface{}) (resObj *Permission, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemCreateLinkRequest) Post() (*Permission, error) {
	return r.Do("POST", "", r.requestObject)
}

// CreateUploadSession undocumented
func (b *DriveItemRequestBuilder) CreateUploadSession(reqObj *DriveItemCreateUploadSessionRequestObject) *DriveItemCreateUploadSessionRequestBuilder {
	bb := &DriveItemCreateUploadSessionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/createUploadSession"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DriveItemCreateUploadSessionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemCreateUploadSessionRequestBuilder) Request() *DriveItemCreateUploadSessionRequest {
	return &DriveItemCreateUploadSessionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DriveItemCreateUploadSessionRequest struct{ BaseRequest }

//
func (r *DriveItemCreateUploadSessionRequest) Do(method, path string, reqObj interface{}) (resObj *UploadSession, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemCreateUploadSessionRequest) Post() (*UploadSession, error) {
	return r.Do("POST", "", r.requestObject)
}

// Invite undocumented
func (b *DriveItemRequestBuilder) Invite(reqObj *DriveItemInviteRequestObject) *DriveItemInviteRequestBuilder {
	bb := &DriveItemInviteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/invite"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DriveItemInviteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemInviteRequestBuilder) Request() *DriveItemInviteRequest {
	return &DriveItemInviteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DriveItemInviteRequest struct{ BaseRequest }

//
func (r *DriveItemInviteRequest) Do(method, path string, reqObj interface{}) (resObj *[]Permission, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemInviteRequest) Paging(method, path string, obj interface{}) ([][]Permission, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]Permission
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]Permission
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *DriveItemInviteRequest) Get() ([][]Permission, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// Preview undocumented
func (b *DriveItemRequestBuilder) Preview(reqObj *DriveItemPreviewRequestObject) *DriveItemPreviewRequestBuilder {
	bb := &DriveItemPreviewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/preview"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DriveItemPreviewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DriveItemPreviewRequestBuilder) Request() *DriveItemPreviewRequest {
	return &DriveItemPreviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DriveItemPreviewRequest struct{ BaseRequest }

//
func (r *DriveItemPreviewRequest) Do(method, path string, reqObj interface{}) (resObj *ItemPreviewInfo, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DriveItemPreviewRequest) Post() (*ItemPreviewInfo, error) {
	return r.Do("POST", "", r.requestObject)
}

// SyncLicenses undocumented
func (b *VppTokenRequestBuilder) SyncLicenses(reqObj *VppTokenSyncLicensesRequestObject) *VppTokenSyncLicensesRequestBuilder {
	bb := &VppTokenSyncLicensesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/syncLicenses"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type VppTokenSyncLicensesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *VppTokenSyncLicensesRequestBuilder) Request() *VppTokenSyncLicensesRequest {
	return &VppTokenSyncLicensesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type VppTokenSyncLicensesRequest struct{ BaseRequest }

//
func (r *VppTokenSyncLicensesRequest) Do(method, path string, reqObj interface{}) (resObj *VppToken, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *VppTokenSyncLicensesRequest) Post() (*VppToken, error) {
	return r.Do("POST", "", r.requestObject)
}

// SetPriority undocumented
func (b *DeviceEnrollmentConfigurationRequestBuilder) SetPriority(reqObj *DeviceEnrollmentConfigurationSetPriorityRequestObject) *DeviceEnrollmentConfigurationSetPriorityRequestBuilder {
	bb := &DeviceEnrollmentConfigurationSetPriorityRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/setPriority"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DeviceEnrollmentConfigurationSetPriorityRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceEnrollmentConfigurationSetPriorityRequestBuilder) Request() *DeviceEnrollmentConfigurationSetPriorityRequest {
	return &DeviceEnrollmentConfigurationSetPriorityRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DeviceEnrollmentConfigurationSetPriorityRequest struct{ BaseRequest }

//
func (r *DeviceEnrollmentConfigurationSetPriorityRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DeviceEnrollmentConfigurationSetPriorityRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *DeviceEnrollmentConfigurationRequestBuilder) Assign(reqObj *DeviceEnrollmentConfigurationAssignRequestObject) *DeviceEnrollmentConfigurationAssignRequestBuilder {
	bb := &DeviceEnrollmentConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DeviceEnrollmentConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceEnrollmentConfigurationAssignRequestBuilder) Request() *DeviceEnrollmentConfigurationAssignRequest {
	return &DeviceEnrollmentConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DeviceEnrollmentConfigurationAssignRequest struct{ BaseRequest }

//
func (r *DeviceEnrollmentConfigurationAssignRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DeviceEnrollmentConfigurationAssignRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *WindowsInformationProtectionRequestBuilder) Assign(reqObj *WindowsInformationProtectionAssignRequestObject) *WindowsInformationProtectionAssignRequestBuilder {
	bb := &WindowsInformationProtectionAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WindowsInformationProtectionAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WindowsInformationProtectionAssignRequestBuilder) Request() *WindowsInformationProtectionAssignRequest {
	return &WindowsInformationProtectionAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WindowsInformationProtectionAssignRequest struct{ BaseRequest }

//
func (r *WindowsInformationProtectionAssignRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WindowsInformationProtectionAssignRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// TargetApps undocumented
func (b *ManagedAppPolicyRequestBuilder) TargetApps(reqObj *ManagedAppPolicyTargetAppsRequestObject) *ManagedAppPolicyTargetAppsRequestBuilder {
	bb := &ManagedAppPolicyTargetAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/targetApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedAppPolicyTargetAppsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppPolicyTargetAppsRequestBuilder) Request() *ManagedAppPolicyTargetAppsRequest {
	return &ManagedAppPolicyTargetAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedAppPolicyTargetAppsRequest struct{ BaseRequest }

//
func (r *ManagedAppPolicyTargetAppsRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedAppPolicyTargetAppsRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// CopyToNotebook undocumented
func (b *OnenoteSectionRequestBuilder) CopyToNotebook(reqObj *OnenoteSectionCopyToNotebookRequestObject) *OnenoteSectionCopyToNotebookRequestBuilder {
	bb := &OnenoteSectionCopyToNotebookRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/copyToNotebook"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type OnenoteSectionCopyToNotebookRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteSectionCopyToNotebookRequestBuilder) Request() *OnenoteSectionCopyToNotebookRequest {
	return &OnenoteSectionCopyToNotebookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type OnenoteSectionCopyToNotebookRequest struct{ BaseRequest }

//
func (r *OnenoteSectionCopyToNotebookRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteSectionCopyToNotebookRequest) Post() (*OnenoteOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// CopyToSectionGroup undocumented
func (b *OnenoteSectionRequestBuilder) CopyToSectionGroup(reqObj *OnenoteSectionCopyToSectionGroupRequestObject) *OnenoteSectionCopyToSectionGroupRequestBuilder {
	bb := &OnenoteSectionCopyToSectionGroupRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/copyToSectionGroup"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type OnenoteSectionCopyToSectionGroupRequestBuilder struct{ BaseRequestBuilder }

//
func (b *OnenoteSectionCopyToSectionGroupRequestBuilder) Request() *OnenoteSectionCopyToSectionGroupRequest {
	return &OnenoteSectionCopyToSectionGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type OnenoteSectionCopyToSectionGroupRequest struct{ BaseRequest }

//
func (r *OnenoteSectionCopyToSectionGroupRequest) Do(method, path string, reqObj interface{}) (resObj *OnenoteOperation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *OnenoteSectionCopyToSectionGroupRequest) Post() (*OnenoteOperation, error) {
	return r.Do("POST", "", r.requestObject)
}

// AssignLicense undocumented
func (b *UserRequestBuilder) AssignLicense(reqObj *UserAssignLicenseRequestObject) *UserAssignLicenseRequestBuilder {
	bb := &UserAssignLicenseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assignLicense"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserAssignLicenseRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserAssignLicenseRequestBuilder) Request() *UserAssignLicenseRequest {
	return &UserAssignLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserAssignLicenseRequest struct{ BaseRequest }

//
func (r *UserAssignLicenseRequest) Do(method, path string, reqObj interface{}) (resObj *User, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserAssignLicenseRequest) Post() (*User, error) {
	return r.Do("POST", "", r.requestObject)
}

// ChangePassword undocumented
func (b *UserRequestBuilder) ChangePassword(reqObj *UserChangePasswordRequestObject) *UserChangePasswordRequestBuilder {
	bb := &UserChangePasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/changePassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserChangePasswordRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserChangePasswordRequestBuilder) Request() *UserChangePasswordRequest {
	return &UserChangePasswordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserChangePasswordRequest struct{ BaseRequest }

//
func (r *UserChangePasswordRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *UserChangePasswordRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RevokeSignInSessions undocumented
func (b *UserRequestBuilder) RevokeSignInSessions(reqObj *UserRevokeSignInSessionsRequestObject) *UserRevokeSignInSessionsRequestBuilder {
	bb := &UserRevokeSignInSessionsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/revokeSignInSessions"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserRevokeSignInSessionsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserRevokeSignInSessionsRequestBuilder) Request() *UserRevokeSignInSessionsRequest {
	return &UserRevokeSignInSessionsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserRevokeSignInSessionsRequest struct{ BaseRequest }

//
func (r *UserRevokeSignInSessionsRequest) Do(method, path string, reqObj interface{}) (resObj *bool, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserRevokeSignInSessionsRequest) Post() (*bool, error) {
	return r.Do("POST", "", r.requestObject)
}

// FindMeetingTimes undocumented
func (b *UserRequestBuilder) FindMeetingTimes(reqObj *UserFindMeetingTimesRequestObject) *UserFindMeetingTimesRequestBuilder {
	bb := &UserFindMeetingTimesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/findMeetingTimes"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserFindMeetingTimesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserFindMeetingTimesRequestBuilder) Request() *UserFindMeetingTimesRequest {
	return &UserFindMeetingTimesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserFindMeetingTimesRequest struct{ BaseRequest }

//
func (r *UserFindMeetingTimesRequest) Do(method, path string, reqObj interface{}) (resObj *MeetingTimeSuggestionsResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserFindMeetingTimesRequest) Post() (*MeetingTimeSuggestionsResult, error) {
	return r.Do("POST", "", r.requestObject)
}

// SendMail undocumented
func (b *UserRequestBuilder) SendMail(reqObj *UserSendMailRequestObject) *UserSendMailRequestBuilder {
	bb := &UserSendMailRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sendMail"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserSendMailRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserSendMailRequestBuilder) Request() *UserSendMailRequest {
	return &UserSendMailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserSendMailRequest struct{ BaseRequest }

//
func (r *UserSendMailRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *UserSendMailRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// GetMailTips undocumented
func (b *UserRequestBuilder) GetMailTips(reqObj *UserGetMailTipsRequestObject) *UserGetMailTipsRequestBuilder {
	bb := &UserGetMailTipsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getMailTips"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserGetMailTipsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserGetMailTipsRequestBuilder) Request() *UserGetMailTipsRequest {
	return &UserGetMailTipsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserGetMailTipsRequest struct{ BaseRequest }

//
func (r *UserGetMailTipsRequest) Do(method, path string, reqObj interface{}) (resObj *[]MailTips, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserGetMailTipsRequest) Paging(method, path string, obj interface{}) ([][]MailTips, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]MailTips
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]MailTips
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserGetMailTipsRequest) Get() ([][]MailTips, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// TranslateExchangeIds undocumented
func (b *UserRequestBuilder) TranslateExchangeIds(reqObj *UserTranslateExchangeIdsRequestObject) *UserTranslateExchangeIdsRequestBuilder {
	bb := &UserTranslateExchangeIdsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/translateExchangeIds"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserTranslateExchangeIdsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserTranslateExchangeIdsRequestBuilder) Request() *UserTranslateExchangeIdsRequest {
	return &UserTranslateExchangeIdsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserTranslateExchangeIdsRequest struct{ BaseRequest }

//
func (r *UserTranslateExchangeIdsRequest) Do(method, path string, reqObj interface{}) (resObj *[]ConvertIdResult, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *UserTranslateExchangeIdsRequest) Paging(method, path string, obj interface{}) ([][]ConvertIdResult, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]ConvertIdResult
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]ConvertIdResult
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *UserTranslateExchangeIdsRequest) Get() ([][]ConvertIdResult, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// RemoveAllDevicesFromManagement undocumented
func (b *UserRequestBuilder) RemoveAllDevicesFromManagement(reqObj *UserRemoveAllDevicesFromManagementRequestObject) *UserRemoveAllDevicesFromManagementRequestBuilder {
	bb := &UserRemoveAllDevicesFromManagementRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/removeAllDevicesFromManagement"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserRemoveAllDevicesFromManagementRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserRemoveAllDevicesFromManagementRequestBuilder) Request() *UserRemoveAllDevicesFromManagementRequest {
	return &UserRemoveAllDevicesFromManagementRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserRemoveAllDevicesFromManagementRequest struct{ BaseRequest }

//
func (r *UserRemoveAllDevicesFromManagementRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *UserRemoveAllDevicesFromManagementRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// WipeManagedAppRegistrationsByDeviceTag undocumented
func (b *UserRequestBuilder) WipeManagedAppRegistrationsByDeviceTag(reqObj *UserWipeManagedAppRegistrationsByDeviceTagRequestObject) *UserWipeManagedAppRegistrationsByDeviceTagRequestBuilder {
	bb := &UserWipeManagedAppRegistrationsByDeviceTagRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/wipeManagedAppRegistrationsByDeviceTag"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserWipeManagedAppRegistrationsByDeviceTagRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserWipeManagedAppRegistrationsByDeviceTagRequestBuilder) Request() *UserWipeManagedAppRegistrationsByDeviceTagRequest {
	return &UserWipeManagedAppRegistrationsByDeviceTagRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserWipeManagedAppRegistrationsByDeviceTagRequest struct{ BaseRequest }

//
func (r *UserWipeManagedAppRegistrationsByDeviceTagRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *UserWipeManagedAppRegistrationsByDeviceTagRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ExportPersonalData undocumented
func (b *UserRequestBuilder) ExportPersonalData(reqObj *UserExportPersonalDataRequestObject) *UserExportPersonalDataRequestBuilder {
	bb := &UserExportPersonalDataRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/exportPersonalData"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type UserExportPersonalDataRequestBuilder struct{ BaseRequestBuilder }

//
func (b *UserExportPersonalDataRequestBuilder) Request() *UserExportPersonalDataRequest {
	return &UserExportPersonalDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type UserExportPersonalDataRequest struct{ BaseRequest }

//
func (r *UserExportPersonalDataRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *UserExportPersonalDataRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SetData undocumented
func (b *WorkbookChartRequestBuilder) SetData(reqObj *WorkbookChartSetDataRequestObject) *WorkbookChartSetDataRequestBuilder {
	bb := &WorkbookChartSetDataRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/setData"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookChartSetDataRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartSetDataRequestBuilder) Request() *WorkbookChartSetDataRequest {
	return &WorkbookChartSetDataRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookChartSetDataRequest struct{ BaseRequest }

//
func (r *WorkbookChartSetDataRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookChartSetDataRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SetPosition undocumented
func (b *WorkbookChartRequestBuilder) SetPosition(reqObj *WorkbookChartSetPositionRequestObject) *WorkbookChartSetPositionRequestBuilder {
	bb := &WorkbookChartSetPositionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/setPosition"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookChartSetPositionRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartSetPositionRequestBuilder) Request() *WorkbookChartSetPositionRequest {
	return &WorkbookChartSetPositionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookChartSetPositionRequest struct{ BaseRequest }

//
func (r *WorkbookChartSetPositionRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookChartSetPositionRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Add undocumented
func (b *WorkbookNamesCollectionRequestBuilder) Add(reqObj *WorkbookNamedItemAddRequestObject) *WorkbookNamedItemAddRequestBuilder {
	bb := &WorkbookNamedItemAddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/add"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// Add undocumented
func (b *WorkbookWorksheetNamesCollectionRequestBuilder) Add(reqObj *WorkbookNamedItemAddRequestObject) *WorkbookNamedItemAddRequestBuilder {
	bb := &WorkbookNamedItemAddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/add"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookNamedItemAddRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookNamedItemAddRequestBuilder) Request() *WorkbookNamedItemAddRequest {
	return &WorkbookNamedItemAddRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookNamedItemAddRequest struct{ BaseRequest }

//
func (r *WorkbookNamedItemAddRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookNamedItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookNamedItemAddRequest) Post() (*WorkbookNamedItem, error) {
	return r.Do("POST", "", r.requestObject)
}

// AddFormulaLocal undocumented
func (b *WorkbookNamesCollectionRequestBuilder) AddFormulaLocal(reqObj *WorkbookNamedItemAddFormulaLocalRequestObject) *WorkbookNamedItemAddFormulaLocalRequestBuilder {
	bb := &WorkbookNamedItemAddFormulaLocalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/addFormulaLocal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// AddFormulaLocal undocumented
func (b *WorkbookWorksheetNamesCollectionRequestBuilder) AddFormulaLocal(reqObj *WorkbookNamedItemAddFormulaLocalRequestObject) *WorkbookNamedItemAddFormulaLocalRequestBuilder {
	bb := &WorkbookNamedItemAddFormulaLocalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/addFormulaLocal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookNamedItemAddFormulaLocalRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookNamedItemAddFormulaLocalRequestBuilder) Request() *WorkbookNamedItemAddFormulaLocalRequest {
	return &WorkbookNamedItemAddFormulaLocalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookNamedItemAddFormulaLocalRequest struct{ BaseRequest }

//
func (r *WorkbookNamedItemAddFormulaLocalRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookNamedItem, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookNamedItemAddFormulaLocalRequest) Post() (*WorkbookNamedItem, error) {
	return r.Do("POST", "", r.requestObject)
}

// RefreshAll undocumented
func (b *WorkbookWorksheetPivotTablesCollectionRequestBuilder) RefreshAll(reqObj *WorkbookPivotTableRefreshAllRequestObject) *WorkbookPivotTableRefreshAllRequestBuilder {
	bb := &WorkbookPivotTableRefreshAllRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/refreshAll"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookPivotTableRefreshAllRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookPivotTableRefreshAllRequestBuilder) Request() *WorkbookPivotTableRefreshAllRequest {
	return &WorkbookPivotTableRefreshAllRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookPivotTableRefreshAllRequest struct{ BaseRequest }

//
func (r *WorkbookPivotTableRefreshAllRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookPivotTableRefreshAllRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Reply undocumented
func (b *PostRequestBuilder) Reply(reqObj *PostReplyRequestObject) *PostReplyRequestBuilder {
	bb := &PostReplyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reply"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type PostReplyRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PostReplyRequestBuilder) Request() *PostReplyRequest {
	return &PostReplyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type PostReplyRequest struct{ BaseRequest }

//
func (r *PostReplyRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *PostReplyRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Forward undocumented
func (b *PostRequestBuilder) Forward(reqObj *PostForwardRequestObject) *PostForwardRequestBuilder {
	bb := &PostForwardRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/forward"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type PostForwardRequestBuilder struct{ BaseRequestBuilder }

//
func (b *PostForwardRequestBuilder) Request() *PostForwardRequest {
	return &PostForwardRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type PostForwardRequest struct{ BaseRequest }

//
func (r *PostForwardRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *PostForwardRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) Assign(reqObj *ManagedDeviceMobileAppConfigurationAssignRequestObject) *ManagedDeviceMobileAppConfigurationAssignRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceMobileAppConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceMobileAppConfigurationAssignRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationAssignRequest {
	return &ManagedDeviceMobileAppConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceMobileAppConfigurationAssignRequest struct{ BaseRequest }

//
func (r *ManagedDeviceMobileAppConfigurationAssignRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceMobileAppConfigurationAssignRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// TargetApps undocumented
func (b *ManagedAppProtectionRequestBuilder) TargetApps(reqObj *ManagedAppProtectionTargetAppsRequestObject) *ManagedAppProtectionTargetAppsRequestBuilder {
	bb := &ManagedAppProtectionTargetAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/targetApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedAppProtectionTargetAppsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedAppProtectionTargetAppsRequestBuilder) Request() *ManagedAppProtectionTargetAppsRequest {
	return &ManagedAppProtectionTargetAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedAppProtectionTargetAppsRequest struct{ BaseRequest }

//
func (r *ManagedAppProtectionTargetAppsRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedAppProtectionTargetAppsRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Add undocumented
func (b *WorkbookWorksheetChartsCollectionRequestBuilder) Add(reqObj *WorkbookChartAddRequestObject) *WorkbookChartAddRequestBuilder {
	bb := &WorkbookChartAddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/add"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookChartAddRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookChartAddRequestBuilder) Request() *WorkbookChartAddRequest {
	return &WorkbookChartAddRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookChartAddRequest struct{ BaseRequest }

//
func (r *WorkbookChartAddRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookChart, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookChartAddRequest) Post() (*WorkbookChart, error) {
	return r.Do("POST", "", r.requestObject)
}

// GetSchedule undocumented
func (b *CalendarRequestBuilder) GetSchedule(reqObj *CalendarGetScheduleRequestObject) *CalendarGetScheduleRequestBuilder {
	bb := &CalendarGetScheduleRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getSchedule"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CalendarGetScheduleRequestBuilder struct{ BaseRequestBuilder }

//
func (b *CalendarGetScheduleRequestBuilder) Request() *CalendarGetScheduleRequest {
	return &CalendarGetScheduleRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type CalendarGetScheduleRequest struct{ BaseRequest }

//
func (r *CalendarGetScheduleRequest) Do(method, path string, reqObj interface{}) (resObj *[]ScheduleInformation, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *CalendarGetScheduleRequest) Paging(method, path string, obj interface{}) ([][]ScheduleInformation, error) {
	req, err := r.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values [][]ScheduleInformation
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  [][]ScheduleInformation
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CalendarGetScheduleRequest) Get() ([][]ScheduleInformation, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// Sync undocumented
func (b *DeviceManagementExchangeConnectorRequestBuilder) Sync(reqObj *DeviceManagementExchangeConnectorSyncRequestObject) *DeviceManagementExchangeConnectorSyncRequestBuilder {
	bb := &DeviceManagementExchangeConnectorSyncRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sync"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DeviceManagementExchangeConnectorSyncRequestBuilder struct{ BaseRequestBuilder }

//
func (b *DeviceManagementExchangeConnectorSyncRequestBuilder) Request() *DeviceManagementExchangeConnectorSyncRequest {
	return &DeviceManagementExchangeConnectorSyncRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type DeviceManagementExchangeConnectorSyncRequest struct{ BaseRequest }

//
func (r *DeviceManagementExchangeConnectorSyncRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DeviceManagementExchangeConnectorSyncRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ValidateProperties undocumented
func (b *GroupRequestBuilder) ValidateProperties(reqObj *GroupValidatePropertiesRequestObject) *GroupValidatePropertiesRequestBuilder {
	bb := &GroupValidatePropertiesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/validateProperties"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupValidatePropertiesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupValidatePropertiesRequestBuilder) Request() *GroupValidatePropertiesRequest {
	return &GroupValidatePropertiesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupValidatePropertiesRequest struct{ BaseRequest }

//
func (r *GroupValidatePropertiesRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *GroupValidatePropertiesRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SubscribeByMail undocumented
func (b *GroupRequestBuilder) SubscribeByMail(reqObj *GroupSubscribeByMailRequestObject) *GroupSubscribeByMailRequestBuilder {
	bb := &GroupSubscribeByMailRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/subscribeByMail"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupSubscribeByMailRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupSubscribeByMailRequestBuilder) Request() *GroupSubscribeByMailRequest {
	return &GroupSubscribeByMailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupSubscribeByMailRequest struct{ BaseRequest }

//
func (r *GroupSubscribeByMailRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *GroupSubscribeByMailRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// UnsubscribeByMail undocumented
func (b *GroupRequestBuilder) UnsubscribeByMail(reqObj *GroupUnsubscribeByMailRequestObject) *GroupUnsubscribeByMailRequestBuilder {
	bb := &GroupUnsubscribeByMailRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/unsubscribeByMail"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupUnsubscribeByMailRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupUnsubscribeByMailRequestBuilder) Request() *GroupUnsubscribeByMailRequest {
	return &GroupUnsubscribeByMailRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupUnsubscribeByMailRequest struct{ BaseRequest }

//
func (r *GroupUnsubscribeByMailRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *GroupUnsubscribeByMailRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// AddFavorite undocumented
func (b *GroupRequestBuilder) AddFavorite(reqObj *GroupAddFavoriteRequestObject) *GroupAddFavoriteRequestBuilder {
	bb := &GroupAddFavoriteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/addFavorite"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupAddFavoriteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupAddFavoriteRequestBuilder) Request() *GroupAddFavoriteRequest {
	return &GroupAddFavoriteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupAddFavoriteRequest struct{ BaseRequest }

//
func (r *GroupAddFavoriteRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *GroupAddFavoriteRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RemoveFavorite undocumented
func (b *GroupRequestBuilder) RemoveFavorite(reqObj *GroupRemoveFavoriteRequestObject) *GroupRemoveFavoriteRequestBuilder {
	bb := &GroupRemoveFavoriteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/removeFavorite"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupRemoveFavoriteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupRemoveFavoriteRequestBuilder) Request() *GroupRemoveFavoriteRequest {
	return &GroupRemoveFavoriteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupRemoveFavoriteRequest struct{ BaseRequest }

//
func (r *GroupRemoveFavoriteRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *GroupRemoveFavoriteRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ResetUnseenCount undocumented
func (b *GroupRequestBuilder) ResetUnseenCount(reqObj *GroupResetUnseenCountRequestObject) *GroupResetUnseenCountRequestBuilder {
	bb := &GroupResetUnseenCountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/resetUnseenCount"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupResetUnseenCountRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupResetUnseenCountRequestBuilder) Request() *GroupResetUnseenCountRequest {
	return &GroupResetUnseenCountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupResetUnseenCountRequest struct{ BaseRequest }

//
func (r *GroupResetUnseenCountRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *GroupResetUnseenCountRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Renew undocumented
func (b *GroupRequestBuilder) Renew(reqObj *GroupRenewRequestObject) *GroupRenewRequestBuilder {
	bb := &GroupRenewRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/renew"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupRenewRequestBuilder struct{ BaseRequestBuilder }

//
func (b *GroupRenewRequestBuilder) Request() *GroupRenewRequest {
	return &GroupRenewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type GroupRenewRequest struct{ BaseRequest }

//
func (r *GroupRenewRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *GroupRenewRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Clear undocumented
func (b *WorkbookRangeRequestBuilder) Clear(reqObj *WorkbookRangeClearRequestObject) *WorkbookRangeClearRequestBuilder {
	bb := &WorkbookRangeClearRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clear"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeClearRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeClearRequestBuilder) Request() *WorkbookRangeClearRequest {
	return &WorkbookRangeClearRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeClearRequest struct{ BaseRequest }

//
func (r *WorkbookRangeClearRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRangeClearRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Delete undocumented
func (b *WorkbookRangeRequestBuilder) Delete(reqObj *WorkbookRangeDeleteRequestObject) *WorkbookRangeDeleteRequestBuilder {
	bb := &WorkbookRangeDeleteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/delete"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeDeleteRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeDeleteRequestBuilder) Request() *WorkbookRangeDeleteRequest {
	return &WorkbookRangeDeleteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeDeleteRequest struct{ BaseRequest }

//
func (r *WorkbookRangeDeleteRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRangeDeleteRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Insert undocumented
func (b *WorkbookRangeRequestBuilder) Insert(reqObj *WorkbookRangeInsertRequestObject) *WorkbookRangeInsertRequestBuilder {
	bb := &WorkbookRangeInsertRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/insert"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeInsertRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeInsertRequestBuilder) Request() *WorkbookRangeInsertRequest {
	return &WorkbookRangeInsertRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeInsertRequest struct{ BaseRequest }

//
func (r *WorkbookRangeInsertRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookRange, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookRangeInsertRequest) Post() (*WorkbookRange, error) {
	return r.Do("POST", "", r.requestObject)
}

// Merge undocumented
func (b *WorkbookRangeRequestBuilder) Merge(reqObj *WorkbookRangeMergeRequestObject) *WorkbookRangeMergeRequestBuilder {
	bb := &WorkbookRangeMergeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/merge"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeMergeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeMergeRequestBuilder) Request() *WorkbookRangeMergeRequest {
	return &WorkbookRangeMergeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeMergeRequest struct{ BaseRequest }

//
func (r *WorkbookRangeMergeRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRangeMergeRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Unmerge undocumented
func (b *WorkbookRangeRequestBuilder) Unmerge(reqObj *WorkbookRangeUnmergeRequestObject) *WorkbookRangeUnmergeRequestBuilder {
	bb := &WorkbookRangeUnmergeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/unmerge"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeUnmergeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeUnmergeRequestBuilder) Request() *WorkbookRangeUnmergeRequest {
	return &WorkbookRangeUnmergeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeUnmergeRequest struct{ BaseRequest }

//
func (r *WorkbookRangeUnmergeRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRangeUnmergeRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Clear undocumented
func (b *WorkbookRangeFillRequestBuilder) Clear(reqObj *WorkbookRangeFillClearRequestObject) *WorkbookRangeFillClearRequestBuilder {
	bb := &WorkbookRangeFillClearRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/clear"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeFillClearRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeFillClearRequestBuilder) Request() *WorkbookRangeFillClearRequest {
	return &WorkbookRangeFillClearRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeFillClearRequest struct{ BaseRequest }

//
func (r *WorkbookRangeFillClearRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRangeFillClearRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Add undocumented
func (b *WorkbookTablesCollectionRequestBuilder) Add(reqObj *WorkbookTableAddRequestObject) *WorkbookTableAddRequestBuilder {
	bb := &WorkbookTableAddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/add"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// Add undocumented
func (b *WorkbookWorksheetTablesCollectionRequestBuilder) Add(reqObj *WorkbookTableAddRequestObject) *WorkbookTableAddRequestBuilder {
	bb := &WorkbookTableAddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/add"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableAddRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableAddRequestBuilder) Request() *WorkbookTableAddRequest {
	return &WorkbookTableAddRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableAddRequest struct{ BaseRequest }

//
func (r *WorkbookTableAddRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTable, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableAddRequest) Post() (*WorkbookTable, error) {
	return r.Do("POST", "", r.requestObject)
}

// Add undocumented
func (b *WorkbookTableRowsCollectionRequestBuilder) Add(reqObj *WorkbookTableRowAddRequestObject) *WorkbookTableRowAddRequestBuilder {
	bb := &WorkbookTableRowAddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/add"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookTableRowAddRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookTableRowAddRequestBuilder) Request() *WorkbookTableRowAddRequest {
	return &WorkbookTableRowAddRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookTableRowAddRequest struct{ BaseRequest }

//
func (r *WorkbookTableRowAddRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookTableRow, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookTableRowAddRequest) Post() (*WorkbookTableRow, error) {
	return r.Do("POST", "", r.requestObject)
}

// Retire undocumented
func (b *ManagedDeviceRequestBuilder) Retire(reqObj *ManagedDeviceRetireRequestObject) *ManagedDeviceRetireRequestBuilder {
	bb := &ManagedDeviceRetireRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/retire"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRetireRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceRetireRequestBuilder) Request() *ManagedDeviceRetireRequest {
	return &ManagedDeviceRetireRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceRetireRequest struct{ BaseRequest }

//
func (r *ManagedDeviceRetireRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceRetireRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Wipe undocumented
func (b *ManagedDeviceRequestBuilder) Wipe(reqObj *ManagedDeviceWipeRequestObject) *ManagedDeviceWipeRequestBuilder {
	bb := &ManagedDeviceWipeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/wipe"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceWipeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceWipeRequestBuilder) Request() *ManagedDeviceWipeRequest {
	return &ManagedDeviceWipeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceWipeRequest struct{ BaseRequest }

//
func (r *ManagedDeviceWipeRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceWipeRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ResetPasscode undocumented
func (b *ManagedDeviceRequestBuilder) ResetPasscode(reqObj *ManagedDeviceResetPasscodeRequestObject) *ManagedDeviceResetPasscodeRequestBuilder {
	bb := &ManagedDeviceResetPasscodeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/resetPasscode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceResetPasscodeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceResetPasscodeRequestBuilder) Request() *ManagedDeviceResetPasscodeRequest {
	return &ManagedDeviceResetPasscodeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceResetPasscodeRequest struct{ BaseRequest }

//
func (r *ManagedDeviceResetPasscodeRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceResetPasscodeRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RemoteLock undocumented
func (b *ManagedDeviceRequestBuilder) RemoteLock(reqObj *ManagedDeviceRemoteLockRequestObject) *ManagedDeviceRemoteLockRequestBuilder {
	bb := &ManagedDeviceRemoteLockRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/remoteLock"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRemoteLockRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceRemoteLockRequestBuilder) Request() *ManagedDeviceRemoteLockRequest {
	return &ManagedDeviceRemoteLockRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceRemoteLockRequest struct{ BaseRequest }

//
func (r *ManagedDeviceRemoteLockRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceRemoteLockRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RequestRemoteAssistance undocumented
func (b *ManagedDeviceRequestBuilder) RequestRemoteAssistance(reqObj *ManagedDeviceRequestRemoteAssistanceRequestObject) *ManagedDeviceRequestRemoteAssistanceRequestBuilder {
	bb := &ManagedDeviceRequestRemoteAssistanceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/requestRemoteAssistance"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRequestRemoteAssistanceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceRequestRemoteAssistanceRequestBuilder) Request() *ManagedDeviceRequestRemoteAssistanceRequest {
	return &ManagedDeviceRequestRemoteAssistanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceRequestRemoteAssistanceRequest struct{ BaseRequest }

//
func (r *ManagedDeviceRequestRemoteAssistanceRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceRequestRemoteAssistanceRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// DisableLostMode undocumented
func (b *ManagedDeviceRequestBuilder) DisableLostMode(reqObj *ManagedDeviceDisableLostModeRequestObject) *ManagedDeviceDisableLostModeRequestBuilder {
	bb := &ManagedDeviceDisableLostModeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/disableLostMode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceDisableLostModeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceDisableLostModeRequestBuilder) Request() *ManagedDeviceDisableLostModeRequest {
	return &ManagedDeviceDisableLostModeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceDisableLostModeRequest struct{ BaseRequest }

//
func (r *ManagedDeviceDisableLostModeRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceDisableLostModeRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// LocateDevice undocumented
func (b *ManagedDeviceRequestBuilder) LocateDevice(reqObj *ManagedDeviceLocateDeviceRequestObject) *ManagedDeviceLocateDeviceRequestBuilder {
	bb := &ManagedDeviceLocateDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/locateDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceLocateDeviceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceLocateDeviceRequestBuilder) Request() *ManagedDeviceLocateDeviceRequest {
	return &ManagedDeviceLocateDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceLocateDeviceRequest struct{ BaseRequest }

//
func (r *ManagedDeviceLocateDeviceRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceLocateDeviceRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// BypassActivationLock undocumented
func (b *ManagedDeviceRequestBuilder) BypassActivationLock(reqObj *ManagedDeviceBypassActivationLockRequestObject) *ManagedDeviceBypassActivationLockRequestBuilder {
	bb := &ManagedDeviceBypassActivationLockRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bypassActivationLock"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceBypassActivationLockRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceBypassActivationLockRequestBuilder) Request() *ManagedDeviceBypassActivationLockRequest {
	return &ManagedDeviceBypassActivationLockRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceBypassActivationLockRequest struct{ BaseRequest }

//
func (r *ManagedDeviceBypassActivationLockRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceBypassActivationLockRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RebootNow undocumented
func (b *ManagedDeviceRequestBuilder) RebootNow(reqObj *ManagedDeviceRebootNowRequestObject) *ManagedDeviceRebootNowRequestBuilder {
	bb := &ManagedDeviceRebootNowRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rebootNow"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRebootNowRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceRebootNowRequestBuilder) Request() *ManagedDeviceRebootNowRequest {
	return &ManagedDeviceRebootNowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceRebootNowRequest struct{ BaseRequest }

//
func (r *ManagedDeviceRebootNowRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceRebootNowRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// ShutDown undocumented
func (b *ManagedDeviceRequestBuilder) ShutDown(reqObj *ManagedDeviceShutDownRequestObject) *ManagedDeviceShutDownRequestBuilder {
	bb := &ManagedDeviceShutDownRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/shutDown"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceShutDownRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceShutDownRequestBuilder) Request() *ManagedDeviceShutDownRequest {
	return &ManagedDeviceShutDownRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceShutDownRequest struct{ BaseRequest }

//
func (r *ManagedDeviceShutDownRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceShutDownRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// RecoverPasscode undocumented
func (b *ManagedDeviceRequestBuilder) RecoverPasscode(reqObj *ManagedDeviceRecoverPasscodeRequestObject) *ManagedDeviceRecoverPasscodeRequestBuilder {
	bb := &ManagedDeviceRecoverPasscodeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/recoverPasscode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRecoverPasscodeRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceRecoverPasscodeRequestBuilder) Request() *ManagedDeviceRecoverPasscodeRequest {
	return &ManagedDeviceRecoverPasscodeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceRecoverPasscodeRequest struct{ BaseRequest }

//
func (r *ManagedDeviceRecoverPasscodeRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceRecoverPasscodeRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// CleanWindowsDevice undocumented
func (b *ManagedDeviceRequestBuilder) CleanWindowsDevice(reqObj *ManagedDeviceCleanWindowsDeviceRequestObject) *ManagedDeviceCleanWindowsDeviceRequestBuilder {
	bb := &ManagedDeviceCleanWindowsDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cleanWindowsDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceCleanWindowsDeviceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceCleanWindowsDeviceRequestBuilder) Request() *ManagedDeviceCleanWindowsDeviceRequest {
	return &ManagedDeviceCleanWindowsDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceCleanWindowsDeviceRequest struct{ BaseRequest }

//
func (r *ManagedDeviceCleanWindowsDeviceRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceCleanWindowsDeviceRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// LogoutSharedAppleDeviceActiveUser undocumented
func (b *ManagedDeviceRequestBuilder) LogoutSharedAppleDeviceActiveUser(reqObj *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestObject) *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder {
	bb := &ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/logoutSharedAppleDeviceActiveUser"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder) Request() *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest {
	return &ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest struct{ BaseRequest }

//
func (r *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// DeleteUserFromSharedAppleDevice undocumented
func (b *ManagedDeviceRequestBuilder) DeleteUserFromSharedAppleDevice(reqObj *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestObject) *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder {
	bb := &ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/deleteUserFromSharedAppleDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder) Request() *ManagedDeviceDeleteUserFromSharedAppleDeviceRequest {
	return &ManagedDeviceDeleteUserFromSharedAppleDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceDeleteUserFromSharedAppleDeviceRequest struct{ BaseRequest }

//
func (r *ManagedDeviceDeleteUserFromSharedAppleDeviceRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceDeleteUserFromSharedAppleDeviceRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// SyncDevice undocumented
func (b *ManagedDeviceRequestBuilder) SyncDevice(reqObj *ManagedDeviceSyncDeviceRequestObject) *ManagedDeviceSyncDeviceRequestBuilder {
	bb := &ManagedDeviceSyncDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/syncDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceSyncDeviceRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceSyncDeviceRequestBuilder) Request() *ManagedDeviceSyncDeviceRequest {
	return &ManagedDeviceSyncDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceSyncDeviceRequest struct{ BaseRequest }

//
func (r *ManagedDeviceSyncDeviceRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceSyncDeviceRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// WindowsDefenderScan undocumented
func (b *ManagedDeviceRequestBuilder) WindowsDefenderScan(reqObj *ManagedDeviceWindowsDefenderScanRequestObject) *ManagedDeviceWindowsDefenderScanRequestBuilder {
	bb := &ManagedDeviceWindowsDefenderScanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/windowsDefenderScan"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceWindowsDefenderScanRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceWindowsDefenderScanRequestBuilder) Request() *ManagedDeviceWindowsDefenderScanRequest {
	return &ManagedDeviceWindowsDefenderScanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceWindowsDefenderScanRequest struct{ BaseRequest }

//
func (r *ManagedDeviceWindowsDefenderScanRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceWindowsDefenderScanRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// WindowsDefenderUpdateSignatures undocumented
func (b *ManagedDeviceRequestBuilder) WindowsDefenderUpdateSignatures(reqObj *ManagedDeviceWindowsDefenderUpdateSignaturesRequestObject) *ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder {
	bb := &ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/windowsDefenderUpdateSignatures"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder) Request() *ManagedDeviceWindowsDefenderUpdateSignaturesRequest {
	return &ManagedDeviceWindowsDefenderUpdateSignaturesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceWindowsDefenderUpdateSignaturesRequest struct{ BaseRequest }

//
func (r *ManagedDeviceWindowsDefenderUpdateSignaturesRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceWindowsDefenderUpdateSignaturesRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// UpdateWindowsDeviceAccount undocumented
func (b *ManagedDeviceRequestBuilder) UpdateWindowsDeviceAccount(reqObj *ManagedDeviceUpdateWindowsDeviceAccountRequestObject) *ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder {
	bb := &ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/updateWindowsDeviceAccount"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder struct{ BaseRequestBuilder }

//
func (b *ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder) Request() *ManagedDeviceUpdateWindowsDeviceAccountRequest {
	return &ManagedDeviceUpdateWindowsDeviceAccountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type ManagedDeviceUpdateWindowsDeviceAccountRequest struct{ BaseRequest }

//
func (r *ManagedDeviceUpdateWindowsDeviceAccountRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *ManagedDeviceUpdateWindowsDeviceAccountRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// AutofitColumns undocumented
func (b *WorkbookRangeFormatRequestBuilder) AutofitColumns(reqObj *WorkbookRangeFormatAutofitColumnsRequestObject) *WorkbookRangeFormatAutofitColumnsRequestBuilder {
	bb := &WorkbookRangeFormatAutofitColumnsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/autofitColumns"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeFormatAutofitColumnsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeFormatAutofitColumnsRequestBuilder) Request() *WorkbookRangeFormatAutofitColumnsRequest {
	return &WorkbookRangeFormatAutofitColumnsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeFormatAutofitColumnsRequest struct{ BaseRequest }

//
func (r *WorkbookRangeFormatAutofitColumnsRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRangeFormatAutofitColumnsRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// AutofitRows undocumented
func (b *WorkbookRangeFormatRequestBuilder) AutofitRows(reqObj *WorkbookRangeFormatAutofitRowsRequestObject) *WorkbookRangeFormatAutofitRowsRequestBuilder {
	bb := &WorkbookRangeFormatAutofitRowsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/autofitRows"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookRangeFormatAutofitRowsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookRangeFormatAutofitRowsRequestBuilder) Request() *WorkbookRangeFormatAutofitRowsRequest {
	return &WorkbookRangeFormatAutofitRowsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookRangeFormatAutofitRowsRequest struct{ BaseRequest }

//
func (r *WorkbookRangeFormatAutofitRowsRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *WorkbookRangeFormatAutofitRowsRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// Add undocumented
func (b *WorkbookWorksheetsCollectionRequestBuilder) Add(reqObj *WorkbookWorksheetAddRequestObject) *WorkbookWorksheetAddRequestBuilder {
	bb := &WorkbookWorksheetAddRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/add"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookWorksheetAddRequestBuilder struct{ BaseRequestBuilder }

//
func (b *WorkbookWorksheetAddRequestBuilder) Request() *WorkbookWorksheetAddRequest {
	return &WorkbookWorksheetAddRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type WorkbookWorksheetAddRequest struct{ BaseRequest }

//
func (r *WorkbookWorksheetAddRequest) Do(method, path string, reqObj interface{}) (resObj *WorkbookWorksheet, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *WorkbookWorksheetAddRequest) Post() (*WorkbookWorksheet, error) {
	return r.Do("POST", "", r.requestObject)
}

// Assign undocumented
func (b *TargetedManagedAppConfigurationRequestBuilder) Assign(reqObj *TargetedManagedAppConfigurationAssignRequestObject) *TargetedManagedAppConfigurationAssignRequestBuilder {
	bb := &TargetedManagedAppConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type TargetedManagedAppConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppConfigurationAssignRequestBuilder) Request() *TargetedManagedAppConfigurationAssignRequest {
	return &TargetedManagedAppConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type TargetedManagedAppConfigurationAssignRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppConfigurationAssignRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *TargetedManagedAppConfigurationAssignRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

// TargetApps undocumented
func (b *TargetedManagedAppConfigurationRequestBuilder) TargetApps(reqObj *TargetedManagedAppConfigurationTargetAppsRequestObject) *TargetedManagedAppConfigurationTargetAppsRequestBuilder {
	bb := &TargetedManagedAppConfigurationTargetAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/targetApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type TargetedManagedAppConfigurationTargetAppsRequestBuilder struct{ BaseRequestBuilder }

//
func (b *TargetedManagedAppConfigurationTargetAppsRequestBuilder) Request() *TargetedManagedAppConfigurationTargetAppsRequest {
	return &TargetedManagedAppConfigurationTargetAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
type TargetedManagedAppConfigurationTargetAppsRequest struct{ BaseRequest }

//
func (r *TargetedManagedAppConfigurationTargetAppsRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *TargetedManagedAppConfigurationTargetAppsRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}
