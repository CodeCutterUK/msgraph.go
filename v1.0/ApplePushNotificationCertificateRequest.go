// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// ApplePushNotificationCertificateRequestBuilder is request builder for ApplePushNotificationCertificate
type ApplePushNotificationCertificateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ApplePushNotificationCertificateRequest
func (b *ApplePushNotificationCertificateRequestBuilder) Request() *ApplePushNotificationCertificateRequest {
	return &ApplePushNotificationCertificateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ApplePushNotificationCertificateRequest is request for ApplePushNotificationCertificate
type ApplePushNotificationCertificateRequest struct{ BaseRequest }

// Do performs HTTP request for ApplePushNotificationCertificate
func (r *ApplePushNotificationCertificateRequest) Do(method, path string, reqObj interface{}) (resObj *ApplePushNotificationCertificate, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

// Get performs GET request for ApplePushNotificationCertificate
func (r *ApplePushNotificationCertificateRequest) Get() (*ApplePushNotificationCertificate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

// Update performs PATCH request for ApplePushNotificationCertificate
func (r *ApplePushNotificationCertificateRequest) Update(reqObj *ApplePushNotificationCertificate) (*ApplePushNotificationCertificate, error) {
	return r.Do("PATCH", "", reqObj)
}

// Delete performs DELETE request for ApplePushNotificationCertificate
func (r *ApplePushNotificationCertificateRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}
