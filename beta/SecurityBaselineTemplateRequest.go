// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/yaegashi/msgraph.go/jsonx"
)

// SecurityBaselineTemplateRequestBuilder is request builder for SecurityBaselineTemplate
type SecurityBaselineTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns SecurityBaselineTemplateRequest
func (b *SecurityBaselineTemplateRequestBuilder) Request() *SecurityBaselineTemplateRequest {
	return &SecurityBaselineTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SecurityBaselineTemplateRequest is request for SecurityBaselineTemplate
type SecurityBaselineTemplateRequest struct{ BaseRequest }

// Do performs HTTP request for SecurityBaselineTemplate
func (r *SecurityBaselineTemplateRequest) Do(method, path string, reqObj interface{}) (resObj *SecurityBaselineTemplate, err error) {
	err = r.JSONRequest(method, path, reqObj, &resObj)
	return
}

// Get performs GET request for SecurityBaselineTemplate
func (r *SecurityBaselineTemplateRequest) Get() (*SecurityBaselineTemplate, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

// Update performs PATCH request for SecurityBaselineTemplate
func (r *SecurityBaselineTemplateRequest) Update(reqObj *SecurityBaselineTemplate) (*SecurityBaselineTemplate, error) {
	return r.Do("PATCH", "", reqObj)
}

// Delete performs DELETE request for SecurityBaselineTemplate
func (r *SecurityBaselineTemplateRequest) Delete() error {
	return r.JSONRequest("DELETE", "", nil, nil)
}

// CategoryDeviceStateSummaries returns request builder for SecurityBaselineCategoryStateSummary collection
func (b *SecurityBaselineTemplateRequestBuilder) CategoryDeviceStateSummaries() *SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequestBuilder {
	bb := &SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/categoryDeviceStateSummaries"
	return bb
}

// SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequestBuilder is request builder for SecurityBaselineCategoryStateSummary collection
type SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for SecurityBaselineCategoryStateSummary collection
func (b *SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequestBuilder) Request() *SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequest {
	return &SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for SecurityBaselineCategoryStateSummary item
func (b *SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequestBuilder) ID(id string) *SecurityBaselineCategoryStateSummaryRequestBuilder {
	bb := &SecurityBaselineCategoryStateSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequest is request for SecurityBaselineCategoryStateSummary collection
type SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequest struct{ BaseRequest }

// Do performs HTTP request for SecurityBaselineCategoryStateSummary collection
func (r *SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SecurityBaselineCategoryStateSummary, err error) {
	err = r.JSONRequest(method, path, reqObj, &resObj)
	return
}

// Paging perfoms paging operation for SecurityBaselineCategoryStateSummary collection
func (r *SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequest) Paging(method, path string, obj interface{}) ([]SecurityBaselineCategoryStateSummary, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SecurityBaselineCategoryStateSummary
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SecurityBaselineCategoryStateSummary
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

// Get performs GET request for SecurityBaselineCategoryStateSummary collection
func (r *SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequest) Get() ([]SecurityBaselineCategoryStateSummary, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// Add performs POST request for SecurityBaselineCategoryStateSummary collection
func (r *SecurityBaselineTemplateCategoryDeviceStateSummariesCollectionRequest) Add(reqObj *SecurityBaselineCategoryStateSummary) (*SecurityBaselineCategoryStateSummary, error) {
	return r.Do("POST", "", reqObj)
}

// DeviceStateSummary is navigation property
func (b *SecurityBaselineTemplateRequestBuilder) DeviceStateSummary() *SecurityBaselineStateSummaryRequestBuilder {
	bb := &SecurityBaselineStateSummaryRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStateSummary"
	return bb
}

// DeviceStates returns request builder for SecurityBaselineDeviceState collection
func (b *SecurityBaselineTemplateRequestBuilder) DeviceStates() *SecurityBaselineTemplateDeviceStatesCollectionRequestBuilder {
	bb := &SecurityBaselineTemplateDeviceStatesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/deviceStates"
	return bb
}

// SecurityBaselineTemplateDeviceStatesCollectionRequestBuilder is request builder for SecurityBaselineDeviceState collection
type SecurityBaselineTemplateDeviceStatesCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for SecurityBaselineDeviceState collection
func (b *SecurityBaselineTemplateDeviceStatesCollectionRequestBuilder) Request() *SecurityBaselineTemplateDeviceStatesCollectionRequest {
	return &SecurityBaselineTemplateDeviceStatesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for SecurityBaselineDeviceState item
func (b *SecurityBaselineTemplateDeviceStatesCollectionRequestBuilder) ID(id string) *SecurityBaselineDeviceStateRequestBuilder {
	bb := &SecurityBaselineDeviceStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// SecurityBaselineTemplateDeviceStatesCollectionRequest is request for SecurityBaselineDeviceState collection
type SecurityBaselineTemplateDeviceStatesCollectionRequest struct{ BaseRequest }

// Do performs HTTP request for SecurityBaselineDeviceState collection
func (r *SecurityBaselineTemplateDeviceStatesCollectionRequest) Do(method, path string, reqObj interface{}) (resObj *SecurityBaselineDeviceState, err error) {
	err = r.JSONRequest(method, path, reqObj, &resObj)
	return
}

// Paging perfoms paging operation for SecurityBaselineDeviceState collection
func (r *SecurityBaselineTemplateDeviceStatesCollectionRequest) Paging(method, path string, obj interface{}) ([]SecurityBaselineDeviceState, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SecurityBaselineDeviceState
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []SecurityBaselineDeviceState
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = r.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

// Get performs GET request for SecurityBaselineDeviceState collection
func (r *SecurityBaselineTemplateDeviceStatesCollectionRequest) Get() ([]SecurityBaselineDeviceState, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging("GET", query, nil)
}

// Add performs POST request for SecurityBaselineDeviceState collection
func (r *SecurityBaselineTemplateDeviceStatesCollectionRequest) Add(reqObj *SecurityBaselineDeviceState) (*SecurityBaselineDeviceState, error) {
	return r.Do("POST", "", reqObj)
}
