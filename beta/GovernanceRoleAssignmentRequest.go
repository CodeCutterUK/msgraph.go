// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// GovernanceRoleAssignmentRequestBuilder is request builder for GovernanceRoleAssignment
type GovernanceRoleAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns GovernanceRoleAssignmentRequest
func (b *GovernanceRoleAssignmentRequestBuilder) Request() *GovernanceRoleAssignmentRequest {
	return &GovernanceRoleAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GovernanceRoleAssignmentRequest is request for GovernanceRoleAssignment
type GovernanceRoleAssignmentRequest struct{ BaseRequest }

// Do performs HTTP request for GovernanceRoleAssignment
func (r *GovernanceRoleAssignmentRequest) Do(method, path string, reqObj interface{}) (resObj *GovernanceRoleAssignment, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

// Get performs GET request for GovernanceRoleAssignment
func (r *GovernanceRoleAssignmentRequest) Get() (*GovernanceRoleAssignment, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

// Update performs PATCH request for GovernanceRoleAssignment
func (r *GovernanceRoleAssignmentRequest) Update(reqObj *GovernanceRoleAssignment) (*GovernanceRoleAssignment, error) {
	return r.Do("PATCH", "", reqObj)
}

// Delete performs DELETE request for GovernanceRoleAssignment
func (r *GovernanceRoleAssignmentRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// LinkedEligibleRoleAssignment is navigation property
func (b *GovernanceRoleAssignmentRequestBuilder) LinkedEligibleRoleAssignment() *GovernanceRoleAssignmentRequestBuilder {
	bb := &GovernanceRoleAssignmentRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/linkedEligibleRoleAssignment"
	return bb
}

// Resource is navigation property
func (b *GovernanceRoleAssignmentRequestBuilder) Resource() *GovernanceResourceRequestBuilder {
	bb := &GovernanceResourceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/resource"
	return bb
}

// RoleDefinition is navigation property
func (b *GovernanceRoleAssignmentRequestBuilder) RoleDefinition() *GovernanceRoleDefinitionRequestBuilder {
	bb := &GovernanceRoleDefinitionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/roleDefinition"
	return bb
}

// Subject is navigation property
func (b *GovernanceRoleAssignmentRequestBuilder) Subject() *GovernanceSubjectRequestBuilder {
	bb := &GovernanceSubjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/subject"
	return bb
}
