// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// AndroidForWorkEnterpriseWiFiConfigurationRequestBuilder is request builder for AndroidForWorkEnterpriseWiFiConfiguration
type AndroidForWorkEnterpriseWiFiConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns AndroidForWorkEnterpriseWiFiConfigurationRequest
func (b *AndroidForWorkEnterpriseWiFiConfigurationRequestBuilder) Request() *AndroidForWorkEnterpriseWiFiConfigurationRequest {
	return &AndroidForWorkEnterpriseWiFiConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AndroidForWorkEnterpriseWiFiConfigurationRequest is request for AndroidForWorkEnterpriseWiFiConfiguration
type AndroidForWorkEnterpriseWiFiConfigurationRequest struct{ BaseRequest }

// Do performs HTTP request for AndroidForWorkEnterpriseWiFiConfiguration
func (r *AndroidForWorkEnterpriseWiFiConfigurationRequest) Do(method, path string, reqObj interface{}) (resObj *AndroidForWorkEnterpriseWiFiConfiguration, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

// Get performs GET request for AndroidForWorkEnterpriseWiFiConfiguration
func (r *AndroidForWorkEnterpriseWiFiConfigurationRequest) Get() (*AndroidForWorkEnterpriseWiFiConfiguration, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

// Update performs PATCH request for AndroidForWorkEnterpriseWiFiConfiguration
func (r *AndroidForWorkEnterpriseWiFiConfigurationRequest) Update(reqObj *AndroidForWorkEnterpriseWiFiConfiguration) (*AndroidForWorkEnterpriseWiFiConfiguration, error) {
	return r.Do("PATCH", "", reqObj)
}

// Delete performs DELETE request for AndroidForWorkEnterpriseWiFiConfiguration
func (r *AndroidForWorkEnterpriseWiFiConfigurationRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}

// IdentityCertificateForClientAuthentication is navigation property
func (b *AndroidForWorkEnterpriseWiFiConfigurationRequestBuilder) IdentityCertificateForClientAuthentication() *AndroidForWorkCertificateProfileBaseRequestBuilder {
	bb := &AndroidForWorkCertificateProfileBaseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/identityCertificateForClientAuthentication"
	return bb
}

// RootCertificateForServerValidation is navigation property
func (b *AndroidForWorkEnterpriseWiFiConfigurationRequestBuilder) RootCertificateForServerValidation() *AndroidForWorkTrustedRootCertificateRequestBuilder {
	bb := &AndroidForWorkTrustedRootCertificateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/rootCertificateForServerValidation"
	return bb
}
