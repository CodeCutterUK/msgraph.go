// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// DomainForceDeleteRequestParameter undocumented
type DomainForceDeleteRequestParameter struct {
	// DisableUserAccounts undocumented
	DisableUserAccounts *bool `json:"disableUserAccounts,omitempty"`
}

// DomainVerifyRequestParameter undocumented
type DomainVerifyRequestParameter struct {
}

//
type DomainForceDeleteRequestBuilder struct{ BaseRequestBuilder }

// ForceDelete action undocumented
func (b *DomainRequestBuilder) ForceDelete(reqObj *DomainForceDeleteRequestParameter) *DomainForceDeleteRequestBuilder {
	bb := &DomainForceDeleteRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/forceDelete"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DomainForceDeleteRequest struct{ BaseRequest }

//
func (b *DomainForceDeleteRequestBuilder) Request() *DomainForceDeleteRequest {
	return &DomainForceDeleteRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *DomainForceDeleteRequest) Do(method, path string, reqObj interface{}) error {
	return r.JSONRequestWithPath(method, path, reqObj, nil)
}

//
func (r *DomainForceDeleteRequest) Post() error {
	return r.Do("POST", "", r.requestObject)
}

//
type DomainVerifyRequestBuilder struct{ BaseRequestBuilder }

// Verify action undocumented
func (b *DomainRequestBuilder) Verify(reqObj *DomainVerifyRequestParameter) *DomainVerifyRequestBuilder {
	bb := &DomainVerifyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/verify"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type DomainVerifyRequest struct{ BaseRequest }

//
func (b *DomainVerifyRequestBuilder) Request() *DomainVerifyRequest {
	return &DomainVerifyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *DomainVerifyRequest) Do(method, path string, reqObj interface{}) (resObj *Domain, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

//
func (r *DomainVerifyRequest) Post() (*Domain, error) {
	return r.Do("POST", "", r.requestObject)
}
