// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// IOSVppAppAssignedLicenseRequestBuilder is request builder for IOSVppAppAssignedLicense
type IOSVppAppAssignedLicenseRequestBuilder struct{ BaseRequestBuilder }

// Request returns IOSVppAppAssignedLicenseRequest
func (b *IOSVppAppAssignedLicenseRequestBuilder) Request() *IOSVppAppAssignedLicenseRequest {
	return &IOSVppAppAssignedLicenseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IOSVppAppAssignedLicenseRequest is request for IOSVppAppAssignedLicense
type IOSVppAppAssignedLicenseRequest struct{ BaseRequest }

// Do performs HTTP request for IOSVppAppAssignedLicense
func (r *IOSVppAppAssignedLicenseRequest) Do(method, path string, reqObj interface{}) (resObj *IOSVppAppAssignedLicense, err error) {
	err = r.JSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

// Get performs GET request for IOSVppAppAssignedLicense
func (r *IOSVppAppAssignedLicenseRequest) Get() (*IOSVppAppAssignedLicense, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

// Update performs PATCH request for IOSVppAppAssignedLicense
func (r *IOSVppAppAssignedLicenseRequest) Update(reqObj *IOSVppAppAssignedLicense) (*IOSVppAppAssignedLicense, error) {
	return r.Do("PATCH", "", reqObj)
}

// Delete performs DELETE request for IOSVppAppAssignedLicense
func (r *IOSVppAppAssignedLicenseRequest) Delete() error {
	return r.JSONRequestWithPath("DELETE", "", nil, nil)
}
