// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// TermsAndConditionsAcceptanceStatusRequestBuilder is request builder for TermsAndConditionsAcceptanceStatus
type TermsAndConditionsAcceptanceStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns TermsAndConditionsAcceptanceStatusRequest
func (b *TermsAndConditionsAcceptanceStatusRequestBuilder) Request() *TermsAndConditionsAcceptanceStatusRequest {
	return &TermsAndConditionsAcceptanceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TermsAndConditionsAcceptanceStatusRequest is request for TermsAndConditionsAcceptanceStatus
type TermsAndConditionsAcceptanceStatusRequest struct{ BaseRequest }

// Do performs HTTP request for TermsAndConditionsAcceptanceStatus
func (r *TermsAndConditionsAcceptanceStatusRequest) Do(method, path string, reqObj interface{}) (resObj *TermsAndConditionsAcceptanceStatus, err error) {
	err = r.JSONRequest(method, path, reqObj, &resObj)
	return
}

// Get performs GET request for TermsAndConditionsAcceptanceStatus
func (r *TermsAndConditionsAcceptanceStatusRequest) Get() (*TermsAndConditionsAcceptanceStatus, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Do("GET", query, nil)
}

// Update performs PATCH request for TermsAndConditionsAcceptanceStatus
func (r *TermsAndConditionsAcceptanceStatusRequest) Update(reqObj *TermsAndConditionsAcceptanceStatus) (*TermsAndConditionsAcceptanceStatus, error) {
	return r.Do("PATCH", "", reqObj)
}

// Delete performs DELETE request for TermsAndConditionsAcceptanceStatus
func (r *TermsAndConditionsAcceptanceStatusRequest) Delete() error {
	return r.JSONRequest("DELETE", "", nil, nil)
}

// TermsAndConditions is navigation property
func (b *TermsAndConditionsAcceptanceStatusRequestBuilder) TermsAndConditions() *TermsAndConditionsRequestBuilder {
	bb := &TermsAndConditionsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/termsAndConditions"
	return bb
}
