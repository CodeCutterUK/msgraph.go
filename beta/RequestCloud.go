// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/codecutteruk/msgraph.go/jsonx"
)

// CloudAppSecurityProfileRequestBuilder is request builder for CloudAppSecurityProfile
type CloudAppSecurityProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns CloudAppSecurityProfileRequest
func (b *CloudAppSecurityProfileRequestBuilder) Request() *CloudAppSecurityProfileRequest {
	return &CloudAppSecurityProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CloudAppSecurityProfileRequest is request for CloudAppSecurityProfile
type CloudAppSecurityProfileRequest struct{ BaseRequest }

// Get performs GET request for CloudAppSecurityProfile
func (r *CloudAppSecurityProfileRequest) Get(ctx context.Context) (resObj *CloudAppSecurityProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CloudAppSecurityProfile
func (r *CloudAppSecurityProfileRequest) Update(ctx context.Context, reqObj *CloudAppSecurityProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CloudAppSecurityProfile
func (r *CloudAppSecurityProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CloudCommunicationsRequestBuilder is request builder for CloudCommunications
type CloudCommunicationsRequestBuilder struct{ BaseRequestBuilder }

// Request returns CloudCommunicationsRequest
func (b *CloudCommunicationsRequestBuilder) Request() *CloudCommunicationsRequest {
	return &CloudCommunicationsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CloudCommunicationsRequest is request for CloudCommunications
type CloudCommunicationsRequest struct{ BaseRequest }

// Get performs GET request for CloudCommunications
func (r *CloudCommunicationsRequest) Get(ctx context.Context) (resObj *CloudCommunications, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CloudCommunications
func (r *CloudCommunicationsRequest) Update(ctx context.Context, reqObj *CloudCommunications) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CloudCommunications
func (r *CloudCommunicationsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CloudPCRequestBuilder is request builder for CloudPC
type CloudPCRequestBuilder struct{ BaseRequestBuilder }

// Request returns CloudPCRequest
func (b *CloudPCRequestBuilder) Request() *CloudPCRequest {
	return &CloudPCRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CloudPCRequest is request for CloudPC
type CloudPCRequest struct{ BaseRequest }

// Get performs GET request for CloudPC
func (r *CloudPCRequest) Get(ctx context.Context) (resObj *CloudPC, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CloudPC
func (r *CloudPCRequest) Update(ctx context.Context, reqObj *CloudPC) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CloudPC
func (r *CloudPCRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CloudPcDeviceImageRequestBuilder is request builder for CloudPcDeviceImage
type CloudPcDeviceImageRequestBuilder struct{ BaseRequestBuilder }

// Request returns CloudPcDeviceImageRequest
func (b *CloudPcDeviceImageRequestBuilder) Request() *CloudPcDeviceImageRequest {
	return &CloudPcDeviceImageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CloudPcDeviceImageRequest is request for CloudPcDeviceImage
type CloudPcDeviceImageRequest struct{ BaseRequest }

// Get performs GET request for CloudPcDeviceImage
func (r *CloudPcDeviceImageRequest) Get(ctx context.Context) (resObj *CloudPcDeviceImage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CloudPcDeviceImage
func (r *CloudPcDeviceImageRequest) Update(ctx context.Context, reqObj *CloudPcDeviceImage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CloudPcDeviceImage
func (r *CloudPcDeviceImageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CloudPcOnPremisesConnectionRequestBuilder is request builder for CloudPcOnPremisesConnection
type CloudPcOnPremisesConnectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns CloudPcOnPremisesConnectionRequest
func (b *CloudPcOnPremisesConnectionRequestBuilder) Request() *CloudPcOnPremisesConnectionRequest {
	return &CloudPcOnPremisesConnectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CloudPcOnPremisesConnectionRequest is request for CloudPcOnPremisesConnection
type CloudPcOnPremisesConnectionRequest struct{ BaseRequest }

// Get performs GET request for CloudPcOnPremisesConnection
func (r *CloudPcOnPremisesConnectionRequest) Get(ctx context.Context) (resObj *CloudPcOnPremisesConnection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CloudPcOnPremisesConnection
func (r *CloudPcOnPremisesConnectionRequest) Update(ctx context.Context, reqObj *CloudPcOnPremisesConnection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CloudPcOnPremisesConnection
func (r *CloudPcOnPremisesConnectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CloudPcProvisioningPolicyRequestBuilder is request builder for CloudPcProvisioningPolicy
type CloudPcProvisioningPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns CloudPcProvisioningPolicyRequest
func (b *CloudPcProvisioningPolicyRequestBuilder) Request() *CloudPcProvisioningPolicyRequest {
	return &CloudPcProvisioningPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CloudPcProvisioningPolicyRequest is request for CloudPcProvisioningPolicy
type CloudPcProvisioningPolicyRequest struct{ BaseRequest }

// Get performs GET request for CloudPcProvisioningPolicy
func (r *CloudPcProvisioningPolicyRequest) Get(ctx context.Context) (resObj *CloudPcProvisioningPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CloudPcProvisioningPolicy
func (r *CloudPcProvisioningPolicyRequest) Update(ctx context.Context, reqObj *CloudPcProvisioningPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CloudPcProvisioningPolicy
func (r *CloudPcProvisioningPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// CloudPcProvisioningPolicyAssignmentRequestBuilder is request builder for CloudPcProvisioningPolicyAssignment
type CloudPcProvisioningPolicyAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns CloudPcProvisioningPolicyAssignmentRequest
func (b *CloudPcProvisioningPolicyAssignmentRequestBuilder) Request() *CloudPcProvisioningPolicyAssignmentRequest {
	return &CloudPcProvisioningPolicyAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CloudPcProvisioningPolicyAssignmentRequest is request for CloudPcProvisioningPolicyAssignment
type CloudPcProvisioningPolicyAssignmentRequest struct{ BaseRequest }

// Get performs GET request for CloudPcProvisioningPolicyAssignment
func (r *CloudPcProvisioningPolicyAssignmentRequest) Get(ctx context.Context) (resObj *CloudPcProvisioningPolicyAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CloudPcProvisioningPolicyAssignment
func (r *CloudPcProvisioningPolicyAssignmentRequest) Update(ctx context.Context, reqObj *CloudPcProvisioningPolicyAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CloudPcProvisioningPolicyAssignment
func (r *CloudPcProvisioningPolicyAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

//
type CloudCommunicationsGetPresencesByUserIDRequestBuilder struct{ BaseRequestBuilder }

// GetPresencesByUserID action undocumented
func (b *CloudCommunicationsRequestBuilder) GetPresencesByUserID(reqObj *CloudCommunicationsGetPresencesByUserIDRequestParameter) *CloudCommunicationsGetPresencesByUserIDRequestBuilder {
	bb := &CloudCommunicationsGetPresencesByUserIDRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/getPresencesByUserId"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CloudCommunicationsGetPresencesByUserIDRequest struct{ BaseRequest }

//
func (b *CloudCommunicationsGetPresencesByUserIDRequestBuilder) Request() *CloudCommunicationsGetPresencesByUserIDRequest {
	return &CloudCommunicationsGetPresencesByUserIDRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *CloudCommunicationsGetPresencesByUserIDRequest) Paging(ctx context.Context, method, path string, obj interface{}, n int) ([]Presence, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []Presence
	for {
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			res.Body.Close()
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []Presence
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		res.Body.Close()
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if n >= 0 {
			n--
		}
		if n == 0 || len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *CloudCommunicationsGetPresencesByUserIDRequest) PostN(ctx context.Context, n int) ([]Presence, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, n)
}

//
func (r *CloudCommunicationsGetPresencesByUserIDRequest) Post(ctx context.Context) ([]Presence, error) {
	return r.Paging(ctx, "POST", "", r.requestObject, 0)
}

//
type CloudPCReprovisionRequestBuilder struct{ BaseRequestBuilder }

// Reprovision action undocumented
func (b *CloudPCRequestBuilder) Reprovision(reqObj *CloudPCReprovisionRequestParameter) *CloudPCReprovisionRequestBuilder {
	bb := &CloudPCReprovisionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reprovision"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CloudPCReprovisionRequest struct{ BaseRequest }

//
func (b *CloudPCReprovisionRequestBuilder) Request() *CloudPCReprovisionRequest {
	return &CloudPCReprovisionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *CloudPCReprovisionRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type CloudPcOnPremisesConnectionRunHealthChecksRequestBuilder struct{ BaseRequestBuilder }

// RunHealthChecks action undocumented
func (b *CloudPcOnPremisesConnectionRequestBuilder) RunHealthChecks(reqObj *CloudPcOnPremisesConnectionRunHealthChecksRequestParameter) *CloudPcOnPremisesConnectionRunHealthChecksRequestBuilder {
	bb := &CloudPcOnPremisesConnectionRunHealthChecksRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/runHealthChecks"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CloudPcOnPremisesConnectionRunHealthChecksRequest struct{ BaseRequest }

//
func (b *CloudPcOnPremisesConnectionRunHealthChecksRequestBuilder) Request() *CloudPcOnPremisesConnectionRunHealthChecksRequest {
	return &CloudPcOnPremisesConnectionRunHealthChecksRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *CloudPcOnPremisesConnectionRunHealthChecksRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequestBuilder struct{ BaseRequestBuilder }

// UpdateAdDomainPassword action undocumented
func (b *CloudPcOnPremisesConnectionRequestBuilder) UpdateAdDomainPassword(reqObj *CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequestParameter) *CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequestBuilder {
	bb := &CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/updateAdDomainPassword"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequest struct{ BaseRequest }

//
func (b *CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequestBuilder) Request() *CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequest {
	return &CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *CloudPcOnPremisesConnectionUpdateAdDomainPasswordRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type CloudPcProvisioningPolicyAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumented
func (b *CloudPcProvisioningPolicyRequestBuilder) Assign(reqObj *CloudPcProvisioningPolicyAssignRequestParameter) *CloudPcProvisioningPolicyAssignRequestBuilder {
	bb := &CloudPcProvisioningPolicyAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type CloudPcProvisioningPolicyAssignRequest struct{ BaseRequest }

//
func (b *CloudPcProvisioningPolicyAssignRequestBuilder) Request() *CloudPcProvisioningPolicyAssignRequest {
	return &CloudPcProvisioningPolicyAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *CloudPcProvisioningPolicyAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
