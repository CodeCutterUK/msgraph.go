// {{.X}}RequestBuilder is request builder for {{.X}}
type {{.X}}RequestBuilder struct { BaseRequestBuilder }

// Request returns {{.X}}Request
func (b *{{.X}}RequestBuilder) Request() *{{.X}}Request {
    return &{{.X}}Request{
        BaseRequest: BaseRequest{ baseURL: b.baseURL, client:  b.client },
    }
}

// {{.X}}Request is request for {{.X}}
type {{.X}}Request struct{ BaseRequest }

// Get performs GET request for {{.X}}
func (r *{{.X}}Request) Get() (resObj *{{.X}}, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest("GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for {{.X}}
func (r *{{.X}}Request) Update(reqObj *{{.X}}) error {
	return r.JSONRequest("PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for {{.X}}
func (r *{{.X}}Request) Delete() error {
	return r.JSONRequest("DELETE", "", nil, nil)
}
