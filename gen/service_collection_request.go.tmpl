{{- $xSymName := call .SymFromName .X.Name }}

// ID returns service entrypoint for {{$xSymName}}
func (s *ServiceCollection{{$xSymName}}) ID(id string) *Service{{$xSymName}} {
	ss := &Service{{$xSymName}}{ServiceBase: s.ServiceBase}
	ss.baseURL += "/" + id
	return ss
}

// DoRequestWithPath issues an HTTP request with path
func (s *ServiceCollection{{$xSymName}}) DoRequestWithPath(method, path string, reqObj interface{}) (resObj *{{$xSymName}}, err error) {
	err = s.DoJSONRequestWithPath(method, path, reqObj, &resObj)
	return
}

// DoRequest wraps DoRequestWithPath with empty path
func (s *ServiceCollection{{$xSymName}}) DoRequest(method string, obj interface{}) (*{{$xSymName}}, error) {
	return s.DoRequestWithPath(method, "", obj)
}

// DoPagingWithPath issues an HTTP request for {{$xSymName}} collection
func (s *ServiceCollection{{$xSymName}}) DoPagingWithPath(method, path string, obj interface{}) ([]{{$xSymName}}, error) {
	req, err := s.NewJSONRequestWithPath(method, path, obj)
	if err != nil {
		return nil, err
	}
	res, err := s.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []{{$xSymName}}
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			return nil, fmt.Errorf("%s: %s", res.Status, string(b))
		}
		var (
			paging Paging
			value  []{{$xSymName}}
		)
		err := json.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = json.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		res, err = s.client.Get(paging.NextLink)
		if err != nil {
			return nil, err
		}
	}
}

// DoPaging wraps DoPagingWithPath with empty path
func (s *ServiceCollection{{$xSymName}}) DoPaging(method string, obj interface{}) ([]{{$xSymName}}, error) {
	return s.DoPagingWithPath(method, "", obj)
}

// DoGetWithPath warps DoPagingWithPath with GET method
func (s *ServiceCollection{{$xSymName}}) DoGetWithPath(path string) ([]{{$xSymName}}, error) {
	return s.DoPagingWithPath("GET", path, nil)
}

// DoGet wraps DoPagingWithPath with GET method and empty path
func (s *ServiceCollection{{$xSymName}}) DoGet() ([]{{$xSymName}}, error) {
	return s.DoPagingWithPath("GET", "", nil)
}

// DoPostWithPath warps DoRequestWithPath with POST method
func (s *ServiceCollection{{$xSymName}}) DoPostWithPath(path string, obj interface{}) (*{{$xSymName}}, error) {
	return s.DoRequestWithPath("POST", path, obj)
}

// DoPost wraps DoRequestWithPath with POST method and empty path
func (s *ServiceCollection{{$xSymName}}) DoPost(obj interface{}) (*{{$xSymName}}, error) {
	return s.DoRequestWithPath("POST", "", obj)
}
